(define-module (crates-io bi ou bioutils) #:use-module (crates-io))

(define-public crate-bioutils-0.1.0 (c (n "bioutils") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1361a1jswhip3nx4bryakv1fxlg0b4k2s77ygn7yzfkkhnf6w97g") (y #t)))

(define-public crate-bioutils-0.1.1 (c (n "bioutils") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "00737wcm1pkq76gla1yyz4npkn3hlnngdhqync0dq0rm79l16ppi") (y #t)))

(define-public crate-bioutils-0.1.2 (c (n "bioutils") (v "0.1.2") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0mjfkg30vnawjdbm5nqz8hkg24ffcc135p49vls2ylxy2wla3s38") (y #t)))

(define-public crate-bioutils-0.1.3 (c (n "bioutils") (v "0.1.3") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "120wvwjr38jbgf8xbn3q81b5ccwvg2sah544wnv4nmbflllzi6xy") (y #t)))

(define-public crate-bioutils-0.1.4 (c (n "bioutils") (v "0.1.4") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "1fc4yavh1z1ymrbmclpsvp4xpk14687xq8xs4ivjrsqr48fbz6vc") (y #t)))

(define-public crate-bioutils-0.1.5 (c (n "bioutils") (v "0.1.5") (d (list (d (n "cmd_lib") (r "^1.0.8") (d #t) (k 0)) (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "select") (r "^0.5.0") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "10rylafkljj9jpn393isz5v44d8hyr525l4l2bq3nm68iixa0mfx") (y #t)))

(define-public crate-bioutils-0.1.6 (c (n "bioutils") (v "0.1.6") (d (list (d (n "cmd_lib") (r "^1.0.8") (d #t) (k 0)) (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "select") (r "^0.5.0") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "0z1p1n2qkcvnipnl84adh00ynfm4nz5yvj1w7c77apszs93f86cl") (y #t)))

(define-public crate-bioutils-0.1.7 (c (n "bioutils") (v "0.1.7") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "select") (r "^0.5.0") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "00fpr1y5yi3h06h2m8f3glr673k6j57p5swr34sbdzav2902m00i") (y #t)))

(define-public crate-bioutils-0.1.8 (c (n "bioutils") (v "0.1.8") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "select") (r "^0.5.0") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "1ncvqgsvcw8j3bxg91mgma0lj932mhlj6rmd58349vl3r3jfa711") (y #t)))

(define-public crate-bioutils-0.1.9 (c (n "bioutils") (v "0.1.9") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "1286mb60v07amv1ds5myd4fb25b0csycz5by4n067j3i2ndrkrd8") (y #t)))

(define-public crate-bioutils-0.2.0 (c (n "bioutils") (v "0.2.0") (d (list (d (n "bytecount") (r "^0.6.2") (d #t) (k 0)) (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "infer") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "1znsrqyw9zz9jy2xhf6wra49jpbcizycsaay14xr0ck75qjpsgmq") (f (quote (("runtime-dispatch-simd" "bytecount/runtime-dispatch-simd") ("generic-simd" "bytecount/generic-simd")))) (y #t)))

(define-public crate-bioutils-0.2.1 (c (n "bioutils") (v "0.2.1") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "infer") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "09p3fnz55pq32c9nz395rsd1cx4a3l2688im0jlhrbfx2ih5n84z") (y #t)))

(define-public crate-bioutils-0.2.2 (c (n "bioutils") (v "0.2.2") (d (list (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "017lnl2nfblsnb8bmsbxm8ijjnvhdkic0mi8ykh885vjzypqxrax") (y #t)))

(define-public crate-bioutils-0.2.3 (c (n "bioutils") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (d #t) (k 0)) (d (n "memmem") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "0cvkfziq3cyag3canr3r8rqqnsh2s89mmxdm2p664a2q8j5ij9p6") (y #t)))

(define-public crate-bioutils-0.2.4 (c (n "bioutils") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "curl") (r "^0.4.34") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "ftp") (r "^3.0.1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (d #t) (k 0)) (d (n "memmem") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 0)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "suffix_array") (r "^0.5.0") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "0n3x4dk6z109hfhjfpfb7j07bkhfbayqyan89dcc824dda1picd8") (y #t)))

