(define-module (crates-io kl ud kludgine) #:use-module (crates-io))

(define-public crate-kludgine-0.1.0-dev-1 (c (n "kludgine") (v "0.1.0-dev-1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-handle") (r "^0.1") (d #t) (k 0)) (d (n "async-rwlock") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "easy-parallel") (r "^3") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^0.16") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "platforms") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rgx") (r "^0.8") (f (quote ("renderer"))) (d #t) (k 0)) (d (n "rgx-lyon") (r "^0.1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ttf-parser") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "02sf2fncl5hiwkl3i8cp6whd0xbgkcv67caf98azkj0r3g0abvm2") (f (quote (("default" "bundled-fonts") ("bundled-fonts-roboto" "bundled-fonts-enabled") ("bundled-fonts-enabled") ("bundled-fonts" "bundled-fonts-roboto")))) (y #t)))

(define-public crate-kludgine-0.0.1 (c (n "kludgine") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-handle") (r "^0.1") (d #t) (k 0)) (d (n "async-rwlock") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "easy-parallel") (r "^3") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "legion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lyon_tessellation") (r "^0.16") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "platforms") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rgx") (r "^0.8") (f (quote ("renderer"))) (d #t) (k 0)) (d (n "rgx-lyon") (r "^0.1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.5") (d #t) (k 0)) (d (n "sorted-vec") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ttf-parser") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "0x41p4kndls0ff1z60ascignr9in3pr4p8yx7nw55s6xkinn4rbg") (f (quote (("ecs" "legion" "sorted-vec") ("default" "bundled-fonts" "ecs") ("bundled-fonts-roboto" "bundled-fonts-enabled") ("bundled-fonts-enabled") ("bundled-fonts" "bundled-fonts-roboto"))))))

(define-public crate-kludgine-0.0.2 (c (n "kludgine") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-handle") (r "^0.1") (d #t) (k 0)) (d (n "async-rwlock") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "easy-parallel") (r "^3") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "legion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lyon_tessellation") (r "^0.16") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "platforms") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rgx") (r "^0.8") (f (quote ("renderer"))) (d #t) (k 0)) (d (n "rgx-lyon") (r "^0.1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6") (d #t) (k 0)) (d (n "sorted-vec") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ttf-parser") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "0hzg6yazganc51w2garmdxnb99nkmr715sxdxrm9m89qh68h59fj") (f (quote (("serialization" "serde" "euclid/serde" "palette/serializing") ("ecs" "legion" "sorted-vec") ("default" "bundled-fonts" "ecs") ("bundled-fonts-roboto" "bundled-fonts-enabled") ("bundled-fonts-enabled") ("bundled-fonts" "bundled-fonts-roboto"))))))

(define-public crate-kludgine-0.1.0-dev.0 (c (n "kludgine") (v "0.1.0-dev.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.0") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1vym6sd76jjrx653rnc160bjpnd04z1j4z5anmvgpdl77yl33m78") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.1 (c (n "kludgine") (v "0.1.0-dev.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.1") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0lhi7rvmijq1n5r5vcnpi26fzjdqj1y3xagrfrccjxj6p3d1vnzj") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.2 (c (n "kludgine") (v "0.1.0-dev.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.2") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.2") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1ir3qppm42kqv71id4pi4pc6a9g59jhz5hdqsxbz0gca9625dcbg") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.3 (c (n "kludgine") (v "0.1.0-dev.3") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.3") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.3") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "05zhis0fq4mv0iwhsdmnfzx1pm2d7c0rh2b1yl1zc650yfz2klxk") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.4 (c (n "kludgine") (v "0.1.0-dev.4") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.4") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0krwfryb90qifvhni4kd6hw20p61zk9db6yhjvz4ic8kigsx6fhk") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.5 (c (n "kludgine") (v "0.1.0-dev.5") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.5") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.5") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1yy5ay7g9hi4s509gh73083vnq2hqjrmlhfdhra7263zs4yc1hvd") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0-dev.6 (c (n "kludgine") (v "0.1.0-dev.6") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r ">=0.23.12") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0-dev.6") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0-dev.6") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "18rzqj9icbc2ynfgrjkld6jd9jvwwd1297w44lr85k4pw3nfixvl") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.1.0 (c (n "kludgine") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.1.0") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.1.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0v92rss4g2gbikba35q9yw6j2b2s0l6wfk20k7i5c75bplszg3yg") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.2.0 (c (n "kludgine") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.2.0") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.2.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0ssy5qr2v8xj8mj0s7a6k6fg0s1r8r17qc77mbgd3bygscv6475g") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.3.0 (c (n "kludgine") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.3.0") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.3.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "00iv7mlxdm4f93l88qhglrvgxl3b4vwn899bvi048q4ah1bfs8dd") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.3.1 (c (n "kludgine") (v "0.3.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.3.1") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.3.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0a0cnjszs02qsak1nsd8fd3g4grwsqhz69vv4cpfz4x4z384l158") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.4.0 (c (n "kludgine") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-app") (r "^0.4.0") (o #t) (k 0)) (d (n "kludgine-core") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0l22x0qbn2pilgvvafs9iw8w8l4q3w9lgz7rff92cmjzyvjb6093") (f (quote (("unstable-apis") ("tokio-rt" "kludgine-app/tokio-rt") ("smol-rt" "kludgine-app/smol-rt") ("serialization" "kludgine-core/serialization") ("multiwindow" "kludgine-app/multiwindow") ("default" "bundled-fonts" "smol-rt" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto") ("app" "kludgine-app"))))))

(define-public crate-kludgine-0.5.0 (c (n "kludgine") (v "0.5.0") (d (list (d (n "app") (r "^0.5.0") (o #t) (k 0) (p "kludgine-app")) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "kludgine-core") (r "^0.5.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0f4s5c53rkfznwrnj82wy9hnph2qxk23dkzvxr3kbrxg0w8nmvdj") (f (quote (("unstable-apis") ("serde" "kludgine-core/serde") ("multiwindow" "app/multiwindow") ("default" "bundled-fonts" "smol" "app" "multiwindow") ("bundled-fonts-roboto" "kludgine-core/bundled-fonts-roboto") ("bundled-fonts" "kludgine-core/bundled-fonts" "bundled-fonts-roboto")))) (s 2) (e (quote (("tokio" "app?/tokio") ("smol" "app?/smol")))) (r "1.64.0")))

(define-public crate-kludgine-0.6.0 (c (n "kludgine") (v "0.6.0") (d (list (d (n "ahash") (r "^0.8.3") (k 0)) (d (n "alot") (r "^0.3.0") (d #t) (k 0)) (d (n "appit") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cosmic-text") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "etagere") (r "^0.2.8") (d #t) (k 0)) (d (n "figures") (r "^0.2.0") (f (quote ("wgpu" "winit" "bytemuck" "euclid"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (d #t) (k 2)) (d (n "intentional") (r "^0.1.1") (d #t) (k 0)) (d (n "justjson") (r "^0.3.0") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3.13") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yrilh9l4nih4jqb5vnlsq6dlsq8k958wjjpkpas5s5w6vzsdldz") (f (quote (("default" "app" "image" "cosmic-text")))) (s 2) (e (quote (("app" "dep:appit")))) (r "1.70.0")))

(define-public crate-kludgine-0.6.1 (c (n "kludgine") (v "0.6.1") (d (list (d (n "ahash") (r "^0.8.3") (k 0)) (d (n "alot") (r "^0.3.0") (d #t) (k 0)) (d (n "appit") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cosmic-text") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "etagere") (r "^0.2.8") (d #t) (k 0)) (d (n "figures") (r "^0.2.0") (f (quote ("wgpu" "winit" "bytemuck" "euclid"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (d #t) (k 2)) (d (n "intentional") (r "^0.1.1") (d #t) (k 0)) (d (n "justjson") (r "^0.3.0") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3.13") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mffg659b79kabdi8l00ga0zf04iysfs9wkizglg734gl1igmvqc") (f (quote (("default" "app" "image" "cosmic-text")))) (s 2) (e (quote (("app" "dep:appit")))) (r "1.70.0")))

(define-public crate-kludgine-0.7.0 (c (n "kludgine") (v "0.7.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "alot") (r "^0.3.0") (d #t) (k 0)) (d (n "appit") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cosmic-text") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "etagere") (r "^0.2.8") (d #t) (k 0)) (d (n "figures") (r "^0.2.0") (f (quote ("wgpu" "winit" "bytemuck" "euclid"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (d #t) (k 2)) (d (n "intentional") (r "^0.1.1") (d #t) (k 0)) (d (n "justjson") (r "^0.3.0") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3.13") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dmajhsc2npy0g78bdbfvb47j4xbjkmz0pnijhdhcwj20rshjdrk") (f (quote (("default" "app" "image" "cosmic-text")))) (s 2) (e (quote (("app" "dep:appit")))) (r "1.70.0")))

(define-public crate-kludgine-0.8.0 (c (n "kludgine") (v "0.8.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "alot") (r "^0.3.0") (d #t) (k 0)) (d (n "appit") (r "^0.3.0") (f (quote ("rwh_06"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cosmic-text") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "etagere") (r "^0.2.8") (d #t) (k 0)) (d (n "figures") (r "^0.3.0") (f (quote ("wgpu" "winit" "bytemuck" "euclid"))) (d #t) (k 0)) (d (n "image") (r "^0.25.1") (o #t) (k 0)) (d (n "image") (r "^0.25.1") (f (quote ("png"))) (d #t) (k 2)) (d (n "intentional") (r "^0.1.1") (d #t) (k 0)) (d (n "justjson") (r "^0.3.0") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^1.0.1") (d #t) (k 0)) (d (n "palette") (r "^0.7.3") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (k 0)) (d (n "plotters-backend") (r "^0.3.5") (o #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3.13") (d #t) (k 0)) (d (n "wgpu") (r "^0.20.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.20.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14iyga1fs7nvdygc4bx7j66ykzkj71fvzxvjj4sind7j5dj80dp1") (f (quote (("default" "app" "image" "cosmic-text")))) (s 2) (e (quote (("plotters" "dep:plotters" "dep:plotters-backend") ("app" "dep:appit")))) (r "1.74.1")))

