(define-module (crates-io kl vm klvm_tools_rs) #:use-module (crates-io))

(define-public crate-klvm_tools_rs-0.1.30 (c (n "klvm_tools_rs") (v "0.1.30") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "klvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0kly2nh0khiq8j4cdhc8jwz6i0rm0969psi5spx5wdispnaw3mgn") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-klvm_tools_rs-0.1.34 (c (n "klvm_tools_rs") (v "0.1.34") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "klvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "18kcw71c4vr27ncwkmbv0dmdfwk7vr4kc92srcdl8l2c6987lknl") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-klvm_tools_rs-0.1.38 (c (n "klvm_tools_rs") (v "0.1.38") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "klvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "15gxdayc8ikmhkn6d5dsadjn8k82d6rl20cabv0k4hdc1dil2qwi") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-klvm_tools_rs-0.1.39 (c (n "klvm_tools_rs") (v "0.1.39") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "klvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0irj7jq9p0g7rqjj2vijf6z7dq548hisg1y7v3dv7s8v3szp3w1y") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-klvm_tools_rs-0.1.40 (c (n "klvm_tools_rs") (v "0.1.40") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "klvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0iaqfdmbijgz81xcm6znm644jrxkf663dhv51dh0wjyvj5wll4i9") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-klvm_tools_rs-0.1.41 (c (n "klvm_tools_rs") (v "0.1.41") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "klvmr") (r "^0.3.2") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0d3b45r1slaayzfn2qsb6783xrixqb2fzhi2wf5kkwnvf8q3bndj") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-klvm_tools_rs-0.1.42 (c (n "klvm_tools_rs") (v "0.1.42") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "klvmr") (r "^0.3.2") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0dg3h6c8k8fnmkrr3f8amrbvnadwhl8br56prsvh1ni3vkqfxsh3") (f (quote (("default")))) (s 2) (e (quote (("fuzz" "dep:rand" "dep:rand_chacha" "dep:lfsr") ("extension-module" "dep:pyo3"))))))

