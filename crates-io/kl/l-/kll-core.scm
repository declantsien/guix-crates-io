(define-module (crates-io kl l- kll-core) #:use-module (crates-io))

(define-public crate-kll-core-0.1.0 (c (n "kll-core") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.10") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.0") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "0qb47mpab0adzmssbigfw296zwfgmawlmlavjw60w5hws4b0a90k") (f (quote (("std" "log") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "std"))))))

(define-public crate-kll-core-0.1.1 (c (n "kll-core") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.10") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.0") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "16cqkl2iy7k44qn09w7rs6b44zgyd23ymxp8q5sv3sj9h5yvjaxa") (f (quote (("std" "log") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "std"))))))

(define-public crate-kll-core-0.1.2 (c (n "kll-core") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.10") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.0") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "0fpq91w90b3jq6xqqda8nwsrih2nv207p9k2f9sr5gc6106fcn04") (f (quote (("std" "log") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "std"))))))

(define-public crate-kll-core-0.1.3 (c (n "kll-core") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.10") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "1rn5pi3l8m2ksir73s8f4zxl0g3vxhiahbn0g3j8pr3z7qq0mvxa") (f (quote (("std" "log") ("default" "std")))) (s 2) (e (quote (("defmt" "dep:defmt" "kll-hid/defmt"))))))

(define-public crate-kll-core-0.1.4 (c (n "kll-core") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.10") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "1b5b9g8cw1dxkmmzhclr3r7f83ayqydzk3jdpincdx6xhaxjwcdr") (f (quote (("std" "log") ("default" "std")))) (s 2) (e (quote (("defmt" "dep:defmt" "heapless/defmt-impl" "kll-hid/defmt"))))))

(define-public crate-kll-core-0.1.5 (c (n "kll-core") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "heapless") (r "^0.7.14") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.2") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "transmute") (r "^0.1") (d #t) (k 0)))) (h "0pzpf1ynf9iq0lyc148s46pnlfv176qxigmgn3isp8kli091zy17") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "heapless/defmt-impl" "kll-hid/defmt"))))))

(define-public crate-kll-core-0.1.6 (c (n "kll-core") (v "0.1.6") (d (list (d (n "byteorder") (r "^1.3") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.24") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.2") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0fb1isl1jzg6figi064awabibryw4a4xpwmzcrm3cgv0513jwfkh") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "heapless/defmt-impl" "kll-hid/defmt"))))))

(define-public crate-kll-core-0.1.7 (c (n "kll-core") (v "0.1.7") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.24") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.2") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0z39namsbs88cw3v5n4m0y582p1hap9sbb99bd1lmiy1vihi1wr0") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "heapless/defmt-impl" "kll-hid/defmt"))))))

(define-public crate-kll-core-0.1.8 (c (n "kll-core") (v "0.1.8") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "kll-hid") (r "^0.1.2") (d #t) (k 0)) (d (n "kll-macros") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0qm27z8zrqk7m887h76cmwafqxzx703dm9cysfzfqhwjc1qgw2f2") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "heapless/defmt-impl" "kll-hid/defmt"))))))

