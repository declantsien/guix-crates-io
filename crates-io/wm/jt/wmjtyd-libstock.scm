(define-module (crates-io wm jt wmjtyd-libstock) #:use-module (crates-io))

(define-public crate-wmjtyd-libstock-0.1.0 (c (n "wmjtyd-libstock") (v "0.1.0") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "crypto-crawler") (r "^4.4.5") (o #t) (d #t) (k 0)) (d (n "crypto-msg-parser") (r "^2.5.4") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flume") (r "^0.10.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1sl7lqnhp8v7jdgbyagad60qhf2g7zlikdrih35z6yirzjw4nyr5") (f (quote (("default" "crypto")))) (s 2) (e (quote (("crypto" "dep:crypto-msg-parser" "dep:crypto-crawler"))))))

(define-public crate-wmjtyd-libstock-0.2.0-beta.1 (c (n "wmjtyd-libstock") (v "0.2.0-beta.1") (d (list (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "crypto-crawler") (r "^4.4.5") (o #t) (d #t) (k 0)) (d (n "crypto-msg-parser") (r "^2.5.4") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flume") (r "^0.10.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "fs" "io-util" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "135rz9qr0m4r877lppqjw2zq31blna8kpr15n8bbf7rxhz756s36") (f (quote (("default" "crypto")))) (s 2) (e (quote (("crypto" "dep:crypto-msg-parser" "dep:crypto-crawler"))))))

(define-public crate-wmjtyd-libstock-0.2.0 (c (n "wmjtyd-libstock") (v "0.2.0") (d (list (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "crypto-crawler") (r "=4.4.4") (o #t) (d #t) (k 0)) (d (n "crypto-msg-parser") (r "=2.4.12") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.7.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "fs" "io-util" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "0hpdrv73f3r7jiyv1bjpx0fqrsgxzzc8a4rc52j8jb5in3yacvph") (f (quote (("default" "crypto")))) (s 2) (e (quote (("crypto" "dep:crypto-msg-parser" "dep:crypto-crawler"))))))

(define-public crate-wmjtyd-libstock-0.4.0-pre.1 (c (n "wmjtyd-libstock") (v "0.4.0-pre.1") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "crypto-market-type") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crypto-message") (r "^1.1.13") (o #t) (d #t) (k 0)) (d (n "crypto-msg-type") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "nanomsg") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.26.1") (d #t) (k 2)) (d (n "slack-hook") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("fs" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("time" "rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (d #t) (k 2)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "zmq2") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0sbk1nvbfdl33gagfn87sk6am4c2zzx1mia98y38zbn6v7i53g7w") (f (quote (("message" "nanomsg" "zeromq") ("default" "crypto" "message" "slack") ("compat-v0_3")))) (s 2) (e (quote (("zeromq" "dep:zmq2") ("slack" "dep:slack-hook") ("nanomsg" "dep:nanomsg") ("crypto" "dep:crypto-msg-type" "dep:crypto-market-type" "dep:crypto-message"))))))

