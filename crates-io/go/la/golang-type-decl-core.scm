(define-module (crates-io go la golang-type-decl-core) #:use-module (crates-io))

(define-public crate-golang-type-decl-core-0.1.0 (c (n "golang-type-decl-core") (v "0.1.0") (d (list (d (n "convert_case") (r "^0.4") (o #t) (k 0)) (d (n "golang-parser") (r "~0.1") (d #t) (k 0)) (d (n "golang-type-core") (r "~0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (k 0)) (d (n "quote") (r "^1.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)))) (h "07p4gnw1v91jn9izp94p811bvxnh2x5mavkgj3ly26kcyac6pskr") (f (quote (("enable-quote-to_tokens" "golang-type-core/enable-quote-to_tokens" "proc-macro2" "quote" "convert_case") ("default")))) (y #t)))

(define-public crate-golang-type-decl-core-0.2.0 (c (n "golang-type-decl-core") (v "0.2.0") (d (list (d (n "convert_case") (r "^0.4") (o #t) (k 0)) (d (n "golang-parser") (r "~0.1") (d #t) (k 0)) (d (n "golang-type-core") (r "~0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (k 0)) (d (n "quote") (r "^1.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)))) (h "0nrbqzgs9fk9p95hvx1xqkbrfxdzvfvxsz340cswd38hgh3bnxy9") (f (quote (("enable-quote-to_tokens" "golang-type-core/enable-quote-to_tokens" "proc-macro2" "quote" "convert_case") ("default"))))))

(define-public crate-golang-type-decl-core-0.3.0 (c (n "golang-type-decl-core") (v "0.3.0") (d (list (d (n "convert_case") (r "^0.4") (o #t) (k 0)) (d (n "golang-parser") (r "~0.1") (d #t) (k 0)) (d (n "golang-type-core") (r "~0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (k 0)) (d (n "quote") (r "^1.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)))) (h "1pcnj77qz44x3fbymfjgqnkjr11mnzinr7av7w0sali62g5y7k2i") (f (quote (("enable-quote-to_tokens" "golang-type-core/enable-quote-to_tokens" "proc-macro2" "quote" "convert_case") ("default"))))))

