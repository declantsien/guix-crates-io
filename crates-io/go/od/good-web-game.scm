(define-module (crates-io go od good-web-game) #:use-module (crates-io))

(define-public crate-good-web-game-0.3.0 (c (n "good-web-game") (v "0.3.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.17.3") (f (quote ("mint"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "^0.3.0-alpha.37") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "1z6amq6mhrqs4vq957q0ifddj57wnzrl7swlpdrpnrlzmbxsmzn4") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh"))))))

(define-public crate-good-web-game-0.4.0 (c (n "good-web-game") (v "0.4.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.17.3") (f (quote ("mint"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "^0.3.0-alpha.37") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "01477gk278cnvsy6qcpal3wvq3n62vy1c7caf51pmb07ci3ll7wx") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

(define-public crate-good-web-game-0.4.1 (c (n "good-web-game") (v "0.4.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.17.3") (f (quote ("mint"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "=0.3.0-alpha.37") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "17bxxb2vax7150270n8byxfjdvdvar33sacb6hyz5fms2lfl9cl5") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

(define-public crate-good-web-game-0.4.2 (c (n "good-web-game") (v "0.4.2") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.17.3") (f (quote ("mint"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "=0.3.0-alpha.37") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "twox-hash") (r "=1.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "11kp1hd527kyx1rx47niqcma7hb4il2jjak8c6x363i3sjjzfcm1") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

(define-public crate-good-web-game-0.5.0 (c (n "good-web-game") (v "0.5.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.17.3") (f (quote ("mint"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "=0.3.0-alpha.38") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "twox-hash") (r "=1.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0vi8dacvzsg039r8c6rx2dc9lbh6khi8yl8rby1gs7dv8dmn5r0s") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

(define-public crate-good-web-game-0.6.0 (c (n "good-web-game") (v "0.6.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.21.3") (f (quote ("mint" "bytemuck"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "^0.3.13") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "twox-hash") (r "=1.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0589jhz7ng257n1yhicgyd7h4h0hc9gaaa981d8ds7iqlq92ypkr") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

(define-public crate-good-web-game-0.6.1 (c (n "good-web-game") (v "0.6.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.17") (f (quote ("mint"))) (d #t) (k 0)) (d (n "gilrs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glam") (r "^0.21.3") (f (quote ("mint" "bytemuck"))) (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.22") (f (quote ("png_codec"))) (k 0)) (d (n "keyframe") (r "^1.0.4") (d #t) (k 2)) (d (n "keyframe_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "miniquad") (r "=0.3.13") (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "quad-rand") (r "^0.2.1") (d #t) (k 2)) (d (n "quad-snd") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "tar") (r "^0.4") (k 0)) (d (n "twox-hash") (r "=1.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "1c577sk98mhaq1mfrxn0zg8m79zskch7h9mgv4d24ailykr2yjzv") (f (quote (("mesh" "lyon") ("log-impl" "miniquad/log-impl") ("jpeg" "image/jpeg") ("default" "mesh" "audio") ("audio" "quad-snd"))))))

