(define-module (crates-io go kz gokz_rs) #:use-module (crates-io))

(define-public crate-gokz_rs-0.1.0 (c (n "gokz_rs") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0kwlcpqgr8fqhwqjg0mqgq8y7agknzxzga461hl4j54s5mmnsf66")))

(define-public crate-gokz_rs-0.2.1 (c (n "gokz_rs") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1c98vz0f1is106c35c8nbz652n3g7s3ax96660zb8khmbrhilg23")))

(define-public crate-gokz_rs-0.2.2 (c (n "gokz_rs") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "07gd217fva92d7kjvjx3qs4zbhszhrpg2asgpji6agxyhmjjg0qi")))

(define-public crate-gokz_rs-0.2.3 (c (n "gokz_rs") (v "0.2.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0g5hr8wzs9akcf1d66irxdwnkl53w1jzxknvnbl07hyg7x7kd3bg")))

(define-public crate-gokz_rs-0.3.0 (c (n "gokz_rs") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "00nxdvm5bfbrhlhfn08kjr5j914l4fiwwys2697nqh7mk2l5w7f0")))

(define-public crate-gokz_rs-0.4.0 (c (n "gokz_rs") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1cqqkbxy6q32lb8rlzph1j7wzanrycss0l4p3n785i2j4xga146y")))

(define-public crate-gokz_rs-0.4.1 (c (n "gokz_rs") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0g67pvj0j5cjn64vdyxcb1bmbci992jjq7md5drf2l4c8bnlnnfv")))

(define-public crate-gokz_rs-0.4.2 (c (n "gokz_rs") (v "0.4.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1nkiqgd6x0qy0c05ifipaxsfj79m062vvyp69jvar15ipzac80cf")))

(define-public crate-gokz_rs-0.4.3 (c (n "gokz_rs") (v "0.4.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "19gyd4h2w8qjwj904k7pqbdkk84qq9r5hmxyggc8h3gz32d284h2")))

(define-public crate-gokz_rs-0.4.4 (c (n "gokz_rs") (v "0.4.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1j45vr0hflb8qvk6c0l9zx69a1n3g0viz4dk75c8n38dqvyf8j8n")))

(define-public crate-gokz_rs-0.4.5 (c (n "gokz_rs") (v "0.4.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0bca0bbdzgzjqh4gkd9dik7nmxsciadqhj8k34w8dqim6jx9vh4f")))

(define-public crate-gokz_rs-0.4.6 (c (n "gokz_rs") (v "0.4.6") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0z040giq6hxr84mim569xg897cx7zrmdz5s3vgs7zqffqq1gqag4")))

(define-public crate-gokz_rs-0.4.7 (c (n "gokz_rs") (v "0.4.7") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1w61yifivdg9dy7qhsyi1aicvflhdqbr88krbd8rj7r0xkpq0fds")))

(define-public crate-gokz_rs-0.5.0 (c (n "gokz_rs") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0lzl1djwqcmbmjp23m9jaizryj3rgnm82yigcshnmhc355p2mr4p")))

(define-public crate-gokz_rs-0.6.0 (c (n "gokz_rs") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1pb2l95s1vbg7zkg362653d02n0fnfn1imsp29ywwfkfd0861qk9")))

(define-public crate-gokz_rs-0.6.1 (c (n "gokz_rs") (v "0.6.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1lnpanqzlsihrp1iyg8iz3rjn4rjsdfkz4zsb2r3cmjj442k91h5")))

(define-public crate-gokz_rs-0.6.2 (c (n "gokz_rs") (v "0.6.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "15ycsazn7hfvnmqc6b7pwi9n7dma7ck3ixhl8z1540nhpvl9n55v")))

(define-public crate-gokz_rs-0.6.3 (c (n "gokz_rs") (v "0.6.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1h05qjriyvl3s3ivhnk0vydfsaax8v6x0izcf6krv506nigfaki0")))

(define-public crate-gokz_rs-0.6.4 (c (n "gokz_rs") (v "0.6.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0l57909d26fmw5kjmfsp97pjxrkyjd1bv1hf6a36hjxlmq8pk0vg")))

(define-public crate-gokz_rs-0.6.7 (c (n "gokz_rs") (v "0.6.7") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "08fkqhw8rjr5n0krzsdncckls59n1njml25l8qjqi0sp7b99ikq7")))

(define-public crate-gokz_rs-0.6.8 (c (n "gokz_rs") (v "0.6.8") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1g6bakzj80galwndys19wf1y2bi6mhmjr5x52yf746q9m8l3jhg3")))

(define-public crate-gokz_rs-0.6.9 (c (n "gokz_rs") (v "0.6.9") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0vf87jdycf8h7p5w9sy15kfmi7k4vgf8ky9mbs07x02qppfdj3nw")))

(define-public crate-gokz_rs-0.6.10 (c (n "gokz_rs") (v "0.6.10") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0n6xsb3hv7r8xbycck2z28kckc1k49himbvi7zx2iw141iml8pw7")))

(define-public crate-gokz_rs-0.6.11 (c (n "gokz_rs") (v "0.6.11") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0g1byyvvkwh84v678iwig7ic93gnm3xrzcas2pz6fmaw0l9sbzsl")))

(define-public crate-gokz_rs-0.6.12 (c (n "gokz_rs") (v "0.6.12") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0ncjkp5jgbmcqsn9pcp5mkan38fiy3fw6gj5mysl9i3c2x9szj0k")))

(define-public crate-gokz_rs-0.7.0 (c (n "gokz_rs") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "14lm4s4rpbizrq1wj54j397n9zilpm6bdja4ipfn8fgxrgrk564q")))

(define-public crate-gokz_rs-0.7.1 (c (n "gokz_rs") (v "0.7.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0cp9hp9vrad7fpb5vj5b6f4bd0x2ilf5p2zl8sjc61083qd4vj2b")))

(define-public crate-gokz_rs-0.7.2 (c (n "gokz_rs") (v "0.7.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1d0n1mjw4zy4dcvza3zzl0as0y5d9cv10n1xjn8xkirjzrvjnlr8")))

(define-public crate-gokz_rs-0.7.3 (c (n "gokz_rs") (v "0.7.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0i9qh33gwrjiipbv5kd82dfpdgwg8r86alszvl82jqs8p7idqpmb")))

(define-public crate-gokz_rs-0.8.0 (c (n "gokz_rs") (v "0.8.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "153f0hn3f6xipyc0qjp6m90k8ay8c6aix3vb3f4yppapdxiv8y01")))

(define-public crate-gokz_rs-0.8.1 (c (n "gokz_rs") (v "0.8.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1z0ykw4rwhb3lhvp6bk35sfyh4f73z2f15nama2h94916850lnq2")))

(define-public crate-gokz_rs-0.10.0 (c (n "gokz_rs") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "03brz8njyfwfahv7i4ya0773c1kbnyyyfm7d2qfff56i2a33sgln")))

(define-public crate-gokz_rs-0.10.1 (c (n "gokz_rs") (v "0.10.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0rjrqva3jnf5j8n5p3hmfshvh6d0w9dmgfy6l1zh8a127q4r49bs")))

(define-public crate-gokz_rs-0.10.2 (c (n "gokz_rs") (v "0.10.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0liphgpf5s70dpfp5rlv4ivngbpsc6z2195apzfbnbr6vnp20f71")))

(define-public crate-gokz_rs-0.10.3 (c (n "gokz_rs") (v "0.10.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1dwqf06p46f178qk756h6vb11lhg5y9p31fs1yzddiblmjfna4gm")))

(define-public crate-gokz_rs-0.10.4 (c (n "gokz_rs") (v "0.10.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0jcb8lhxndryrj8cka22n19bwllccpg8ds6yj4cppqp3smh23wyn")))

(define-public crate-gokz_rs-0.10.5 (c (n "gokz_rs") (v "0.10.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1k863mcdmibhn703dmwhd97yfz9av9rniyjclppmx6s1drpm2h81")))

(define-public crate-gokz_rs-0.10.6 (c (n "gokz_rs") (v "0.10.6") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "065d06x4d7dkxawxfs2j1ad7fnsf5rlmd9fa17n69pb3grxlap1l")))

(define-public crate-gokz_rs-0.10.7 (c (n "gokz_rs") (v "0.10.7") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0a2qid2gvyik0h2cim2d15y6qijggxrfsawdila25r46drw88fq3")))

(define-public crate-gokz_rs-0.11.0 (c (n "gokz_rs") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "10y49r0b3ww91bmbf7447rphkffydqf73l2qziad1jx3q9xp7iki")))

(define-public crate-gokz_rs-0.11.1 (c (n "gokz_rs") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0jrar6i6kixy1dcx87kc6s8xxbldcs8fxrpic6lzpw6cikfb32q6")))

(define-public crate-gokz_rs-0.12.0 (c (n "gokz_rs") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "08n6ilh9nbvbkmkyqfaxzgg6wpb2r693x8lyhd86nm1y2vf14phx")))

(define-public crate-gokz_rs-0.13.0 (c (n "gokz_rs") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0mzvl2ly9cd3b58z0mb2f1x4487lbgd297583bcjdilzyalqyavv")))

(define-public crate-gokz_rs-0.13.1 (c (n "gokz_rs") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0dvl067n8xrcn0cryryyjl3fj82b0pa34mc30l73s3cpxxqp2808")))

(define-public crate-gokz_rs-0.13.2 (c (n "gokz_rs") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "06qmsqs4bd50c9jqbp5wdwzjdy16c6p8d22jgkpcjbrmzxz8jlpy")))

(define-public crate-gokz_rs-0.14.0 (c (n "gokz_rs") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1ickfmfkfhih9zihzs71n6llinjs2n5s4kdshiaaln4lmcjy3b04")))

(define-public crate-gokz_rs-0.14.1 (c (n "gokz_rs") (v "0.14.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0mh35sr7zxypj3vy0077mpjapwgp06yhq2zd7qxlw5zfzwgcpn67")))

(define-public crate-gokz_rs-0.15.0 (c (n "gokz_rs") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1zpl4i32vpj68bp2n2bkdc94lwyj1cnxa8xssyq9g7x9zdd955p1")))

(define-public crate-gokz_rs-0.15.1 (c (n "gokz_rs") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1y2n0brl42yvpr5606qnfx26wprdb7qi2wchl9bzv2dg3igapc2j")))

(define-public crate-gokz_rs-0.15.2 (c (n "gokz_rs") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1ch6fhaxbgacdgd49x7168kp6x4v3kxlag7dfcyfpqg9a4zfq8sn")))

(define-public crate-gokz_rs-0.15.3 (c (n "gokz_rs") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1swm3fdv2h9wx6vc3hbmp8ch6y6dpxy1rlynz3d97xscjgm4nara")))

(define-public crate-gokz_rs-0.16.0 (c (n "gokz_rs") (v "0.16.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0hc8318aa8w5rgx2vsv2pln0jziyz8ybds94gaqkq6fg2rky393c") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.16.1 (c (n "gokz_rs") (v "0.16.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1fk86d970hhma9m0j8ilpq12s5ffi4v9irb9wfpamz11rgbjz4b2") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.16.3 (c (n "gokz_rs") (v "0.16.3") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1ihv84igmf8vnp4hgqrjcsj278hpm9y7b0c8h5wcffd3gdm2fvjx") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.0 (c (n "gokz_rs") (v "0.17.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0x2wc68s242wfp3x6rpq241x71fcvnlyxfhz4g49y9b6vsq74gyy") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.1 (c (n "gokz_rs") (v "0.17.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "08nl04rp3rv9nzvhh8gfv81mhch1rzczsjm3d3fd8rcia46dvx5b") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.2 (c (n "gokz_rs") (v "0.17.2") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "08yf7xglg8vg431301am5w915ksiw9fbmphq4vvqfgp82qgw20sq") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.3 (c (n "gokz_rs") (v "0.17.3") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0lw7ngsn771lj1rjlwmhsn77dps9ym3c02wshzgzyvbvpj1lwl87") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.4 (c (n "gokz_rs") (v "0.17.4") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1gaqlyi73qxpq6dlmqsikxpkw7y5vhan3faqyl6s75f53naxxqfr") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.5 (c (n "gokz_rs") (v "0.17.5") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1xa9fm6rp8cd6p9k1z9bma0i6dcz1q0sqid1a7gnn8w9gy9fh0mn") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.6 (c (n "gokz_rs") (v "0.17.6") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0nm934klk80sxwx38d3pizlzgbpsgz7va1viknfiz2bdrg90hzx8") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.7 (c (n "gokz_rs") (v "0.17.7") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1lnxrm492xl9vj1ijrlzw3x0py25nh5i6wbxs56zylhy32xh491j") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.17.8 (c (n "gokz_rs") (v "0.17.8") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0iianqpqcxyhzv5gj5xzvbhknzsv1cs7v96pqchba876wdz9bll5") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.0 (c (n "gokz_rs") (v "0.18.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0xixr45gnazsri8clkyi0a635p0d56ijpv8x1x1yfl1q30aa9v6y") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.1 (c (n "gokz_rs") (v "0.18.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "11865akky1ia1bj81nxlb79j2slzw1qkjlz2b5yh2i647arsk19n") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.2 (c (n "gokz_rs") (v "0.18.2") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "03r58b6nsqv1ngqp5s2p5hyyhz9rg9sy9mwxfcvxga06h81kmbsw") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.3 (c (n "gokz_rs") (v "0.18.3") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1myilqs5x6lbn9lc9h8gpy9zlbljkvklq8m3afwl5gpn98v5q25q") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.4 (c (n "gokz_rs") (v "0.18.4") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "09fzddwc5zsyqf3sxspj8hmzpwk42k51ikhp1p590mpvcdb7gynb") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.18.5 (c (n "gokz_rs") (v "0.18.5") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0k1d0vvnpwmsn1cgjsibmpz9ym5rixsyav4c9ha6icyn84pjc7zj") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.19.1 (c (n "gokz_rs") (v "0.19.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "18k5ian0vf4svm4k1aa2iwdqdlpd8bdyjfs0n8a1g1d3cvs1sm8v") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.19.2 (c (n "gokz_rs") (v "0.19.2") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "14q6x2v22my6zhnqi0y1jcnbqanbpw2zh8kv0n7v35xpa2nrar3a") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.20.0 (c (n "gokz_rs") (v "0.20.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1a0gqpw73nvxmjjpswigbvl2dnz7bqqc1q4l724v17ywq25cj73f") (f (quote (("schnose_api" "reqwest" "chrono") ("kzgo_api" "reqwest" "chrono")))) (s 2) (e (quote (("reqwest" "dep:reqwest") ("global_api" "reqwest" "chrono" "dep:futures") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.0 (c (n "gokz_rs") (v "0.21.0") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "0b796swmnhwxn9qw7z13qrpb319gyp85bgp3nz9hm8m8jdkj3lmd") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.1 (c (n "gokz_rs") (v "0.21.1") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "1gr6h4myvdzr5vg1ww4cfn7y4cyq0v4d75yy7faf6mal3r196icm") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.2 (c (n "gokz_rs") (v "0.21.2") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "163745paxqa7cil78wz7w2vvrw2v1cpin5455y7nndiy1m4zkaq5") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.3 (c (n "gokz_rs") (v "0.21.3") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "1xs9j42nwlamdmbnh5sphvsrqwinwqpvl3yfxjd8l46dsfh94fns") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.4 (c (n "gokz_rs") (v "0.21.4") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "00bhk5rcb8qxlhxk9gxw0mvkh3wgjv2w7128sx6g0r8q272wp7gg") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.5 (c (n "gokz_rs") (v "0.21.5") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "1sqr4x3i6fch100qlcy8dv25c4jggsak6i8xfhb9hx9gxalhm5gr") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.6 (c (n "gokz_rs") (v "0.21.6") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "1ac3vk75jmmxd13kfxp02p8bwg7kra8vl0bwpivqfvd8sxl79z51") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.7 (c (n "gokz_rs") (v "0.21.7") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "0vmi93a82fb2rl6xps2vinglpgqbr4zh6jp06981m3k7w5hvh0a2") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.8 (c (n "gokz_rs") (v "0.21.8") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "1y2p865xhr7rw8qacx85zx34jcxsv1hh6zrar9bi0wyp3jj6dghs") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.9 (c (n "gokz_rs") (v "0.21.9") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "0d3hdi7w1l0gc9lyzb7hypillni9g0nhxwhf5fsdwjvfy7lm7r5v") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.10 (c (n "gokz_rs") (v "0.21.10") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "0cwamji6gizaxcrgzcaz828z9hbxqdd0kgk22hqnyjbgrn9zv7p4") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.13 (c (n "gokz_rs") (v "0.21.13") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "1ka8pyhlm6xq95159gffz478w10mgpzf1x6y9sp92bh1xv2b1lb0") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.14 (c (n "gokz_rs") (v "0.21.14") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "1x39ph96swmay31jazf6x7sxbyp062z7dnx7xyir8208c3gils3w") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.21.15 (c (n "gokz_rs") (v "0.21.15") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "11li7sf8s15dad8slqsy6ji95c6b86591v0p0pzh0lzjwlxaim5m") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.22.0 (c (n "gokz_rs") (v "0.22.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0ad8ardl8ahkj96a8b3rmgcsb9465nz3knskqqa7avfh4vmb1b6j") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.22.1 (c (n "gokz_rs") (v "0.22.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0fagqirmrrjjn9d6filpw2xrcb6qmzbbabdl48jfrdsgzqrnbchz") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.0 (c (n "gokz_rs") (v "0.23.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0fj9lfld5asc7k55ljnggiilppf74jx5ni1qch5az8bfk44wr43v") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.1 (c (n "gokz_rs") (v "0.23.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0kj23mv98xz2a1bp0jhh2nf8z48vgnwr000pw40n7r135yxqyhrf") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.2 (c (n "gokz_rs") (v "0.23.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0xpfmkdgjfg3x4lz23a5yirpfw3fm4jrapm0m9hbka9pxm13fkaj") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.3 (c (n "gokz_rs") (v "0.23.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "1c43l44ayx6dylbnv4aw9mkzrrhgnlnd53zi41gp765iv9k8naia") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.4 (c (n "gokz_rs") (v "0.23.4") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "0kafbqpvp5yxyg279iqy6rjdvav4vjxcxy6nwm8pj0h0lxhb8n4k") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.23.5 (c (n "gokz_rs") (v "0.23.5") (d (list (d (n "chrono") (r "^0.4") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "serde_json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)))) (h "1r7qc0lnwxa03pimyqdb9p3zz20wksgk8apsxjimdg9w4xjy4j8k") (f (quote (("schnose-api" "reqwest") ("kzgo-api" "reqwest") ("global-api" "reqwest")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.24.0 (c (n "gokz_rs") (v "0.24.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "ctor") (r "^0.2.4") (d #t) (k 2)) (d (n "lazy-regex") (r "^3") (d #t) (k 0)) (d (n "poise") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls" "json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("tls-rustls" "macros" "all-databases"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "utoipa") (r "^3.4") (o #t) (d #t) (k 0)))) (h "1afqsv2nw54x5l4dd2h6dj2mmp4bxm06ibffd7qhhmbv727sw2rw") (f (quote (("kzgo-api" "reqwest") ("global-api" "reqwest") ("dawn-api" "reqwest")))) (s 2) (e (quote (("utoipa" "dep:utoipa") ("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("poise" "dep:poise") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.24.1 (c (n "gokz_rs") (v "0.24.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "ctor") (r "^0.2.4") (d #t) (k 2)) (d (n "lazy-regex") (r "^3") (d #t) (k 0)) (d (n "poise") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls" "json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("tls-rustls" "macros" "all-databases"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "utoipa") (r "^3.4") (o #t) (d #t) (k 0)))) (h "04d2sjmkfzhcr08irxksznknsk7ps4m9i6lwn2zfwx57wg8xa9bq") (f (quote (("kzgo-api" "reqwest") ("global-api" "reqwest") ("dawn-api" "reqwest")))) (s 2) (e (quote (("utoipa" "dep:utoipa") ("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("poise" "dep:poise") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.24.2 (c (n "gokz_rs") (v "0.24.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "ctor") (r "^0.2.4") (d #t) (k 2)) (d (n "lazy-regex") (r "^3") (d #t) (k 0)) (d (n "poise") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls" "json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("tls-rustls" "macros" "all-databases"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "utoipa") (r "^3.4") (o #t) (d #t) (k 0)))) (h "0i4rb08w09jspgs9x6phcv8fk66zb0wqq77678cqg1n4xpjpd49z") (f (quote (("kzgo-api" "reqwest") ("global-api" "reqwest") ("dawn-api" "reqwest")))) (s 2) (e (quote (("utoipa" "dep:utoipa") ("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("poise" "dep:poise") ("chrono" "dep:chrono"))))))

(define-public crate-gokz_rs-0.24.3 (c (n "gokz_rs") (v "0.24.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "ctor") (r "^0.2.4") (d #t) (k 2)) (d (n "lazy-regex") (r "^3") (d #t) (k 0)) (d (n "poise") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls" "rustls-tls" "json"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("tls-rustls" "macros" "all-databases"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "utoipa") (r "^3.4") (o #t) (d #t) (k 0)))) (h "1b4wziqy04jjxi8xgnv7qx7fjdvf8gvcqmrdjwfnpws6laqcfcq8") (f (quote (("kzgo-api" "reqwest") ("global-api" "reqwest") ("dawn-api" "reqwest")))) (s 2) (e (quote (("utoipa" "dep:utoipa") ("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("reqwest" "dep:reqwest" "serde") ("poise" "dep:poise") ("chrono" "dep:chrono"))))))

