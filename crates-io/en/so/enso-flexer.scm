(define-module (crates-io en so enso-flexer) #:use-module (crates-io))

(define-public crate-enso-flexer-0.1.0 (c (n "enso-flexer") (v "0.1.0") (d (list (d (n "enso-automata") (r "^0.1.4") (d #t) (k 0)) (d (n "enso-lazy-reader") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "enso-macro-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-prelude") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nonempty") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.19") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.12") (f (quote ("full" "extra-traits" "visit-mut" "visit" "parsing" "printing"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "1ahw4nh3wq5nhgwq4dllsfqvsi4c24iggiz0pw7xcqdf60a7i316")))

(define-public crate-enso-flexer-0.1.1 (c (n "enso-flexer") (v "0.1.1") (d (list (d (n "enso-automata") (r "^0.1.4") (d #t) (k 0)) (d (n "enso-lazy-reader") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "enso-macro-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-prelude") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nonempty") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.19") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.12") (f (quote ("full" "extra-traits" "visit-mut" "visit" "parsing" "printing"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "1wss56136w29wlywsdlaj65ipp2zcl54vcbjzvz8yz98nxzkfhm1")))

(define-public crate-enso-flexer-0.1.2 (c (n "enso-flexer") (v "0.1.2") (d (list (d (n "enso-automata") (r "^0.1.5") (d #t) (k 0)) (d (n "enso-lazy-reader") (r "^0.1.2") (d #t) (k 0)) (d (n "enso-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "enso-macro-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-prelude") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nonempty") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.19") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.12") (f (quote ("full" "extra-traits" "visit-mut" "visit" "parsing" "printing"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "03v5pa070xq71j5rj8jaqzj2kwnf1y6fdvzpynsak85br2v3p200")))

(define-public crate-enso-flexer-0.1.3 (c (n "enso-flexer") (v "0.1.3") (d (list (d (n "enso-automata") (r "^0.1.5") (d #t) (k 0)) (d (n "enso-lazy-reader") (r "^0.1.2") (d #t) (k 0)) (d (n "enso-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "enso-macro-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enso-prelude") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nonempty") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.19") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.12") (f (quote ("full" "extra-traits" "visit-mut" "visit" "parsing" "printing"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "1fa0r1vd2biiwxm782izd55dkas4k0paps05c1mki0fjk3l43fbx")))

(define-public crate-enso-flexer-0.2.0 (c (n "enso-flexer") (v "0.2.0") (d (list (d (n "enso-automata") (r "^0.2.0") (d #t) (k 0)) (d (n "enso-lazy-reader") (r "^0.2.0") (d #t) (k 0)) (d (n "enso-logger") (r "^0.3.0") (d #t) (k 0)) (d (n "enso-macro-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "enso-prelude") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nonempty") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.19") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.12") (f (quote ("full" "extra-traits" "visit-mut" "visit" "parsing" "printing"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "16nxz2x5bvjlfxw19n8zlz5fl3lk4958jivwxmgm0v6460rj574b")))

