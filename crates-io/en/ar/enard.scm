(define-module (crates-io en ar enard) #:use-module (crates-io))

(define-public crate-enard-0.1.0 (c (n "enard") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cipher") (r "^0.4") (d #t) (k 0)) (d (n "crypto-common") (r "^0.1") (d #t) (k 0)) (d (n "delegate") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("mac" "core-api" "std"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1l4spxd3icxhwmn1h245faa2c4xh4v7mhz0wckg8m080g0m7g8bh") (f (quote (("random" "rand") ("default" "chacha") ("chacha" "chacha20"))))))

(define-public crate-enard-0.1.1 (c (n "enard") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cipher") (r "^0.4") (d #t) (k 0)) (d (n "crypto-common") (r "^0.1") (d #t) (k 0)) (d (n "delegate") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("mac" "core-api" "std"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "07fnb0vpixzqz6gikm084my5rpi3s8rrawjcdyfjbc6sdygvzw5l") (f (quote (("random" "rand") ("default" "chacha") ("chacha" "chacha20"))))))

