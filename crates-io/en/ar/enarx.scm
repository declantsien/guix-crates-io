(define-module (crates-io en ar enarx) #:use-module (crates-io))

(define-public crate-enarx-0.1.0 (c (n "enarx") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "ciborium") (r "^0.1") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.25") (d #t) (k 1)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 0)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 1)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.1.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "vdso") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "x86_64") (r "^0.14.6") (o #t) (k 0)))) (h "00ll17gra1zgr4dskm9gvbyrrxm7r1ip44hbcmrlihz33x2hw6vk") (f (quote (("wasmldr" "wat") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.1.1 (c (n "enarx") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "ciborium") (r "^0.1") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.25") (d #t) (k 1)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 0)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 1)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.1.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "vdso") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "x86_64") (r "^0.14.6") (o #t) (k 0)))) (h "049yajfdllzgs4y4y1i7c0qps72r44ri5z9xg6vpl5plij5h42zg") (f (quote (("wasmldr" "wat") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.1.2 (c (n "enarx") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "ciborium") (r "^0.1") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.25") (d #t) (k 1)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 0)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 1)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.1.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "vdso") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "x86_64") (r "^0.14.6") (o #t) (k 0)))) (h "0c923imi609j8ji64awgj376fqsywna12il06jsa3vbh0511a5a0") (f (quote (("wasmldr" "wat") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.1.3 (c (n "enarx") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "ciborium") (r "^0.1") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.25") (d #t) (k 1)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 0)) (d (n "sallyport") (r "^0.1") (f (quote ("asm"))) (d #t) (k 1)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.1.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "vdso") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "x86_64") (r "^0.14.6") (o #t) (k 0)))) (h "0dszr3ikg7cq4h01a6r1jhzyqsk14f521fgvvm24x1pl9n861wbp") (f (quote (("wasmldr" "wat") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.2.0 (c (n "enarx") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.41") (d #t) (k 1)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gdbstub") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1.1") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2.1") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.2") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "sallyport") (r "^0.2.0") (f (quote ("asm"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.3.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vdso") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.8") (o #t) (k 0)))) (h "17lyy7dgq1k22cz5g6nwy3zfakksldn51x0dv83r294s7ila073s") (f (quote (("wasmldr") ("gdb" "gdbstub") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("dbg") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm" "reqwest") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.2.1 (c (n "enarx") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.41") (d #t) (k 1)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gdbstub") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1.1") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2.1") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.2") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "sallyport") (r "^0.2.0") (f (quote ("asm"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sgx") (r "^0.3.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vdso") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.8") (o #t) (k 0)))) (h "0hx2106lls471h2zs61w17rqwwsprvbiyhmh78xq1ibkwrg5q90m") (f (quote (("wasmldr") ("gdb" "gdbstub") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("dbg") ("backend-sgx" "x86_64" "sgx") ("backend-sev" "backend-kvm" "reqwest") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.3.0 (c (n "enarx") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.41") (d #t) (k 1)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gdbstub") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1.1") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.2") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2.1") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.2") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sallyport") (r "^0.3.0") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serial_test") (r "^0.6") (d #t) (k 2)) (d (n "sgx") (r "^0.3.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "spinning") (r "^0.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "vdso") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.8") (o #t) (k 0)))) (h "1xrgrf2hx5qw8z5rgp9h8nlmb4w2kcwv1byzj9s69iv0xk6p88ml") (f (quote (("wasmldr") ("gdb" "gdbstub") ("default" "backend-kvm" "backend-sgx" "backend-sev" "wasmldr") ("dbg") ("backend-sgx" "x86_64" "sgx" "ureq") ("backend-sev" "backend-kvm" "ureq") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.4.0-pre (c (n "enarx") (v "0.4.0-pre") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.41") (d #t) (k 1)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.4.0-pre") (d #t) (k 0)) (d (n "enarx-shim-kvm") (r "^0.4.0-pre") (d #t) (k 0)) (d (n "enarx-shim-sgx") (r "^0.4.0-pre") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gdbstub") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1.1") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.3") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2.1") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.3") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sallyport") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serial_test") (r "^0.6") (d #t) (k 2)) (d (n "sgx") (r "^0.4.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "vdso") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.9") (o #t) (k 0)))) (h "0v7y68h0v1z48d96j7yykrqlv94fz8svnnfi7h4iby8ldajlijjx") (f (quote (("gdb" "gdbstub") ("disable-sgx-attestation") ("default" "backend-kvm" "backend-sgx" "backend-sev") ("dbg") ("backend-sgx" "x86_64" "sgx" "ureq") ("backend-sev" "backend-kvm" "ureq") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.4.0 (c (n "enarx") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.41") (d #t) (k 1)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.4.0") (d #t) (k 0)) (d (n "enarx-shim-kvm") (r "^0.4.0") (d #t) (k 0)) (d (n "enarx-shim-sgx") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gdbstub") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "iocuddle") (r "^0.1.1") (d #t) (k 0)) (d (n "kvm-bindings") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "kvm-ioctls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lset") (r "^0.3") (d #t) (k 0)) (d (n "mmarinus") (r "^0.2.1") (d #t) (k 0)) (d (n "nbytes") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "process_control") (r "^3.3") (d #t) (k 2)) (d (n "protobuf") (r "^2.22") (d #t) (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sallyport") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serial_test") (r "^0.6") (d #t) (k 2)) (d (n "sgx") (r "^0.4.0") (f (quote ("openssl"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "vdso") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.9") (o #t) (k 0)))) (h "105ik8crcicrkn4gl5mx97azcz9j6bqwakb1gaz5ibm6v7cjd6w5") (f (quote (("gdb" "gdbstub") ("disable-sgx-attestation") ("default" "backend-kvm" "backend-sgx" "backend-sev") ("dbg") ("backend-sgx" "x86_64" "sgx" "ureq") ("backend-sev" "backend-kvm" "ureq") ("backend-kvm" "x86_64" "kvm-bindings" "kvm-ioctls"))))))

(define-public crate-enarx-0.5.0 (c (n "enarx") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.5.0") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.5.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.5.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.5.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "once_cell") (r "^1.10.0") (f (quote ("std"))) (k 0)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "sallyport") (r "^0.5.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.6") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "1xlvhp9hbplqk3z8rla3qbyfban7hglwn13alzaskb83d2icdfxp") (f (quote (("gdb" "gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb") ("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg"))))))

(define-public crate-enarx-0.5.1 (c (n "enarx") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.5.1") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.5.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.5.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.5.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "once_cell") (r "^1.11.0") (f (quote ("std"))) (k 0)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "sallyport") (r "^0.5.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.6") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "058n7j3x3q4rrs69dlpmrk5jr1rgjzi68i7qyizhl5v4sszwysgl") (f (quote (("gdb" "gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb") ("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg"))))))

(define-public crate-enarx-0.6.0 (c (n "enarx") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-h1") (r "^2.3.3") (t "cfg(not(windows))") (k 2)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes"))) (t "cfg(not(windows))") (k 2)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "camino") (r "^1.0.9") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "drawbridge-client") (r "^0.1.0") (k 0) (p "tiedcrossing-client")) (d (n "drawbridge-server") (r "^0.1.0") (t "cfg(not(windows))") (k 2)) (d (n "enarx-config") (r "^0.6") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.0") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.6.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.6.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "futures") (r "^0.3.21") (t "cfg(not(windows))") (k 2)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "http-types") (r "^2.12.0") (t "cfg(not(windows))") (k 2)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "keyring") (r "^1.1.2") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "oauth2") (r "^4.2.2") (f (quote ("ureq"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (f (quote ("std"))) (k 0)) (d (n "openidconnect") (r "^2.3.2") (f (quote ("ureq"))) (k 0)) (d (n "openidconnect") (r "^2.3.1") (t "cfg(not(windows))") (k 2)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "rustls") (r "^0.20.6") (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (k 0)) (d (n "sallyport") (r "^0.6.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.8") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "1d5m2lfknhcpvxkbgldnx135hcz3qhk9gz3qcqgyd06lzsmhqk7y") (f (quote (("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg")))) (s 2) (e (quote (("gdb" "dep:gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb"))))))

(define-public crate-enarx-0.6.1 (c (n "enarx") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-h1") (r "^2.3.3") (t "cfg(not(windows))") (k 2)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes"))) (t "cfg(not(windows))") (k 2)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "camino") (r "^1.0.9") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "drawbridge-client") (r "^0.2.0") (k 0)) (d (n "drawbridge-server") (r "^0.2.1") (t "cfg(not(windows))") (k 2)) (d (n "enarx-config") (r "^0.6") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.1") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.6.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.6.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "futures") (r "^0.3.21") (t "cfg(not(windows))") (k 2)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "http-types") (r "^2.12.0") (t "cfg(not(windows))") (k 2)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "keyring") (r "^1.1.2") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "oauth2") (r "^4.2.2") (f (quote ("ureq"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (f (quote ("std"))) (k 0)) (d (n "openidconnect") (r "^2.3.2") (f (quote ("ureq"))) (k 0)) (d (n "openidconnect") (r "^2.3.1") (t "cfg(not(windows))") (k 2)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "rustls") (r "^0.20.6") (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (k 0)) (d (n "sallyport") (r "^0.6.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.8") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "testaso") (r "^0.1") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "0n91pvx5vyg4ny6gshnp6ld586fa9sg5lq8s9xvzkn6ycg0wxxg9") (f (quote (("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg")))) (s 2) (e (quote (("gdb" "dep:gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb"))))))

(define-public crate-enarx-0.6.2 (c (n "enarx") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-h1") (r "^2.3.3") (t "cfg(not(windows))") (k 2)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes"))) (t "cfg(not(windows))") (k 2)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "camino") (r "^1.0.9") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "drawbridge-client") (r "^0.2.0") (k 0)) (d (n "drawbridge-server") (r "^0.2.1") (t "cfg(not(windows))") (k 2)) (d (n "enarx-config") (r "^0.6") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.2") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.6.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.6.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "futures") (r "^0.3.21") (t "cfg(not(windows))") (k 2)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "http-types") (r "^2.12.0") (t "cfg(not(windows))") (k 2)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "keyring") (r "^1.1.2") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "oauth2") (r "^4.2.2") (f (quote ("ureq"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (f (quote ("std"))) (k 0)) (d (n "openidconnect") (r "^2.3.2") (f (quote ("ureq"))) (k 0)) (d (n "openidconnect") (r "^2.3.1") (t "cfg(not(windows))") (k 2)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "rustls") (r "^0.20.6") (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (k 0)) (d (n "sallyport") (r "^0.6.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.8") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "testaso") (r "^0.1") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "0cdixsqrq4n6apiw7vs4alihn80w6g7ld6ghh8k6x78r78b8h6y3") (f (quote (("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg")))) (s 2) (e (quote (("gdb" "dep:gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb"))))))

(define-public crate-enarx-0.6.3 (c (n "enarx") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-h1") (r "^2.3.3") (t "cfg(not(windows))") (k 2)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes"))) (t "cfg(not(windows))") (k 2)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bitflags") (r "^1.2") (k 0)) (d (n "camino") (r "^1.0.9") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "colorful") (r "^0.2") (k 0)) (d (n "const-default") (r "^1.0") (f (quote ("derive"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "dirs") (r "^4.0") (k 0)) (d (n "drawbridge-client") (r "^0.2.2") (k 0)) (d (n "drawbridge-server") (r "^0.2.2") (t "cfg(not(windows))") (k 2)) (d (n "enarx-config") (r "^0.6") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.3") (k 0)) (d (n "enarx-exec-wasmtime") (r "^0.6.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-kvm") (r "^0.6.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "enarx-shim-sgx") (r "^0.6.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "futures") (r "^0.3.21") (t "cfg(not(windows))") (k 2)) (d (n "gdbstub") (r "^0.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5") (f (quote ("elf64" "elf32" "std" "endian_fd"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "http-types") (r "^2.12.0") (t "cfg(not(windows))") (k 2)) (d (n "iocuddle") (r "^0.1.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "keyring") (r "^1.1.2") (k 0)) (d (n "kvm-bindings") (r "^0.5") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "kvm-ioctls") (r "^0.11") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "lset") (r "^0.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "mmarinus") (r "^0.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "nbytes") (r "^0.1") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "oauth2") (r "^4.2.2") (f (quote ("ureq"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (f (quote ("std"))) (k 0)) (d (n "openidconnect") (r "^2.3.2") (f (quote ("ureq"))) (k 0)) (d (n "openidconnect") (r "^2.3.1") (t "cfg(not(windows))") (k 2)) (d (n "p384") (r "^0.11.1") (f (quote ("std" "pem" "ecdsa"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("std" "pem"))) (d #t) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "primordial") (r "^0.5") (f (quote ("alloc"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "process_control") (r "^3.3") (k 2)) (d (n "protobuf") (r "^2.22") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "protobuf-codegen-pure") (r "^2.27") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "ring") (r "^0.16.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (k 0)) (d (n "sallyport") (r "^0.6.3") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "semver") (r "^1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "serial_test") (r "^0.8") (k 2)) (d (n "sgx") (r "^0.5.0") (f (quote ("rcrypto"))) (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "static_assertions") (r "^1.1.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "tempfile") (r "^3.3.0") (k 2)) (d (n "testaso") (r "^0.1") (k 2)) (d (n "toml") (r "^0.5.9") (k 0)) (d (n "ureq") (r "^2.4.0") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "vdso") (r "^0.2") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)) (d (n "wat") (r "^1.0") (k 2)) (d (n "x86_64") (r "^0.14.9") (t "cfg(all(target_os = \"linux\", target_arch = \"x86_64\"))") (k 0)))) (h "1qmhsvj0lnlqr92m7ja8j4qrva4ygzl6a5fvif6xdmhszqqwjn1c") (f (quote (("disable-sgx-attestation" "enarx-shim-sgx/disable-sgx-attestation") ("default") ("dbg" "enarx-shim-kvm/dbg" "enarx-shim-sgx/dbg")))) (s 2) (e (quote (("gdb" "dep:gdbstub" "enarx-shim-kvm/gdb" "enarx-shim-sgx/gdb"))))))

(define-public crate-enarx-0.7.0 (c (n "enarx") (v "0.7.0") (h "1zq5ik7dd5mdmzbbrlyyabrw2fshd3lzpndm858lp2aply5j77y5")))

