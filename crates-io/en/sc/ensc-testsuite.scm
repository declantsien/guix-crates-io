(define-module (crates-io en sc ensc-testsuite) #:use-module (crates-io))

(define-public crate-ensc-testsuite-0.1.0 (c (n "ensc-testsuite") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "0knyalnkg94q9ghknhz2aq1riwb0125gmpdwsnla63lgm8j86hwf") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.1 (c (n "ensc-testsuite") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "0bm5vjpq51ikw3ab1ix1l1rx7c9nfvnjxfzxym5ypizbvg4rk1sg") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.2 (c (n "ensc-testsuite") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "1fj84ymhgxsxi5vrd5097hn0zivzgqkajkjsxshvy7lf7r0nc252") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.3 (c (n "ensc-testsuite") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "00spyb2593dp5d3b1j2iwlns6vd7s0z49m3c3gqv0swdg0qfc9mv") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.4 (c (n "ensc-testsuite") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "1p0kw3ksy030b4p53hcd61i2z6kb9mryqfwwamwhgkb700969sjg") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.5 (c (n "ensc-testsuite") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "02fxdjyq2vrkf8r2msdsm2sfphwfy1rhn456j55y9xcv8gyl2g8s") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

(define-public crate-ensc-testsuite-0.1.6 (c (n "ensc-testsuite") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 0)) (d (n "static_init") (r "^0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xml-rs") (r "^0") (d #t) (k 0)))) (h "1fwm817jjnn45v2jbrd02ps2q19220a2h3wyidj34bh86c5408rn") (f (quote (("with-anyhow" "anyhow") ("use-static-destructors" "static_init" "libc") ("default" "use-static-destructors" "with-anyhow"))))))

