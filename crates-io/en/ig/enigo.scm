(define-module (crates-io en ig enigo) #:use-module (crates-io))

(define-public crate-enigo-0.0.1 (c (n "enigo") (v "0.0.1") (d (list (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "x11-dl") (r "^2.12.0") (d #t) (k 0)))) (h "1vamsrn01bvdr9fm8lmh9k79bgidnq93fjgad7wad2b8minnl1bf")))

(define-public crate-enigo-0.0.2 (c (n "enigo") (v "0.0.2") (d (list (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "x11-dl") (r "^2.12.0") (d #t) (k 0)))) (h "0qbhplyz4m6wc48vl960bglpznm50r370ryxzrfzw6vyr7cll031")))

(define-public crate-enigo-0.0.3 (c (n "enigo") (v "0.0.3") (d (list (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "x11-dl") (r "^2.12.0") (d #t) (k 0)))) (h "0fc254v13q8brf1lc3za4qgm09yyj81ij0jisjkwswhdvcm07sw8")))

(define-public crate-enigo-0.0.4 (c (n "enigo") (v "0.0.4") (d (list (d (n "core-graphics") (r "^0.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "x11-dl") (r "^2.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "04p8f7iqp60llm6bgh3dsa6zj6g5lmbdp1fr0xrhk85xnsv97mkc")))

(define-public crate-enigo-0.0.5 (c (n "enigo") (v "0.0.5") (d (list (d (n "core-graphics") (r "^0.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0df30vgk77giyb4yxs9qndgnxs6cmqqh5s8770pmq8cwk4cfvyb0")))

(define-public crate-enigo-0.0.6 (c (n "enigo") (v "0.0.6") (d (list (d (n "core-graphics") (r "^0.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1zbg1jil9v8jzk68y02m4fmcxwvsc3lxkv4c5v2ms6jnpcg2m5bf")))

(define-public crate-enigo-0.0.7 (c (n "enigo") (v "0.0.7") (d (list (d (n "core-graphics") (r "^0.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "082jc73rdmdz36n8icqf0l0bb2pkr8mf9iwcb04kw114jp67xn92")))

(define-public crate-enigo-0.0.8 (c (n "enigo") (v "0.0.8") (d (list (d (n "core-graphics") (r "^0.8.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06rnn0djp520sm8pnf8kasx0zc8pxasm7kgjyfn2691880hz2aja")))

(define-public crate-enigo-0.0.9 (c (n "enigo") (v "0.0.9") (d (list (d (n "core-graphics") (r "^0.8.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mz1w27iqwd9d40c4zam0fi4m70slribgw1yx2fz1gah9k5441ky")))

(define-public crate-enigo-0.0.10 (c (n "enigo") (v "0.0.10") (d (list (d (n "core-graphics") (r "^0.8.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lbx2v95ibr15rbwhjqjqs1h4s7gig6vwk5q3yg4g83sdgwqn0dn")))

(define-public crate-enigo-0.0.11 (c (n "enigo") (v "0.0.11") (d (list (d (n "core-graphics") (r "^0.8.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0babd3l60nayq1j9k5qfy3z0jvam0jsy6r0m37dnwj3ry1ivnzlz") (f (quote (("with_serde" "serde" "serde_derive"))))))

(define-public crate-enigo-0.0.12 (c (n "enigo") (v "0.0.12") (d (list (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0dx3asqs7lr9qm1xizad0g89lgrl8knfmz2q5pdg9bwj5d6806z3") (f (quote (("with_serde" "serde" "serde_derive"))))))

(define-public crate-enigo-0.0.13 (c (n "enigo") (v "0.0.13") (d (list (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1fwkyw6sdq0csyk8h85i5qwjn6g0xx4ji2i54jaz9a92p09v3lxg") (f (quote (("with_serde" "serde" "serde_derive"))))))

(define-public crate-enigo-0.0.14 (c (n "enigo") (v "0.0.14") (d (list (d (n "core-graphics") (r "^0.18.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3.17") (d #t) (k 1)) (d (n "serde") (r "^1.0.102") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.102") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "053qnr1zfy4ap73pkj2vw4rwi9bd4wk952jyzmak2yz8f9v8vklm") (f (quote (("with_serde" "serde" "serde_derive"))))))

(define-public crate-enigo-0.0.15 (c (n "enigo") (v "0.0.15") (d (list (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 2)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.46") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qq3mmmrsyl63dlzdxs2jy41bd663i796kqd1p8c7js4359dg9zd") (f (quote (("with_serde" "serde" "serde_derive")))) (y #t) (r "1.64")))

(define-public crate-enigo-0.1.0 (c (n "enigo") (v "0.1.0") (d (list (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 2)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.46") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yxhhqbzs1jhv0lvyn5v7g4d3aay9a9mkswc79n724b166i0kd0r") (f (quote (("with_serde" "serde" "serde_derive")))) (r "1.64")))

(define-public crate-enigo-0.1.1 (c (n "enigo") (v "0.1.1") (d (list (d (n "core-graphics") (r "^0.22") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 2)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.46") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "136l9qr60mx8hzd2a1m4ljv9y8vk5mpcnsa4nqppzzpmd10sn8d1") (f (quote (("with_serde" "serde" "serde_derive")))) (r "1.64")))

(define-public crate-enigo-0.1.2 (c (n "enigo") (v "0.1.2") (d (list (d (n "core-graphics") (r "^0.22") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 2)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1h3xnj5agyz8sy90yilm00s6snhazrja3dqs2pdw3mmias98ck26") (f (quote (("with_serde" "serde" "serde_derive")))) (r "1.64")))

(define-public crate-enigo-0.1.3 (c (n "enigo") (v "0.1.3") (d (list (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.20") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 2)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.51") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mripjliivlzj050bn3fwii5az58rd9v8sak11cmcq93w4m4nbl0") (f (quote (("with_serde" "serde" "serde_derive")))) (r "1.64")))

(define-public crate-enigo-0.2.0-rc1 (c (n "enigo") (v "0.2.0-rc1") (d (list (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tungstenite") (r "^0.20") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-plasma") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.51") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11rb") (r "^0.12") (f (quote ("randr" "xinput" "xtest"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xkbcommon") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xkeysym") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1qj220ibsmblngli8ync06b2if61a5g9gvsz328zxxm56hand0p8") (f (quote (("xdo") ("default" "xdo")))) (s 2) (e (quote (("wayland" "dep:wayland-client" "dep:wayland-protocols-misc" "dep:wayland-protocols-wlr" "dep:wayland-protocols-plasma" "dep:tempfile") ("serde" "dep:serde")))) (r "1.65")))

(define-public crate-enigo-0.2.0-rc2 (c (n "enigo") (v "0.2.0-rc2") (d (list (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tungstenite") (r "^0.20") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-plasma") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.51") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11rb") (r "^0.12") (f (quote ("randr" "xinput" "xtest"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xkbcommon") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xkeysym") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1ch1vz82rzqk6gw2d9s1bdkcha40bsqsm37w5c565abq3ilwn9b9") (f (quote (("xdo") ("default" "xdo")))) (s 2) (e (quote (("wayland" "dep:wayland-client" "dep:wayland-protocols-misc" "dep:wayland-protocols-wlr" "dep:wayland-protocols-plasma" "dep:tempfile") ("serde" "dep:serde")))) (r "1.65")))

(define-public crate-enigo-0.2.0 (c (n "enigo") (v "0.2.0") (d (list (d (n "ashpd") (r "^0.8.1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "foreign-types-shared") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "icrate") (r "^0.1") (f (quote ("AppKit_all"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc2") (r "^0.5") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "pollster") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "reis") (r "^0.2.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-plasma") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "webbrowser") (r "^0.8") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11rb") (r "^0.13") (f (quote ("randr" "xinput" "xtest"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "xkbcommon") (r "^0.7") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "xkeysym") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0s3lh6w066l50sjvn8j4cjgf4v5h44ralalj537mf7nnrb6maila") (f (quote (("xdo") ("default" "xdo")))) (s 2) (e (quote (("x11rb" "dep:x11rb") ("wayland" "dep:wayland-client" "dep:wayland-protocols-misc" "dep:wayland-protocols-wlr" "dep:wayland-protocols-plasma" "dep:tempfile") ("serde" "dep:serde") ("libei" "dep:reis" "dep:ashpd" "dep:pollster" "dep:once_cell")))) (r "1.75")))

(define-public crate-enigo-0.2.1 (c (n "enigo") (v "0.2.1") (d (list (d (n "ashpd") (r "^0.8.1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "foreign-types-shared") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "icrate") (r "^0.1") (f (quote ("AppKit_all"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc2") (r "^0.5") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "pollster") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "reis") (r "^0.2.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-plasma") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "webbrowser") (r "^1.0") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11rb") (r "^0.13") (f (quote ("randr" "xinput" "xtest"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "xkbcommon") (r "^0.7") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "xkeysym") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "1yvh7xhcd37jg9qa9w43rj1kc62szdwm6018gm21f4jrr0gs11q0") (f (quote (("xdo") ("default" "xdo")))) (s 2) (e (quote (("x11rb" "dep:x11rb") ("wayland" "dep:wayland-client" "dep:wayland-protocols-misc" "dep:wayland-protocols-wlr" "dep:wayland-protocols-plasma" "dep:tempfile") ("serde" "dep:serde") ("libei" "dep:reis" "dep:ashpd" "dep:pollster" "dep:once_cell")))) (r "1.75")))

