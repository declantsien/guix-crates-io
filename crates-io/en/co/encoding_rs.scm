(define-module (crates-io en co encoding_rs) #:use-module (crates-io))

(define-public crate-encoding_rs-0.2.0 (c (n "encoding_rs") (v "0.2.0") (d (list (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)))) (h "16yd9a1a19f9x2g0prf2c77frsgyny7ahxq9hnj3ifhpd8rjy358")))

(define-public crate-encoding_rs-0.2.1 (c (n "encoding_rs") (v "0.2.1") (d (list (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)))) (h "0avzaik8rrf6774bkk6irlm4lsj5l069gshij2bzd3rcflzvdkja")))

(define-public crate-encoding_rs-0.2.2 (c (n "encoding_rs") (v "0.2.2") (d (list (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)))) (h "0ldx9jqdhvrb4pn21sbphgg45j7ygzvg21bbp9yag0k7zaldsffp")))

(define-public crate-encoding_rs-0.2.3 (c (n "encoding_rs") (v "0.2.3") (d (list (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)))) (h "13w9bsswh4cbmrfmpdp15xjjzxfn5fybvnaakb7nffk5vnzfpi6d")))

(define-public crate-encoding_rs-0.2.4 (c (n "encoding_rs") (v "0.2.4") (d (list (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)))) (h "10wsmhsmrnq2cbf4zclzc5dv2j61zz65147xlmy86q9d9a4zjlgn")))

(define-public crate-encoding_rs-0.3.0 (c (n "encoding_rs") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1dl9ygq74n9flmi95bm2szx8568jj6gc0c5da8001ygyk28pbmdn") (f (quote (("simd-accel" "simd"))))))

(define-public crate-encoding_rs-0.3.1 (c (n "encoding_rs") (v "0.3.1") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1s412bv1lvv28lfaaw6zrbr3q1471gwgi6369wxkvxrxa73904lh") (f (quote (("simd-accel" "simd"))))))

(define-public crate-encoding_rs-0.3.2 (c (n "encoding_rs") (v "0.3.2") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rusty-cheddar") (r "^0.3.1") (d #t) (k 1)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1sbni81whfr04mji66fxsjdki513kd5vj5nmzzfqnfhc5cp1s8ad") (f (quote (("simd-accel" "simd"))))))

(define-public crate-encoding_rs-0.4.0 (c (n "encoding_rs") (v "0.4.0") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0xzbylb3q8748q10jmmcmw6wfgzckdhkvmv9gp9i2b9lr2bg2bwn") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.5.0 (c (n "encoding_rs") (v "0.5.0") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1dy9q6f8hgdxz36cnbvgq35z9r0r23zrn2yph1fra17r4q5cl73s") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.5.1 (c (n "encoding_rs") (v "0.5.1") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0hrdnih5hh2wzcwygdgxs5kgms85kggf0qad5kvqrw1aayfm3g74") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.0 (c (n "encoding_rs") (v "0.6.0") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1in0faf3zaycvl8vq968xlbhjw97mfb9jw7xs282p55gdnvs060s") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.1 (c (n "encoding_rs") (v "0.6.1") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0ha1c63fx7icsj4nz41fvg3pcp6d8qpb9dlh2m2zh9di8ch8znvg") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.2 (c (n "encoding_rs") (v "0.6.2") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "06zsas80fzb6kjjkc7ld2ri6a6nbzxb9q2qznwz0z4dpg3flspha") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.3 (c (n "encoding_rs") (v "0.6.3") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0nq958phjcaw69fsrlm92qznlhn1k7mrkhlmr7873qyjwa3i17kc") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.4 (c (n "encoding_rs") (v "0.6.4") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0insh1h2jsn94ivcbrl45rqjagspwgvj8zknri8ab3dglwq2dn6v") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.5 (c (n "encoding_rs") (v "0.6.5") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0vh1vsr4wvjkyyaqkivijp2y5vj7c8npb922qiv52lr7a8hvfbpf") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.6 (c (n "encoding_rs") (v "0.6.6") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0m888cwp1r3gq0lxkcab1nx5bs9gciv4mgxx01c7vdij0qjiz1r4") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.7 (c (n "encoding_rs") (v "0.6.7") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0c07grrg0wfhfwyfidpg2lchwcb0sgpsjmk3dk3grdchzfmh35n8") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.8 (c (n "encoding_rs") (v "0.6.8") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "12vg5fc1nslwqcv9mlilcxsnz5zglrghrj87zzlfd2z0sjaqn7vh") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.9 (c (n "encoding_rs") (v "0.6.9") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1dn0c4fd528hm08197qzcmxn0k7w76wlfl94scp5xcmcy41ldy47") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.10 (c (n "encoding_rs") (v "0.6.10") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1wipp6m65ya5ysd0xqsaga83v2k5z16hg7x3d9szh78ff84nrkf6") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.6.11 (c (n "encoding_rs") (v "0.6.11") (d (list (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "simd") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0k2aknc32sa8y0zwp472adknmi4mrls6zvnf0n49hipbjlg1n2p0") (f (quote (("simd-accel" "simd") ("parallel-utf8" "rayon") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.7.0 (c (n "encoding_rs") (v "0.7.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0wlb3x3p65j283396520za200r7wqh79llm5wv1d75zlwbq3j2kg") (f (quote (("simd-accel" "simd") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.7.1 (c (n "encoding_rs") (v "0.7.1") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1aaiiif12yjyqlcx84yfn90la8a0z7ixyi7fwcxib0rbyamml8gm") (f (quote (("simd-accel" "simd") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.7.2 (c (n "encoding_rs") (v "0.7.2") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "13brkxybqxpk9yklrda6v32pqkmx9jh8q31kp6ka8wgvs4j0zzcq") (f (quote (("simd-accel" "simd") ("no-static-ideograph-encoder-tables"))))))

(define-public crate-encoding_rs-0.8.0 (c (n "encoding_rs") (v "0.8.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0bkp89n30nl81hg8w904hz6ysyc1jv40m579icrw4s4n2syqr166") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.1 (c (n "encoding_rs") (v "0.8.1") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0kij0d6ay9vmc9kpaywh5isdkvim23kqnymaqcfrwarcbvf5idr2") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.2 (c (n "encoding_rs") (v "0.8.2") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "012vi52xp2gkmrs3ymdcbsnkr4s5ss91mmjni4lj319llrx49x21") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.3 (c (n "encoding_rs") (v "0.8.3") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0phxpv1zf16cdkl6wid7584f0f14vggsprmcdky68z13cj2wj8h1") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.4 (c (n "encoding_rs") (v "0.8.4") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "1b73kr5yc0kskq55054wv00fdrlhrdnqq9y8m01lpbr81mmbd8c8") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.5 (c (n "encoding_rs") (v "0.8.5") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0pb0fasr1p8xxri706zk2x89nv8z9882i5kkrwgn9clmhzx8hj8n") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.6 (c (n "encoding_rs") (v "0.8.6") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0k2lqymbr9xcnlcdaflj7kqkdl224n36lcd2z3zaiiipdwnr349a") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.7 (c (n "encoding_rs") (v "0.8.7") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0ijps33y29dcnzkcxqkqv1m1qcy5qwjqd21769czi8lw2bn51991") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.8 (c (n "encoding_rs") (v "0.8.8") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0wqcqi1v8v1k7qpww107dxy0kv82zds9a6q6q4h955mdc3j4b6fc") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.9 (c (n "encoding_rs") (v "0.8.9") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "1ifymp2kavmny1qjrhbjlv279fdk9w2lhdz1gl45p6ijdjjrz9zi") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.10 (c (n "encoding_rs") (v "0.8.10") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "1r96j4v55kw1dsgxijc6rzimi1ciklb8fm64k82yznkgh864spq6") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.11 (c (n "encoding_rs") (v "0.8.11") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "0mpcjcr32swj9qx1sj58qx3gbm4waz7cvanbs8i98f81mxnqasai") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.12 (c (n "encoding_rs") (v "0.8.12") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "1syhbyas06s1krrmx66lj8zayb21dlyi4ca70fwvbammgh53a86a") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.13 (c (n "encoding_rs") (v "0.8.13") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "1gn4pij3gbplil75nmb4l2abkcpksw08vvggqi4jbsw9cr7ab3qs") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.14 (c (n "encoding_rs") (v "0.8.14") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "1xrqnplmr341cvmmjmx7m1f1c4h26w51p5y16qb2k2j3m8p1b7d6") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.15 (c (n "encoding_rs") (v "0.8.15") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "04vq4y02a92ng6b8jpdjzlvv638q90iay5s3787q4c2hsq41a9gx") (f (quote (("simd-accel" "simd") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.16 (c (n "encoding_rs") (v "0.8.16") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0wxx2xljrhd20065n9cj468iwfa9qymik0zjrj3hpb0aqr8g6d85") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.17 (c (n "encoding_rs") (v "0.8.17") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1v902qqnbd37vdq4rjvp6k05wmghrasfdcjy30gp1xpjg5f7hma1") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.18 (c (n "encoding_rs") (v "0.8.18") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1jxvcsg7zy3v5pgwdz3vwyp5v5djfq84pj0jbg3ql2s314aq5raa") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.19 (c (n "encoding_rs") (v "0.8.19") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0523vxgv570950czcyv25scvavrkb3ynzk2ghr4bry7ps4d6x43r") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.20 (c (n "encoding_rs") (v "0.8.20") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1s8jgqx26q2p6msyq0b4ik8rd0g9wszqbvf2jabgf5kpj8c0a947") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.21 (c (n "encoding_rs") (v "0.8.21") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0vgk0iigvxaim0nl30fjj102l18xylzcbs3nbdwn1lrnhw3aac7p") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.22 (c (n "encoding_rs") (v "0.8.22") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0a5wckbnpjjgxvvycahy5vw31br7x2xxgylxc0qi837ylzx073fd") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.23 (c (n "encoding_rs") (v "0.8.23") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0wg1aq26pdbczc57phc4js9x2xb3dz246i35zr22ycrj8zwn7b78") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.24 (c (n "encoding_rs") (v "0.8.24") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qmccidjpsbl93jc8s49p87ckx240jdyanbdkd4vj7278zvqq6x5") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.25 (c (n "encoding_rs") (v "0.8.25") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0w36mg6x5xzc1pw4shbfhwx6djdyblkpkd43v89ilkv2i3iwaazn") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.26 (c (n "encoding_rs") (v "0.8.26") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "10xjcafwbxvm2kfsyymxlz8wc9s4bmdj1xzlc809rxyp2yrbl6w0") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.27 (c (n "encoding_rs") (v "0.8.27") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1ylf8aw3nk735bgcvyn8jg362jcaww355ia4qvajrbs03d17dp5l") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.28 (c (n "encoding_rs") (v "0.8.28") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0rf0r99q4kgjrx22kx7pjyjg4lm21599y3ggvy3hzj2spi7h5pw0") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode"))))))

(define-public crate-encoding_rs-0.8.29 (c (n "encoding_rs") (v "0.8.29") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0in7l50j06qmzzwk0h6bs5kdlyj5zyx9ab745lrzd60v1adahkm7") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc"))))))

(define-public crate-encoding_rs-0.8.30 (c (n "encoding_rs") (v "0.8.30") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1pqirqhlj8mbaln0pv4dk65yr22clpx509ci6gdgs3r5pf5dr5kq") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc"))))))

(define-public crate-encoding_rs-0.8.31 (c (n "encoding_rs") (v "0.8.31") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0azc6rblf75vd862ymjahdfch27j1sshb7zynshrx7ywi5an6llq") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc"))))))

(define-public crate-encoding_rs-0.8.32 (c (n "encoding_rs") (v "0.8.32") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "155kf4mxq7h0mmh0jwx21mpxw7h405pp9jlanmq36h45xvs326h7") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc"))))))

(define-public crate-encoding_rs-0.8.33 (c (n "encoding_rs") (v "0.8.33") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qa5k4a0ipdrxq4xg9amms9r9pnnfn7nfh2i9m3mw0ka563b6s3j") (f (quote (("simd-accel" "packed_simd" "packed_simd/into_bits") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc"))))))

(define-public crate-encoding_rs-0.8.34 (c (n "encoding_rs") (v "0.8.34") (d (list (d (n "any_all_workaround") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0nagpi1rjqdpvakymwmnlxzq908ncg868lml5b70n08bm82fjpdl") (f (quote (("simd-accel" "any_all_workaround") ("less-slow-kanji-encode") ("less-slow-gb-hanzi-encode") ("less-slow-big5-hanzi-encode") ("fast-legacy-encode" "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode") ("fast-kanji-encode") ("fast-hanja-encode") ("fast-hangul-encode") ("fast-gb-hanzi-encode") ("fast-big5-hanzi-encode") ("default" "alloc") ("alloc")))) (r "1.36")))

