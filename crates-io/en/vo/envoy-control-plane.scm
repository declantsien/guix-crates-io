(define-module (crates-io en vo envoy-control-plane) #:use-module (crates-io))

(define-public crate-envoy-control-plane-0.1.0 (c (n "envoy-control-plane") (v "0.1.0") (d (list (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "prost-types") (r "^0.9") (d #t) (k 0)))) (h "00mp6z4i3f7qpk6wlclrrdq7p247kv3jz3c2vh92q4dclx6jx442")))

(define-public crate-envoy-control-plane-0.2.0 (c (n "envoy-control-plane") (v "0.2.0") (d (list (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "prost-types") (r "^0.9") (d #t) (k 0)) (d (n "tonic") (r "^0.6") (o #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)))) (h "0jdr4gizy9l5ljlsm9lb4v2lxcdiqzq54il4za3pz9qqsl5ksk0y") (f (quote (("grpc" "tonic/async-trait" "tonic/codegen" "tonic/prost" "tonic/transport") ("default" "grpc"))))))

(define-public crate-envoy-control-plane-0.4.0 (c (n "envoy-control-plane") (v "0.4.0") (d (list (d (n "pbjson-any") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pbjson-build-any") (r "^0.2") (o #t) (d #t) (k 1)) (d (n "pbjson-types-any") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "prost-wkt-types") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tonic") (r "^0.6") (o #t) (k 0)) (d (n "tonic-build") (r "^0.6") (o #t) (d #t) (k 1)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1zn19cvks0xkjn90sckx9hs7cx13f4x1g1rml84jznc6jgl1sphw") (f (quote (("json" "pbjson-any" "pbjson-build-any" "pbjson-types-any" "prost-wkt-types" "serde" "typetag") ("grpc" "tonic/async-trait" "tonic/codegen" "tonic/prost" "tonic/transport" "tonic-build") ("default" "grpc" "json"))))))

