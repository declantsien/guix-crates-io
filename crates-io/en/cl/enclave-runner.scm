(define-module (crates-io en cl enclave-runner) #:use-module (crates-io))

(define-public crate-enclave-runner-0.1.0-rc1 (c (n "enclave-runner") (v "0.1.0-rc1") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.1.0-rc1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "sgx-isa") (r "^0.2.0-rc1") (d #t) (k 0)) (d (n "sgxs") (r "^0.6.0-rc1") (f (quote ("crypto-openssl"))) (d #t) (k 0)))) (h "1m1bns9xflcqlnzip1gjdsydlh5wyn08gaw9nhrfbxbpydzn704n")))

(define-public crate-enclave-runner-0.1.0 (c (n "enclave-runner") (v "0.1.0") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "sgx-isa") (r "^0.2.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.6.0") (f (quote ("crypto-openssl"))) (d #t) (k 0)))) (h "1a6f7nxxa5xcns6nsqry0s7bffh6vx1q4hhr639mrx0z5h43kz89")))

(define-public crate-enclave-runner-0.2.0 (c (n "enclave-runner") (v "0.2.0") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (f (quote ("crypto-openssl"))) (d #t) (k 0)))) (h "104gj1090x84yy9di9w20qg8zk5qg7bcsnsyn1ncm124jayn7827")))

(define-public crate-enclave-runner-0.2.1 (c (n "enclave-runner") (v "0.2.1") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)))) (h "08bv2178xk5716bp6rb13yvm3na6k788rmi1qxpk6gdjhjwgpaqb") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.3.0 (c (n "enclave-runner") (v "0.3.0") (d (list (d (n "crossbeam") (r "^0.7.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.12") (d #t) (k 0)))) (h "0rrkymm4x06lz1j4h4cw90p02i5780vjiazx7lm0604y6x3d2vkb") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.4.0 (c (n "enclave-runner") (v "0.4.0") (d (list (d (n "crossbeam") (r "^0.7.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)))) (h "039fxxy5mix16696jbav1wyvri6hiv54975q18llc3gxwb13nh1h") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.4.1 (c (n "enclave-runner") (v "0.4.1") (d (list (d (n "crossbeam") (r "^0.7.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)))) (h "08fr983spjwgbvg6cn63aqwqm419qby5v2irnhhah6gr7i2yx6q1") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.5.0 (c (n "enclave-runner") (v "0.5.0") (d (list (d (n "crossbeam") (r "^0.7.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "ipc-queue") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0ifxvyndsadgwkmivsdfzd03bkg39mz49qafdzrdqfz1agghdjzl") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.5.1 (c (n "enclave-runner") (v "0.5.1") (d (list (d (n "crossbeam") (r "^0.7.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "ipc-queue") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)))) (h "05whhp7z54h2g2xkiv588xzdphywj4bag58s24jipx2v82fsd668") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

(define-public crate-enclave-runner-0.6.0 (c (n "enclave-runner") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fortanix-sgx-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "ipc-queue") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("full"))) (d #t) (k 0)))) (h "1dyhhdsfx1p1x111fb0sqj7jxfa43ry4lfcsk01k8j4n085fx49y") (f (quote (("default" "crypto-openssl") ("crypto-openssl" "openssl" "sgxs/crypto-openssl"))))))

