(define-module (crates-io rk yv rkyv) #:use-module (crates-io))

(define-public crate-rkyv-0.0.0 (c (n "rkyv") (v "0.0.0") (d (list (d (n "ahash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.0.0") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.0") (d #t) (k 2)))) (h "1k6vwy6rv4c5q5s4j9595hh8j116n29h3qm82qf2xiq12pvwjs8i") (f (quote (("std" "ahash" "cfg-if") ("specialization") ("nightly") ("more_portable") ("inline_more") ("default" "std" "inline_more") ("const_generics"))))))

(define-public crate-rkyv-0.1.0 (c (n "rkyv") (v "0.1.0") (d (list (d (n "ahash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.1.0") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.1") (d #t) (k 2)))) (h "1q2rg87sjcy5pilvffsw6ma8g6nnriy9m335ik05q4mm5d2sx9qi") (f (quote (("std" "ahash" "cfg-if") ("specialization") ("nightly") ("more_portable") ("inline_more") ("default" "std" "inline_more") ("const_generics"))))))

(define-public crate-rkyv-0.1.1 (c (n "rkyv") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.1.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "037hs7ls70i999bgbhrimyfdrrikpjv8d1ak2cn78hpi1cnzz5rj") (f (quote (("std" "seahash" "cfg-if") ("specialization") ("nightly") ("more_portable") ("inline_more") ("default" "std" "inline_more") ("const_generics"))))))

(define-public crate-rkyv-0.2.0 (c (n "rkyv") (v "0.2.0") (d (list (d (n "bytecheck") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.2.0") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.2.0") (d #t) (k 2)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1261yb4c5iwvw077sh80xbnhrim481x1fhvl9bhi94zy6cqrr10n") (f (quote (("validation" "bytecheck" "std") ("std" "seahash" "cfg-if") ("specialization") ("nightly") ("more_portable") ("long_rel_ptrs") ("inline_more") ("default" "inline_more" "std") ("const_generics"))))))

(define-public crate-rkyv-0.2.1 (c (n "rkyv") (v "0.2.1") (d (list (d (n "bytecheck") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.2.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.2.1") (d #t) (k 2)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1rralx2zmj96bph5nxmplx64xzcsxrl1lxr0zfykdd2jqk5x064a") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash" "cfg-if") ("specialization") ("nightly") ("more_portable") ("long_rel_ptrs") ("inline_more") ("default" "inline_more" "std") ("const_generics"))))))

(define-public crate-rkyv-0.3.0 (c (n "rkyv") (v "0.3.0") (d (list (d (n "bytecheck") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.3.0") (d #t) (k 0)) (d (n "rkyv_derive") (r "^0.3.0") (d #t) (k 2)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "19kv0sn89qp4gb1nqvlhnsq1rfcza3v1n5wgl18x4b95b816gqmz") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("long_rel_ptrs") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.3.1 (c (n "rkyv") (v "0.3.1") (d (list (d (n "bytecheck") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.3.1") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0ri6acl3hrfrjcbxnvkl1b3q97c385ks02bdqy5ldapgp6idx82b") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("long_rel_ptrs") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.4.0 (c (n "rkyv") (v "0.4.0") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.4.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0qn82vdix8pm6h4xcwfqg008sgnjdfgmj8ildcp7x6rv09sz5w48") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("size_64") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.4.1 (c (n "rkyv") (v "0.4.1") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.4.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0p3ghjn4agbysh779zrfbc841lr1vjs19sgd00p40j0ra2zgv9j5") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("size_64") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.4.2 (c (n "rkyv") (v "0.4.2") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.4.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0mnbry35cj5dgbiwxgihw696vcs3w8dsmafx8v28ii1gma7mr0v6") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("size_64") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.4.3 (c (n "rkyv") (v "0.4.3") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.4.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "041h7n493rpdnv2rpacf7ncjdcyjjrq7ffykrm7bmfp7iyrh3pkh") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("size_64") ("default" "std") ("const_generics"))))))

(define-public crate-rkyv-0.5.0 (c (n "rkyv") (v "0.5.0") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.5.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "126zggk6qw99h42cl6sswpfcdp30pd5wy52wf145h28bj54fkr6q") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.5.1 (c (n "rkyv") (v "0.5.1") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.5.1") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1iizbwzqr8mxg64s30b9r4ym15gc93p0ri4wi1nbvmxkvq31861g") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.5.2 (c (n "rkyv") (v "0.5.2") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.5.1") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1h8nixv6asnjk4q9n1jg04p8f078hnf8n7xzv596yw2kcsm0w5d3") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.0 (c (n "rkyv") (v "0.6.0") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "17arwg1scc59swqszwsbjw79px2g4x5m6vbq3g99lbjj80akys0d") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.1 (c (n "rkyv") (v "0.6.1") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1yhwb1rp7d8ijb55rn3dni8mygas900xp19481n9fmlpbviqhd2k") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.2 (c (n "rkyv") (v "0.6.2") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0hj8hvxgzalna8acgivy0anwjj7b88ypdq8ara79ipw4hgyzvp90") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.3 (c (n "rkyv") (v "0.6.3") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.3") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1b05ngzxaf8wzhijf4797x1qayyy9a7ic7gnwx6vdxskhkbyrj8p") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.4 (c (n "rkyv") (v "0.6.4") (d (list (d (n "bytecheck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.3") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "01y2k4ivyahq7adii7id0kpmmkaqczy524i3pwmcm81y2mpjiijr") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.5 (c (n "rkyv") (v "0.6.5") (d (list (d (n "bytecheck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "^0.1") (d #t) (k 0)) (d (n "rkyv_derive") (r "=0.6.3") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1gydbrz20iw202py770b52a914qbxvwl891yawqfvqzfwcdbcf13") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.6 (c (n "rkyv") (v "0.6.6") (d (list (d (n "bytecheck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rkyv_derive") (r "=0.6.3") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "0vamajv3bl9nw9qw1gi9yrh6qx108qarv9j56brxpvgk7kf480pi") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash" "ptr_meta/std") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.6.7 (c (n "rkyv") (v "0.6.7") (d (list (d (n "bytecheck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rkyv_derive") (r "=0.6.7") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (o #t) (d #t) (k 0)))) (h "01wsn0i8gsw958j892w8i4fyzjdsyhrh7c5zajig049kbqz5n4yb") (f (quote (("validation" "bytecheck" "std") ("strict" "rkyv_derive/strict") ("std" "seahash" "ptr_meta/std") ("specialization") ("size_64") ("default" "std" "const_generics") ("const_generics"))))))

(define-public crate-rkyv-0.7.0-pre.1 (c (n "rkyv") (v "0.7.0-pre.1") (d (list (d (n "bytecheck") (r "^0.6.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.0") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.0-pre.1") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1g7c14rkwsdk33ffj1armgpkzk9my17q9xjq580frcxas079q1jz") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "rend/std" "ptr_meta/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.0-pre.2 (c (n "rkyv") (v "0.7.0-pre.2") (d (list (d (n "bytecheck") (r "^0.6.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.0-pre.2") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "196bcnd998xfxbgl5gfwiniwajpc4r87myvn476kmfavxqh4fm97") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.0 (c (n "rkyv") (v "0.7.0") (d (list (d (n "bytecheck") (r "^0.6.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.0") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1cx3pvhz0cqr784754ydwmvgb01vvlphw76bz54r1ml6gn6ihswh") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.1 (c (n "rkyv") (v "0.7.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.1") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1gy8i0sgwmw9zy8901z7v1xnkvn7ss46kaq8p3qp71q0s20nlsr9") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.2 (c (n "rkyv") (v "0.7.2") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.2") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1fgpjz2dbxc9bi26m6lk89lg561g3gk7l2hsy7ndj6ww97z2wa3d") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.3 (c (n "rkyv") (v "0.7.3") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.3") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0rw1crqs9kbav5jvfc414qyqgrvppmn64qn1b29blihvg1qjgzx5") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.4 (c (n "rkyv") (v "0.7.4") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.4") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1qpqas9xdqizlq0n64zbvcjf378dic5flq1nn96k1cx2nph69v03") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.5 (c (n "rkyv") (v "0.7.5") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.5") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0xhzclqbdh61gn2vmhdjmm8cicddfqkdp8zk7gfnrms6yzw2vwvb") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.6 (c (n "rkyv") (v "0.7.6") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.6") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1jxcjvkpzfs80fpg92v8i77xxcj9hhf01a0w2l9a466l965x79d5") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.7 (c (n "rkyv") (v "0.7.7") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.7") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1z3lf2zx6ajizm26v4ilsbypvia7rx62lykvxy202xdlp7bf4lm2") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.8 (c (n "rkyv") (v "0.7.8") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.8") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0v8zzvhwmvdhcs36ripq6pjd25x468jsqqs0b9v8q6caw4rgaqs5") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.9 (c (n "rkyv") (v "0.7.9") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.9") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "07krnxmcawi5xx49b2hshx99r6869pbryl1463abm4a0fxa05cx3") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.10 (c (n "rkyv") (v "0.7.10") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.10") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "03hsqjrnlg2if1kx3afms6d00vvz45csl4vmll9kskw1vp3dxgyd") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.11 (c (n "rkyv") (v "0.7.11") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.11") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "12wf17lsm8g237s498wdq4wx0jw6xfy0ci64qdfs44b508s4bmgq") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.12 (c (n "rkyv") (v "0.7.12") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.12") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1cx3mi3fsz5mv49cf9nsa8czbpcjzsbar0cw5lsav047pzdyq06j") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.13 (c (n "rkyv") (v "0.7.13") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.13") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0shmyws7rmpsysmfahbbpmyk34w30cgf6il1vdm0cdl9b0pcbyfa") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.14 (c (n "rkyv") (v "0.7.14") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.14") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0zzqhf2q8kv2jlwvf2k0q0xwb9hkns9s3svlyrmnay3szhv206iy") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.15 (c (n "rkyv") (v "0.7.15") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.15") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "19q9kh72mmf5g7vxbp0nywvawgm0yyvn46cavhv5hzsp3db4r03f") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.16 (c (n "rkyv") (v "0.7.16") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.16") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0rj0f2si6rd6cq59cwgipfp29a11km3c77crxg8a738skw0cgwhp") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.17 (c (n "rkyv") (v "0.7.17") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.17") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "16hy65a4p2h6yb1bni79dv8kwdcgspyv3bg69v222f0as2al6851") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.18 (c (n "rkyv") (v "0.7.18") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.18") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1q5xjwljdqxbi5cncvifks29pm1rbhshi7c707zlannb50spcwgk") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.19 (c (n "rkyv") (v "0.7.19") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.19") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1pbl8zhshpdykzfx50k5236i9n4q3ls9r8gpm91j814qkkm23p6i") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.20 (c (n "rkyv") (v "0.7.20") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.20") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0g62fjcbj1f2bz87m4w9dq3ghp9h6lamcwihpz2232q81piv46g4") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.21 (c (n "rkyv") (v "0.7.21") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.21") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "06dgyxy49rl360mhmk4ybj2nadpk4vrkixhdshsc96sxb2gbacqq") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.22 (c (n "rkyv") (v "0.7.22") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.22") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "10x0a4np4h2n1abdasxv64a3ir0lamlyr7gd5mzm9knmf6518jpg") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.23 (c (n "rkyv") (v "0.7.23") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.22") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0lv5v3646d539zlzyjrx6zs7h17jfh907lwrbfa88cprfim55g2d") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.24 (c (n "rkyv") (v "0.7.24") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.24") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0x11jisy67p7kbn4idhdipsh2zxndk3qvkgxyd062hd88gfv4q0l") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.25 (c (n "rkyv") (v "0.7.25") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.25") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0ifxaxxrg0rif1k1h895fqiq0c8v83smbvvy42xg25q3xb34ziw6") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.26 (c (n "rkyv") (v "0.7.26") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.3.1") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.26") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0pxc4n1xx4lasbb3r0wd5g1s64vbypg19hjqv3s24wy72wn5ggv6") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.27 (c (n "rkyv") (v "0.7.27") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.27") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1pxax1g1bv6r0br4mzyyf1p4gnyvns1a2i1n8bhn1zgvayb8ch3d") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.28 (c (n "rkyv") (v "0.7.28") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.28") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1lqlr7aysk0r4b00l8fwffk8b5p7ar9cx4pl4ikvdasl50m7s7v3") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.29 (c (n "rkyv") (v "0.7.29") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.29") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "15lgvpdp15br2wdzm6banqkf903v7k8aq7cnjhnsw2y6vzjpv8s9") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.30 (c (n "rkyv") (v "0.7.30") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.30") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0217xx8sgfcx881pag51zmrg1srvkzpsg98mx1qi9mv0av5x0n37") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.31 (c (n "rkyv") (v "0.7.31") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.31") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1gd74ahr062jwflvwja1zi7y6jamsn0573nscj1b5g2pssw5b5j3") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.32 (c (n "rkyv") (v "0.7.32") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.32") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1fkvz8wgq6m38hpq3gp860bixzfslyz72hlnaq9rbvpibdcr2dwf") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.33 (c (n "rkyv") (v "0.7.33") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.33") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0pll95gddcarbp2jk3j2lfmyaghrsggfpcalnisf8i7dqzkf765z") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.34 (c (n "rkyv") (v "0.7.34") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.34") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "16gk5xbdjmlv4v93kkfhqi39i01k96m21cizcmg79bj27ral568y") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.35 (c (n "rkyv") (v "0.7.35") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.35") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1n50v8fbn6l6z6yqfxl4q99xsbx3457pnhpmwfqqgk4vyv5gbp1c") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.36 (c (n "rkyv") (v "0.7.36") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.36") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0dkw3ybgmji69f1fph5dywjas8zdq0j0nkn81l5mk1d8h4lswc2j") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.37 (c (n "rkyv") (v "0.7.37") (d (list (d (n "bytecheck") (r "~0.6.7") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.37") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1q8j7cc8hdga25naid3i5dqbk8gygg08yfq4chq2bq8z5h3ch20z") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.38 (c (n "rkyv") (v "0.7.38") (d (list (d (n "bytecheck") (r "~0.6.8") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.38") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.0") (o #t) (k 0)))) (h "19nc4yf9s9aysdv9gdirfvh6gmbs6sr4j7lx9rqrj51bxcs30yji") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.39 (c (n "rkyv") (v "0.7.39") (d (list (d (n "bytecheck") (r "~0.6.8") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "~0.3.6") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.39") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.0") (o #t) (k 0)))) (h "05gdspzw03hq6l58si4ixfj5xd27ljw6fiqksggnvn87bd4b7hnf") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.40 (c (n "rkyv") (v "0.7.40") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "~0.6.8") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.4") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.40") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.0") (o #t) (k 0)))) (h "1hsd81bkm1rvh3kl66fhnadji4h88w2pgf0yrp4cnqdav52is3y3") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("bitvec_alloc" "bitvec/alloc") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.41 (c (n "rkyv") (v "0.7.41") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "=0.6.10") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.4") (o #t) (k 0)) (d (n "rkyv_derive") (r "^0.7.41") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.0") (o #t) (k 0)))) (h "0gps7i69lpjjhkcnf601i2fmw8y0rjran2l8h7h7mw0733crwj91") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("uuid_std" "uuid/std") ("tinyvec_alloc" "tinyvec/alloc") ("strict" "rkyv_derive/strict") ("std" "alloc" "bytecheck/std" "ptr_meta/std" "rend/std") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("bitvec_alloc" "bitvec/alloc") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant") ("alloc" "hashbrown"))))))

(define-public crate-rkyv-0.7.42 (c (n "rkyv") (v "0.7.42") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "=0.6.11") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.4") (o #t) (k 0)) (d (n "rkyv_derive") (r "^0.7.41") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)))) (h "0n2wzwnghkr2ny16c08f5szbkljfqrp3s8fnnb096f011ciwh002") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("strict" "rkyv_derive/strict") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant")))) (s 2) (e (quote (("uuid" "dep:uuid" "bytecheck?/uuid") ("std" "alloc" "bytecheck?/std" "ptr_meta/std" "rend?/std" "uuid?/std") ("alloc" "hashbrown" "bitvec?/alloc" "tinyvec?/alloc"))))))

(define-public crate-rkyv-0.7.43 (c (n "rkyv") (v "0.7.43") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "=0.6.11") (o #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.4") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.43") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "smol_str") (r "^0.2") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)))) (h "1xch85gn9b0k4f9zk8sjrh4yr9gm4ry66fszifcnavznzv6rfyjj") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("strict" "rkyv_derive/strict") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant")))) (s 2) (e (quote (("uuid" "dep:uuid" "bytecheck?/uuid") ("std" "alloc" "bytecheck?/std" "ptr_meta/std" "rend?/std" "uuid?/std" "bytes?/std") ("alloc" "hashbrown" "bitvec?/alloc" "tinyvec?/alloc"))))))

(define-public crate-rkyv-0.7.44 (c (n "rkyv") (v "0.7.44") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6.11") (o #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "~0.1.3") (k 0)) (d (n "rend") (r "^0.4") (o #t) (k 0)) (d (n "rkyv_derive") (r "=0.7.44") (d #t) (k 0)) (d (n "seahash") (r "^4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "smol_str") (r "^0.2") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)))) (h "1h4rpjn15bfldwb2j3zlmv3zaksvizzl1yf6vg24yfdk5534dfjw") (f (quote (("validation" "alloc" "bytecheck" "rend/validation") ("strict" "rkyv_derive/strict") ("size_64") ("size_32") ("size_16") ("default" "size_32" "std") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("archive_le" "rend" "rkyv_derive/archive_le") ("archive_be" "rend" "rkyv_derive/archive_be") ("arbitrary_enum_discriminant" "rkyv_derive/arbitrary_enum_discriminant")))) (s 2) (e (quote (("uuid" "dep:uuid" "bytecheck?/uuid") ("std" "alloc" "bytecheck?/std" "ptr_meta/std" "rend?/std" "uuid?/std" "bytes?/std") ("alloc" "hashbrown" "bitvec?/alloc" "tinyvec?/alloc"))))))

(define-public crate-rkyv-0.8.0-alpha.1 (c (n "rkyv") (v "0.8.0-alpha.1") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "^0.8.0-pre6") (f (quote ("simdutf8"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (o #t) (k 0)) (d (n "ptr_meta") (r "^0.3.0-pre1") (k 0)) (d (n "rancor") (r "^0.1.0-pre8") (k 0)) (d (n "rend") (r "^0.5.0-pre6") (k 0)) (d (n "rkyv_derive") (r "^0.8.0-alpha.1") (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "smol_str") (r "^0.2") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)))) (h "1v93qzyyzjz5prnv0al5zydna5fajzcqjk3h490fxgypavm586gi") (f (quote (("unaligned") ("stable_layout" "rkyv_derive/stable_layout") ("pointer_width_64") ("pointer_width_32") ("pointer_width_16") ("little_endian") ("extra_traits") ("default" "little_endian" "pointer_width_32" "std" "stable_layout" "bytecheck" "bitvec" "indexmap" "smallvec" "smol_str" "arrayvec" "tinyvec" "uuid" "bytes") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("big_endian")))) (s 2) (e (quote (("uuid" "dep:uuid" "bytecheck?/uuid") ("std" "alloc" "bytecheck?/std" "bytes?/std" "ptr_meta/std" "uuid?/std") ("bytecheck" "dep:bytecheck" "alloc" "rend/bytecheck") ("alloc" "hashbrown" "bitvec?/alloc" "tinyvec?/alloc"))))))

(define-public crate-rkyv-0.8.0-alpha.2 (c (n "rkyv") (v "0.8.0-alpha.2") (d (list (d (n "arrayvec") (r "^0.7") (o #t) (k 0)) (d (n "bitvec") (r "^1.0") (o #t) (k 0)) (d (n "bytecheck") (r "^0.8.0-pre6") (f (quote ("simdutf8"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (o #t) (k 0)) (d (n "ptr_meta") (r "^0.3.0-pre1") (k 0)) (d (n "rancor") (r "^0.1.0-pre8") (k 0)) (d (n "rend") (r "^0.5.0-pre6") (k 0)) (d (n "rkyv_derive") (r "^0.8.0-alpha.2") (k 0)) (d (n "smallvec") (r "^1.7") (o #t) (k 0)) (d (n "smol_str") (r "^0.2") (o #t) (k 0)) (d (n "thin-vec") (r "^0.2.12") (o #t) (k 0)) (d (n "tinyvec") (r "^1.5") (o #t) (k 0)) (d (n "triomphe") (r "^0.1") (o #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)))) (h "10b4fqlbph8png176x246k7dbx2p6zrydw3n6ijic05zyijm44jx") (f (quote (("unaligned") ("pointer_width_64") ("pointer_width_32") ("pointer_width_16") ("little_endian") ("extra_traits") ("default" "little_endian" "pointer_width_32" "std" "bytecheck") ("copy_unsafe") ("copy" "rkyv_derive/copy") ("big_endian")))) (s 2) (e (quote (("uuid" "dep:uuid" "bytecheck?/uuid") ("triomphe" "dep:triomphe" "alloc") ("std" "alloc" "bytecheck?/std" "bytes?/std" "indexmap?/std" "ptr_meta/std" "uuid?/std") ("indexmap" "dep:indexmap" "alloc") ("bytecheck" "dep:bytecheck" "alloc" "rend/bytecheck") ("alloc" "hashbrown" "bitvec?/alloc" "tinyvec?/alloc"))))))

