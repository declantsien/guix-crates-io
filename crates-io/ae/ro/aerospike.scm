(define-module (crates-io ae ro aerospike) #:use-module (crates-io))

(define-public crate-aerospike-0.0.1 (c (n "aerospike") (v "0.0.1") (d (list (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "error-chain") (r "^0.7") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "threadpool") (r "^1.0") (d #t) (k 0)))) (h "1h0265z96480cmidwaxh83rbi0f5fdh863fhl3pd0bkm0zv8gr21")))

(define-public crate-aerospike-0.1.0 (c (n "aerospike") (v "0.1.0") (d (list (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.7") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "rustfmt") (r "^0.8") (d #t) (k 2)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "1jz5ajv0ijxa0ndkz4pqr9g9pqrwkiz13jyfwlyvklqn1hzj11f4")))

(define-public crate-aerospike-0.2.0 (c (n "aerospike") (v "0.2.0") (d (list (d (n "base64") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.4") (d #t) (k 2)) (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustfmt") (r "^0.8") (d #t) (k 2)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)) (d (n "skeptic") (r "^0.9") (d #t) (k 1)) (d (n "skeptic") (r "^0.9") (d #t) (k 2)))) (h "0gd10q3jlfjnvg8lasdyd26kvzfkjc701vjwh2xxryljqv06jgm4")))

(define-public crate-aerospike-0.2.1 (c (n "aerospike") (v "0.2.1") (d (list (d (n "base64") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.4") (d #t) (k 2)) (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustfmt") (r "^0.8") (d #t) (k 2)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "13mjw3allqh317326769xyy0z8rv6dz87vy97lf6xn1pb4kixipn")))

(define-public crate-aerospike-0.3.0 (c (n "aerospike") (v "0.3.0") (d (list (d (n "base64") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.4") (d #t) (k 2)) (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "1s9lxvw3j7rl6ivycjv8dm75ywrdgbhr6ki6zyx60n5ymzmd54ia")))

(define-public crate-aerospike-0.4.0 (c (n "aerospike") (v "0.4.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "09j09mhvcbm4akxfp0zwpdkmz9g24x5f978rbbmly6adjdw1pp2n")))

(define-public crate-aerospike-0.5.0 (c (n "aerospike") (v "0.5.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "0hjyblbim630arqq449rwb6x723riq07jcaim3njrfwmyqimhxg6")))

(define-public crate-aerospike-0.6.0 (c (n "aerospike") (v "0.6.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)))) (h "0g1v5mx130hh9m4fgrfz3p6994jyw5g5gpzs7askpp10r8y27h96")))

(define-public crate-aerospike-1.0.0 (c (n "aerospike") (v "1.0.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18dcarqb0rv7dpqnw4ikfsc2vq3blxzk7dv103pr5r6gn7ffb9pg") (f (quote (("serialization" "serde"))))))

(define-public crate-aerospike-1.1.0 (c (n "aerospike") (v "1.1.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1m8mx5ywy8mgjbirv0xwrkyi2c7fp1h871wp1c22w41mdjzwhx2f") (f (quote (("serialization" "serde"))))))

(define-public crate-aerospike-1.2.0 (c (n "aerospike") (v "1.2.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0adh99r0b0gp8v469dg91qghssx1zbalhz04q8bwgg6bwlnh0z96") (f (quote (("serialization" "serde"))))))

(define-public crate-aerospike-1.3.0 (c (n "aerospike") (v "1.3.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "scoped-pool") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0q4rd6g852n6y0w3s97jnlhi99imwa71f24c6mpcmawm7qhs96gv") (f (quote (("serialization" "serde"))))))

