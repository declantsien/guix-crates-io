(define-module (crates-io ye w- yew-stdweb) #:use-module (crates-io))

(define-public crate-yew-stdweb-0.13.0 (c (n "yew-stdweb") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "BinaryType" "Blob" "BlobPropertyBag" "console" "DedicatedWorkerGlobalScope" "Document" "DomTokenList" "DragEvent" "Element" "Event" "EventTarget" "File" "FileList" "FileReader" "FocusEvent" "Headers" "HtmlElement" "HtmlInputElement" "HtmlSelectElement" "HtmlTextAreaElement" "KeyboardEvent" "Location" "MessageEvent" "MouseEvent" "Node" "ObserverCallback" "PointerEvent" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Storage" "Text" "TouchEvent" "UiEvent" "Url" "WebSocket" "WheelEvent" "Window" "Worker" "WorkerGlobalScope" "WorkerOptions"))) (o #t) (d #t) (k 0)) (d (n "yew-macro") (r "^0.13.0") (d #t) (k 0)))) (h "0ljv6m403iicp0z7c0277b5mqimyp32s560h09pggbc0dpdhl9ys") (f (quote (("yaml" "serde_yaml") ("web_sys" "console_error_panic_hook" "futures" "gloo" "js-sys" "web-sys" "wasm-bindgen" "wasm-bindgen-futures") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.14.0 (c (n "yew-stdweb") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.59") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "BinaryType" "Blob" "BlobPropertyBag" "console" "DedicatedWorkerGlobalScope" "Document" "DomTokenList" "DragEvent" "Element" "Event" "EventTarget" "File" "FileList" "FileReader" "FocusEvent" "Headers" "HtmlElement" "HtmlInputElement" "HtmlSelectElement" "HtmlTextAreaElement" "KeyboardEvent" "Location" "MessageEvent" "MouseEvent" "Node" "ObserverCallback" "PointerEvent" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Storage" "Text" "TouchEvent" "UiEvent" "Url" "WebSocket" "WheelEvent" "Window" "Worker" "WorkerGlobalScope" "WorkerOptions"))) (o #t) (d #t) (k 0)) (d (n "yew-macro") (r "^0.14.0") (d #t) (k 0)))) (h "1sylar11awwsfd6phryv908hqz5543zrahqaky04z7mc59jhp4c2") (f (quote (("yaml" "serde_yaml") ("web_sys" "console_error_panic_hook" "futures" "gloo" "js-sys" "web-sys" "wasm-bindgen" "wasm-bindgen-futures") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.15.0 (c (n "yew-stdweb") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.15.0") (d #t) (k 0)))) (h "16slmfsbrmjyzrxn4g48jyj4l4n3n0a1l4vxl0b30x9mdpm3dm9r") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.16.0 (c (n "yew-stdweb") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.16.0") (d #t) (k 0)))) (h "06wbw8ddya3027zfzyih8bamlai7mhwj6i89lknqn5q9bjk43ryd") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.16.1 (c (n "yew-stdweb") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.16.1") (d #t) (k 0)))) (h "063qa7s0ykd5ww4gf6fxl3nmjr38rwp9sdzfhvvnr8a4yk174zjx") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.16.2 (c (n "yew-stdweb") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "~1.2.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "~1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.16.1") (d #t) (k 0)))) (h "0d6dyqpi36bgib1l3c90j8vwk9p3zp0bw2rkhzrkml2q5gzqccsh") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.17.0 (c (n "yew-stdweb") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.17.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "1bv3883xaag4ckjcl5acix0bzfwa9037r53c9m3fd8zylqrp38vw") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.17.1 (c (n "yew-stdweb") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.17.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "03ms9bzxys8975k5569p3jmwp9wcpzisivlhc6qs08yrkjskbw4z") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.17.2 (c (n "yew-stdweb") (v "0.17.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.17.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "0wzllc5nkgmyiqp51fzhv4wcx271701244w2w9x6k86ggqbb8mps") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.17.3 (c (n "yew-stdweb") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.17.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "15mihrbnz8pp46hj4nmbbw99ca6gnqr588lzz6hbrm65wrry7ag1") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("httpbin_test") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.17.4 (c (n "yew-stdweb") (v "0.17.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-nested") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.17.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "0gz3fbwnxzwsgcybm5baqflpr75brmdnl8gldv91sr1g92lpqd7l") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("httpbin_test") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

(define-public crate-yew-stdweb-0.18.0 (c (n "yew-stdweb") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^0.12") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cfg-match") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "gloo") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "ssri") (r "^5.0.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.60") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.4") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), not(cargo_web)))") (k 2)) (d (n "yew-macro") (r "^0.18.0") (f (quote ("std_web"))) (d #t) (k 0)))) (h "1202r07f8g8sp2yfni6ajqfvdj2nblya26vg96rkb3i5anin463y") (f (quote (("yaml" "serde_yaml") ("wasm_test") ("std_web" "stdweb") ("services") ("msgpack" "rmp-serde") ("httpbin_test") ("echo_server_test") ("doc_test") ("default" "services" "agent" "std_web") ("cbor" "serde_cbor") ("agent" "bincode"))))))

