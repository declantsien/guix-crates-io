(define-module (crates-io oa si oasis-build) #:use-module (crates-io))

(define-public crate-oasis-build-0.2.0 (c (n "oasis-build") (v "0.2.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.3") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "oasis-rpc") (r "^0.1") (f (quote ("resolve"))) (d #t) (k 0)) (d (n "oasis-std") (r "^0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "proc-quote") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walrus") (r "^0.8") (d #t) (k 0)))) (h "1v56z0rz7d7z3a7fjq40y8jxjkisx12a5bmw5j45l0mm257ckmaz") (y #t)))

(define-public crate-oasis-build-0.2.1 (c (n "oasis-build") (v "0.2.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.3") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "oasis-rpc") (r "^0.1") (f (quote ("resolve"))) (d #t) (k 0)) (d (n "oasis-std") (r "^0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "proc-quote") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walrus") (r "^0.8") (d #t) (k 0)))) (h "0dxgb05d5vql2g2f8hhk25lfpwr7w1ln3ilsmn8927adrdypad09") (y #t)))

(define-public crate-oasis-build-0.2.2 (c (n "oasis-build") (v "0.2.2") (d (list (d (n "colored") (r "^1.8") (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.3") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "oasis-rpc") (r "^0.1") (f (quote ("resolve"))) (d #t) (k 0)) (d (n "oasis-std") (r "^0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "proc-quote") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walrus") (r "^0.8") (d #t) (k 0)))) (h "0zq58vvcn59xw2wjvl6vf7ad98kdljf91nwh6hllvhdb3znisfvg") (y #t)))

