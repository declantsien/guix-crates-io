(define-module (crates-io xd vd xdvdfs) #:use-module (crates-io))

(define-public crate-xdvdfs-0.1.0 (c (n "xdvdfs") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "1plra67iddkb3qqf0wlh9h0c7pc7vcwginxcqwswjdccjda71vzh") (f (quote (("write" "read") ("std" "alloc" "serde/std" "itertools/use_std") ("read") ("default" "std" "read" "write") ("alloc" "serde/alloc" "itertools/use_alloc"))))))

(define-public crate-xdvdfs-0.2.0 (c (n "xdvdfs") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "0vxczbcp3fcxw1mx4j2hwhlmvvbidmaln0ql0931668jp24m592q") (f (quote (("write" "std") ("std" "alloc" "serde/std" "itertools/use_std" "arrayvec/std") ("read") ("default" "std" "read" "write") ("alloc" "serde/alloc" "itertools/use_alloc"))))))

(define-public crate-xdvdfs-0.3.0 (c (n "xdvdfs") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "16nzdz42gsy2p8w8mq6dmirh7vml1lxd2mdk22llb3khalvdyhsg") (f (quote (("write" "std") ("std" "alloc" "serde/std" "itertools/use_std" "arrayvec/std") ("read") ("default" "std" "read" "write") ("alloc" "serde/alloc" "itertools/use_alloc")))) (y #t)))

(define-public crate-xdvdfs-0.4.0 (c (n "xdvdfs") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "1k2z500zrvr0hspi7xayw327xcqj73f6z3yjxh8brq2sg0f3sdx2") (f (quote (("write" "std") ("std" "alloc" "serde/std" "itertools/use_std" "arrayvec/std") ("read") ("default" "std" "read" "write") ("alloc" "serde/alloc" "itertools/use_alloc"))))))

(define-public crate-xdvdfs-0.5.0 (c (n "xdvdfs") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "0yasknas3bs8dhhf9sw5a0iylr47xwrcjw7z6z9627kjwsr176bz") (f (quote (("write" "std") ("std" "serde/std" "itertools/use_std" "arrayvec/std") ("read") ("logging" "log") ("default" "std" "read" "write" "logging"))))))

(define-public crate-xdvdfs-0.5.1 (c (n "xdvdfs") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)))) (h "0dr6wb646b2a87kl9jirh3liq1zb8bfjfhfs9g6y7k6zp0qvjlch") (f (quote (("write" "std") ("std" "serde/std" "itertools/use_std" "arrayvec/std") ("read") ("logging" "log") ("default" "std" "read" "write" "logging"))))))

(define-public crate-xdvdfs-0.5.2 (c (n "xdvdfs") (v "0.5.2") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (k 0)))) (h "176b1r6prh41gdz4mb27l2grfcrd6bm6dgs8ad848bhfaxbcm27d") (f (quote (("write" "std") ("sync" "maybe-async/is_sync") ("std" "serde/std" "itertools/use_std" "arrayvec/std" "sha3/std") ("read") ("logging" "log") ("default" "std" "read" "write" "logging" "checksum") ("checksum" "sha3"))))))

(define-public crate-xdvdfs-0.6.0 (c (n "xdvdfs") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.7.2") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "ciso") (r "^0.1.0") (o #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (k 0)))) (h "1lzz1crcj1xwhw4d7mklm8dchfphi92vikr5hwnl1ij0z23r2l9a") (f (quote (("write" "std" "arrayvec") ("sync" "maybe-async/is_sync" "ciso/sync") ("std" "serde/std" "arrayvec/std" "sha3/std") ("read") ("logging" "log") ("default" "std" "read" "write" "logging" "checksum" "ciso_support") ("ciso_support" "write" "ciso") ("checksum" "sha3"))))))

(define-public crate-xdvdfs-0.7.0 (c (n "xdvdfs") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.7.2") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "ciso") (r "^0.2.0") (o #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "proc-bitfield") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (k 0)))) (h "15jvq1gqa0w3ljq0q58yfscf03wmwb04y1m5w8glimn0nyibzajc") (f (quote (("write" "std" "arrayvec") ("sync" "maybe-async/is_sync" "ciso/sync") ("std" "serde/std" "arrayvec/std" "sha3/std") ("read") ("logging" "log") ("default" "std" "read" "write" "logging" "checksum" "ciso_support") ("ciso_support" "write" "ciso") ("checksum" "sha3"))))))

