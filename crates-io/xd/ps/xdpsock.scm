(define-module (crates-io xd ps xdpsock) #:use-module (crates-io))

(define-public crate-xdpsock-0.1.0 (c (n "xdpsock") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "errno") (r "^0.2.7") (d #t) (k 0)) (d (n "etherparse") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.3.0-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.3.0") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1x8yr37s4d9fdzc75v6xp381khhdmwv848ikw8bhiz1jha0x6k1j")))

