(define-module (crates-io xc od xcodeproj) #:use-module (crates-io))

(define-public crate-xcodeproj-0.1.0 (c (n "xcodeproj") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "04vvixxdkgkd7pcc7yv1217h62q8cy9yhka6k0p902gq3xpp7sa7") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.1.2 (c (n "xcodeproj") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "1kwh70l4cnql1vsra6aj8z04qxwj2i97n108wdgn3as469ryxgkj") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.1.3 (c (n "xcodeproj") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "1j8k2b517428fyz1ayfb4dirzl33bzvkzmlgjn6gy93fcx0nsy1y") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.1.4 (c (n "xcodeproj") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "0mg874dglv5gffdch6ry8d2sbs9mlk2xk7k34icq9plfqxzvi60d") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.2.0 (c (n "xcodeproj") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^1.1.1") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)))) (h "0c9a6mzmp8331migy82sy21a5mw0x9179bkh9sidrsm313l2jd2s") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.2.1 (c (n "xcodeproj") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^1.1.1") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)))) (h "0ixflsf8maivyyiq6f1hv570k2k7rfhn4f6qvc9wqsnzccmdk26s") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.2.2 (c (n "xcodeproj") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^1.1.1") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)))) (h "1c5dvhnj78mgzc8viv6dnl5424v01jjn0zng093xr0dprmpgff4a") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-appender" "tracing-subscriber"))))))

(define-public crate-xcodeproj-0.2.3 (c (n "xcodeproj") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "195rn7dg5wkd9yf4p80l7i58clv1181ad6183gr0xrczl3cq2gra") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.4 (c (n "xcodeproj") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "1jvdhqq9dr0aww62y58kbpq5hp2kq53fr9r5nxz9i841054lb6pm") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.5 (c (n "xcodeproj") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "1fnyskzkdvhk76x5nvixv8k38jyxzfpxbdrsnlcx9qfhwamily4h") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.6 (c (n "xcodeproj") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "0ph5a1s4xkx45sa5lciw865ripq9c27qad1hwk8lpg41np7m8ahr") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.7 (c (n "xcodeproj") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "03lgklmcg1mk0hypa1bj8pz95zm17p2mflg7wr7csn5xdbp2rwhp") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.8 (c (n "xcodeproj") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0vmvr2q8cb1y7mhvsynf9vfvg4l52k3x4hprf4fvhpis1w2fidzp") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.9 (c (n "xcodeproj") (v "0.2.9") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "081yr5zdd23azycpg6xq5frld74gsckfdks62ls77wa88176aqjy") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.10 (c (n "xcodeproj") (v "0.2.10") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1hd324zqaigsl60ramrj9gz7jsnv0z7qzfbpa18rb6nhzf0psqpa") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.11 (c (n "xcodeproj") (v "0.2.11") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0mlg8w0xi47x3jkcwjzb96a8in2s5wndqsgzf6f8lvpx78s77amh") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.12 (c (n "xcodeproj") (v "0.2.12") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1bwm81dzigrv1cd0yzsfgrphrr4daif0wnncm33kcks2kq1d65ky") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.13 (c (n "xcodeproj") (v "0.2.13") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "17j1jx7ppxjqcfwsq4m3a13nn6zdc535jsw8244mc1ky6aahpix8") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.2.14 (c (n "xcodeproj") (v "0.2.14") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0qmf4xkawfax8rgfhf9l0slnwaiwvaw4dgi2vfyf2maipdrg6fvv") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xcodeproj-0.3.0 (c (n "xcodeproj") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "enum_variant_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (f (quote ("pretty-print" "serde"))) (d #t) (k 0)) (d (n "pest_consume") (r "^1.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0yp3griwal3vrwpzf1jbqgaixzn6dh4y8ap39kqjk7ij460mj3df") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

