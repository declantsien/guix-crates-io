(define-module (crates-io xc lo xclog) #:use-module (crates-io))

(define-public crate-xclog-0.2.0 (c (n "xclog") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "1hlhs2f49q23pikqcw112lzg8wxncwxbqlrycg7sdv9n1w6a6ivb") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.1 (c (n "xclog") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)))) (h "0wr6hn4bn2i0byr5bqj57zphnqmk6nx1nbfd1kwif4lmwbz0rfy6") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.2 (c (n "xclog") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0gp4x4xyr0acvjbabzyza4fypnm7cr906kr5k63d3kd6lismlpcn") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.3 (c (n "xclog") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0hwmxj1sir9iw6pdi2pfl96wxjy3jvzqfgplvvmdq8hy7p8m9d6b") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.4 (c (n "xclog") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0mblif81pn5ibxwzn5mx5l37alw4zzalhwq8vl2chfh4kaa8q61y") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.5 (c (n "xclog") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1djz6glj5y8pcmcqh1xp6qypwpbc16hh3sy82psd1g36iv72hd2x") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.6 (c (n "xclog") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "0qwd1w5r8s80cg1wmbpa8prqi2ri31yi59798svpz9xg10k3l1f6") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.7 (c (n "xclog") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1x3b4z560cycvh0dn24ykw93lgc0qkw57y5h2c1iwcykpd5cwapl") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.2.8 (c (n "xclog") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "101fcqrg179y3dm9g0c46qih3n85gxvmibi732dh3xrgmf7lr0vr") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.3.0 (c (n "xclog") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "059xwzqg8bmd2cn11m191270mibdb9slipj4xm18n43av23na891") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.3.1 (c (n "xclog") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1r0wvkmq6zisyadpwp85832k2b4v02r3j7ds1zc9gri6jv8gny8w") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

(define-public crate-xclog-0.3.2 (c (n "xclog") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "derive-deref-rs") (r "^0.1.1") (d #t) (k 0)) (d (n "derive_is_enum_variant") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parity-tokio-ipc") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "process-stream") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.0") (f (quote ("rt-multi-thread" "macros" "process" "fs"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)))) (h "1zrj7mnaj23wkz8gra1wxnn9nlwxknb38l4rm8wk1ql5xg3r0xbb") (f (quote (("with_tracing" "tracing" "tracing-appender" "tracing-subscriber") ("default" "with_tracing"))))))

