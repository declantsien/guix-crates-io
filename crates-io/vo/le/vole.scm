(define-module (crates-io vo le vole) #:use-module (crates-io))

(define-public crate-vole-0.1.1 (c (n "vole") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "smallbitvec") (r "^2.5.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "test-log") (r "^0.2.5") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0y43wm750qi89mknxy1v24lgfbp9mabfglvx1mjyxyjpx9qh68d4")))

