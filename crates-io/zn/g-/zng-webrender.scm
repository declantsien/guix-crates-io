(define-module (crates-io zn g- zng-webrender) #:use-module (crates-io))

(define-public crate-zng-webrender-0.62.0 (c (n "zng-webrender") (v "0.62.0") (d (list (d (n "api") (r "^0.62.0") (d #t) (k 0) (p "zng-webrender-api")) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "build-parallel") (r "^0.1.2") (d #t) (k 1)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add_assign"))) (k 0)) (d (n "etagere") (r "^0.2.6") (d #t) (k 0)) (d (n "euclid") (r "^0.22.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.15.0") (d #t) (k 0)) (d (n "glslopt") (r "^0.1.10") (d #t) (k 1)) (d (n "glyph_rasterizer") (r "^0.1.0") (k 0) (p "zng-wr-glyph-rasterizer")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "malloc_size_of") (r "^0.0.2") (d #t) (k 0) (p "zng-wr-malloc-size-of")) (d (n "malloc_size_of_derive") (r "^0.1") (d #t) (k 0)) (d (n "mozangle") (r "^0.3.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "peek-poke") (r "^0.3") (d #t) (k 0) (p "zng-peek-poke")) (d (n "plane-split") (r "^0.18") (d #t) (k 0)) (d (n "png") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg_fmt") (r "^0.4") (d #t) (k 0)) (d (n "swgl") (r "^0.1.0") (o #t) (d #t) (k 0) (p "zng-swgl")) (d (n "topological-sort") (r "^0.1") (d #t) (k 0)) (d (n "tracy-rs") (r "^0.1.2") (d #t) (k 0)) (d (n "webrender_build") (r "^0.0.2") (d #t) (k 0) (p "zng-webrender-build")) (d (n "webrender_build") (r "^0.0.2") (d #t) (k 1) (p "zng-webrender-build")))) (h "0jpg85jyd90xq41m06z4c3bcjw8mr3zqkivizpq3skf9kpa977vc") (f (quote (("sw_compositor" "swgl") ("static_freetype" "glyph_rasterizer/static_freetype") ("serialize_program" "serde" "webrender_build/serialize_program") ("replay" "api/deserialize" "ron" "serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/replay") ("profiler" "tracy-rs/enable_profiler") ("leak_checks") ("dynamic_freetype" "glyph_rasterizer/dynamic_freetype") ("display_list_stats" "api/display_list_stats") ("default" "static_freetype") ("capture" "api/serialize" "ron" "serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/capture"))))))

(define-public crate-zng-webrender-0.62.1 (c (n "zng-webrender") (v "0.62.1") (d (list (d (n "api") (r "^0.62.0") (d #t) (k 0) (p "zng-webrender-api")) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "build-parallel") (r "^0.1.2") (d #t) (k 1)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add_assign"))) (k 0)) (d (n "etagere") (r "^0.2.6") (d #t) (k 0)) (d (n "euclid") (r "^0.22.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.15.0") (d #t) (k 0)) (d (n "glslopt") (r "^0.1.10") (d #t) (k 1)) (d (n "glyph_rasterizer") (r "^0.1.0") (k 0) (p "zng-wr-glyph-rasterizer")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "malloc_size_of") (r "^0.0.2") (d #t) (k 0) (p "zng-wr-malloc-size-of")) (d (n "malloc_size_of_derive") (r "^0.1") (d #t) (k 0)) (d (n "mozangle") (r "^0.3.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "peek-poke") (r "^0.3") (d #t) (k 0) (p "zng-peek-poke")) (d (n "plane-split") (r "^0.18") (d #t) (k 0)) (d (n "png") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg_fmt") (r "^0.4") (d #t) (k 0)) (d (n "swgl") (r "^0.1.1") (o #t) (d #t) (k 0) (p "zng-swgl")) (d (n "topological-sort") (r "^0.1") (d #t) (k 0)) (d (n "tracy-rs") (r "^0.1.2") (d #t) (k 0)) (d (n "webrender_build") (r "^0.0.2") (d #t) (k 0) (p "zng-webrender-build")) (d (n "webrender_build") (r "^0.0.2") (d #t) (k 1) (p "zng-webrender-build")))) (h "1hm8ida8dyy7jp2dk84xf7pgf1l603h41c9jbl7gvwkm87ii0xw7") (f (quote (("sw_compositor" "swgl") ("static_freetype" "glyph_rasterizer/static_freetype") ("serialize_program" "serde" "webrender_build/serialize_program") ("replay" "api/deserialize" "ron" "serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/replay") ("profiler" "tracy-rs/enable_profiler") ("leak_checks") ("dynamic_freetype" "glyph_rasterizer/dynamic_freetype") ("display_list_stats" "api/display_list_stats") ("default" "static_freetype") ("capture" "api/serialize" "ron" "serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/capture"))))))

(define-public crate-zng-webrender-0.62.2 (c (n "zng-webrender") (v "0.62.2") (d (list (d (n "api") (r "^0.62.1") (d #t) (k 0) (p "zng-webrender-api")) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "build-parallel") (r "^0.1.2") (d #t) (k 1)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add_assign"))) (k 0)) (d (n "etagere") (r "^0.2.6") (d #t) (k 0)) (d (n "euclid") (r "^0.22.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.15.0") (d #t) (k 0)) (d (n "glslopt") (r "^0.1.10") (d #t) (k 1)) (d (n "glyph_rasterizer") (r "^0.1.1") (k 0) (p "zng-wr-glyph-rasterizer")) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "malloc_size_of") (r "^0.0.3") (d #t) (k 0) (p "zng-wr-malloc-size-of")) (d (n "malloc_size_of_derive") (r "^0.1") (d #t) (k 0)) (d (n "mozangle") (r "^0.3.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "peek-poke") (r "^0.3") (d #t) (k 0) (p "zng-peek-poke")) (d (n "plane-split") (r "^0.18") (d #t) (k 0)) (d (n "png") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "svg_fmt") (r "^0.4") (d #t) (k 0)) (d (n "swgl") (r "^0.1.2") (o #t) (d #t) (k 0) (p "zng-swgl")) (d (n "topological-sort") (r "^0.1") (d #t) (k 0)) (d (n "tracy-rs") (r "^0.1.2") (d #t) (k 0)) (d (n "webrender_build") (r "^0.0.3") (d #t) (k 0) (p "zng-webrender-build")) (d (n "webrender_build") (r "^0.0.3") (d #t) (k 1) (p "zng-webrender-build")))) (h "13rfm77y6yqvy7paafljgykjfq009mjjqlj3m6js3a61r21hd980") (f (quote (("static_freetype" "glyph_rasterizer/static_freetype") ("profiler" "tracy-rs/enable_profiler") ("leak_checks") ("dynamic_freetype" "glyph_rasterizer/dynamic_freetype") ("display_list_stats" "api/display_list_stats") ("default" "static_freetype")))) (s 2) (e (quote (("sw_compositor" "dep:swgl") ("serialize_program" "dep:serde" "webrender_build/serialize_program") ("replay" "api/deserialize" "dep:ron" "dep:serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/replay") ("capture" "api/serialize" "dep:ron" "dep:serde" "smallvec/serde" "etagere/serialization" "glyph_rasterizer/capture"))))))

