(define-module (crates-io zn g- zng-ext-config) #:use-module (crates-io))

(define-public crate-zng-ext-config-0.2.1 (c (n "zng-ext-config") (v "0.2.1") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.2.0") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.0") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.0") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.0") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.1") (d #t) (k 0)))) (h "03j4n1cd495054g8w98kh68prd6d6554vs60l5gsl2dha96vs1zx") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.2 (c (n "zng-ext-config") (v "0.2.2") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.2") (d #t) (k 0)))) (h "1i8lwk8l47xpzqimdmg3v6qmhlzc55675a9azdin7czld0ifvba7") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.3 (c (n "zng-ext-config") (v "0.2.3") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.1") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.3") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.3") (d #t) (k 0)))) (h "0yjv19ljli9qiwjryc2623p2hpdqb6p7c58c8k8x8y70m4zswg6m") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.4 (c (n "zng-ext-config") (v "0.2.4") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.3.0") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.0") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.2") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.4") (d #t) (k 0)))) (h "0972zahm4d30x33fnlzp9wxq5lbri8s9fa9r8z3g72hv3h86ngss") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.6 (c (n "zng-ext-config") (v "0.2.6") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.3.2") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.1") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.6") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.5") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.5") (d #t) (k 0)))) (h "0g7nmjvwbf5y55v6ci2cg60plnjz7syp90rdzdf5rwbkhz85np2g") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.7 (c (n "zng-ext-config") (v "0.2.7") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.3.3") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.1") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.3") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.7") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.5") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.5") (d #t) (k 0)))) (h "13vs0c24lwddbd1lp1c795qmsm3q25p3jcxjcx844cl3p4n34439") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.8 (c (n "zng-ext-config") (v "0.2.8") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.3.4") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.2") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.8") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.5") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.2.5") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.6") (d #t) (k 0)))) (h "1svdzfiw9vr4iwcmjnrklb9gqikcdlfgjw7npahdmvq3fxicihhd") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.9 (c (n "zng-ext-config") (v "0.2.9") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.3.5") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.3") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.9") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.7") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.3.0") (d #t) (k 0)) (d (n "zng-var") (r "^0.2.7") (d #t) (k 0)))) (h "1wv4s59p12kyqy75rsb6fdpiw8h81k4d1ma1v97vy5zq8rcx5zya") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.10 (c (n "zng-ext-config") (v "0.2.10") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.4.0") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.3") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.8") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.3.0") (d #t) (k 0)) (d (n "zng-var") (r "^0.3.0") (d #t) (k 0)))) (h "1a7ccy9zzd2zd8v69nr4yd2cldxvbcmig6kvjcj5zj005rd0m0gg") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.11 (c (n "zng-ext-config") (v "0.2.11") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.4.1") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.3.4") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.9") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.3.1") (d #t) (k 0)) (d (n "zng-var") (r "^0.3.1") (d #t) (k 0)))) (h "0ac1ib5d1fg7smfpfirm449n1vfgvx01vfi0ikf0pc8jpwyxc4p5") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.12 (c (n "zng-ext-config") (v "0.2.12") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.5.0") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.4.0") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.12") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.10") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.4.0") (d #t) (k 0)) (d (n "zng-var") (r "^0.4.0") (d #t) (k 0)))) (h "181g3nmx6a527gflxwivcisgggzb0nsr81haqzfxy1b7kv82dnhj") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.13 (c (n "zng-ext-config") (v "0.2.13") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.5.1") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.4.0") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.10") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.4.0") (d #t) (k 0)) (d (n "zng-var") (r "^0.4.0") (d #t) (k 0)))) (h "05jfn6kpkm7d0gwvk9slgyqp6vq7xlq9garxzlvcq3i8ljq4kvjz") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.14 (c (n "zng-ext-config") (v "0.2.14") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.5.2") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.4.1") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.4") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.2.11") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.6") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.4.2") (d #t) (k 0)) (d (n "zng-var") (r "^0.4.1") (d #t) (k 0)))) (h "00x9zs7xbkrpb07g41z2ah34la8b26zb0zbs67nw0alxvj1in1wi") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

(define-public crate-zng-ext-config-0.2.15 (c (n "zng-ext-config") (v "0.2.15") (d (list (d (n "atomic") (r "^0.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("indexmap"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zng-app") (r "^0.6.0") (d #t) (k 0)) (d (n "zng-app-context") (r "^0.4.2") (d #t) (k 0)) (d (n "zng-clone-move") (r "^0.2.5") (d #t) (k 0)) (d (n "zng-ext-fs-watcher") (r "^0.2.15") (f (quote ("json"))) (d #t) (k 0)) (d (n "zng-task") (r "^0.3.0") (d #t) (k 0)) (d (n "zng-txt") (r "^0.2.7") (d #t) (k 0)) (d (n "zng-unique-id") (r "^0.4.3") (d #t) (k 0)) (d (n "zng-var") (r "^0.4.2") (d #t) (k 0)))) (h "15w1msyhgbbzmdhkcli54iv2x41ncnm25sr9jhr419s7v455n7w9") (s 2) (e (quote (("yaml" "dep:serde_yaml" "zng-ext-fs-watcher/yaml") ("toml" "dep:toml" "zng-ext-fs-watcher/toml") ("ron" "dep:ron" "zng-ext-fs-watcher/ron"))))))

