(define-module (crates-io hr #{-i}# hr-id) #:use-module (crates-io))

(define-public crate-hr-id-0.1.0 (c (n "hr-id") (v "0.1.0") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0r9xkgbxdf8w5d67d8i1n5yvsmwin815rl58x5g34ayy6d0g5y6b") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex" "sha2") ("all" "destream" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.2.0 (c (n "hr-id") (v "0.2.0") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "09fr9pm5c6m7zwhkprpm03ydb98bydlsvklfgm70klhkyxdsa8lr") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex" "sha2") ("all" "destream" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.2.1 (c (n "hr-id") (v "0.2.1") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "1g6xivimvf39mwh8w2iaspi9hb4sy8vy7wjnrkxggc3smyh09xr0") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex" "sha2") ("all" "destream" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.3.0 (c (n "hr-id") (v "0.3.0") (d (list (d (n "async-hash") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "destream") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (o #t) (d #t) (k 0)))) (h "1rgff388id8h8f8n58nplj3274dhs52xksj2vdrmxcw75s8i09fb") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex") ("all" "hash" "stream")))) (y #t)))

(define-public crate-hr-id-0.3.1 (c (n "hr-id") (v "0.3.1") (d (list (d (n "async-hash") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "destream") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (d #t) (k 0)))) (h "1rxnal9km42mh0kixn2fm8xqmqmih1zfzdlp34wnxk29gsmw1445") (f (quote (("stream" "destream" "async-trait") ("serialize" "serde") ("hash" "async-hash" "hex") ("all" "hash" "stream" "serialize"))))))

(define-public crate-hr-id-0.4.0 (c (n "hr-id") (v "0.4.0") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (o #t) (d #t) (k 0)))) (h "1m2j102pafydfh2qv6kn0ww8j3mbasli4k1g7qj4nqind96cz162") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex") ("all" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.4.1 (c (n "hr-id") (v "0.4.1") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (o #t) (d #t) (k 0)))) (h "1mgy6ijyp0ilmmzfg10jaq3ggv5f1950p2as9bzyf7064bzxjkxm") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex") ("all" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.5.0 (c (n "hr-id") (v "0.5.0") (d (list (d (n "async-hash") (r "~0.5.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.5") (o #t) (d #t) (k 0)))) (h "0gyyix8zcqzf7brhjvng3lwyfqsyd4xpp9z6v2jvpmqv2x0zpn0p") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex") ("all" "hash" "stream" "serde" "uuid"))))))

(define-public crate-hr-id-0.5.1 (c (n "hr-id") (v "0.5.1") (d (list (d (n "async-hash") (r "~0.5.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1v19wxf10mjyh8r7sj166yk7bp828s9a1swb4prk863hlbnqzcq1") (f (quote (("stream" "destream" "async-trait") ("hash" "async-hash" "hex") ("all" "hash" "stream" "serde" "uuid"))))))

