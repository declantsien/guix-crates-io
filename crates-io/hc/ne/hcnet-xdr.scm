(define-module (crates-io hc ne hcnet-xdr) #:use-module (crates-io))

(define-public crate-hcnet-xdr-20.0.2 (c (n "hcnet-xdr") (v "20.0.2") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "1msl7lhhdp2w1pmj8dkjln1dxlss6ksgvfanmk0h2a671ygwryx8") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (y #t) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74.0")))

(define-public crate-hcnet-xdr-20.0.3 (c (n "hcnet-xdr") (v "20.0.3") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "17jgddmp0c7hdqv0d25n2fwz74i94pbcipn5svlcw55fimwqsg57") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (y #t) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74.0")))

(define-public crate-hcnet-xdr-20.1.0 (c (n "hcnet-xdr") (v "20.1.0") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "1xps8fqs1wf13fc8r0fmvly73hhyic3skcab59r9npqma0p0arwb") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (y #t) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74.0")))

(define-public crate-hcnet-xdr-20.0.4 (c (n "hcnet-xdr") (v "20.0.4") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "056fqh74xvl0j250v1g7q8dihc8aq7q3961hp0rzkzch29j43dk8") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (y #t) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74.0")))

(define-public crate-hcnet-xdr-20.1.1 (c (n "hcnet-xdr") (v "20.1.1") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "1vly8920nlf2r8gi9qivilx76wl4ky5pikk7kr3dgh4i6w3cc8ym") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (y #t) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74.0")))

(define-public crate-hcnet-xdr-20.0.22 (c (n "hcnet-xdr") (v "20.0.22") (d (list (d (n "arbitrary") (r "^1.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "derive" "usage" "help"))) (o #t) (k 0)) (d (n "crate-git-revision") (r "^0.0.6") (d #t) (k 1)) (d (n "escape-bytes") (r "^0.1.1") (k 0)) (d (n "hcnet-strkey") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "0vaad8nlm3p4z0bgkvxj2lkm0lliycxz9594ky0nrvrvl3z4ksl5") (f (quote (("std" "alloc") ("next") ("hex") ("default" "std" "curr") ("curr")))) (s 2) (e (quote (("serde_json" "std" "serde" "dep:serde_json") ("serde" "alloc" "dep:serde" "dep:serde_with" "hex/serde") ("cli" "std" "curr" "next" "base64" "serde" "serde_json" "dep:clap" "dep:thiserror") ("base64" "std" "dep:base64") ("arbitrary" "std" "dep:arbitrary") ("alloc" "dep:hex" "dep:hcnet-strkey" "escape-bytes/alloc")))) (r "1.74")))

