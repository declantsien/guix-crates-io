(define-module (crates-io nu nn nunny) #:use-module (crates-io))

(define-public crate-nunny-0.0.0 (c (n "nunny") (v "0.0.0") (h "12hlb5ikkwbsaw942pann3a63qn73pbkdhddhmcm8fxxayrvk1x6") (f (quote (("std" "alloc") ("default" "std") ("alloc"))))))

(define-public crate-nunny-0.1.0 (c (n "nunny") (v "0.1.0") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "14wrcqkjfyv8jzha473mb565935bw5yjqzqldrpdinjrkrd88483") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.1.1 (c (n "nunny") (v "0.1.1") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "0s993rrqj3075jas3p420c8b5a0w7d6c239kyiwmn2yh5zgd2yhz") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.1.2 (c (n "nunny") (v "0.1.2") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "063rwgh2y5k29vsym3hhhgslvq7q1sgffab8x57ycx3pdd749kkl") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.1.3 (c (n "nunny") (v "0.1.3") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "0qmd59x20ykqzjm0d3v39rjg8sfp1w00732axk2y5ndm2fcplczq") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.1.4 (c (n "nunny") (v "0.1.4") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "nonempty") (r "^0.10.0") (d #t) (k 2)) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "1xqdcf2drj4c2q1s29m9qbgl56l6fjjm72zai9vx4wvy4g1zf9zz") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.2.0 (c (n "nunny") (v "0.2.0") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "nonempty") (r "^0.10.0") (d #t) (k 2)) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "07sn42zxayjbcnhhrzp7ahw7khaw11h0p64y2bdyxp7fjnpahb2q") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

(define-public crate-nunny-0.2.1 (c (n "nunny") (v "0.2.1") (d (list (d (n "arbitrary1") (r "^1.3.2") (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "nonempty") (r "^0.10.0") (d #t) (k 2)) (d (n "proptest1") (r "^1.4.0") (o #t) (d #t) (k 0) (p "proptest")) (d (n "quickcheck1") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "schemars08") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "serde1") (r "^1.0.198") (o #t) (k 0) (p "serde")))) (h "18fqapaivli48x1q6idm6kwz0qjfp1srmqvp5m40c8639b22nchl") (f (quote (("std" "alloc" "serde1/std") ("serde" "serde1") ("schemars" "schemars08") ("quickcheck" "quickcheck1") ("proptest" "proptest1") ("default" "std") ("arbitrary" "arbitrary1")))) (s 2) (e (quote (("serde1" "dep:serde1") ("schemars08" "dep:schemars08" "std") ("quickcheck1" "dep:quickcheck1" "std") ("proptest1" "dep:proptest1" "std") ("arbitrary1" "dep:arbitrary1" "std") ("alloc" "serde1?/alloc"))))))

