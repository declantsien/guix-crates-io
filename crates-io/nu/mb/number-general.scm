(define-module (crates-io nu mb number-general) #:use-module (crates-io))

(define-public crate-number-general-0.1.0 (c (n "number-general") (v "0.1.0") (d (list (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "085b4w27z64r9ivyyrzy69940ivr727nq3pa7vpkimjc3z52z6x3") (y #t)))

(define-public crate-number-general-0.1.1 (c (n "number-general") (v "0.1.1") (d (list (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0q7h6wqbpbs774zkxblrxgkk2vhkrrh65n7gab7p7azkz37mfs0z") (y #t)))

(define-public crate-number-general-0.1.2 (c (n "number-general") (v "0.1.2") (d (list (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1ym0pzcglc9xd85p28mdkx1b5imdfzaacxbn9ikgs5vq05p42gd9") (y #t)))

(define-public crate-number-general-0.1.3 (c (n "number-general") (v "0.1.3") (d (list (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0rbv5843a9armhnkk37mkr2k49s4hd25gkn9bnfdicmc6nvpzcfh") (y #t)))

(define-public crate-number-general-0.1.4 (c (n "number-general") (v "0.1.4") (d (list (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1qk3bqyg3jcak3r2c7rk0bcqm70izsk9xbndjvai0is4mh3v3m5m") (y #t)))

(define-public crate-number-general-0.1.5 (c (n "number-general") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.1") (d #t) (k 0)) (d (n "destream_json") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0ra2c8wa9w2mcyk1hvdga1sfphvmk8qhndn55h9zvy8f9j459m6h") (y #t)))

(define-public crate-number-general-0.1.6 (c (n "number-general") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.1") (d #t) (k 0)) (d (n "destream_json") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1xmxcvpz1wv49lgiknpyr2gbl09pp7pwnvcd9gj1bl9zqlap3pp9") (y #t)))

(define-public crate-number-general-0.1.7 (c (n "number-general") (v "0.1.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.1") (d #t) (k 0)) (d (n "destream_json") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1wihgmyhiyx5z88wn6js64g23g9qy2dsgb65vzmhhp8kklc6cmxn") (y #t)))

(define-public crate-number-general-0.1.8 (c (n "number-general") (v "0.1.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.1") (d #t) (k 0)) (d (n "destream_json") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "190xm3dby2846fr016rzxayqkpss1iz705ihppvyxzdzfdk91dxl")))

(define-public crate-number-general-0.2.0 (c (n "number-general") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.2") (d #t) (k 0)) (d (n "destream_json") (r "^0.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0a8qs91crlgf0cdx4x91bbq14av1xmf7aywj0wszhc5j1rw15wyd")))

(define-public crate-number-general-0.3.0 (c (n "number-general") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r "^0.1") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "03xmknvmwjvmlmr5zkhg11zc9190xqf6nf3zbf32wbd8y2y05p0j")))

(define-public crate-number-general-0.3.1 (c (n "number-general") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1avz5a5xy9nqra7fp1mxv6ri69hgzwnx5j3carsl9l8yy69g7g28")))

(define-public crate-number-general-0.3.2 (c (n "number-general") (v "0.3.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1q8fd8d5f5dqkfsn7rpdaxf079s43igg69rmnfjq1i8s8v735942")))

(define-public crate-number-general-0.3.3 (c (n "number-general") (v "0.3.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1l283xidgxwfdscnibc3xh2rrr20wixy9m4h6q3syl5bpk48wcx2")))

(define-public crate-number-general-0.3.4 (c (n "number-general") (v "0.3.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1krr8yjva8lwf3dm5s7vd9p00kxszbdl8667lr1gfiv7x8yqcic5")))

(define-public crate-number-general-0.3.5 (c (n "number-general") (v "0.3.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qgcxnyql4zbksj1afafggbidwnpq5k3rpn9mf9z8gyggzn7xmy5")))

(define-public crate-number-general-0.3.6 (c (n "number-general") (v "0.3.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.3") (d #t) (k 0)) (d (n "destream_json") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "122rc36cksyv7215sq9vmmzsg4006s41iq36y38ilpgzw3d3j725")))

(define-public crate-number-general-0.3.7 (c (n "number-general") (v "0.3.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.4") (d #t) (k 0)) (d (n "destream_json") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0vgw81ippvzxy7h6xi37hvkf8539w6l512a12si9zkjzab4c6m0c")))

(define-public crate-number-general-0.3.8 (c (n "number-general") (v "0.3.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1gk235r1ldszg9kj4d1jk718ad50fyqxshq3dnv6bxv1lnkjr9xq")))

(define-public crate-number-general-0.3.9 (c (n "number-general") (v "0.3.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1h1drihkmn86zijd51fi45c7lz9b3rbarlyf7z0wcvrjjfm2l8r9")))

(define-public crate-number-general-0.3.10 (c (n "number-general") (v "0.3.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0c2qgqi6h1kib52jz1jcflsy7mwk3x9rvxznb40965lrl4zjqhw9")))

(define-public crate-number-general-0.3.11 (c (n "number-general") (v "0.3.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0lkm3gr0nz6gjypmxwn47x01l8sdcwpgq98zjafnwn7ds6spav00") (y #t)))

(define-public crate-number-general-0.3.12 (c (n "number-general") (v "0.3.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0p55rsvrl6fgy5qi5h84x6p4yqck4r16gnl98wqidgmkcnp6yxsq")))

(define-public crate-number-general-0.4.0 (c (n "number-general") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1ypspsajbnpqk5karmy7vnj9xj9max08ffmhkf6g7s69dl5kw2l9")))

(define-public crate-number-general-0.4.1 (c (n "number-general") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "19g2rqmc8kvw54pgllajpfn6997q40g9fpwakkaqr7qms4xgk6dc")))

(define-public crate-number-general-0.4.2 (c (n "number-general") (v "0.4.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1ndkmap1s1figlgykp6pcr7122d64l36v6qia9xwd0kblxd7cn4x") (y #t)))

(define-public crate-number-general-0.4.3 (c (n "number-general") (v "0.4.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "10q9raf1zpk5vx4ny1v8m14l6lak7mf3afdld8fika8sf97vnwzq")))

(define-public crate-number-general-0.4.4 (c (n "number-general") (v "0.4.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1j9rkvqlmk0ysn801v96z2hz2zsq0nhc1rly2shc15662vmq633y")))

(define-public crate-number-general-0.4.5 (c (n "number-general") (v "0.4.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1hz4kil55xrxvwm5rd87dh1brhpm91zaf1zvkp9hzk1qc02ra2vs")))

(define-public crate-number-general-0.4.6 (c (n "number-general") (v "0.4.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18wh6c187s30277cy4f86455pprmv114hajqwn772k6433bq212s")))

(define-public crate-number-general-0.4.7 (c (n "number-general") (v "0.4.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1yypqj0l1ksh09z1jpy984kjfpcnwwhzrizar7fdhsqivavs49ks")))

(define-public crate-number-general-0.4.8 (c (n "number-general") (v "0.4.8") (d (list (d (n "async-hash") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0zywlbwrq1l42ar4ah6a6y7ajv7yv2801gfjnak33fpycmrgzpjl")))

(define-public crate-number-general-0.5.0 (c (n "number-general") (v "0.5.0") (d (list (d (n "async-hash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0licx4j1244w2h4pc6qz910z5pv4a9271kv5j8mwjasrhhwc8hdq") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2")))) (y #t)))

(define-public crate-number-general-0.5.1 (c (n "number-general") (v "0.5.1") (d (list (d (n "async-hash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0ck5yq61cfqrqqxv3958r5laxgvs21s2lf9qxnbkc13zdn2wwl76") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2")))) (y #t)))

(define-public crate-number-general-0.5.2 (c (n "number-general") (v "0.5.2") (d (list (d (n "async-hash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "167z542wlp85xak32whgik3503b75kgbxdp740wns5vlz60h8x85") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2"))))))

(define-public crate-number-general-0.5.3 (c (n "number-general") (v "0.5.3") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0zwx5h8sjz6n7zx8p17mxbc23zziby987pscqfw0gdl3ljdwxsq6") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2")))) (y #t)))

(define-public crate-number-general-0.6.0 (c (n "number-general") (v "0.6.0") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0hqvpxa3rfjkwqxd0k7w22ddvk9py7674vp3rcv8baibqqmq45mf") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2"))))))

(define-public crate-number-general-0.7.0 (c (n "number-general") (v "0.7.0") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "10l66xkvnn3i9j7ipbvgf4h82g4y0jgl6qsdls4paycnfmr5fz0h") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2"))))))

(define-public crate-number-general-0.7.1 (c (n "number-general") (v "0.7.1") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r ">=0.1.2") (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1x8jw3d46a73vq5mi94cv286jy5qsm8fsgxfidck4i8pryma1bmq") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2"))))))

(define-public crate-number-general-0.8.0 (c (n "number-general") (v "0.8.0") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r "~0.2.2") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "069877alwh9ncc084b1193dajmhsjzwqh1ng3srcqn3xpy08zkhg") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2")))) (y #t)))

(define-public crate-number-general-0.8.1 (c (n "number-general") (v "0.8.1") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r "~0.2.2") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "12ayml6427zrd5l57sy76cb8348f2ayl9ygmmsscgxp59d5klfp3") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2") ("all" "hash" "stream")))) (y #t)))

(define-public crate-number-general-0.8.2 (c (n "number-general") (v "0.8.2") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r "~0.2.2") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0payn5727sgyrj3v2gij8bhlg9zc7d0hl6l15kf1cf2v11n8r44n") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2") ("all" "hash" "stream")))) (y #t)))

(define-public crate-number-general-0.8.3 (c (n "number-general") (v "0.8.3") (d (list (d (n "async-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "collate") (r "~0.2.2") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "destream_json") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1wbcyk84bzad3794yhs9j2mbai39cdsv171fcx919vqbsq1s1xwz") (f (quote (("stream" "destream" "futures") ("hash" "async-hash" "sha2") ("all" "hash" "stream"))))))

(define-public crate-number-general-0.9.0 (c (n "number-general") (v "0.9.0") (d (list (d (n "async-hash") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 2)) (d (n "collate") (r "~0.2.3") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1zayx3i4x7453d6xaql4g4vz4df6hl1wqpy0gvgd50yi96sr39nl") (f (quote (("stream" "destream" "futures") ("hash" "async-hash") ("all" "hash" "stream"))))))

(define-public crate-number-general-0.9.1 (c (n "number-general") (v "0.9.1") (d (list (d (n "async-hash") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 2)) (d (n "collate") (r "~0.2.3") (f (quote ("complex"))) (d #t) (k 0)) (d (n "destream") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "safecast") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1xmpnhzbmyrg8n9r39k4ffbqi0d3zss40d48bcjsrsqxw7y24xwj") (f (quote (("stream" "destream" "futures") ("hash" "async-hash") ("all" "hash" "stream"))))))

(define-public crate-number-general-0.10.0 (c (n "number-general") (v "0.10.0") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 2)) (d (n "collate") (r "^0.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "05pkci828ip5fj0br2ibiky3v76nb4pjngrvn138yb8d15f2isi0") (f (quote (("stream" "destream" "futures") ("hash" "async-hash") ("all" "hash" "serde" "stream"))))))

(define-public crate-number-general-0.11.0 (c (n "number-general") (v "0.11.0") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 2)) (d (n "collate") (r "^0.4") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0kw49xmhdk8isrvbkhc3qnhs9w8vihcdisma5l2z228ilismazkg") (f (quote (("stream" "destream" "futures") ("hash" "async-hash") ("all" "hash" "serde" "stream"))))))

(define-public crate-number-general-0.11.1 (c (n "number-general") (v "0.11.1") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 2)) (d (n "collate") (r "^0.4") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0m5bn3fzznrsj594di1s5cyskdhh6fvlwfdi9cck73bxmrwgsa6d") (f (quote (("stream" "destream" "futures") ("hash" "async-hash") ("all" "hash" "serde" "stream"))))))

