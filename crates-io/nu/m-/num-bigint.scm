(define-module (crates-io nu m- num-bigint) #:use-module (crates-io))

(define-public crate-num-bigint-0.1.32 (c (n "num-bigint") (v "0.1.32") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "0raa4xxziz755f2l1kwiyr9g1cx7ay48iq1gnyh4gs3vcs6mqra1") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.33 (c (n "num-bigint") (v "0.1.33") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1lqsmivkznp02klyp8z155yr76q91rkdiv9958rivs9g79r51i7v") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.35 (c (n "num-bigint") (v "0.1.35") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "0jayfkdm33p4zvcahlv46zdfhlzg053mpw32abf2lz0z8xw47cc8") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.36 (c (n "num-bigint") (v "0.1.36") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "0xwzxc4ah8hxdg4f0icw0sc0vwl5fm5qczkr9x7rqqr5vvz5aaay") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.37 (c (n "num-bigint") (v "0.1.37") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "1b0bha3zv4khpbvfi8v5gxwxgiy33vznbl43qfva2vg52s5q6vds") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.38 (c (n "num-bigint") (v "0.1.38") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "0df9fh94d5z7d5ilk6y2k645jagcfnnbm9glhbnnj5gl0hhq7wwg") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.39 (c (n "num-bigint") (v "0.1.39") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "11ijgvcm4vgyzzv732b13v5q0jj6v3a8xp12lir1qag50a6p8qb3") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.40 (c (n "num-bigint") (v "0.1.40") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "1gfh3zl7ja8yyfkbmcc7ipkgn5lcv20n4ycajnc0k5n0nkdzil4g") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.41 (c (n "num-bigint") (v "0.1.41") (d (list (d (n "num-integer") (r "^0.1.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "08wy51v08yjld8cdi188qsd21ffrd2a7jxdpc3r8iw0jb55lkhdx") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.42 (c (n "num-bigint") (v "0.1.42") (d (list (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-traits") (r "^0.2.0") (f (quote ("std"))) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (o #t) (d #t) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "01mj8wic7ppnhf09jwhv1k7p7hzrj3j4nms07mdd40gcb60czky4") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.43 (c (n "num-bigint") (v "0.1.43") (d (list (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-traits") (r "^0.2.0") (f (quote ("std"))) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (o #t) (d #t) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "1qskmshd66wmx7068x99fmw8xd2n8lryf0hq34z4cz4j8bm87d41") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.1.44 (c (n "num-bigint") (v "0.1.44") (d (list (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-traits") (r "^0.2.0") (f (quote ("std"))) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (o #t) (d #t) (k 0)) (d (n "rand") (r ">= 0.3.14, < 0.5.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r ">= 0.7.0, < 0.9.0") (o #t) (d #t) (k 0)))) (h "1hg80xd7vd5yqzks1h0zk2fcgqnf84m2cdj9q4cffk581nnrjf76") (f (quote (("default" "rand" "rustc-serialize"))))))

(define-public crate-num-bigint-0.2.0 (c (n "num-bigint") (v "0.2.0") (d (list (d (n "num-integer") (r "^0.1.38") (k 0)) (d (n "num-traits") (r "^0.2.4") (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0vpgr835vx79lvlqag1bnkifclz1nich5wzdsv19gp65hivsrkiy") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.1 (c (n "num-bigint") (v "0.2.1") (d (list (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.4") (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "080kdmxzdgqrrdzahlwvziy0hdvvw19shml8358lgiiflwz45f0h") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.2 (c (n "num-bigint") (v "0.2.2") (d (list (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.4") (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "067pb5af5zrf5ah4759l5rfqyyqs3f2m8pih84d1z5axhnbh6iap") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.3 (c (n "num-bigint") (v "0.2.3") (d (list (d (n "autocfg") (r "^0.1.2") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.7") (k 0)) (d (n "quickcheck") (r "^0.8") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "06hsaiahwbx98xbph5k9086r4hd2m2zzi6sx4v5k9wr4vm6g7hzr") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.4 (c (n "num-bigint") (v "0.2.4") (d (list (d (n "autocfg") (r "^0.1.2") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.7") (k 0)) (d (n "quickcheck") (r "^0.8") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "11y8v74cgqymzvkgvm4n1s2i37pwgjdfhcdf5bkmjnllbkqksfrl") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.5 (c (n "num-bigint") (v "0.2.5") (d (list (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-traits") (r "^0.2.11") (k 0)) (d (n "quickcheck") (r "^0.8") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "13g37rgsp5nrqnhcr4zysv7zn2aazxijbnkngy2kwydd43g1bwgn") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.2.6 (c (n "num-bigint") (v "0.2.6") (d (list (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-traits") (r "^0.2.11") (k 0)) (d (n "quickcheck") (r "^0.8") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "015k3wixdi4w698sappvy43pf8bvkw0f88xplmdgc3zfk2cpy309") (f (quote (("std" "num-integer/std" "num-traits/std") ("i128" "num-integer/i128" "num-traits/i128") ("default" "std"))))))

(define-public crate-num-bigint-0.3.0 (c (n "num-bigint") (v "0.3.0") (d (list (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "186glgapg71zicah3wjld3sr5kx6rkcf6rf43gxmjw39wdszrwxp") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.3.1 (c (n "num-bigint") (v "0.3.1") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1gq7cpvmzk5jixzr26fbjfayiigzh4p4vyyzbb73yqz4g9s436jy") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.3.2 (c (n "num-bigint") (v "0.3.2") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1fpyzdrkli5gsxaaal3w7yhjwfklm9i6cdz5m54gjwvm41g3s2kx") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.0 (c (n "num-bigint") (v "0.4.0") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "04k5xh7d0nxay4yfb02rj841y9g5jh45d320avi53ak221y083af") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.1 (c (n "num-bigint") (v "0.4.1") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "0j0ypw0sbkslp0h551qjr9bylhh6yal5a0539g1gdawm4x0prsbn") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.2 (c (n "num-bigint") (v "0.4.2") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "0dfm16ipm63i37bim3821p4hd5wqrwjvnc6d7cds8fgvypgnirvl") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.3.3 (c (n "num-bigint") (v "0.3.3") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1hxjawydfbnxqyqza0n2sh5sk9rslm0wsn7xdh53dwnby8rphvsz") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.3 (c (n "num-bigint") (v "0.4.3") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.11") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "0py73wsa5j4izhd39nkqzqv260r0ma08vy30ky54ld3vkhlbcfpr") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.4 (c (n "num-bigint") (v "0.4.4") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "num-integer") (r "^0.1.42") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1h6d8pd0h7grpva2pa78i7lhvl69kqdq156qcaicpmy3nmcpd3k0") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std"))))))

(define-public crate-num-bigint-0.4.5 (c (n "num-bigint") (v "0.4.5") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.46") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("i128"))) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1mrnnlyjsip3mhgn4ghbiy5lhkznvz7x438wa9rnyxngcjmsjrf1") (f (quote (("std" "num-integer/std" "num-traits/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck") ("arbitrary" "dep:arbitrary")))) (r "1.60")))

