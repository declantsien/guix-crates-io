(define-module (crates-io nu me numext-fixed-hash-hack) #:use-module (crates-io))

(define-public crate-numext-fixed-hash-hack-0.1.3 (c (n "numext-fixed-hash-hack") (v "0.1.3") (d (list (d (n "numext-fixed-hash-core") (r "= 0.1.3") (d #t) (k 0)) (d (n "proc-macro-hack") (r "~0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "~0.4") (d #t) (k 0)) (d (n "quote") (r "~0.6") (d #t) (k 0)) (d (n "syn") (r "~0.15") (f (quote ("extra-traits"))) (d #t) (k 0)))) (h "1s3i5mzcdcfhghlw439xkwdvhqm5wi9da5blc6hk0spa81v2fmw4") (f (quote (("support_serde" "numext-fixed-hash-core/support_serde") ("support_rand" "numext-fixed-hash-core/support_rand") ("support_heapsize" "numext-fixed-hash-core/support_heapsize") ("default"))))))

(define-public crate-numext-fixed-hash-hack-0.1.4 (c (n "numext-fixed-hash-hack") (v "0.1.4") (d (list (d (n "numext-fixed-hash-core") (r "= 0.1.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "~0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "~0.4") (d #t) (k 0)) (d (n "quote") (r "~0.6") (d #t) (k 0)) (d (n "syn") (r "~0.15") (f (quote ("extra-traits"))) (d #t) (k 0)))) (h "1azx6h3ll77i5vvkrh5ydmhl0arml49r9fjkv46h44jy7jpr6q3j") (f (quote (("support_serde" "numext-fixed-hash-core/support_serde") ("support_rand" "numext-fixed-hash-core/support_rand") ("support_heapsize" "numext-fixed-hash-core/support_heapsize") ("default"))))))

(define-public crate-numext-fixed-hash-hack-0.1.5 (c (n "numext-fixed-hash-hack") (v "0.1.5") (d (list (d (n "nfhash-core") (r "=0.1.5") (d #t) (k 0) (p "numext-fixed-hash-core")) (d (n "proc-macro2") (r "~1.0") (d #t) (k 0)) (d (n "quote") (r "~1.0") (d #t) (k 0)) (d (n "syn") (r "~1.0") (f (quote ("extra-traits"))) (d #t) (k 0)))) (h "1mcycyi15r3mx08lvpxcjq9bpy872q15ba6xgphlxsgk136x1pr9") (f (quote (("support_serde" "nfhash-core/support_serde") ("support_rand" "nfhash-core/support_rand") ("support_heapsize" "nfhash-core/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default" "bits_all") ("bits_all" "bits_128" "bits_160" "bits_224" "bits_256" "bits_384" "bits_512" "bits_520" "bits_1024" "bits_2048" "bits_4096") ("bits_520" "nfhash-core/bits_520") ("bits_512" "nfhash-core/bits_512") ("bits_4096" "nfhash-core/bits_4096") ("bits_384" "nfhash-core/bits_384") ("bits_256" "nfhash-core/bits_256") ("bits_224" "nfhash-core/bits_224") ("bits_2048" "nfhash-core/bits_2048") ("bits_160" "nfhash-core/bits_160") ("bits_128" "nfhash-core/bits_128") ("bits_1024" "nfhash-core/bits_1024"))))))

(define-public crate-numext-fixed-hash-hack-0.1.6 (c (n "numext-fixed-hash-hack") (v "0.1.6") (d (list (d (n "nfhash-core") (r "=0.1.6") (d #t) (k 0) (p "numext-fixed-hash-core")) (d (n "proc-macro2") (r "~1.0") (d #t) (k 0)) (d (n "quote") (r "~1.0") (d #t) (k 0)) (d (n "syn") (r "~1.0") (f (quote ("extra-traits"))) (d #t) (k 0)))) (h "0mll53z6r78r9jgmjgcl714j4b9xccpa1k4sn85hycigvk862xmd") (f (quote (("support_serde" "nfhash-core/support_serde") ("support_rand" "nfhash-core/support_rand") ("support_heapsize" "nfhash-core/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default" "bits_all") ("bits_all" "bits_128" "bits_160" "bits_224" "bits_256" "bits_384" "bits_512" "bits_520" "bits_1024" "bits_2048" "bits_4096") ("bits_520" "nfhash-core/bits_520") ("bits_512" "nfhash-core/bits_512") ("bits_4096" "nfhash-core/bits_4096") ("bits_384" "nfhash-core/bits_384") ("bits_256" "nfhash-core/bits_256") ("bits_224" "nfhash-core/bits_224") ("bits_2048" "nfhash-core/bits_2048") ("bits_160" "nfhash-core/bits_160") ("bits_128" "nfhash-core/bits_128") ("bits_1024" "nfhash-core/bits_1024"))))))

