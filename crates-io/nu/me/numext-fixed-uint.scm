(define-module (crates-io nu me numext-fixed-uint) #:use-module (crates-io))

(define-public crate-numext-fixed-uint-0.1.0 (c (n "numext-fixed-uint") (v "0.1.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heapsize") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "numext-constructor") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1q9yq0zf9dahmxhas7pfnx6z05cr9xpk1finp0kdprf2gid609s5") (f (quote (("support_serde" "serde") ("support_rand" "rand") ("support_heapsize" "heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default"))))))

(define-public crate-numext-fixed-uint-0.1.1 (c (n "numext-fixed-uint") (v "0.1.1") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heapsize") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "numext-constructor") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1f7hrhhbjw894q293836rrgk359ymzaz83xlzac3h0dvrz89xmpa") (f (quote (("support_serde" "serde") ("support_rand" "rand") ("support_heapsize" "heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default")))) (y #t)))

(define-public crate-numext-fixed-uint-0.1.2 (c (n "numext-fixed-uint") (v "0.1.2") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "heapsize") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "numext-constructor") (r "~0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "03ccahzswjkhxhiazqv05gk9vfbylzjqxghys436gv19xm5lxhjx") (f (quote (("support_serde" "serde") ("support_rand" "rand") ("support_heapsize" "heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default"))))))

(define-public crate-numext-fixed-uint-0.1.3 (c (n "numext-fixed-uint") (v "0.1.3") (d (list (d (n "numext-fixed-uint-core") (r "= 0.1.3") (d #t) (k 0)) (d (n "numext-fixed-uint-hack") (r "= 0.1.3") (d #t) (k 0)) (d (n "proc-macro-hack") (r "~0.5") (d #t) (k 0)))) (h "1raycb75n4x69x3phw8ynxapfl9lzi0xxkn7csmrgfvfv37fs53f") (f (quote (("support_serde" "numext-fixed-uint-core/support_serde" "numext-fixed-uint-hack/support_serde") ("support_rand" "numext-fixed-uint-core/support_rand" "numext-fixed-uint-hack/support_rand") ("support_heapsize" "numext-fixed-uint-core/support_heapsize" "numext-fixed-uint-hack/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default"))))))

(define-public crate-numext-fixed-uint-0.1.4 (c (n "numext-fixed-uint") (v "0.1.4") (d (list (d (n "numext-fixed-uint-core") (r "= 0.1.4") (d #t) (k 0)) (d (n "numext-fixed-uint-hack") (r "= 0.1.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "~0.5") (d #t) (k 0)))) (h "0n9jczjkpcacbzx9m27ksc71knhfvbrkmgzd737zd6cmljk8mww4") (f (quote (("support_serde" "numext-fixed-uint-core/support_serde" "numext-fixed-uint-hack/support_serde") ("support_rand" "numext-fixed-uint-core/support_rand" "numext-fixed-uint-hack/support_rand") ("support_heapsize" "numext-fixed-uint-core/support_heapsize" "numext-fixed-uint-hack/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default"))))))

(define-public crate-numext-fixed-uint-0.1.5 (c (n "numext-fixed-uint") (v "0.1.5") (d (list (d (n "nfuint-core") (r "=0.1.5") (d #t) (k 0) (p "numext-fixed-uint-core")) (d (n "nfuint-hack") (r "=0.1.5") (d #t) (k 0) (p "numext-fixed-uint-hack")))) (h "13xb9c29py90br7qsyragm8mh91dac5jhfb0vlb01fdx8zxzq3pn") (f (quote (("support_serde" "nfuint-core/support_serde" "nfuint-hack/support_serde") ("support_rand" "nfuint-core/support_rand" "nfuint-hack/support_rand") ("support_heapsize" "nfuint-core/support_heapsize" "nfuint-hack/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default" "bits_all") ("bits_all" "bits_128" "bits_160" "bits_224" "bits_256" "bits_384" "bits_512" "bits_520" "bits_1024" "bits_2048" "bits_4096") ("bits_520" "nfuint-core/bits_520" "nfuint-hack/bits_520") ("bits_512" "nfuint-core/bits_512" "nfuint-hack/bits_512") ("bits_4096" "nfuint-core/bits_4096" "nfuint-hack/bits_4096") ("bits_384" "nfuint-core/bits_384" "nfuint-hack/bits_384") ("bits_256" "nfuint-core/bits_256" "nfuint-hack/bits_256") ("bits_224" "nfuint-core/bits_224" "nfuint-hack/bits_224") ("bits_2048" "nfuint-core/bits_2048" "nfuint-hack/bits_2048") ("bits_160" "nfuint-core/bits_160" "nfuint-hack/bits_160") ("bits_128" "nfuint-core/bits_128" "nfuint-hack/bits_128") ("bits_1024" "nfuint-core/bits_1024" "nfuint-hack/bits_1024"))))))

(define-public crate-numext-fixed-uint-0.1.6 (c (n "numext-fixed-uint") (v "0.1.6") (d (list (d (n "nfuint-core") (r "=0.1.6") (d #t) (k 0) (p "numext-fixed-uint-core")) (d (n "nfuint-hack") (r "=0.1.6") (d #t) (k 0) (p "numext-fixed-uint-hack")))) (h "0w3xdiv2fps4rzr0arb9hbb18cbzydr50v36k80d32fmjrpwfs3c") (f (quote (("support_serde" "nfuint-core/support_serde" "nfuint-hack/support_serde") ("support_rand" "nfuint-core/support_rand" "nfuint-hack/support_rand") ("support_heapsize" "nfuint-core/support_heapsize" "nfuint-hack/support_heapsize") ("support_all" "support_rand" "support_heapsize" "support_serde") ("default" "bits_all") ("bits_all" "bits_128" "bits_160" "bits_224" "bits_256" "bits_384" "bits_512" "bits_520" "bits_1024" "bits_2048" "bits_4096") ("bits_520" "nfuint-core/bits_520" "nfuint-hack/bits_520") ("bits_512" "nfuint-core/bits_512" "nfuint-hack/bits_512") ("bits_4096" "nfuint-core/bits_4096" "nfuint-hack/bits_4096") ("bits_384" "nfuint-core/bits_384" "nfuint-hack/bits_384") ("bits_256" "nfuint-core/bits_256" "nfuint-hack/bits_256") ("bits_224" "nfuint-core/bits_224" "nfuint-hack/bits_224") ("bits_2048" "nfuint-core/bits_2048" "nfuint-hack/bits_2048") ("bits_160" "nfuint-core/bits_160" "nfuint-hack/bits_160") ("bits_128" "nfuint-core/bits_128" "nfuint-hack/bits_128") ("bits_1024" "nfuint-core/bits_1024" "nfuint-hack/bits_1024"))))))

