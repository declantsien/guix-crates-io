(define-module (crates-io nu cl nucleo-f401re) #:use-module (crates-io))

(define-public crate-nucleo-f401re-0.1.0 (c (n "nucleo-f401re") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.5.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-abort") (r "^0.3.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.2.0") (f (quote ("rt" "stm32f401"))) (k 0)))) (h "1xx1d40gl482cfzpfmawncydy1czvvdvjz2p598i3n55j6l3ik39") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.1.1 (c (n "nucleo-f401re") (v "0.1.1") (d (list (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "hd44780-driver") (r "^0.2.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-abort") (r "^0.3.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.2.5") (f (quote ("rt" "stm32f401"))) (k 0)))) (h "12394mbg6mdb15hfx4rsiv31xq7757b2ck02678s8w0kmgjn2whn") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.2.0 (c (n "nucleo-f401re") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "^0.4.2") (f (quote ("timer-queue"))) (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "hd44780-driver") (r "^0.3.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "segment-display") (r "^0.1.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.5.0") (f (quote ("rt" "stm32f401"))) (k 0)) (d (n "tpa2016d2") (r "^0.1.1") (d #t) (k 2)))) (h "03qrz04bg9ag2qd7b1sfdfr9pcwq9wrxzbz6z3bi3zfswzllkxrh") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.2.1 (c (n "nucleo-f401re") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "^0.4.2") (f (quote ("timer-queue"))) (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "hd44780-driver") (r "^0.3.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "segment-display") (r "^0.1.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.5.0") (f (quote ("rt" "stm32f401"))) (k 0)) (d (n "tpa2016d2") (r "^0.2.0") (d #t) (k 2)))) (h "1q31r5is1p2p271vx5kbzcj03ii497mq56kkfxw3lz70k34qjc85") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.3.0 (c (n "nucleo-f401re") (v "0.3.0") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "hd44780-driver") (r "^0.3.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "segment-display") (r "^0.1.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.7.0") (f (quote ("rt" "stm32f401"))) (k 0)) (d (n "tpa2016d2") (r "^0.2.0") (d #t) (k 2)))) (h "1s11j2h348hi298bs5533kz4x4lc6vkz553phv22g0mcaffqmrrs") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.4.0 (c (n "nucleo-f401re") (v "0.4.0") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "^0.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "epd-waveshare") (r "^0.4.0") (f (quote ("graphics"))) (d #t) (k 2)) (d (n "hd44780-driver") (r "^0.3.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "segment-display") (r "^0.1.0") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.8.0") (f (quote ("rt" "stm32f401"))) (k 0)) (d (n "tpa2016d2") (r "^0.2.0") (d #t) (k 2)))) (h "0pn8m9b9g78cxk2vs36ifm34y5r5hdnsswsff3kxb3bnzpbdrwr7") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-nucleo-f401re-0.4.1 (c (n "nucleo-f401re") (v "0.4.1") (d (list (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "epd-waveshare") (r "^0.4") (f (quote ("graphics"))) (d #t) (k 2)) (d (n "hd44780-driver") (r "^0.3.0") (d #t) (k 2)) (d (n "nb") (r "^0.1") (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "segment-display") (r "^0.1") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.8") (f (quote ("rt" "stm32f401"))) (d #t) (k 0)) (d (n "tpa2016d2") (r "^0.2.0") (d #t) (k 2)))) (h "1vbjlp10hc6hagfywx4mv3nw8g711h28dfn4g9l3n8v7lwrr7mmp")))

