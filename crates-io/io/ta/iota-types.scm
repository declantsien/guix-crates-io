(define-module (crates-io io ta iota-types) #:use-module (crates-io))

(define-public crate-iota-types-1.0.0-rc.1 (c (n "iota-types") (v "1.0.0-rc.1") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.15.2") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.1") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (k 0)))) (h "0p9rpd9wj26lafx5qymw4bl43502yrjlskdcpzczf24i0ykbw3f2") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.2 (c (n "iota-types") (v "1.0.0-rc.2") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.15.2") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.1") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (k 0)))) (h "1z6wdg90qhxdp96cqgjbvj659diy7vsrv7hxji5f57byx6hfh60m") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.3 (c (n "iota-types") (v "1.0.0-rc.3") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.3") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.15.3") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.1") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (k 0)))) (h "1mw5mak1w1lamqzmwgp5w5lv5sk7ypdrxf0q8ij8i14wjh74dkpc") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.4 (c (n "iota-types") (v "1.0.0-rc.4") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.3") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.15.3") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.2") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (k 0)))) (h "0pgn312ac71cb76lg7d2860h80bsrpjvgw9r3z7bpji3r9nvbag0") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.5 (c (n "iota-types") (v "1.0.0-rc.5") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.13.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "getset") (r "^0.1.2") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash" "inline-more" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "iota-crypto") (r "^0.15.3") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.3") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.92") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1.10") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (k 0)) (d (n "num_cpus") (r "^1.15.0") (k 2)))) (h "15hg4jn3brvwwnm6v017dh6hz4iws0j8sqh37kiplkzd4glhph2a") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto" "getset" "serde_repr")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.6 (c (n "iota-types") (v "1.0.0-rc.6") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.13.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "getset") (r "^0.1.2") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash" "inline-more" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "iota-crypto") (r "^0.15.3") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.3") (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.92") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1.10") (o #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (k 2)))) (h "0by3qb13x5y4jylkknggf9db20ywdbgd856mwpmvya8q6wma65xa") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto" "getset" "serde_repr")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("dto" "serde" "dep:serde_json"))))))

(define-public crate-iota-types-1.0.0-rc.7 (c (n "iota-types") (v "1.0.0-rc.7") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.13.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "getset") (r "^0.1.2") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash" "inline-more" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "iota-crypto") (r "^0.15.3") (f (quote ("ed25519" "blake2b" "ternary_encoding"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "packable") (r "^0.7.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.5.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1.11") (o #t) (k 0)) (d (n "iota-pow") (r "^1.0.0-rc.4") (k 2)) (d (n "num_cpus") (r "^1.15.0") (k 2)))) (h "0lkvamswxmz3vidsmamd02lf6xfhcbdl5ckgrfdjb3a7j7dimm9i") (f (quote (("std") ("default" "api" "block" "std") ("block") ("api" "block" "dto" "getset" "serde_repr")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("dto" "serde" "dep:serde_json"))))))

