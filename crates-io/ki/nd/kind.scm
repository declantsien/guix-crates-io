(define-module (crates-io ki nd kind) #:use-module (crates-io))

(define-public crate-kind-0.1.0 (c (n "kind") (v "0.1.0") (d (list (d (n "kind_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "schemars") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7") (f (quote ("macros" "runtime-async-std-rustls" "postgres" "chrono" "json" "uuid"))) (o #t) (k 0)) (d (n "utoipa") (r "^4.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "0y7xci3v7hq4883gz9z3mjck85h2y5j9wg8rhjy7m16y9f4fccdp") (f (quote (("default" "serde" "jsonschema")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("jsonschema" "dep:schemars")))) (r "1.65")))

(define-public crate-kind-0.2.0 (c (n "kind") (v "0.2.0") (d (list (d (n "kind_proc") (r "^0.2.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "schemars") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7") (f (quote ("macros" "runtime-async-std-rustls" "postgres" "chrono" "json" "uuid"))) (o #t) (k 0)) (d (n "utoipa") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "1naqbjkdq443d94zgc1xwpqgcxqa3rz2d4fyz1dxrp7a21qsf8la") (f (quote (("default" "serde" "jsonschema" "openapi")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("openapi" "dep:utoipa") ("jsonschema" "dep:schemars")))) (r "1.65")))

(define-public crate-kind-0.3.0 (c (n "kind") (v "0.3.0") (d (list (d (n "kind_proc") (r "^0.3.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "schemars") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7") (f (quote ("macros" "runtime-async-std-rustls" "postgres" "chrono" "json" "uuid"))) (o #t) (k 0)) (d (n "utoipa") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wa8174m6nf1s05cy3ka78ymbih7paajva1cgny4g9z30by4aw9r") (f (quote (("default" "serde" "jsonschema" "openapi")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("openapi" "dep:utoipa") ("jsonschema" "dep:schemars")))) (r "1.65")))

(define-public crate-kind-1.0.0 (c (n "kind") (v "1.0.0") (d (list (d (n "kind_proc") (r "^1.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "schemars") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7") (f (quote ("macros" "runtime-async-std-rustls" "postgres" "chrono" "json" "uuid"))) (o #t) (k 0)) (d (n "utoipa") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "17pjd26jjiszxvv5aq9s3whnn5albj160wg5rqrhb626cp38nnbf") (f (quote (("default" "serde" "jsonschema" "openapi")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde" "dep:serde_json") ("openapi" "dep:utoipa") ("jsonschema" "dep:schemars")))) (r "1.65")))

