(define-module (crates-io ki ca kicad-api-rs) #:use-module (crates-io))

(define-public crate-kicad-api-rs-0.0.1 (c (n "kicad-api-rs") (v "0.0.1") (d (list (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "licensesnip") (r "^1.6.0") (d #t) (k 2)) (d (n "nng") (r "^1.0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "prettyplease") (r "^0.2.16") (d #t) (k 1)) (d (n "proc-macro2") (r "^1.0.76") (d #t) (k 1)) (d (n "protobuf") (r "^3.3.0") (d #t) (k 0)) (d (n "protobuf-codegen") (r "^3.3.0") (d #t) (k 1)) (d (n "quick-error") (r "^2.0.1") (d #t) (k 0)) (d (n "quote") (r "^1.0.35") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 1)) (d (n "syn") (r "^2.0.48") (d #t) (k 1)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 1)))) (h "1yzwbpc2v7id9y3dxw52hhxkzirc02b85b6w8sav0x6a9hk3yrv2")))

