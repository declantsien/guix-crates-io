(define-module (crates-io ki ss kiss3d) #:use-module (crates-io))

(define-public crate-kiss3d-0.1.0 (c (n "kiss3d") (v "0.1.0") (d (list (d (n "gl") (r "*") (d #t) (k 0)) (d (n "nalgebra") (r "*") (d #t) (k 0)) (d (n "ncollide") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0kv3b13c9qfndxib303wbzb00wdach4zpchd4mxbc794xrvaajc4")))

(define-public crate-kiss3d-0.1.1 (c (n "kiss3d") (v "0.1.1") (d (list (d (n "freetype-rs") (r "*") (d #t) (k 0)) (d (n "gl") (r "*") (d #t) (k 0)) (d (n "glfw") (r "*") (d #t) (k 0)) (d (n "image") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "nalgebra") (r "*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "*") (d #t) (k 0)) (d (n "num") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "1w17w8xx3z9anwbr1krm82qq6jcd3v0nhzkdxiflzbyvvakvw51z")))

(define-public crate-kiss3d-0.1.2 (c (n "kiss3d") (v "0.1.2") (d (list (d (n "freetype-rs") (r "*") (d #t) (k 0)) (d (n "gl") (r "*") (d #t) (k 0)) (d (n "glfw") (r "*") (d #t) (k 0)) (d (n "image") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "nalgebra") (r "*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "*") (d #t) (k 0)) (d (n "num") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0f1k02xw82m7k5j2yd00yn4cx31szpq6q1b22irjyi6wfny646mr")))

(define-public crate-kiss3d-0.1.3 (c (n "kiss3d") (v "0.1.3") (d (list (d (n "freetype-rs") (r "*") (d #t) (k 0)) (d (n "gl") (r "*") (d #t) (k 0)) (d (n "glfw") (r "*") (d #t) (k 0)) (d (n "image") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "nalgebra") (r "*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "*") (d #t) (k 2)) (d (n "num") (r "*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)))) (h "17gvhhl162ifvjjaxbri250psv0bpnw0harz078m0ms878z926wl")))

(define-public crate-kiss3d-0.1.4 (c (n "kiss3d") (v "0.1.4") (d (list (d (n "freetype-rs") (r "*") (d #t) (k 0)) (d (n "gl") (r "*") (d #t) (k 0)) (d (n "glfw") (r "*") (d #t) (k 0)) (d (n "image") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "nalgebra") (r "*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "*") (d #t) (k 2)) (d (n "num") (r "*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)))) (h "14ch7a7ni67wmxz8kgk7fmpp2di0r7vqz234kgzbarwyvf8pn146")))

(define-public crate-kiss3d-0.1.5 (c (n "kiss3d") (v "0.1.5") (d (list (d (n "freetype-rs") (r "0.5.*") (d #t) (k 0)) (d (n "gl") (r "0.5.*") (d #t) (k 0)) (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.5.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.2.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.2.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "1n59yqn5gfkpahvip4cn3i920sqp5qzlwdsmqy0wmyxaacdn0lqx")))

(define-public crate-kiss3d-0.3.0 (c (n "kiss3d") (v "0.3.0") (d (list (d (n "freetype-rs") (r "0.5.*") (d #t) (k 0)) (d (n "gl") (r "0.5.*") (d #t) (k 0)) (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.6.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.2.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.2.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "1xm546pa5y2b66k2xghnm2618waw0l48n6sb4gjbxld1y25484cx")))

(define-public crate-kiss3d-0.4.0 (c (n "kiss3d") (v "0.4.0") (d (list (d (n "freetype-rs") (r "0.5.*") (d #t) (k 0)) (d (n "gl") (r "0.5.*") (d #t) (k 0)) (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.3.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.3.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "15b76k4iy8x6l9f5pb1dmrf1p1rlskwsdilfl9dp6inc2bc8dkw6")))

(define-public crate-kiss3d-0.4.1 (c (n "kiss3d") (v "0.4.1") (d (list (d (n "freetype-rs") (r "0.5.*") (d #t) (k 0)) (d (n "gl") (r "0.5.*") (d #t) (k 0)) (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.3.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.3.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "08r55ydd3si70gmrslpb3rc6yxq6pxshbxwfph7yh5xg2w9iwsqg")))

(define-public crate-kiss3d-0.4.2 (c (n "kiss3d") (v "0.4.2") (d (list (d (n "freetype-rs") (r "0.5.*") (d #t) (k 0)) (d (n "gl") (r "0.5.*") (d #t) (k 0)) (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.4.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.4.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "11vgm1mfd3l5wsdb83f477l9rc29aqpy31d6dz84bz19ns4gj3mi")))

(define-public crate-kiss3d-0.5.0 (c (n "kiss3d") (v "0.5.0") (d (list (d (n "freetype-rs") (r "0.9.*") (d #t) (k 0)) (d (n "gl") (r "0.6.*") (d #t) (k 0)) (d (n "glfw") (r "0.8.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.4.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.4.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)))) (h "0328gxs82xqph6n08ffnz7m1k7kvzdqbc2vsbc2wbfa9qkms6c3g")))

(define-public crate-kiss3d-0.6.0 (c (n "kiss3d") (v "0.6.0") (d (list (d (n "freetype-rs") (r "0.9.*") (d #t) (k 0)) (d (n "gl") (r "0.6.*") (d #t) (k 0)) (d (n "glfw") (r "0.8.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.5.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.5.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)))) (h "0jisv916rvs3p11xgkj87qlihs01ni3f3n4lj079q59slp65jl2p")))

(define-public crate-kiss3d-0.7.0 (c (n "kiss3d") (v "0.7.0") (d (list (d (n "freetype-rs") (r "0.9.*") (d #t) (k 0)) (d (n "gl") (r "0.6.*") (d #t) (k 0)) (d (n "glfw") (r "0.8.*") (d #t) (k 0)) (d (n "image") (r "0.6.*") (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "ncollide_procedural") (r "0.5.*") (d #t) (k 0)) (d (n "ncollide_transformation") (r "0.5.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)))) (h "1wm9ai297rwhnbxrjq7llma87xr0gbmpc5aqrzn11964xqs04ikq")))

(define-public crate-kiss3d-0.8.0 (c (n "kiss3d") (v "0.8.0") (d (list (d (n "freetype-rs") (r "^0.9") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "image") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.11") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.6") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.6") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "1qhkz8m5mywzrrardsmy68na2r8rlnm1pmcsxwgqc80355bnyqjd")))

(define-public crate-kiss3d-0.9.0 (c (n "kiss3d") (v "0.9.0") (d (list (d (n "freetype-rs") (r "^0.9") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "image") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.12") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.7") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "1n8ds1ksf09zmz2viq0s0m99cbn2pgiprqyzzzyqrdswyn5cs73g")))

(define-public crate-kiss3d-0.10.0 (c (n "kiss3d") (v "0.10.0") (d (list (d (n "freetype-rs") (r "^0.9") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "image") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.8") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.8") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "0mzmw47w0229l55lb447ll9y93is29jbbslz99603ywzi7xn10d3")))

(define-public crate-kiss3d-0.10.1 (c (n "kiss3d") (v "0.10.1") (d (list (d (n "freetype-rs") (r "^0.9") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "image") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.8") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.8") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "11q3v7sxv6j229fv8vhw19rwx522gz14qmazkhw7d0lvvjfknxwv")))

(define-public crate-kiss3d-0.11.0 (c (n "kiss3d") (v "0.11.0") (d (list (d (n "freetype-rs") (r "^0.13") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.15") (d #t) (k 0)) (d (n "image") (r "^0.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.8") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.8") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "1r9flbwal58l9ry4ny5nan71igx3cz3kih9j6hx75f8453wjy4v7")))

(define-public crate-kiss3d-0.12.0 (c (n "kiss3d") (v "0.12.0") (d (list (d (n "freetype-rs") (r "^0.16") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.8") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.8") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "052rpy34dc1a27x5k6wn03rrzvp2savvzmxksmzapr7gf7aglshk")))

(define-public crate-kiss3d-0.13.0 (c (n "kiss3d") (v "0.13.0") (d (list (d (n "freetype") (r "^0.3") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14") (d #t) (k 0)) (d (n "ncollide_procedural") (r "^0.9") (d #t) (k 0)) (d (n "ncollide_transformation") (r "^0.9") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)))) (h "0k12xzl2pbky13frpniy2r4b452j7lh95qg0cnspws4m228pfj32")))

(define-public crate-kiss3d-0.14.0 (c (n "kiss3d") (v "0.14.0") (d (list (d (n "freetype") (r "^0.3") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.15") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)))) (h "1rz0zj3x0xcym7zr0c025j8nr9gds5ydh7cwgh9g6vivmmm0r2rd")))

(define-public crate-kiss3d-0.15.0 (c (n "kiss3d") (v "0.15.0") (d (list (d (n "freetype") (r "^0.3") (d #t) (k 0)) (d (n "gl") (r "^0.6") (d #t) (k 0)) (d (n "glfw") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.16") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)))) (h "1bcclzsvyfwmjnsd231scxr8n5zlqvxdw0j2hwlcgmfzqqv7i71y")))

(define-public crate-kiss3d-0.16.0 (c (n "kiss3d") (v "0.16.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.17") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0g39xf45j8y6mgxli1lwsyp0287bkrdqd03h9gjw8m0564ypp7j0")))

(define-public crate-kiss3d-0.16.1 (c (n "kiss3d") (v "0.16.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.17") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0dmb1xspq90anvilbq6bc1ii1j3mqw5w84dzrh6j01ikndlm8yxw")))

(define-public crate-kiss3d-0.16.2 (c (n "kiss3d") (v "0.16.2") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.17") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "17lwz30faahy5ra2vj61hskcbvxn3jfkyxrixv9nv2ap56qd13ii")))

(define-public crate-kiss3d-0.16.3 (c (n "kiss3d") (v "0.16.3") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.17") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0d2a07h8mzfi1s42wig3iwk4y0x4amg4824gjf1xj33f3kmbs4gz")))

(define-public crate-kiss3d-0.16.4 (c (n "kiss3d") (v "0.16.4") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.17") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1hdlbliwqi01hji3h6qmvw9vprq4qk7pj13afsdbq7fwd4sp90p7")))

(define-public crate-kiss3d-0.17.0 (c (n "kiss3d") (v "0.17.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "12xjjn32kjgh0jaj0xzhccll28asa9ca8ld993cgjhv1p52182h1")))

(define-public crate-kiss3d-0.17.1 (c (n "kiss3d") (v "0.17.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.10.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rusttype") (r "^0.6") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0r2w9kg166cmq8i5hqwnh3fll4pwyyxy8k1nxfbqyjyclkjs4qm3")))

(define-public crate-kiss3d-0.18.0 (c (n "kiss3d") (v "0.18.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.11") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.21") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.18") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rusttype") (r "^0.7") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "102cffj9qilqab5kfh95ix8d3lbnhpycvp0s3kk47gcgfa8hsbqq")))

(define-public crate-kiss3d-0.19.0 (c (n "kiss3d") (v "0.19.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.11") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.21") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.19") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rusttype") (r "^0.7") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0zgd48vyiq0ka81j0j4b62wb5a4v8r334a813baxzwqhsipbnkpr")))

(define-public crate-kiss3d-0.20.0 (c (n "kiss3d") (v "0.20.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.11") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.21") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.63") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.19") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rusttype") (r "^0.7") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "00jrgxxc4dqxz4pvrfgp2k2889crma1q6jaxk2dhyz7ryvs0m47x") (f (quote (("conrod" "kiss3d_conrod"))))))

(define-public crate-kiss3d-0.20.1 (c (n "kiss3d") (v "0.20.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.11") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.21") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.63") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.19") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rusttype") (r "^0.7") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "04fiis1a585v8dxzi7fppg3798vk5av65raw4vqjg7zqypwy3fpj") (f (quote (("conrod" "kiss3d_conrod"))))))

(define-public crate-kiss3d-0.21.0 (c (n "kiss3d") (v "0.21.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gl") (r "^0.11") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.21") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.63") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.20") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.20") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rusttype") (r "^0.7") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0hrf743jhma5v00v4nhnzd5vhn35bx2a1anmz0n3g795mpnj60fc") (f (quote (("conrod" "kiss3d_conrod"))))))

(define-public crate-kiss3d-0.22.0 (c (n "kiss3d") (v "0.22.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.63") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.21") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "04g8niagk9knbv359fqfvirjf2jfcn67dxhwl107x2jjmsls9mdb") (f (quote (("conrod" "kiss3d_conrod")))) (y #t)))

(define-public crate-kiss3d-0.22.1 (c (n "kiss3d") (v "0.22.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.64") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.21") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "12m6bn8zkj8q7niq14zv425yh36raarmnx8y00azn5rz99fk6wwq") (f (quote (("conrod" "kiss3d_conrod"))))))

(define-public crate-kiss3d-0.23.0 (c (n "kiss3d") (v "0.23.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "kiss3d_conrod") (r "^0.64") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.22") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.22") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "15ic9svxyyz6dlb9k1kwwkypgm6xpw1vlymqbmiq0xxrg1l1wbmd") (f (quote (("conrod" "kiss3d_conrod"))))))

(define-public crate-kiss3d-0.24.0 (c (n "kiss3d") (v "0.24.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.69") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.23") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0i00j71pcgf41h3bhmnywvklm9r4vfkifbsns0lfg9dq1crrrm1i") (f (quote (("conrod" "conrod_core")))) (y #t)))

(define-public crate-kiss3d-0.24.1 (c (n "kiss3d") (v "0.24.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.69") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.23") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1kn5mkh9ghf04wkrwkdyqjf9xbgqj8px64vkv891l1l4xjy8xbr9") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.25.0 (c (n "kiss3d") (v "0.25.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.69") (f (quote ("stdweb"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"asmjs\")))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("stdweb"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.24") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.24") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb") (r "^0.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "asmjs-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-emscripten") (k 0)) (d (n "stdweb-derive") (r "^0.5") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1p8m3xb1l4sxxd7a14sl1q20p0izac9w2np13vlvlxdwwsjlmpnp") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.26.0 (c (n "kiss3d") (v "0.26.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.70") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "glow") (r "^0.6") (d #t) (k 0)) (d (n "glutin") (r "^0.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.22") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.25") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.25") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1g0xczlw43nn5zh2vpy9i3c7fqjgz9m3ynh6sc06pfs6k8pf5dwh") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.27.0 (c (n "kiss3d") (v "0.27.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "glow") (r "^0.6") (d #t) (k 0)) (d (n "glutin") (r "^0.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.26") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.26") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1m1dnhybjmyya5szfifdksxc7zagnki6qw33rynida9n5c9n1az5") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.28.0 (c (n "kiss3d") (v "0.28.0") (d (list (d (n "bitflags") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "conrod_core") (r ">=0.71.0, <0.72.0") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "glow") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "glutin") (r ">=0.25.0, <0.26.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "instant") (r ">=0.1.0, <0.2.0") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "nalgebra") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "ncollide2d") (r ">=0.26.0, <0.27.0") (d #t) (k 2)) (d (n "ncollide3d") (r ">=0.26.0, <0.27.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 2)) (d (n "rusttype") (r ">=0.8.0, <0.9.0") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r ">=0.2.0, <0.3.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r ">=0.3.0, <0.4.0") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1iwhpvhgdckxzyp6zdnx41n3zpm714zbj8np5hj22dqlpks1zqz3") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.29.0 (c (n "kiss3d") (v "0.29.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "glow") (r "^0.6") (d #t) (k 0)) (d (n "glutin") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.27") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.27") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "113byz0cfa3rd264fw94qxl9zfk2nr0jp4n7gsqhi2l022lfwg7a") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.30.0 (c (n "kiss3d") (v "0.30.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "glow") (r "^0.7") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.28") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.28") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "11f8xkchng534x2mpamb45n4mxg6n25a86s5zyqd04aq5d1kjsq6") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.31.0 (c (n "kiss3d") (v "0.31.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "glow") (r "^0.7") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (f (quote ("rand"))) (d #t) (k 2)) (d (n "ncollide2d") (r "^0.29") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.29") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0217pmqizf3ijzhfr7s005rnnfykrjh6v4skzr2h21qvpvpszwd8") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.32.0 (c (n "kiss3d") (v "0.32.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "glow") (r "^0.7") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (f (quote ("rand"))) (d #t) (k 2)) (d (n "ncollide2d") (r "^0.32") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.9") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "042ckx7bcd5bjyb68iqczl7cqfw8z78qzxf9gig2fnp2md6wyicq") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.33.0 (c (n "kiss3d") (v "0.33.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "glow") (r "^0.11") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (f (quote ("rand"))) (d #t) (k 2)) (d (n "ncollide2d") (r "^0.32") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.8.3") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0vbxpgfc034z6scqrbdxm0h394mjp0nv2zdjmyv5cyq6f4cf7sv2") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.34.0 (c (n "kiss3d") (v "0.34.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "glow") (r "^0.11") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("rand"))) (d #t) (k 2)) (d (n "ncollide2d") (r "^0.33") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.33") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.8.3") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1b4iqwag260g1jj6qs22if2h9iwillhafxbxv5slnqa5bsvdlks7") (f (quote (("conrod" "conrod_core"))))))

(define-public crate-kiss3d-0.35.0 (c (n "kiss3d") (v "0.35.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conrod_core") (r "^0.71") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "glow") (r "^0.11") (d #t) (k 0)) (d (n "glutin") (r "^0.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("rand"))) (d #t) (k 2)) (d (n "ncollide2d") (r "^0.33") (d #t) (k 2)) (d (n "ncollide3d") (r "^0.33") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusttype") (r "^0.8.3") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "KeyEvent" "KeyboardEvent" "MouseEvent" "WheelEvent" "Touch" "TouchEvent" "TouchList" "HtmlCanvasElement" "HtmlElement" "Window" "UiEvent" "Event" "EventTarget" "Element" "DomRect"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1afazsd2l6hh3k1bfgq1d417acf250i1nyimklrsbbacaqs6knnz") (f (quote (("conrod" "conrod_core"))))))

