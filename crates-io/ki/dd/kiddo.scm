(define-module (crates-io ki dd kiddo) #:use-module (crates-io))

(define-public crate-kiddo-0.1.0 (c (n "kiddo") (v "0.1.0") (d (list (d (n "aligned") (r "^0.3.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1ycxrkjwq9cjvbdzvm7ixw2l5kqx8vsxc4nq5xnn1bh5h0gh344i") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.1 (c (n "kiddo") (v "0.1.1") (d (list (d (n "aligned") (r "^0.3.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1h1cq12xipk2mjfddkjshi82qzdw4zp41bf9p98p1gj9lvvhkgv5") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.2 (c (n "kiddo") (v "0.1.2") (d (list (d (n "aligned") (r "^0.3.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "0qnbjmyhydm5zxpvp5v7vp9rpfkaixkcrfql276i8yh4q4bhfvr9") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.4 (c (n "kiddo") (v "0.1.4") (d (list (d (n "aligned") (r "^0.3.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "09ay7yzlfvyni1ag894gri86kihbymm41yvv9mg3ynj3qq009rvk") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.5 (c (n "kiddo") (v "0.1.5") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1rsrckhy0ba1k8vg2da2frr207pq71vj59dgbfrpjsmkswakinb6") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.6 (c (n "kiddo") (v "0.1.6") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "17nn1n4pkvrrxbra38dr2fh199yh17p2ac4zszr3dayb6hdm7v0c") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.1.7 (c (n "kiddo") (v "0.1.7") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1m2iadmwwirpibr4fjhralikhl0fxnjxgj2plkyj2vafz139p7cd") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.0 (c (n "kiddo") (v "0.2.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "177nj2cildg0pg85q67wx7y7b7f38mhrlncrinxzjzzy9sz64csh") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.1 (c (n "kiddo") (v "0.2.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "0af32cb8kxicy0qkhg1a1vmb7lbbdv4h02jpwq50blc17ccx4nmn") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.2 (c (n "kiddo") (v "0.2.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "0n0l1bn610z7gkfr052c91hc4a92n37k6r5j9wvp1lf6y717yl2b") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.3 (c (n "kiddo") (v "0.2.3") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1m36pgdgp2skwa64qa61ywpi0k7yhb2vd66sykmnfik9xyr4a2d8") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.4 (c (n "kiddo") (v "0.2.4") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "14y24gvvfg4hij459z81712v181d7si06fnnyw5i8s3n6295q2pw") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-0.2.5 (c (n "kiddo") (v "0.2.5") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)))) (h "1wbk9l1spg82yk0bm94361zr26czzznf976cdkw24pzwkkkd5kh6") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-kiddo-2.0.0-beta.0 (c (n "kiddo") (v "2.0.0-beta.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0.1") (d #t) (k 0)) (d (n "az") (r "^1.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fixed") (r "^1.19.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "rkyv") (r "^0.7.39") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "1ppw67m2ia9s6grz3x0inprpj7xwbnqida2czd0q37jlbyikvykj") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with")))) (y #t)))

(define-public crate-kiddo-2.0.0-beta.1 (c (n "kiddo") (v "2.0.0-beta.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0.1") (d #t) (k 0)) (d (n "az") (r "^1.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fixed") (r "^1.19.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "rkyv") (r "^0.7.39") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "00b41wpyrjwnwxnqfgh1s54h5n7dsh7g9k87gh7q2bvr0fvh3l41") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with"))))))

(define-public crate-kiddo-2.0.0-beta.2 (c (n "kiddo") (v "2.0.0-beta.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0.1") (d #t) (k 0)) (d (n "az") (r "^1.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fixed") (r "^1.19.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "rkyv") (r "^0.7.39") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0dlm1yrk7sd3vbd64kcpsc8ih6kv8wxik070wix17h4g65n5smih") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.3 (c (n "kiddo") (v "2.0.0-beta.3") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0.1") (d #t) (k 0)) (d (n "az") (r "^1.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "fixed") (r "^1.19.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "rkyv") (r "^0.7.39") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0wacwlxlqass46j7ywlqifx5dxfqwxhxi5gha0nfm2z9gbl8m3nq") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.4 (c (n "kiddo") (v "2.0.0-beta.4") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0m0v9aymsbg7w9z83jhfaywlsmff9nr1n4m9f3pzm08hznb0s7ja") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.5 (c (n "kiddo") (v "2.0.0-beta.5") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0ff9bwl5z8xcmlf89v3a53qczp81mzs84cx1d6w9vvd1drkq1yqm") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.6 (c (n "kiddo") (v "2.0.0-beta.6") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0wcvkp56r5197rcssv6arggfqai41b0f6jjcnfir3n0hng2zvxkm") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.7 (c (n "kiddo") (v "2.0.0-beta.7") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "1z5334bcgcg3w7fivlvk2nqzsp58l21isrz5ps2aijxlviywvd11") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.8 (c (n "kiddo") (v "2.0.0-beta.8") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0ikapbv47y6il6d3niajqxzdlfbqxjai60agpbgppd9cai2hmpjf") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0-beta.9 (c (n "kiddo") (v "2.0.0-beta.9") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "0b6h761gj156n9x1zf9s2fz047jizymlmx827i04297nzch3szzq") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.0 (c (n "kiddo") (v "2.0.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "1rzm8grlbk913jl3xdsp2d9spnaa35v4irhcfpm41f066n3ljm15") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.1 (c (n "kiddo") (v "2.0.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "094bccd996aq6k3bqxhplgjyshifl6wrxybly4646wn5s0j4y2c5") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.0.2 (c (n "kiddo") (v "2.0.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "1k7p683596ii6i0rx70m9blz65vm2lzca7pdwqghixbg4k532zwq") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.1.0 (c (n "kiddo") (v "2.1.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)))) (h "15jrd9ggyajscqlny2b5cy66r3l2pz9hcjn0l74xb339h5a3fqp8") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-2.1.1 (c (n "kiddo") (v "2.1.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)))) (h "0dbq1l3hwjy3qjqdxxyrrbmvgw525lcc6kgl57fm4z9bkxm8ai7k") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-3.0.0-beta.1 (c (n "kiddo") (v "3.0.0-beta.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)))) (h "0gjj99dvlv1sjzsdb4h9ayh3ck2h3fi4472fbkrbh8awy56xnwgk") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-3.0.0-beta.2 (c (n "kiddo") (v "3.0.0-beta.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytesize") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.7") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "ubyte") (r "^0.10.3") (d #t) (k 0)))) (h "0y109hnzdkvfdiikyyhrd6vm6jds98r7qdch7za6pqlp9rg23f0g") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde") ("immutable"))))))

(define-public crate-kiddo-3.0.0-beta.4 (c (n "kiddo") (v "3.0.0-beta.4") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytesize") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.7") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "ubyte") (r "^0.10.3") (d #t) (k 0)))) (h "0b08zjb5fh3x97il7p1g0iy2kvj5x71hgxvnjr9q7yxcg9hs4pqn") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde") ("immutable")))) (y #t)))

(define-public crate-kiddo-2.1.2 (c (n "kiddo") (v "2.1.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "aligned") (r "^0.4") (d #t) (k 2)) (d (n "aligned-array") (r "^1.0") (d #t) (k 0)) (d (n "az") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1.0.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1.2") (d #t) (k 0)) (d (n "fixed") (r "^1.24") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "min-max-heap") (r "^1.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)))) (h "0xri9nmj1p6fd4x03vklbrcw5dmpl1xm6a9zqgasr3nng2kmw74f") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde"))))))

(define-public crate-kiddo-3.0.0-rc.1 (c (n "kiddo") (v "3.0.0-rc.1") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "init_with") (r "^1.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.69") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "ubyte") (r "^0.10.3") (d #t) (k 0)))) (h "1sslfnvj20ri3ssrf53zh4lva19n00qmjxx6pj1wmv99b4flab00") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("default"))))))

(define-public crate-kiddo-3.0.0 (c (n "kiddo") (v "3.0.0") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "init_with") (r "^1.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.69") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "ubyte") (r "^0.10.3") (d #t) (k 0)))) (h "12m2psi4pmjrzk1w4la618h211g7xlwc4nqdqw85d2mpxir8501m") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("default"))))))

(define-public crate-kiddo-4.0.0 (c (n "kiddo") (v "4.0.0") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "init_with") (r "^1.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.70") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "ubyte") (r "^0.10.3") (d #t) (k 0)))) (h "04wl46a0ba1nlar0xlsjghyj5dsvdyajywy2jhjvpj9c1pwjjabp") (f (quote (("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("default"))))))

(define-public crate-kiddo-4.1.0 (c (n "kiddo") (v "4.1.0") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "init_with") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ubyte") (r "^0.10") (d #t) (k 0)))) (h "0bx7lqmb2wh1wa3il15v5wkwhbj2x02j8r45b3wlcfb4629cmgnb") (f (quote (("test_utils" "rand" "rand_chacha" "rayon") ("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde/derive" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("global_allocate") ("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-subscriber"))))))

(define-public crate-kiddo-4.1.1 (c (n "kiddo") (v "4.1.1") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "init_with") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ubyte") (r "^0.10") (d #t) (k 0)))) (h "1qjh29mrimigwi5z26q346vb43c2jsa9l0lq2bfv50wh8sb6m794") (f (quote (("test_utils" "rand" "rand_chacha" "rayon") ("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde/derive" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("global_allocate") ("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-subscriber"))))))

(define-public crate-kiddo-4.2.0 (c (n "kiddo") (v "4.2.0") (d (list (d (n "az") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "divrem") (r "^1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "elapsed") (r "^0.1") (d #t) (k 0)) (d (n "fixed") (r "^1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib-ng-compat"))) (k 2)) (d (n "generator") (r "^0.7") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits"))) (o #t) (d #t) (k 0)) (d (n "init_with") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "memmap") (r "^0.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("default" "proc-macro"))) (d #t) (k 2)) (d (n "radians") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "copy_unsafe" "size_64"))) (o #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ubyte") (r "^0.10") (d #t) (k 0)))) (h "16hgjakmiygx2jajqff5l8pfvdd4m5r39j6dsad93in73fg8sbwx") (f (quote (("test_utils" "rand" "rand_chacha" "rayon") ("simd") ("serialize_rkyv" "rkyv") ("serialize" "serde" "serde/derive" "serde_derive" "serde_with" "fixed/serde") ("immutable") ("global_allocate") ("f16" "half") ("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "tracing-subscriber"))))))

