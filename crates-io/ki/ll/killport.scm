(define-module (crates-io ki ll killport) #:use-module (crates-io))

(define-public crate-killport-0.5.0 (c (n "killport") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^2.0.10") (d #t) (k 2)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0s9ciyfsbn76qda12z59k1lvh9xvyr26zay0s1xprvxbs4gxrbr5")))

(define-public crate-killport-0.6.0 (c (n "killport") (v "0.6.0") (d (list (d (n "assert_cmd") (r "^2.0.10") (d #t) (k 2)) (d (n "cargo-deb") (r "^1.42.2") (d #t) (k 1)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0rywf0m4x5mlhfylfl9zl66l3cfdc1q0896l6m85dv3mi4j21kxk")))

(define-public crate-killport-0.7.0 (c (n "killport") (v "0.7.0") (d (list (d (n "assert_cmd") (r "^2.0.10") (d #t) (k 2)) (d (n "cargo-deb") (r "^1.42.2") (d #t) (k 1)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0w4vrxvj3dmnrflk13kwmv6wrfxbmqks35r4j596rh332n9ndhi5")))

(define-public crate-killport-0.8.0 (c (n "killport") (v "0.8.0") (d (list (d (n "assert_cmd") (r "^2.0.10") (d #t) (k 2)) (d (n "cargo-deb") (r "^1.42.2") (d #t) (k 1)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "1lfd5k6pggdr4r1zya4mfi692gdnwyk3xz8wi75x1zqn7cg7nwnx")))

(define-public crate-killport-0.9.0 (c (n "killport") (v "0.9.0") (d (list (d (n "assert_cmd") (r "^2.0.10") (d #t) (k 2)) (d (n "cargo-deb") (r "^1.42.2") (d #t) (k 1)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" "Win32_Networking_WinSock" "Win32_System_Diagnostics_ToolHelp"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07lbbs1b5albjn829kq7cz77mcchnvz8r1x409bida167949fqag")))

(define-public crate-killport-0.9.1 (c (n "killport") (v "0.9.1") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.3.19") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.7.0") (d #t) (k 2)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" "Win32_Networking_WinSock" "Win32_System_Diagnostics_ToolHelp"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01rxbmg14awm2z8a7jhdq00jx73706908f015dkqnybnh5z7yq4h")))

(define-public crate-killport-0.9.2 (c (n "killport") (v "0.9.2") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.3.19") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libproc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.7.0") (d #t) (k 2)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" "Win32_Networking_WinSock" "Win32_System_Diagnostics_ToolHelp"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lzj89apsm99j1l07gy8xaj7j39m57mxlhlm8ahi5av77rhwzcaa")))

(define-public crate-killport-1.0.0 (c (n "killport") (v "1.0.0") (d (list (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "bollard") (r "^0.16.1") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "libproc") (r "^0.14.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "nix") (r "^0.28.0") (f (quote ("signal"))) (d #t) (k 0)) (d (n "procfs") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" "Win32_Networking_WinSock" "Win32_System_Diagnostics_ToolHelp"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cjyfgszbs295n8sa097ih08pg15r36yh1cy1nd5v1s1pw41kkzb")))

