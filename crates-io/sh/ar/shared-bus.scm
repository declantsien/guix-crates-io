(define-module (crates-io sh ar shared-bus) #:use-module (crates-io))

(define-public crate-shared-bus-0.1.0 (c (n "shared-bus") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (d #t) (k 0)))) (h "0fq8k6rd7pj8qzfiv5hmcslz0xzga3gk6v2b4xfqmyf22yzf3gdx") (f (quote (("std") ("cortexm" "cortex-m"))))))

(define-public crate-shared-bus-0.1.1 (c (n "shared-bus") (v "0.1.1") (d (list (d (n "cortex-m") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (d #t) (k 0)))) (h "1h0xj9h7dipqcr225ni45xg0x0772lc62fvfs8rh80590x36230p") (f (quote (("std") ("cortexm" "cortex-m"))))))

(define-public crate-shared-bus-0.1.2 (c (n "shared-bus") (v "0.1.2") (d (list (d (n "cortex-m") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (d #t) (k 0)))) (h "12rwzxcg8a8lg16kp8hp1wjar92mrd6qamd5gjzsiag05lfqd58q") (f (quote (("std") ("docsrs") ("cortexm" "cortex-m"))))))

(define-public crate-shared-bus-0.1.3 (c (n "shared-bus") (v "0.1.3") (d (list (d (n "cortex-m") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.4.0") (d #t) (k 0)))) (h "034v79dwa340n0jgkjzfjqkmczasgmk7kqz9jzb6p6wfcgxf94qb") (f (quote (("std") ("docsrs") ("cortexm" "cortex-m"))))))

(define-public crate-shared-bus-0.1.4 (c (n "shared-bus") (v "0.1.4") (d (list (d (n "cortex-m") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.4.0") (d #t) (k 2)))) (h "1c4ay699abih7vnrdp48l8b20xahp6znx7fcq0i8h21ryd9jlygd") (f (quote (("std") ("docsrs") ("cortexm" "cortex-m"))))))

(define-public crate-shared-bus-0.2.0-alpha.1 (c (n "shared-bus") (v "0.2.0-alpha.1") (d (list (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "0barbardxsi6mzslxx04vnwczpla23skrc4dr3cahm8wy9gxy3lf") (f (quote (("std" "once_cell"))))))

(define-public crate-shared-bus-0.2.0 (c (n "shared-bus") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "0hdm6i8xnnn9d1hcr9s2pp92xrdgi0n8sjdjq2lxwaajhd0f2hkz") (f (quote (("std" "once_cell"))))))

(define-public crate-shared-bus-0.2.1 (c (n "shared-bus") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "0fk0gny8vhrhi6cmspi82z7n59rrgyivw7cxknbrnhya9ibrydlr") (f (quote (("std" "once_cell"))))))

(define-public crate-shared-bus-0.2.2 (c (n "shared-bus") (v "0.2.2") (d (list (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "158bm6sh46hqblyyg222pcncyj7521p7gg1s1qzys8sv84l09dkq") (f (quote (("std" "once_cell"))))))

(define-public crate-shared-bus-0.2.3 (c (n "shared-bus") (v "0.2.3") (d (list (d (n "atomic-polyfill") (r "^0.1.6") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "nb") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "xtensa-lx") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "1n1s3g1b39vnzcgin3a33whgxfqpzvm7hnkqy0dymngir1y9nh5w") (f (quote (("xtensa" "xtensa-lx" "spin") ("std" "once_cell"))))))

(define-public crate-shared-bus-0.2.4 (c (n "shared-bus") (v "0.2.4") (d (list (d (n "atomic-polyfill") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.8") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "nb") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "xtensa-lx") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "01c0jc7mbg00apipiz1djdjj064sgwpdzwhbmxqksb4j2w40bgf5") (f (quote (("xtensa" "xtensa-lx" "spin") ("std" "once_cell") ("eh-alpha" "embedded-hal-alpha")))) (s 2) (e (quote (("cortex-m" "dep:cortex-m" "atomic-polyfill"))))))

(define-public crate-shared-bus-0.2.5 (c (n "shared-bus") (v "0.2.5") (d (list (d (n "atomic-polyfill") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "nb") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "xtensa-lx") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "1wk5awg2nldl8n5rm06nikbjpfam1ilfjr6666aqn75r82547y05") (f (quote (("xtensa" "xtensa-lx" "spin") ("std" "once_cell") ("eh-alpha" "embedded-hal-alpha")))) (s 2) (e (quote (("cortex-m" "dep:cortex-m" "atomic-polyfill"))))))

(define-public crate-shared-bus-0.3.0 (c (n "shared-bus") (v "0.3.0") (d (list (d (n "atomic-polyfill") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-mock") (r "^0.9") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (o #t) (d #t) (k 0)) (d (n "xtensa-lx") (r "^0.8.0") (f (quote ("spin"))) (o #t) (d #t) (k 0)))) (h "110dvhvahkzkc7c6qd0h4h6gzlgp8bshz8sx5hrqccbg2h66bdcb") (f (quote (("xtensa" "xtensa-lx" "spin") ("std" "once_cell") ("eh-alpha" "embedded-hal-alpha")))) (s 2) (e (quote (("cortex-m" "dep:cortex-m" "atomic-polyfill"))))))

(define-public crate-shared-bus-0.3.1 (c (n "shared-bus") (v "0.3.1") (d (list (d (n "atomic-polyfill") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-mock") (r "^0.9") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (o #t) (d #t) (k 0)) (d (n "xtensa-lx") (r "^0.8.0") (f (quote ("spin"))) (o #t) (d #t) (k 0)))) (h "19jncxq9snxp08w4kww56ibk2gj9z8j7v8m9lhnc42a3wgqd7f66") (f (quote (("xtensa" "xtensa-lx" "spin") ("std" "once_cell") ("eh-alpha" "embedded-hal-alpha")))) (s 2) (e (quote (("cortex-m" "dep:cortex-m" "atomic-polyfill"))))))

