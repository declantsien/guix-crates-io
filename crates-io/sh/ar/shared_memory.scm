(define-module (crates-io sh ar shared_memory) #:use-module (crates-io))

(define-public crate-shared_memory-0.1.0 (c (n "shared_memory") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1znpsamn8d2yqkfvnlg8zlk3bi8bl4lf7pjafydafpi8q0jahi6a")))

(define-public crate-shared_memory-0.1.1 (c (n "shared_memory") (v "0.1.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "winerror" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ixsc7ygap7pg2rrd0d2y5lfpm8fq4blnv8rw62ivyadjadva6j3")))

(define-public crate-shared_memory-0.8.0 (c (n "shared_memory") (v "0.8.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "memrange") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "theban_interval_tree") (r "^0.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "winerror" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02zgsdkamj8hz68hiywblfp34hfpj77ikd3493h8xkaj5f58kz3b")))

(define-public crate-shared_memory-0.8.1 (c (n "shared_memory") (v "0.8.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "memrange") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "theban_interval_tree") (r "^0.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "winerror" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0x4dsibwmz9gs1gcz1hzz1irccqw1nqjps0cgvk296qlvdbcbg1q")))

(define-public crate-shared_memory-0.8.2 (c (n "shared_memory") (v "0.8.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "memrange") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "theban_interval_tree") (r "^0.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "winerror" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "010g9266xsqzncpj9yww0rldz857bii3jvvmgcbvn2lhqlh98a5y")))

(define-public crate-shared_memory-0.10.0 (c (n "shared_memory") (v "0.10.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memrange") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "^1.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "shared_memory_derive") (r "^0.10.0") (d #t) (k 0)) (d (n "theban_interval_tree") (r "^0.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "winerror" "handleapi" "fileapi" "memoryapi" "errhandlingapi" "synchapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1d4b46xr9w9cdyvayx95jkp5i3jhlq702s72r5pwdml4zz6v0fmz")))

(define-public crate-shared_memory-0.11.0 (c (n "shared_memory") (v "0.11.0") (d (list (d (n "cfg-if") (r "0.*") (d #t) (k 0)) (d (n "libc") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "1.*") (d #t) (k 0)) (d (n "rand") (r "0.*") (d #t) (k 0)) (d (n "raw_sync") (r "0.*") (d #t) (k 2)) (d (n "winapi") (r "0.*") (f (quote ("memoryapi" "errhandlingapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0h4f2gr9jg98pf2gvcmdycwqk7nrhmg8ip5k6gszqh5npv0q8bqg")))

(define-public crate-shared_memory-0.11.1 (c (n "shared_memory") (v "0.11.1") (d (list (d (n "cfg-if") (r "0.*") (d #t) (k 0)) (d (n "libc") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "1.*") (d #t) (k 0)) (d (n "rand") (r "0.*") (d #t) (k 0)) (d (n "raw_sync") (r "0.*") (d #t) (k 2)) (d (n "winapi") (r "0.*") (f (quote ("memoryapi" "errhandlingapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1nzla82lg0gylxr6hyna96xg4b2sdbbglw3dp8llw7clcfjkflkh")))

(define-public crate-shared_memory-0.11.2 (c (n "shared_memory") (v "0.11.2") (d (list (d (n "cfg-if") (r "0.*") (d #t) (k 0)) (d (n "libc") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "1.*") (d #t) (k 0)) (d (n "rand") (r "0.*") (d #t) (k 0)) (d (n "raw_sync") (r "0.*") (d #t) (k 2)) (d (n "winapi") (r "0.*") (f (quote ("ntdef" "winerror" "errhandlingapi" "handleapi" "memoryapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15iagyj56pq41yrgin96biip0rp15y7bl8d191s2a4dpj8ifnmxj")))

(define-public crate-shared_memory-0.11.3 (c (n "shared_memory") (v "0.11.3") (d (list (d (n "cfg-if") (r "0.*") (d #t) (k 0)) (d (n "libc") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "1.*") (d #t) (k 0)) (d (n "rand") (r "0.*") (d #t) (k 0)) (d (n "raw_sync") (r "0.*") (d #t) (k 2)) (d (n "winapi") (r "0.*") (f (quote ("ntdef" "winerror" "errhandlingapi" "handleapi" "memoryapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rpz36csyn5nngzcwwza4rbllp85zw6y846nlmk8pbc9kdddhad4")))

(define-public crate-shared_memory-0.11.4 (c (n "shared_memory") (v "0.11.4") (d (list (d (n "cfg-if") (r "0.*") (d #t) (k 0)) (d (n "libc") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "0.*") (d #t) (t "cfg(unix)") (k 0)) (d (n "quick-error") (r "2.*") (d #t) (k 0)) (d (n "rand") (r "0.*") (d #t) (k 0)) (d (n "raw_sync") (r "0.*") (d #t) (k 2)) (d (n "winapi") (r "0.*") (f (quote ("ntdef" "winerror" "errhandlingapi" "handleapi" "memoryapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0rkr70v37y50kyngp1cgk0y2jdqd0hl85ad85sqqmzjx6xia6m5q")))

(define-public crate-shared_memory-0.12.0 (c (n "shared_memory") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "env_logger") (r "^0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 2)) (d (n "nix") (r "^0.22") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw_sync") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("ntdef" "winerror" "errhandlingapi" "handleapi" "memoryapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14cpdzgwbh0gv6dfjqxpfvwjkvhf0hnfnlncl7rqlx0g6j89w6k8") (f (quote (("logging" "log") ("default"))))))

(define-public crate-shared_memory-0.12.1 (c (n "shared_memory") (v "0.12.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "env_logger") (r "^0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw_sync") (r "^0.1") (d #t) (k 2)) (d (n "win-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "0286bm5xzkl6dkzvhfcljj0v38x6kzqq92inifybsh39wd856xqd") (f (quote (("default" "log/release_max_level_off")))) (y #t)))

(define-public crate-shared_memory-0.12.2 (c (n "shared_memory") (v "0.12.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "env_logger") (r "^0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw_sync") (r "^0.1") (d #t) (k 2)) (d (n "win-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "01ixagmfg5f96lqwcw8lwadjc1nx86bjm01jiahzg16llx66xwbm") (f (quote (("default" "log/release_max_level_off"))))))

(define-public crate-shared_memory-0.12.3 (c (n "shared_memory") (v "0.12.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw_sync") (r "^0.1") (d #t) (k 2)) (d (n "win-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0p8lhx3zha9khy4l4id3y8dm84kmmg3q67gi9h44fvvvmc1ppm83") (f (quote (("logging" "log") ("default"))))))

(define-public crate-shared_memory-0.12.4 (c (n "shared_memory") (v "0.12.4") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw_sync") (r "^0.1") (d #t) (k 2)) (d (n "win-sys") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)))) (h "0m5s38yv7wbyxz8mfhhivs69y2f2shmnhjckyv29spd7dlcr71ds") (f (quote (("logging" "log") ("default"))))))

