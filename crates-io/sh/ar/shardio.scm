(define-module (crates-io sh ar shardio) #:use-module (crates-io))

(define-public crate-shardio-0.5.2 (c (n "shardio") (v "0.5.2") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)))) (h "09g7vddjvf866vnb7m2n77gv6wipkzmasn1iac2qy7zy9vdyiqvl") (f (quote (("full-test"))))))

(define-public crate-shardio-0.5.3 (c (n "shardio") (v "0.5.3") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)))) (h "1a60l97wsry4yvyizfky9f28fizbgg7r3gdhym2mr9p06zgh9h9g") (f (quote (("full-test"))))))

(define-public crate-shardio-0.5.4 (c (n "shardio") (v "0.5.4") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.8.5") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)))) (h "1ga8n598wpkhbbad9cwh4mxiksb1vdyf41d9ab34niq4rm6z0qnx") (f (quote (("full-test"))))))

(define-public crate-shardio-0.5.5 (c (n "shardio") (v "0.5.5") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.8.5") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)))) (h "1w46ldvlb2njpd01qr4y14rj071m5fv6ya47sa3vywybq223vmag") (f (quote (("full-test"))))))

(define-public crate-shardio-0.6.0 (c (n "shardio") (v "0.6.0") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "11ybp0s0ymjn0m03vi4w3sjfad32mlycv90akbmarr1y8ab0dprk") (f (quote (("full-test"))))))

(define-public crate-shardio-0.7.0 (c (n "shardio") (v "0.7.0") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "1ba5w93f3mdq29lr78kvk49kzn00hzjwz43d283khq3blsvzqj4c") (f (quote (("full-test"))))))

(define-public crate-shardio-0.7.1 (c (n "shardio") (v "0.7.1") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0wgcai3p52hvalzgv6qypgqws7hx4z7lxwixbsas8pzqy444kzrj") (f (quote (("full-test"))))))

(define-public crate-shardio-0.7.2 (c (n "shardio") (v "0.7.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0dbvbxkb1bny45lnqa35ypfl6lp0rm63aj54f52v7lvc2sjz37rh") (f (quote (("full-test"))))))

(define-public crate-shardio-0.7.3 (c (n "shardio") (v "0.7.3") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0knamdh3vsc9g40vppdv4i45sapfwmbf9nww1lspjask84b2pfn6") (f (quote (("full-test"))))))

(define-public crate-shardio-0.7.4 (c (n "shardio") (v "0.7.4") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r ">=0.4, <=0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "1w2hrgzf7h7s5rwz1zs1d5ixkxc66czqm4jbnjqwaynla8d8czjn") (f (quote (("full-test"))))))

(define-public crate-shardio-0.8.0 (c (n "shardio") (v "0.8.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r ">=0.4, <=0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "1hzd0zqx8zfaz8kgrwazkf9r6kn1nkfp79bbhf1wzxpqnf8934q3") (f (quote (("full-test"))))))

(define-public crate-shardio-0.8.1 (c (n "shardio") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r ">=0.4, <=0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "18hcx2667pikgsbxblc10z3n19ynnsdk7v6a1vxdmcp2zwwn2jfq") (f (quote (("full-test"))))))

(define-public crate-shardio-0.8.2 (c (n "shardio") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r ">=0.4, <=0.6") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "is_sorted") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1") (d #t) (k 0)) (d (n "min-max-heap") (r "^1.2.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0nmn6zcvdnyb14pnps1g95gr73zw8sy9ch2ffjc5dm9n56i915b6") (f (quote (("full-test"))))))

