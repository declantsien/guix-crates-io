(define-module (crates-io sh ai shai) #:use-module (crates-io))

(define-public crate-shai-0.0.0 (c (n "shai") (v "0.0.0") (h "0nrdxydai0jryp7qyrszc1rb837rbl9c145yg8rw9q2dvjhzc0aj") (y #t)))

(define-public crate-shai-0.1.0 (c (n "shai") (v "0.1.0") (d (list (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ratatui") (r "^0.22.0") (f (quote ("all-widgets"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tui-input") (r "^0.8") (d #t) (k 0)))) (h "1bmw7k18pc46wac6qjdlnwvaqyh355l21dwq8p3rnhlswg0xb1j8")))

(define-public crate-shai-0.1.1 (c (n "shai") (v "0.1.1") (d (list (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ratatui") (r "^0.22.0") (f (quote ("all-widgets"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tui-input") (r "^0.8") (d #t) (k 0)))) (h "0cmi9sz4pvykcxhns5qawg9286yb6lbprlmx5cg7089s11cf911l")))

(define-public crate-shai-0.2.0 (c (n "shai") (v "0.2.0") (d (list (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ratatui") (r "^0.22.0") (f (quote ("all-widgets"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tui-input") (r "^0.8") (d #t) (k 0)))) (h "14hrrija1j3i21pa5wkzm6r8gzlldphkf5a8fi8cshr8n7gibnmv")))

