(define-module (crates-io sh a- sha-1) #:use-module (crates-io))

(define-public crate-sha-1-0.3.0 (c (n "sha-1") (v "0.3.0") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.5.0") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3.0") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)))) (h "0w272h5bjs8qpw3124qdkvr78jy0b17w60y7spfm20xvskqbrz1w")))

(define-public crate-sha-1-0.3.1 (c (n "sha-1") (v "0.3.1") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.5.0") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3.0") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)))) (h "0npyyx229afbyjfcpq93fga8k5q2dllqrkja6l3xdhw9hx7qm97l")))

(define-public crate-sha-1-0.3.2 (c (n "sha-1") (v "0.3.2") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)))) (h "02nm6cf6wr971nqx433b3hghzklkiqb89imlrr3czk742nggxw3n")))

(define-public crate-sha-1-0.3.3 (c (n "sha-1") (v "0.3.3") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0nqz88nrci9qii3qsi09gzcs3m1p0jxfh32pksrq5ypa75b7g9wm") (f (quote (("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.3.4 (c (n "sha-1") (v "0.3.4") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.2") (o #t) (d #t) (k 0)))) (h "11444jsiaypi16fapg9d43sq2fji1ppxbazhc36lh5a72rl60iw3") (f (quote (("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.4.0 (c (n "sha-1") (v "0.4.0") (d (list (d (n "block-buffer") (r "^0.2") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.5") (d #t) (k 2)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.3") (o #t) (d #t) (k 0)))) (h "12py4s8n4009z3bhgpzx2hfn8qqj36a8vpyz87q5lxxg2pi3x0ry") (f (quote (("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.4.1 (c (n "sha-1") (v "0.4.1") (d (list (d (n "block-buffer") (r "^0.3") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.5") (d #t) (k 2)) (d (n "digest") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "179i1hzb83fwb6xx1901zif65midib2z035gaqaj8qkb4xm1fwj1") (f (quote (("generic" "generic-array" "digest") ("default" "generic") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.7.0 (c (n "sha-1") (v "0.7.0") (d (list (d (n "block-buffer") (r "^0.3") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.7.1") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1vddz7dyxkww5nia3pg1j4hpy6dxhg4afd38n1x1d2nynprx3fai") (f (quote (("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.8.0 (c (n "sha-1") (v "0.8.0") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0jcj4hsmpr5ii0lr5l5n68dil4vv45rr7yar2hm5q96ikvz99z9c") (f (quote (("std" "digest/std") ("default" "std") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.8.1 (c (n "sha-1") (v "0.8.1") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0s6fdy5wp3x4h2z4fcl2d9vjvrpzr87v4h49r51xcq8nm4qj35i3") (f (quote (("std" "digest/std") ("default" "std") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.8.2 (c (n "sha-1") (v "0.8.2") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1pv387q0r7llk2cqzyq0nivzvkgqgzsiygqzlv7b68z9xl5lvngp") (f (quote (("std" "digest/std") ("default" "std") ("asm-aarch64" "asm" "libc") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.9.0 (c (n "sha-1") (v "0.9.0") (d (list (d (n "block-buffer") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1z2229hjw8kq07vn0d84x2mrf2qpqsyw2v97x0ngznng9wlhlljr") (f (quote (("std" "digest/std") ("default" "std") ("asm-aarch64" "asm" "libc") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.9.1 (c (n "sha-1") (v "0.9.1") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0w37j7swjkbzgi9mf7ihkw0zfik6vl97fs6jdpqs6r68hvm3c2hp") (f (quote (("std" "digest/std") ("default" "std") ("asm-aarch64" "asm") ("asm" "sha1-asm" "libc"))))))

(define-public crate-sha-1-0.9.2 (c (n "sha-1") (v "0.9.2") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.80") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0z2hj8br511bsarw97h82872zqn7ba4738gjws74j2k2bqdxyg6f") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("asm-aarch64" "asm") ("asm" "sha1-asm" "libc"))))))

(define-public crate-sha-1-0.9.3 (c (n "sha-1") (v "0.9.3") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.84") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0p98rwmap6i1fmwi3khwwfw1b9vs3a8rnssy325ffgqyfg1i5czl") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("asm-aarch64" "asm") ("asm" "sha1-asm" "libc"))))))

(define-public crate-sha-1-0.9.4 (c (n "sha-1") (v "0.9.4") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.86") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0pzjm6xkfriycqwnh6bnpinq9g2rmgph25fiwz8hz45x4mfzgsyz") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha1-asm" "libc"))))))

(define-public crate-sha-1-0.9.5 (c (n "sha-1") (v "0.9.5") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.93") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "000wp3dayx9hh93w1bngbc9d42rh8nwgy066m96jf8nfqdgxyndn") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha1-asm" "libc"))))))

(define-public crate-sha-1-0.9.6 (c (n "sha-1") (v "0.9.6") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "aarch64-apple-darwin") (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.4") (o #t) (d #t) (k 0)))) (h "05jfwssqvpcy0sr1pcdhdn9awalwsazclimbgzpx0cjq3isglk4c") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.9.7 (c (n "sha-1") (v "0.9.7") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.1.5") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "10cdy5p5ypcb33swp5hfayw51559y2xprv06pzmv8ajfb48qc30s") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.9.8 (c (n "sha-1") (v "0.9.8") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "19jibp8l9k5v4dnhj5kfhaczdfd997h22qz0hin6pw9wvc9ngkcr") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.10.0 (c (n "sha-1") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "03zag8zk4qlv40n2yryddapv5yxkam3hdr7n53d8qrzr2gali3q2") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm" "sha1-asm"))))))

(define-public crate-sha-1-0.10.3 (c (n "sha-1") (v "0.10.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)))) (h "13q5q4vc25ywa392l2bjyn5czs9pgxc58xzrjl7yfddan2wblrhq") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm" "sha1-asm")))) (y #t)))

(define-public crate-sha-1-0.10.5 (c (n "sha-1") (v "0.10.5") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.10.4") (d #t) (k 0)) (d (n "digest") (r "^0.10.4") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)))) (h "1jr2a7pi67s8nxm4m09df9nnzsdlpif5hnk29hl8xk55fx975y2y") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "std") ("compress") ("asm" "sha1-asm")))) (y #t)))

(define-public crate-sha-1-0.10.1 (c (n "sha-1") (v "0.10.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.10.4") (d #t) (k 0)) (d (n "digest") (r "^0.10.4") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha1-asm") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)))) (h "1700fs5aiiailpd5h0ax4sgs2ngys0mqf3p4j0ry6j2p2zd8l1gm") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "std") ("compress") ("asm" "sha1-asm"))))))

