(define-module (crates-io sh rs shrs) #:use-module (crates-io))

(define-public crate-shrs-0.0.1 (c (n "shrs") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.1") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.1") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.1") (d #t) (k 0)) (d (n "shrs_line") (r "^0.0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "02k3y82jpl67i4nii3sixa62qirqzjjxps809s6hg10qkyk88jl7") (f (quote (("default"))))))

(define-public crate-shrs-0.0.2 (c (n "shrs") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.2") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.2") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.2") (d #t) (k 0)) (d (n "shrs_line") (r "^0.0.2") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1319zyqij589jkcd8v337ww7xvc53i57d0xkf73yivlhgb005w2j") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "shrs_core/serde"))))))

(define-public crate-shrs-0.0.3 (c (n "shrs") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.3") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.3") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.3") (d #t) (k 0)) (d (n "shrs_line") (r "^0.0.3") (d #t) (k 0)) (d (n "shrs_utils") (r "^0.0.3") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1cj3sxaw4z2lqpa5s2sxxaz6ijjig6ycl2kx8536lp236jsdl0qi") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "shrs_core/serde"))))))

(define-public crate-shrs-0.0.4 (c (n "shrs") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.4") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.4") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.4") (d #t) (k 0)) (d (n "shrs_line") (r "^0.0.4") (d #t) (k 0)) (d (n "shrs_utils") (r "^0.0.4") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1h4p16bswddkvjv8jz932c90r6f6l86mqyyx443infj8adz3byda") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "shrs_core/serde"))))))

(define-public crate-shrs-0.0.5 (c (n "shrs") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (f (quote ("bracketed-paste"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.5") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.5") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.5") (d #t) (k 0)) (d (n "shrs_utils") (r "^0.0.5") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19mmg027bdvqqzp5z4pgl9aqagvgfpkfqpd2qjps77g398pv3nr8") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "shrs_core/serde"))))))

(define-public crate-shrs-0.0.6 (c (n "shrs") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (f (quote ("bracketed-paste"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pino_deref") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "shrs_core") (r "^0.0.6") (d #t) (k 0)) (d (n "shrs_job") (r "^0.0.6") (d #t) (k 0)) (d (n "shrs_lang") (r "^0.0.6") (d #t) (k 0)) (d (n "shrs_utils") (r "^0.0.6") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ds8ajv7jsa26cgj6zp7y6kwdfas5z1p44627pg6c8igh6qg0mf2") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "shrs_core/serde"))))))

