(define-module (crates-io sh ip shipyard_scenegraph) #:use-module (crates-io))

(define-public crate-shipyard_scenegraph-0.1.0 (c (n "shipyard_scenegraph") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)))) (h "1m2zsqlskinyp6yf06r6vsw4vi4vbk0j2qyzxljl250j96zw20rb") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("default" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.1.1 (c (n "shipyard_scenegraph") (v "0.1.1") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)))) (h "1bn9x003j8lcxx3pdii86gbqa3s7mj79cj39m53sba6yvpwki57w") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("default" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.1.2 (c (n "shipyard_scenegraph") (v "0.1.2") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)))) (h "0lfmw73752lw8rf7hjsf6zcqs6wc1hsmhxpn53ry41xgpnbb590b") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("default" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.1.3 (c (n "shipyard_scenegraph") (v "0.1.3") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "063yqdqrl0ryw6ch3w4xd7kyx8ki39g7vcpqf32kb54vnbrqzvfp") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("default" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.1.4 (c (n "shipyard_scenegraph") (v "0.1.4") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1k08vbxahgfm8fxzjpgs1fm3n7gbfrgs3l7l84ax65s8sc1i68di") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.1.5 (c (n "shipyard_scenegraph") (v "0.1.5") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ncijf1haix94ck2lqc0bg6saaynai0mv3lyhpf0c3sn3fh77i86") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.2.0 (c (n "shipyard_scenegraph") (v "0.2.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.3") (k 0)) (d (n "shipyard_hierarchy") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "093s65012fa9m6x6wgg5sxqk14ba1wcqwqggbhf8wxcg9ni2i9wh") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("proc" "shipyard/proc" "shipyard_hierarchy/proc") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.3.0 (c (n "shipyard_scenegraph") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.4") (k 0)) (d (n "shipyard_hierarchy") (r "^0.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nc394m9b7kcdd8gi7qr5295lxpc71ddjasgpcf4by42i8x7iqns") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.3.1 (c (n "shipyard_scenegraph") (v "0.3.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (o #t) (k 0)) (d (n "shipyard") (r "^0.4") (k 0)) (d (n "shipyard_hierarchy") (r "^0.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1iil71kpd4d487xfwn8yhj0wrsw2r9k4b23b2vnz2blw7chr14fc") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.3.2 (c (n "shipyard_scenegraph") (v "0.3.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (o #t) (k 0)) (d (n "shipyard") (r "^0.4") (k 0)) (d (n "shipyard_hierarchy") (r "^0.3.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mq94kfwlzd602x4jvbkhp2y3ii8wy429vycs0zfg9nbxw4sc001") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.3.3 (c (n "shipyard_scenegraph") (v "0.3.3") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (o #t) (k 0)) (d (n "shipyard") (r "^0.4") (k 0)) (d (n "shipyard_hierarchy") (r "^0.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07fv6jjxcfj7f111y1k71l7851r449g1iwzxzxldpjszv2kngfid") (f (quote (("std" "shipyard/std" "shipyard_hierarchy/std") ("parallel" "shipyard/parallel" "shipyard_hierarchy/parallel") ("non_sync" "shipyard/non_sync" "shipyard_hierarchy/non_sync") ("non_send" "shipyard/non_send" "shipyard_hierarchy/non_send") ("nalgebra_transforms" "nalgebra") ("easy_deref" "derive_deref") ("default" "easy_deref" "shipyard/default" "shipyard_hierarchy/default"))))))

(define-public crate-shipyard_scenegraph-0.6.0 (c (n "shipyard_scenegraph") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.1") (o #t) (k 0)) (d (n "nalgebra-glm") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.6") (k 0)) (d (n "shipyard_hierarchy") (r "^0.6") (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)))) (h "0d70vlpirvvbfa024c5295ryhjmi2gdfvskl240wzyzk4k4yx4h5") (f (quote (("std" "shipyard/std") ("parallel" "shipyard/parallel") ("native_math") ("nalgebra_math" "nalgebra") ("nalgebra_glm_math" "nalgebra-glm" "nalgebra") ("doc" "native_math" "nalgebra_math") ("default" "shipyard/default"))))))

(define-public crate-shipyard_scenegraph-0.6.1 (c (n "shipyard_scenegraph") (v "0.6.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "shipyard") (r "^0.6") (k 0)) (d (n "shipyard_hierarchy") (r "^0.6") (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "0h0bdiyif74x5x5r92yffysnzhpqd0kn1l6b3kz3mk5fmwm22v60") (f (quote (("std" "shipyard/std") ("parallel" "shipyard/parallel") ("native_math") ("nalgebra_math" "nalgebra") ("nalgebra_glm_math" "nalgebra-glm" "nalgebra") ("doc" "native_math" "nalgebra_math") ("default" "shipyard/default"))))))

