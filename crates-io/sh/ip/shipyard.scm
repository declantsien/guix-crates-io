(define-module (crates-io sh ip shipyard) #:use-module (crates-io))

(define-public crate-shipyard-0.1.0 (c (n "shipyard") (v "0.1.0") (d (list (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)))) (h "01xacd4a6b9rkrkjv9qg0wi6dnnk53ffcdfnki6jvjs8m27gx4bl")))

(define-public crate-shipyard-0.1.1 (c (n "shipyard") (v "0.1.1") (d (list (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)))) (h "0w7jcyzncwdcfh1yj2c005s55lsyhzhqwbiql8xbg2n3g4qd9ih0")))

(define-public crate-shipyard-0.2.0 (c (n "shipyard") (v "0.2.0") (d (list (d (n "num_cpus") (r "^1.10.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "shipyard_proc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.11") (d #t) (k 2)))) (h "07cszjxhpnbddpzagy1krq1hg9zzz1p9y3b0ys1mwdikbrszicrq") (f (quote (("proc" "shipyard_proc") ("parallel" "rayon" "num_cpus") ("default" "parallel" "proc"))))))

(define-public crate-shipyard-0.3.0 (c (n "shipyard") (v "0.3.0") (d (list (d (n "hashbrown") (r "^0.7.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)))) (h "0479h88jkaw5mnk9dvnkiagjj7n5l3izf34bi835xaxy37y2pp2m") (f (quote (("std") ("proc" "shipyard_proc") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel" "proc"))))))

(define-public crate-shipyard-0.3.1 (c (n "shipyard") (v "0.3.1") (d (list (d (n "hashbrown") (r "^0.7.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)))) (h "00ybiil7mabqp1s6whcr3cf8yfs8s7wj2chafcvrq5m83hshmfac") (f (quote (("std") ("proc" "shipyard_proc") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel" "proc"))))))

(define-public crate-shipyard-0.3.2 (c (n "shipyard") (v "0.3.2") (d (list (d (n "hashbrown") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0zl6fzgi63i17qzk7ir2nqp4jj2fr6h41clpcrp6wyli3jw7r113") (f (quote (("std") ("proc" "shipyard_proc") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel" "proc"))))))

(define-public crate-shipyard-0.3.3 (c (n "shipyard") (v "0.3.3") (d (list (d (n "hashbrown") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0bp43v9nf5fmzs6dmvncnj33vkg8kymmh2j02w9hp4ln9p6z4xi8") (f (quote (("std") ("proc" "shipyard_proc") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel" "proc"))))))

(define-public crate-shipyard-0.4.0 (c (n "shipyard") (v "0.4.0") (d (list (d (n "hashbrown") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1fw3pkbxb5yna20k1sv30bkz106z15jra7mqajhylmrhlhv1lynn") (f (quote (("std") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel"))))))

(define-public crate-shipyard-0.4.1 (c (n "shipyard") (v "0.4.1") (d (list (d (n "hashbrown") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0i00mwy23s8b4zwnz0rxlhi98j68dhh9ifzj1hvmj0hixpfhagvx") (f (quote (("std") ("parallel" "rayon" "num_cpus" "std") ("non_sync" "std") ("non_send" "std") ("default" "parallel"))))))

(define-public crate-shipyard-0.5.0 (c (n "shipyard") (v "0.5.0") (d (list (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0mih5mbhv81p2mqwhah2r61r9zg261qx0aww4b013dsps0ncc771") (f (quote (("thread_local" "std") ("std") ("serde1" "serde") ("parallel" "rayon") ("default" "parallel" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.1 (c (n "shipyard") (v "0.6.0-alpha.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "1j5qcnn53g6wnn6a7sx7w3kyf50p4c1fg06jx7zp2y0dxcbsq1yr") (f (quote (("thread_local" "std") ("std") ("serde1" "serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.2 (c (n "shipyard") (v "0.6.0-alpha.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "030f2114brsq11v8ia7fsl4zmbq0vb2hbx18q20kldhsznkmjdaw") (f (quote (("thread_local" "std") ("std") ("serde1" "serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.3 (c (n "shipyard") (v "0.6.0-alpha.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "0fk2xw0kn456qvihbn2wam13a2k74fd9lmca11rvhwcj028xxws0") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.4 (c (n "shipyard") (v "0.6.0-alpha.4") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "0skvc14mblj27jq41y9cq1hp5j5xz23si0v22jpm69krlb2yi37a") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.5 (c (n "shipyard") (v "0.6.0-alpha.5") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "1k5xd0gck61fx0f0l7j7masilipdbl3nz70hbq4g36zinad86nni") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0-alpha.6 (c (n "shipyard") (v "0.6.0-alpha.6") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "1ppka2qkvr86hhzg4p71v5vlyyxv5in9hz9gi9qgvihb459wn6sw") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.0 (c (n "shipyard") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "0z4iqjiq33a2sdb15lcwq8zqqkwfbbi6l8gp48b9wd3p178xsdp5") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.1 (c (n "shipyard") (v "0.6.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "1b7jkg2k6nkn2q4ss8cd9by8zp3indj0kxm7da3qd5wa7d5ffi88") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

(define-public crate-shipyard-0.6.2 (c (n "shipyard") (v "0.6.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "shipyard_proc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.0") (o #t) (k 0)))) (h "0mhfbr5aax3dmg5b7waph2b31wfb5adjyph2m5i3s71f1xrsw49m") (f (quote (("thread_local" "std") ("std") ("serde1" "serde" "hashbrown/serde") ("proc" "shipyard_proc") ("parallel" "rayon") ("default" "parallel" "proc" "std"))))))

