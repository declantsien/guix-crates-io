(define-module (crates-io sh ur shura) #:use-module (crates-io))

(define-public crate-shura-0.1.0 (c (n "shura") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (o #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (f (quote ("web"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "naga") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.4") (f (quote ("convert-bytemuck"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "shura_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "0vlc15k4mcv78l93m65v24bfqx96n8vv9gsfvv68ai40q87ih716") (f (quote (("default" "audio" "physics" "gui" "text" "gamepad")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("physics" "dep:rapier2d") ("gui" "dep:egui" "dep:egui_wgpu_backend" "dep:egui_winit_platform") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.1.1 (c (n "shura") (v "0.1.1") (d (list (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (o #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (f (quote ("web"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "naga") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.4") (f (quote ("convert-bytemuck"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "shura_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "0dzkr4nvian3xc4dqwiv3xpiqbk3s8y084dg5hps9hxrwh056919") (f (quote (("default" "audio" "physics" "gui" "text" "gamepad")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("physics" "dep:rapier2d") ("gui" "dep:egui" "dep:egui_wgpu_backend" "dep:egui_winit_platform") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.1.2 (c (n "shura") (v "0.1.2") (d (list (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (o #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (f (quote ("web"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "naga") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.4") (f (quote ("convert-bytemuck"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "shura_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "01lxw6s4cwpzwj12fw8j13c8gm06kygabr5q4kdzbr3v7qmfwda7") (f (quote (("default" "audio" "physics" "gui" "text" "gamepad")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("physics" "dep:rapier2d") ("gui" "dep:egui" "dep:egui_wgpu_backend" "dep:egui_winit_platform") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.1.3 (c (n "shura") (v "0.1.3") (d (list (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (o #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (f (quote ("web"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "naga") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.4") (f (quote ("convert-bytemuck"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "shura_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "05nw25hvzai3xaqpxp8wy39zc96gb52q9c0wykngqy4kcdwdl5ms") (f (quote (("default" "audio" "physics" "gui" "text" "gamepad")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("physics" "dep:rapier2d") ("gui" "dep:egui" "dep:egui_wgpu_backend" "dep:egui_winit_platform") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.1.4 (c (n "shura") (v "0.1.4") (d (list (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (o #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.20.0") (f (quote ("web"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "naga") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.4") (f (quote ("convert-bytemuck"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "shura_proc") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "06ra5qwj52fnhkqyg59rf11jrsiaipc2xyjp75xffx6dccj6rrhr") (f (quote (("default" "audio" "physics" "gui" "text" "gamepad")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("physics" "dep:rapier2d") ("gui" "dep:egui" "dep:egui_wgpu_backend" "dep:egui_winit_platform") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.2.0 (c (n "shura") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.21") (f (quote ("bytemuck" "tracing" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.21") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.21") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.21") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.11") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_glyph") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0j8hkmwgqdcckk40jhg0aqarbddd7c7qglp2068q3y3la604723x") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:wgpu_glyph") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.3.0 (c (n "shura") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.3.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1h3hj4076318f9mp5f474is6bmcppcjmmdfp65byc09yp5lmv1ld") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.3.1 (c (n "shura") (v "0.3.1") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.3.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0gygfsyvlzylch2xxfi7zg9mn1irjc5xdhgc4bqr9arzmmym11ff") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.4.0 (c (n "shura") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0nfcgkdq2i48n185gwdjsakfjhmr07qjzk87qq3wn93y8j53q2bl") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.4.1 (c (n "shura") (v "0.4.1") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0dddjgcqk5g03xznx5i5jg531pdkyarya36sm0gvv2wwsnczwbm2") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.4.2 (c (n "shura") (v "0.4.2") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1kna0gxrvpgalkh866h7xh5kh5qaw3y9gcyrgi5gkcd6ycrv7rnr") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.4.3 (c (n "shura") (v "0.4.3") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1rv1glvy4hn1v7n5gzapjg1cq6s9lx6wl81d99xlp88fr5sfxlvy") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.5.0 (c (n "shura") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1b8063yv89386v4wbpbk9bsvv9ydlsj0nr23s7kh0sai6cdq52iv") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.5.1 (c (n "shura") (v "0.5.1") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "naga") (r "^0.12") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("glsl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0ssmf0ylwvyw2q7lbq1lfm4k8zi8pxcyhqp6yzfq02rbngvc8l6r") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "gui" "serde" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "winit/serde" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

(define-public crate-shura-0.6.0 (c (n "shura") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "delaunator") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22") (f (quote ("bytemuck" "default_fonts" "mint"))) (o #t) (k 0)) (d (n "egui-wgpu") (r "^0.22") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22") (f (quote ("links"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_demo_lib") (r "^0.22") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gilrs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("convert-bytemuck" "mint"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rapier2d") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("symphonia-all"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.17") (f (quote ("wasm-bindgen" "symphonia-all"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "shura_proc") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "console" "Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16") (f (quote ("webgl" "glsl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint"))) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("mint" "android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1bbchm44np9i1rns545476xrbgnb714n1jhz8918gxd6c8q0pl2m") (f (quote (("default" "animation" "gamepad" "text" "audio" "physics" "serde" "gui" "log") ("animation")))) (s 2) (e (quote (("text" "dep:glyph_brush") ("serde" "dep:serde" "dep:bincode" "wgpu/trace" "wgpu/serde" "wgpu/replay" "winit/serde" "gilrs?/serde-serialize" "egui?/serde" "nalgebra/serde-serialize" "rapier2d?/serde-serialize") ("physics" "dep:rapier2d" "shura_proc/physics") ("log" "dep:log") ("gui" "dep:egui" "dep:egui-wgpu" "dep:egui-winit") ("gamepad" "dep:gilrs") ("audio" "dep:rodio"))))))

