(define-module (crates-io sh a2 sha2) #:use-module (crates-io))

(define-public crate-sha2-0.1.0 (c (n "sha2") (v "0.1.0") (d (list (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "1mzdnkb63jbciig36wsak3asrmjwcvcmsrl1n4hn8c85psa0n8f0") (y #t)))

(define-public crate-sha2-0.1.1 (c (n "sha2") (v "0.1.1") (d (list (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "01ff9bjzpb1c0d9n8lm0kirh57divpn3rgy8x4d91swzjrq4x0sk") (y #t)))

(define-public crate-sha2-0.1.2 (c (n "sha2") (v "0.1.2") (d (list (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "07mfsjjwn4ibvpkb2d0fkpmjjyqw51v5fn6spnwg4pg4mw2rbkg0") (y #t)))

(define-public crate-sha2-0.2.0 (c (n "sha2") (v "0.2.0") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.1") (d #t) (k 2)) (d (n "digest") (r "^0.2") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.1") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.5") (d #t) (k 0)))) (h "129kbdrxp74d382aabmfa2ka178y9jw0r94vfyipigk1i3avqc8z") (y #t)))

(define-public crate-sha2-0.3.0 (c (n "sha2") (v "0.3.0") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.3") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.1") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.5") (d #t) (k 0)))) (h "1yp08ll5jk26hmkivx5bcfgcyvadiasdm2r8d0j8i72gkbxjsdxh") (y #t)))

(define-public crate-sha2-0.4.0 (c (n "sha2") (v "0.4.0") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.4") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.2") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)))) (h "1s2r997jjpi4k8fz4vay8sk2mnl5n278lb01j0q4yz6k5rmdmdzd") (y #t)))

(define-public crate-sha2-0.4.1 (c (n "sha2") (v "0.4.1") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.4") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.2") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)))) (h "1vdhpvpzxlr596qhwvvz099vd4fw2wrr75yqhaz7cc80lj6253h0") (y #t)))

(define-public crate-sha2-0.4.2 (c (n "sha2") (v "0.4.2") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.4") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.2") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)))) (h "0p7mips0ij3aqjn7y1id938sq7ck53f8mxianyxmqcnqx1r52h15") (y #t)))

(define-public crate-sha2-0.5.0 (c (n "sha2") (v "0.5.0") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.5.0") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3.0") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)))) (h "16n36wwzd72lld4pqlz5dgg8w9yhibnampprjklcrg09xgf1vp6j") (y #t)))

(define-public crate-sha2-0.5.1 (c (n "sha2") (v "0.5.1") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)))) (h "0wcvb05ri619br9gdj68jpj6wl322mcz6d02i8xld86l1yw0hrlg") (y #t)))

(define-public crate-sha2-0.5.2 (c (n "sha2") (v "0.5.2") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0rqxlf1q2scj98wj4fhncff31fvnmh9lvz2i558hjayvpc24mll4") (f (quote (("asm" "sha2-asm")))) (y #t)))

(define-public crate-sha2-0.5.3 (c (n "sha2") (v "0.5.3") (d (list (d (n "byte-tools") (r "^0.1") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "digest-buffer") (r "^0.3") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.7") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1a7niify6z11067594la60x54h30sgfb7qc9xhrlxsc1r2d0z4l4") (f (quote (("asm" "sha2-asm")))) (y #t)))

(define-public crate-sha2-0.6.0 (c (n "sha2") (v "0.6.0") (d (list (d (n "block-buffer") (r "^0.2") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "crypto-tests") (r "^0.5") (d #t) (k 2)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0shircyawzg1q5lyi175l7l446v5bijwrf58grnz4z9nrrw3r5kx") (f (quote (("asm" "sha2-asm"))))))

(define-public crate-sha2-0.7.0 (c (n "sha2") (v "0.7.0") (d (list (d (n "block-buffer") (r "^0.3") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.7.1") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1246j551823zba9l452wc2vd8ajyxmmki265yv25k1fv5wgs3b3x") (f (quote (("asm" "sha2-asm"))))))

(define-public crate-sha2-0.7.1 (c (n "sha2") (v "0.7.1") (d (list (d (n "block-buffer") (r "^0.3") (d #t) (k 0)) (d (n "byte-tools") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.7.1") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "183yhkj16i7yzdp8i7aavpy329vz5xrd502233bq8fn2whjbxdly") (f (quote (("asm" "sha2-asm"))))))

(define-public crate-sha2-0.8.0 (c (n "sha2") (v "0.8.0") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0gal773gz8gkpa9rndc917z6rl9kzd8q8gapaxv437s61vyqnkbv") (f (quote (("std" "digest/std") ("default" "std") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.8.1 (c (n "sha2") (v "0.8.1") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1827pplynq0ahxid1xq281kiv56kj2afp7gm97v7gw71sbgll117") (f (quote (("std" "digest/std") ("default" "std") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.8.2 (c (n "sha2") (v "0.8.2") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0s9yddvyg6anaikdl86wmwfim25c0d4m0xq0y2ghs34alxpg8mm2") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.9.0 (c (n "sha2") (v "0.9.0") (d (list (d (n "block-buffer") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0j5bxndaxscjxwg1i43g27dihcz4akl43d791xahil0g11078dvj") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.9.1 (c (n "sha2") (v "0.9.1") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1hdqrx2d9073hgf34y6ilgw6ni5vv3d5nmccyhkfm9zdvy6kfcr9") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm" "libc"))))))

(define-public crate-sha2-0.9.2 (c (n "sha2") (v "0.9.2") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.80") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1a225akwq8k1ym827f8f72rfgxaf7zdnnq07qpcblj91zs3anykf") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm" "libc"))))))

(define-public crate-sha2-0.9.3 (c (n "sha2") (v "0.9.3") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpuid-bool") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.84") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1phjvjcvc33xa3xdpxw3a324ksbnrg9qhjnig13z9dwsn8a7m0ps") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm" "libc"))))))

(define-public crate-sha2-0.9.4 (c (n "sha2") (v "0.9.4") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.93") (o #t) (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1wngyrx4i5a1jx5z6k3l0saxzg5qp32brc8dxwmpjssp2xdvgxnq") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm" "libc"))))))

(define-public crate-sha2-0.9.5 (c (n "sha2") (v "0.9.5") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "aarch64-apple-darwin") (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))") (k 0)) (d (n "cpufeatures") (r "^0.1.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "04lzf4swq6cijvxnc6facr3g72h5v7a5z8lz3xrkf8gxa9bswqmk") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.9.6 (c (n "sha2") (v "0.9.6") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1wq376d84qk0633sj1wyqnjc07mh3j91qbf84fpwba4p2ldc814j") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.9.7 (c (n "sha2") (v "0.9.7") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1pdj4d7p3g5fz867mw9dvmh8ii42zlsdc1ip932ac5i0fnknzqwi") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm")))) (y #t)))

(define-public crate-sha2-0.9.8 (c (n "sha2") (v "0.9.8") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1ypm6d7536j0l868x5cai84ahpsjz53yblizm9dlrms0jx69m7xn") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm")))) (y #t)))

(define-public crate-sha2-0.10.0 (c (n "sha2") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1dnw5dfp4bbsxjz2nkx5d54vgsig0x66jd9b5z7mpcbbsd6rc3ch") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm")))) (y #t)))

(define-public crate-sha2-0.9.9 (c (n "sha2") (v "0.9.9") (d (list (d (n "block-buffer") (r "^0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "opaque-debug") (r "^0.3") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "006q2f0ar26xcjxqz8zsncfgz86zqa5dkwlwv03rhx1rpzhs2n2d") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.1 (c (n "sha2") (v "0.10.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "1v60pzdr3pp6y2sgg1v1nwv4169rb6psk44jmnnq51y5d60vvhwr") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.2 (c (n "sha2") (v "0.10.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (k 0)))) (h "0xi6xnqzwaml6d87rpr75a7yin6njbd0pi8drqygxvl11z3axpjm") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.3 (c (n "sha2") (v "0.10.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "05bjphcga494j3dhryc13yph2ar5vgd2g4rx0pqjpjd28qkz16w9") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.4 (c (n "sha2") (v "0.10.4") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "0sspipf1x0x43562wr7ds1jxg8d6425h5ms4kighgqywxxh4wkkp") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.5 (c (n "sha2") (v "0.10.5") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "1ifs2psfsyxpb64rmklafalx422pbb0f1i34f0c97yfz6hsv17fg") (f (quote (("std" "digest/std") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.6 (c (n "sha2") (v "0.10.6") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.4") (d #t) (k 0)) (d (n "digest") (r "^0.10.4") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "1h5xrrv2y06kr1gsz4pwrm3lsp206nm2gjxgbf21wfrfzsavgrl2") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.7 (c (n "sha2") (v "0.10.7") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "1n3flx8bjyblmb2n860g8402z7q10caajp2n403n37i3cbcbk7s7") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.10.8 (c (n "sha2") (v "0.10.8") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.2.2") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "1j1x78zk9il95w9iv46dh9wm73r6xrgj32y6lzzw7bxws9dbfgbr") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("loongarch64_asm") ("force-soft") ("default" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm"))))))

(define-public crate-sha2-0.11.0-pre.0 (c (n "sha2") (v "0.11.0-pre.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "=0.11.0-pre.3") (d #t) (k 0)) (d (n "digest") (r "=0.11.0-pre.3") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "15sryq6l0kg0gphvvvfvrcc4l0f2p0mda6npq899c8fqdz6jh1ny") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("loongarch64_asm") ("force-soft") ("default" "oid" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm")))) (r "1.71")))

(define-public crate-sha2-0.11.0-pre.1 (c (n "sha2") (v "0.11.0-pre.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "=0.11.0-pre.4") (d #t) (k 0)) (d (n "digest") (r "=0.11.0-pre.4") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "sha2-asm") (r "^0.6.1") (o #t) (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)))) (h "1176qj7babimp9nymlcf7n0j452678v7a5xl6jdmdfqjl4f77alx") (f (quote (("std" "digest/std") ("oid" "digest/oid") ("loongarch64_asm") ("force-soft") ("default" "oid" "std") ("compress") ("asm-aarch64" "asm") ("asm" "sha2-asm")))) (r "1.71")))

(define-public crate-sha2-0.11.0-pre.2 (c (n "sha2") (v "0.11.0-pre.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "=0.11.0-pre.7") (d #t) (k 0)) (d (n "digest") (r "=0.11.0-pre.7") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)))) (h "0ijshy7jy4m2s3dlpffcayrl9bhldbg5b3yvrds9idji82fr72z1") (f (quote (("zeroize" "digest/zeroize") ("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "oid" "std")))) (r "1.72")))

(define-public crate-sha2-0.11.0-pre.3 (c (n "sha2") (v "0.11.0-pre.3") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))") (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (d #t) (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)))) (h "1mihrj1f8fgq5rfhv3xfcsmrl43wzk5qkai6i53n4jq6yfdm8cwg") (f (quote (("zeroize" "digest/zeroize") ("std" "digest/std") ("oid" "digest/oid") ("force-soft") ("default" "oid" "std")))) (r "1.72")))

