(define-module (crates-io sh a1 sha1collisiondetection) #:use-module (crates-io))

(define-public crate-sha1collisiondetection-0.1.0 (c (n "sha1collisiondetection") (v "0.1.0") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)))) (h "057m4cal030xx6jl9grjqa8jjbrkfz8ci57g8frblqdh0032zpy6") (f (quote (("std" "digest/std") ("default" "std"))))))

(define-public crate-sha1collisiondetection-0.2.0 (c (n "sha1collisiondetection") (v "0.2.0") (d (list (d (n "digest") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12.0, <0.15.0") (d #t) (k 0)) (d (n "getrandom") (r ">=0.1.0, <0.2.0") (d #t) (k 2)) (d (n "hex-literal") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "sha-1") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)))) (h "14q5jhqa260wpr91i3rpk5qvw7fhbls947mxzi11dpq2pk7nrqyi") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait"))))))

(define-public crate-sha1collisiondetection-0.2.1 (c (n "sha1collisiondetection") (v "0.2.1") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1my32x76xx3wfbp03pqqwgf8p0llr26xcqjrk3kldj5faij5yacs") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait"))))))

(define-public crate-sha1collisiondetection-0.2.2 (c (n "sha1collisiondetection") (v "0.2.2") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0pfava3wb9n9fpkf6adfamyyxqd09m26qj9lr74lqiz1han5np4b") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait"))))))

(define-public crate-sha1collisiondetection-0.2.3 (c (n "sha1collisiondetection") (v "0.2.3") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (k 0)))) (h "10nh7s3d02136kkz93pxyfv628ls5xz8ndg27pkb6na0ghccz9np") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait" "structopt"))))))

(define-public crate-sha1collisiondetection-0.2.4 (c (n "sha1collisiondetection") (v "0.2.4") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (k 0)))) (h "13vfn5ci41pa113a4kswrvk24r82qgzscm7zcf3d9kdirjm4l5mw") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait" "structopt"))))))

(define-public crate-sha1collisiondetection-0.2.5 (c (n "sha1collisiondetection") (v "0.2.5") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (k 0)))) (h "118j715jm4ghgd9whxmp27zkdmxln572wzl8w2lcxn2wzvlz86zk") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait" "structopt"))))))

(define-public crate-sha1collisiondetection-0.2.6 (c (n "sha1collisiondetection") (v "0.2.6") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (k 0)))) (h "0q9412ksyd30zq1gbms14ffi6pprqzsvakc39b5l8l7gfjkmhrf6") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait" "structopt"))))))

(define-public crate-sha1collisiondetection-0.2.7 (c (n "sha1collisiondetection") (v "0.2.7") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (k 0)))) (h "13mkl29ma6sqybzvr8dqpj0f697d1xk1d0a39kdcgcihhg7r61xj") (f (quote (("std" "digest/std") ("digest-trait" "digest" "sha-1") ("default" "std" "digest-trait" "structopt"))))))

(define-public crate-sha1collisiondetection-0.3.0 (c (n "sha1collisiondetection") (v "0.3.0") (d (list (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "wrap_help"))) (o #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (k 1)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 0)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 1)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 2)))) (h "0mf4agdhak1gnd0pg85lfs97v7wfa4gcl780rk7g1da37h8rxymh") (f (quote (("std" "digest/std") ("oid" "const-oid") ("digest-trait" "digest") ("default" "std" "digest-trait")))) (r "1.63")))

(define-public crate-sha1collisiondetection-0.3.1 (c (n "sha1collisiondetection") (v "0.3.1") (d (list (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "wrap_help"))) (o #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (k 1)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 0)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 1)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 2)))) (h "14mn12aacyjnbzf2da04aywnd3agmw4fafp5f01w5cqlhp1qfvjx") (f (quote (("std" "digest/std") ("oid" "const-oid") ("digest-trait" "digest") ("default" "std" "digest-trait")))) (r "1.60")))

(define-public crate-sha1collisiondetection-0.3.2 (c (n "sha1collisiondetection") (v "0.3.2") (d (list (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "wrap_help"))) (o #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (o #t) (k 1)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 0)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 1)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <0.15") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 2)))) (h "0s4smn9v0i4v8zx4h37p37v03x9bxk4qb68r85kv21i10mmbih1i") (f (quote (("oid" "const-oid") ("digest-trait" "digest") ("default" "std" "digest-trait")))) (s 2) (e (quote (("std" "digest?/std")))) (r "1.60")))

(define-public crate-sha1collisiondetection-0.3.3 (c (n "sha1collisiondetection") (v "0.3.3") (d (list (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "wrap_help"))) (o #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (o #t) (k 1)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 0)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 1)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 2)))) (h "081jr16km5nfd6pxi6wiga62cg7h4drhp2v3syjyh0h0d6zc9mgi") (f (quote (("oid" "const-oid") ("digest-trait" "digest") ("default" "std" "digest-trait")))) (s 2) (e (quote (("std" "digest?/std")))) (r "1.60")))

(define-public crate-sha1collisiondetection-0.3.4 (c (n "sha1collisiondetection") (v "0.3.4") (d (list (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "wrap_help"))) (o #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (o #t) (k 1)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 0)) (d (n "clap_mangen") (r "^0.2") (o #t) (k 1)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.12, <2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 2)))) (h "0jwnwrk1x78v9r16jnac2s4v1m2f5a19khwkx1vjh0d6whhn8q0z") (f (quote (("oid" "const-oid") ("digest-trait" "digest") ("default" "std" "digest-trait")))) (s 2) (e (quote (("std" "digest?/std")))) (r "1.60")))

