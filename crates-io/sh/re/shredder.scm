(define-module (crates-io sh re shredder) #:use-module (crates-io))

(define-public crate-shredder-0.1.0 (c (n "shredder") (v "0.1.0") (d (list (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "dashmap") (r "^3.11") (f (quote ("raw-api"))) (d #t) (k 0)) (d (n "dynqueue") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rental") (r "^0.5.5") (d #t) (k 0)) (d (n "shredder_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1q310mvqk1hn54wry6809c06qk4axyzp3rv7aq82w67df3spbg2l")))

(define-public crate-shredder-0.1.1 (c (n "shredder") (v "0.1.1") (d (list (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "dashmap") (r "^3.11") (f (quote ("raw-api"))) (d #t) (k 0)) (d (n "dynqueue") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rental") (r "^0.5.5") (d #t) (k 0)) (d (n "shredder_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1ynarcx3jl1b8i3imc8qcgzilksj6mq6a9lkpqki9kmjp04ps2zr")))

(define-public crate-shredder-0.1.2 (c (n "shredder") (v "0.1.2") (d (list (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "dashmap") (r "^3.11") (f (quote ("raw-api"))) (d #t) (k 0)) (d (n "dynqueue") (r "^0.1.3") (f (quote ("crossbeam-queue"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rental") (r "^0.5.5") (d #t) (k 0)) (d (n "shredder_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0k88793a3q0zfxi2wqjkqjp4jy28kngz9vh91dcz6gbx9yjp2jyr")))

(define-public crate-shredder-0.2.0 (c (n "shredder") (v "0.2.0") (d (list (d (n "arc-swap") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "dynqueue") (r "^0.3.0") (f (quote ("crossbeam-queue"))) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rental") (r "^0.5.5") (d #t) (k 0)) (d (n "shredder_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0byyia6wlvv69kndg5b9r6mx59fr8h3jmkqgr5pkglqiiik1yhpl") (f (quote (("nightly-features") ("default"))))))

