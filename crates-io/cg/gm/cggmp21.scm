(define-module (crates-io cg gm cggmp21) #:use-module (crates-io))

(define-public crate-cggmp21-0.0.0 (c (n "cggmp21") (v "0.0.0") (h "1xw8iakmrfa1n6zbfyiwcxn1s4g1z6mjfk5wv77npn7s6z07j402")))

(define-public crate-cggmp21-0.1.0 (c (n "cggmp21") (v "0.1.0") (d (list (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-ec") (r "^0.1") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.1") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "paillier-zk") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "round-based") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "round-based") (r "^0.2") (f (quote ("derive" "dev"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0jwijlbk4agrbpyn9p2k8ks9j95has8mmhhcach8q07lpm9drw5n") (f (quote (("spof") ("curve-stark" "generic-ec/curve-stark") ("curve-secp256r1" "generic-ec/curve-secp256r1") ("curve-secp256k1" "generic-ec/curve-secp256k1") ("all-curves" "curve-secp256k1" "curve-secp256r1" "curve-stark"))))))

(define-public crate-cggmp21-0.1.1 (c (n "cggmp21") (v "0.1.1") (d (list (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-ec") (r "^0.1") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.1") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "paillier-zk") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "round-based") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "round-based") (r "^0.2") (f (quote ("derive" "dev"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "04khlw6f8d1ly2wp0r6wwnhq07qh5rxa3z8vv4hgk858nbpjn705") (f (quote (("spof") ("curve-stark" "generic-ec/curve-stark") ("curve-secp256r1" "generic-ec/curve-secp256r1") ("curve-secp256k1" "generic-ec/curve-secp256k1") ("all-curves" "curve-secp256k1" "curve-secp256r1" "curve-stark"))))))

(define-public crate-cggmp21-0.2.0 (c (n "cggmp21") (v "0.2.0") (d (list (d (n "cggmp21-keygen") (r "^0.1") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-ec") (r "^0.2") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "key-share") (r "^0.2") (d #t) (k 0)) (d (n "paillier-zk") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "round-based") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "round-based") (r "^0.2") (f (quote ("derive" "dev"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "slip-10") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1v0l8n354cwdag69mmcas177ac336c3xdadi3sz366fx83yapixl") (f (quote (("spof" "key-share/spof") ("curve-stark" "generic-ec/curve-stark") ("curve-secp256r1" "generic-ec/curve-secp256r1") ("curve-secp256k1" "generic-ec/curve-secp256k1") ("all-curves" "curve-secp256k1" "curve-secp256r1" "curve-stark")))) (s 2) (e (quote (("hd-wallets" "dep:slip-10" "cggmp21-keygen/hd-wallets"))))))

(define-public crate-cggmp21-0.2.1 (c (n "cggmp21") (v "0.2.1") (d (list (d (n "cggmp21-keygen") (r "^0.1") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-ec") (r "^0.2") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (f (quote ("serde" "udigest"))) (d #t) (k 0)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "key-share") (r "^0.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paillier-zk") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "round-based") (r "^0.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "round-based") (r "^0.2") (f (quote ("derive" "dev"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "slip-10") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "00vlapd1ad96ph6wybghxzdc19gnrxzv2bp2rrcaqxkk36njbvdb") (f (quote (("spof" "key-share/spof") ("curve-stark" "generic-ec/curve-stark") ("curve-secp256r1" "generic-ec/curve-secp256r1") ("curve-secp256k1" "generic-ec/curve-secp256k1") ("all-curves" "curve-secp256k1" "curve-secp256r1" "curve-stark")))) (s 2) (e (quote (("hd-wallets" "dep:slip-10" "cggmp21-keygen/hd-wallets"))))))

