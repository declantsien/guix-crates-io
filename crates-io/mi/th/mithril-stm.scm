(define-module (crates-io mi th mithril-stm) #:use-module (crates-io))

(define-public crate-mithril-stm-0.1.0 (c (n "mithril-stm") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bafg0sl18zf7rcg86qbwsl9mmg91fp0s22qcx2qxgbkq9a9jdlj") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend"))))))

(define-public crate-mithril-stm-0.2.0 (c (n "mithril-stm") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ng2qbss1fzigzwwb4vi6390mlznz1zgi7rx80njzqpniyixvzzn") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend"))))))

(define-public crate-mithril-stm-0.2.1 (c (n "mithril-stm") (v "0.2.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0axg0r5a8vdi1s0i0vf1jw9c12b4g9xhik7q0nniiyxck9vlai2c") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.2 (c (n "mithril-stm") (v "0.2.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "174isnymgqm1m8143k4wpmxz2vnyf1kydv1aq3lpc9naxqq9jlrr") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.4 (c (n "mithril-stm") (v "0.2.4") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wfvv7vvfljadk4drij7c00h3gc48mjdnqiivkjc6119jwqf7ka6") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.9 (c (n "mithril-stm") (v "0.2.9") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ki1y91hh7zbpwrh7airjx58jdvvcdmb0s0fx94wr5ym6dcvrfmp") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.10 (c (n "mithril-stm") (v "0.2.10") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1smj9rpsxm2q62agkryknkw3g77v7nmhzxliw5rxx1vzp1adsz45") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.12 (c (n "mithril-stm") (v "0.2.12") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ggky91x886w7arbwh8vdg35j76m419kjwjk9k2cqb2zp0jlr7dx") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.13 (c (n "mithril-stm") (v "0.2.13") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1j1kcnbdsvmbmlpkvcg2gzvsmym6jbqzxmmc7jfvhkfic4168y5a") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.17 (c (n "mithril-stm") (v "0.2.17") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0351wzr3wn3fby1fbj8455rnhwjwr9g97rw43mw1vm116yklcmq8") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.19 (c (n "mithril-stm") (v "0.2.19") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ry75yym2ww8fxakw25l6m6vi472psy7kn8mi0dv6xd3w95l34dn") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.2.20 (c (n "mithril-stm") (v "0.2.20") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kcvqp1mzq2wpd0gdfi2kbg3l5nb36z1lnyvpbpzy1msc4j2fdzr") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.1 (c (n "mithril-stm") (v "0.3.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "05s8xswv1hcc3xmpmcma23mdvxpg6liyqi1k00lfk801wv8149hi") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.3 (c (n "mithril-stm") (v "0.3.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rug") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0izdbm0h4dx92kw0vp5rjb72bxd0xydh52qhld3g8mhvh7lyv50k") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.8 (c (n "mithril-stm") (v "0.3.8") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1xpvsvxbkz89gy2g4s763w26jjba5y0wpwyd9f7fhpyyhclngq27") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.10 (c (n "mithril-stm") (v "0.3.10") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1ilhz7ib9grgvzmfpnldp0iwn2i4ac15ag7xr1q9sblg70z20444") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.14 (c (n "mithril-stm") (v "0.3.14") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "18xsj3mlc4qsz875flr292k19fbssja0p7xf68dqzx64rbmlg0kx") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.15 (c (n "mithril-stm") (v "0.3.15") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "11m6n6687b3prwbrx7awcsz44zri3hyqd76vbjgkdf3qrcdaxisn") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.17 (c (n "mithril-stm") (v "0.3.17") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "02zrk2a6q4xhp327kh0rhjqm5d15xda982m8d0w17nqfss4yqfvd") (f (quote (("rug-backend" "rug/default") ("portable" "blst/portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

(define-public crate-mithril-stm-0.3.19 (c (n "mithril-stm") (v "0.3.19") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.11") (f (quote ("portable"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "digest") (r "^0.10.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "12wpygysdcwpsjb12kg4d08xb2d5bfjyw24mabbhczh1wxm7slpa") (f (quote (("rug-backend" "rug/default") ("portable") ("num-integer-backend" "num-bigint" "num-rational" "num-traits") ("default" "rug-backend") ("benchmark-internals"))))))

