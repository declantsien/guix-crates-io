(define-module (crates-io mi nu minus) #:use-module (crates-io))

(define-public crate-minus-1.0.0 (c (n "minus") (v "1.0.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "122hakiyr6jvgizghildhlbs3813n7yjy343k4pcnavqgm5c5miy") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-1.0.1 (c (n "minus") (v "1.0.1") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0x3xs41ifqaivamji90a6zk3qwidvnwy46ql5mb7hh6hns2amgny") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-1.0.2 (c (n "minus") (v "1.0.2") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1dyrfaqf7yv08arlpd3xrf5wwk0b4ldfb5ahzh0dy1ivh623517h") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-1.0.3 (c (n "minus") (v "1.0.3") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio2") (r "^0.2") (f (quote ("rt-core"))) (o #t) (d #t) (k 0) (p "tokio")))) (h "17v5941phn76k8jaycdmfjp2dl8jhghncni1r02n14bzk8wai77l") (f (quote (("tokio_lib" "tokio") ("tokio2_lib" "tokio2") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-2.0.0 (c (n "minus") (v "2.0.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0z12qm9mdjxgb4dyhs9yr48a6dx82srdw8zwykhqr76yagz71hmv") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-2.0.1 (c (n "minus") (v "2.0.1") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0qyap0fwfnvfn7fs30sxqb8vh2qdr3as8q3dp0lh8jng282pcqja") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-2.0.2 (c (n "minus") (v "2.0.2") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1gjg2chc1l5xqyn4w42ncy3dd5zsf53ms7f2gip79lwnbc55bkal") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-2.1.0 (c (n "minus") (v "2.1.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1z3vd2lbxc7asl3hvcf8zm5wnd0pxf539axfpc8y4i7900hgr944") (f (quote (("tokio_lib" "tokio") ("static_output") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.0.0 (c (n "minus") (v "3.0.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "138jhpm2a3q9w1h2479ski0v19w5fa17lrrqi3ir9cmr6dlfsk6z") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.0.1 (c (n "minus") (v "3.0.1") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1fpknfp9dils8rvrcx2zjac2f0z996d65ab4765qyz2afim62icm") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.0.2 (c (n "minus") (v "3.0.2") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0j9kf8p0xh3vkvh141axm56fy3vr1rhla38ydh2mjvigja9yk2dh") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.1.0 (c (n "minus") (v "3.1.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0cp8h4r5fcjhl6ba3xn9m5z0na38f4iy7rw1d5sxm5zkb2vpgmzg") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.1.1 (c (n "minus") (v "3.1.1") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0x8rb6r7kkgfw070fbhzb6p2h8ksabdbm8ak3cwb1sxq2279ay7d") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.1.2 (c (n "minus") (v "3.1.2") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0747kdp4nrl218cpi8mqjb3qkzd2asdflxxk75akhm62326vykxm") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.2.0 (c (n "minus") (v "3.2.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0y3nbs97h0pbj4gkb4p87flsk8bi9ihrz6lg59a15ksbafqncrhv") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.3.0 (c (n "minus") (v "3.3.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1f5kx0q3pc04zlaf0dv2vmbzza65kjdr1h9kk8x716fyzc0w5pga") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.3.1 (c (n "minus") (v "3.3.1") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "126jxgl4rb036lj21c4iwazla3vsjf82hsfhb79dmqas4iwnxaif") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.3.2 (c (n "minus") (v "3.3.2") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0ic5vjsjs4a4qcdm325cxyzm16bm9vfp34378yyz50crrpc0dds4") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.3.3 (c (n "minus") (v "3.3.3") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0bb19pimghq429r2jfp4l9pc84nnaj74d77048hcxgkm5vbdcc5k") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-3.4.0 (c (n "minus") (v "3.4.0") (d (list (d (n "async-std") (r "^1.7.0") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.22") (d #t) (k 2)) (d (n "tracing-appender") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0k0h6zpfv87kkadkjjyhzgalciqvjrlhc48lxcp46rg6rk17s5d4") (f (quote (("tokio_lib" "tokio") ("static_output") ("search" "regex") ("async_std_lib" "async-std"))))))

(define-public crate-minus-4.0.0-alpha1 (c (n "minus") (v "4.0.0-alpha1") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "18klp789mqw7s2idy43nrry9z5p0ixxbwv6kxcv7qp8gd6sqp727") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha2 (c (n "minus") (v "4.0.0-alpha2") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1vgisc2nhvq3lvxgmib9cf9jq7wp0r1i8hkw1663hg8a21ajkhdv") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha3 (c (n "minus") (v "4.0.0-alpha3") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1wfj2s4nb0q3k8mzmavcr7qz6ha1ifmfw16lcwn0z4bv23lw61ls") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha4 (c (n "minus") (v "4.0.0-alpha4") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0p7s5hr5m7g490bwk7wn257ffig0bynrjkcmzpc8j2bn8jbjlbrc") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha5 (c (n "minus") (v "4.0.0-alpha5") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1655whb5vjrcbf829vfzp7n31c4ymgm2h37ir1p8r032ml17arv7") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha6 (c (n "minus") (v "4.0.0-alpha6") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0zrrm5gngpsjj7ajydd6qb1wfmnlmi3mbpigw8i0pdyqc3465j8s") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha7 (c (n "minus") (v "4.0.0-alpha7") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0wxcl0fgv1m40xmi9hhc1arq1vvdrsmhaiycni2l02rdqkm5y0rl") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha8 (c (n "minus") (v "4.0.0-alpha8") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1px50gimd0l5gnq4v8i6kai900gpw91wjvsg75gmyy3d0zvahsda") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0-alpha9 (c (n "minus") (v "4.0.0-alpha9") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1mciqy8vgcb38ic7sb2d8mij2xbhbmi8ymdrxfk8q3kxxmhynfmd") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.0 (c (n "minus") (v "4.0.0") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "160jil0lxhsf4ar1fgxa12gs8fywh77drhmk19pr6bwp28vwl67a") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.1 (c (n "minus") (v "4.0.1") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "03cscsjx7yqkg2fvycp4kvjrbabj40naqcn417mqpj1q59pjmmy9") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.2 (c (n "minus") (v "4.0.2") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0rf2rf86m23q0285mx89s672j3yi5j7n1ybph7170gbkfj2sdky0") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.3 (c (n "minus") (v "4.0.3") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1091f4mw1yzw94dg60zc66fn5vgmfhzq12hm9r0qmzsik2vgm6l8") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-4.0.4 (c (n "minus") (v "4.0.4") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "16hv4c0mr6x9fww145yhimdimm28wgqi27a4sghbrhxbc1v62n13") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex")))) (y #t)))

(define-public crate-minus-4.0.5 (c (n "minus") (v "4.0.5") (d (list (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "~0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "00w1p6llpspci4b9cmawq3d5gqrhhdra9qqva30p5mhjbm7ah30f") (f (quote (("tokio_lib" "tokio" "async-mutex") ("static_output") ("search" "regex") ("async_std_lib" "async-std" "async-mutex"))))))

(define-public crate-minus-5.0.0-alpha1 (c (n "minus") (v "5.0.0-alpha1") (d (list (d (n "async-global-executor") (r "^2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "15sv62fwcn7pcwkbnzfgd3apw3l97si8bxhkrgb0fl1ghrmcdvan") (f (quote (("static_output") ("search" "regex") ("async_output" "async-global-executor" "futures-lite" "crossterm/event-stream"))))))

(define-public crate-minus-5.0.0-alpha2 (c (n "minus") (v "5.0.0-alpha2") (d (list (d (n "async-global-executor") (r "^2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "03mz9sdzkmq56md18d9ghflxnn1pxfl93wj3ag6mxwgird7ci92f") (f (quote (("threads_output") ("static_output") ("search" "regex") ("async_output" "async-global-executor" "futures-lite" "crossterm/event-stream"))))))

(define-public crate-minus-5.0.0-alpha3 (c (n "minus") (v "5.0.0-alpha3") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1gvq32ymqxz8l5qs9rc0s1w97cx40wj6ndyl6gd76p2hqafpf0c2") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.0-alpha4 (c (n "minus") (v "5.0.0-alpha4") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1m5dvzr6iwx0hmxqc7xp3ij8c4p74jq8fz9ad33sdx18ns3iwn7l") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.0 (c (n "minus") (v "5.0.0") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1ahsxicmclvi9da904x20wmjb10s8crhx6j1m673qxry4q7grjvs") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.1 (c (n "minus") (v "5.0.1") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "05fn7byhklspz26ffxm11xx0lydmkjvhg3h94kb6hfj889qr285f") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.2 (c (n "minus") (v "5.0.2") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "17lfrmk3bf7k8xj5s2pnjvjx36dbc1qmhfc0nkvb7bhbncwjgbkj") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.3 (c (n "minus") (v "5.0.3") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0xj9346rjq0c6chqkv6rz3g7rzw4jlyairqx9zxxalbfx290s83l") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.4 (c (n "minus") (v "5.0.4") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0pfli0ncqzwmwq44dj2pm3vqrd9g050kmqlmnp8l3h03ww92cy8r") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.0.5 (c (n "minus") (v "5.0.5") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "17v0fjn0ghxawjbs497w488mssgcb5qm9aw71rdjzal1lqhxdjsb") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.1.0 (c (n "minus") (v "5.1.0") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0vb1mn476js5cqqm5pv68q9pnc23ry2hv8i1rgh54fj2hy99iis1") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.2.0 (c (n "minus") (v "5.2.0") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "140ypmnyhs42s55p8hm6sfcw40y3q19yy04c15k341y5qyxcrnj2") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.2.1 (c (n "minus") (v "5.2.1") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0s6b269pbh71i6hdkiqhfw5wnm6yjpw7084mk1ljvri0p8kldmds") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.3.0 (c (n "minus") (v "5.3.0") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0hj445abw6vnh0icy8gr5w3zzxx9prlbw7sq2y7ik81pcjfb54zn") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.3.1 (c (n "minus") (v "5.3.1") (d (list (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.5") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.13") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0s9xkjagirfsx4kh9q1icr01hh5105zwl37ra2iviav353m10b96") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.4.0 (c (n "minus") (v "5.4.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0shdgrpipzbglin3a3jyb2y7scqh18lsiv2d7da6ad8xf2c20fqc") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.4.1 (c (n "minus") (v "5.4.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0m49h9gvjvm5c6lrdsi54q2z0qmjqackjgaqw3kv995fmq29wj6r") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.4.2 (c (n "minus") (v "5.4.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0hwpvady53ixyyr3llczcfha2p4rdgcb66w47s5195cb5rrwxsx2") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.5.0 (c (n "minus") (v "5.5.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1jf8s18w0i1fhq43jw2z4qdqmgjrpchhmr7xg2qs97r8yph7sxl9") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.5.1 (c (n "minus") (v "5.5.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "06gvijs7x9wz60xnn66kl9a3cr6g3xxw1hydyfassv2c99l9368z") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.5.2 (c (n "minus") (v "5.5.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0y01iag18y12vvsgab693m8r856qg2g437zfnzzpk046m8249nfy") (f (quote (("static_output") ("search" "regex") ("dynamic_output")))) (y #t)))

(define-public crate-minus-5.5.3 (c (n "minus") (v "5.5.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0b9njv5lwv7sl1nbc1is4k14hp31wwjqyq3qf1q7yrk6cqfz7d8l") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.6.0 (c (n "minus") (v "5.6.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "19cwjr8ikqpngxj6c4xbbvylkjkp19cs4k2dnnav5ngzz4nywv6p") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

(define-public crate-minus-5.6.1 (c (n "minus") (v "5.6.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "~0.16") (f (quote ("unicode-width"))) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0ck8d1wgqzyry38piab6bp3xm520skk50dx7cqsr8dra1m9d0fq9") (f (quote (("static_output") ("search" "regex") ("dynamic_output"))))))

