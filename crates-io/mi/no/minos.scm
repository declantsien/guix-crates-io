(define-module (crates-io mi no minos) #:use-module (crates-io))

(define-public crate-minos-0.1.0 (c (n "minos") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.1.0") (d #t) (k 0)))) (h "0fjax0jps17p0whbpxczj3l988f2ak4kc42wvd7fnqh2ni4001zs") (y #t)))

(define-public crate-minos-0.2.0 (c (n "minos") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "013zx23ajclhngb6nw9gk2rv7jpg9xrj83szkrp87xchr85mbixv") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde")))) (y #t)))

(define-public crate-minos-0.2.1 (c (n "minos") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "16nrdmydiw705p1fhsxx9nxfjycx423bdjnfr9vlz52pgiwqs8sj") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde")))) (y #t)))

(define-public crate-minos-0.3.0 (c (n "minos") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "1k7pfcgigl9xq1qcvqr8h9c3k2xp7v2k2kz5p5ykqr5a6ap6g3y8") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde") ("custom_permission") ("all" "jwt" "toml_storage" "custom_permission")))) (y #t)))

(define-public crate-minos-0.3.1 (c (n "minos") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "1mpz3dssx8pljm6m5ywk6hp005a3yww9whb4c5qli4k7ld3dx8yf") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde") ("custom_permission") ("all" "jwt" "toml_storage" "custom_permission")))) (y #t)))

(define-public crate-minos-0.4.0 (c (n "minos") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "0njfkkdqsjzr8p1qnkjarq4l5v85ynpa017vazfm9ch9sc3lavi1") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde") ("custom_permission") ("all" "jwt" "toml_storage" "custom_permission")))) (y #t)))

(define-public crate-minos-0.5.0 (c (n "minos") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "1y8v7k19q56c01z3103dkiac196h81586pni5zsmq2sdwh3mdm67") (f (quote (("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde") ("full" "jwt" "toml_storage" "custom_permission") ("custom_permission"))))))

(define-public crate-minos-0.6.0-dev.1 (c (n "minos") (v "0.6.0-dev.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "1w4x2lrnwyf5jnf2zgq61f12ycimgj5sqrqjly23y6v6k1m25a3w") (f (quote (("unsafe_setters") ("toml_storage" "serde" "toml") ("jwt" "jsonwebtoken" "serde") ("full" "jwt" "toml_storage" "custom_permission") ("custom_permission")))) (y #t)))

(define-public crate-minos-0.6.0-dev.3 (c (n "minos") (v "0.6.0-dev.3") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "02bl3cck4l40fb8rrwjvww33f0radhrkfzk8rmh5d7243v3si47x") (f (quote (("unsafe_setters") ("toml_storage" "serde" "toml") ("resource_utils") ("jwt" "jsonwebtoken" "serde") ("full" "jwt" "toml_storage" "custom_permission" "resource_utils") ("custom_permission")))) (y #t)))

(define-public crate-minos-0.7.0-dev.1 (c (n "minos") (v "0.7.0-dev.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "heimdall_errors") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (o #t) (d #t) (k 0)))) (h "0lg7nkm6k5w6hybfni1d3khrzbgp5wxxndk158sfbmk5fpgaaf7p") (f (quote (("toml_storage" "serde" "toml" "resource_utils") ("server" "jwt" "toml_storage" "custom_authorization") ("resource_utils") ("jwt" "jsonwebtoken" "serde" "resource_utils") ("custom_authorization")))) (y #t)))

(define-public crate-minos-0.8.0-rc (c (n "minos") (v "0.8.0-rc") (d (list (d (n "derived") (r "^0.4.2") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1p764k1ilfr5nva3x2wgxckp12ackada7cqzbgr7z9ki367smdqb") (y #t)))

(define-public crate-minos-0.8.0-rc.2 (c (n "minos") (v "0.8.0-rc.2") (d (list (d (n "derived") (r "^0.4.2") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1lxk6kzgig2km0y19v3vskaqjiyv45y76ckbd2m4i9ix250xp9aa") (y #t)))

(define-public crate-minos-0.9.0-rc.1 (c (n "minos") (v "0.9.0-rc.1") (d (list (d (n "chrono") (r "^0.4.26") (d #t) (k 2)) (d (n "derived") (r "^0.4.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "10ad2163hkh6qqqyla252x290qqpc307v52qq5kfwpkrkhnn15ms")))

