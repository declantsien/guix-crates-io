(define-module (crates-io mi ni minio-rsc) #:use-module (crates-io))

(define-public crate-minio-rsc-0.1.0 (c (n "minio-rsc") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0b50rj6wiyg6bl9jryv4qnsvd106majsha9bq0248gv650k3l3wg") (y #t)))

(define-public crate-minio-rsc-0.1.1 (c (n "minio-rsc") (v "0.1.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0myx6vaj42lv14aw5fsg1jiqnbh4h8nzv926jn3x5sc1ss21p6wm") (y #t)))

(define-public crate-minio-rsc-0.1.2 (c (n "minio-rsc") (v "0.1.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1pjxdipzwbpysqks23q1ycasx6a03jf9nh89bajh8ywvanfdwi5b") (y #t)))

(define-public crate-minio-rsc-0.1.3 (c (n "minio-rsc") (v "0.1.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "19kgi2anragsrb3b7rjd9wj4nflgh3v1jfpiy9yxzzf7hykd6ljl") (y #t)))

(define-public crate-minio-rsc-0.1.4 (c (n "minio-rsc") (v "0.1.4") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "10zqxl30d5i7qb1c7il28rqr0y2a6y5pz4gnagay6b1rhy358gj6") (y #t)))

(define-public crate-minio-rsc-0.1.5 (c (n "minio-rsc") (v "0.1.5") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "07rfkrr99n9ff13dkcha2m4zi22y1x0jwv46pwhpshyfwp3cln09") (f (quote (("fs-tokio" "tokio"))))))

(define-public crate-minio-rsc-0.1.6 (c (n "minio-rsc") (v "0.1.6") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("native-tls" "blocking" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0331h0xc27d15z97nzbqr07dy3bffalpxphf9h7rqc40ldmqjrza") (f (quote (("fs-tokio" "tokio" "async-stream"))))))

(define-public crate-minio-rsc-0.1.7 (c (n "minio-rsc") (v "0.1.7") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock"))) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("stream"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1hbgm6bzbxrzx2sacfiak6p2n5b2fz00a7jwqbx66b0pnhd1y443") (f (quote (("fs-tokio" "tokio" "async-stream"))))))

(define-public crate-minio-rsc-0.2.0 (c (n "minio-rsc") (v "0.2.0") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock" "serde"))) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("stream"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "00i870i5ifpdcml5qz5iv915i1gmvp3z3rk460rlvsx1bgim5mkf") (f (quote (("fs-tokio" "tokio"))))))

(define-public crate-minio-rsc-0.2.1 (c (n "minio-rsc") (v "0.2.1") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock" "serde"))) (k 0)) (d (n "crc32fast") (r "^1.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("stream"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1w5n3smv3gsy155ns4c0xsjqc4qfskgxrkjzxn6b08l9ywfdhhz6") (f (quote (("fs-tokio" "tokio"))))))

(define-public crate-minio-rsc-0.2.2 (c (n "minio-rsc") (v "0.2.2") (d (list (d (n "async-mutex") (r "^1.4.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock" "serde"))) (k 0)) (d (n "crc32fast") (r "^1.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0snkv8x1y021pzl4p64pabpby407yj5b84lc944drif6a99bmg7y") (f (quote (("fs-tokio" "tokio"))))))

