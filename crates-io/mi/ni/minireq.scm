(define-module (crates-io mi ni minireq) #:use-module (crates-io))

(define-public crate-minireq-0.1.0 (c (n "minireq") (v "0.1.0") (d (list (d (n "embedded-nal") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minimq") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4") (d #t) (k 0)) (d (n "smlang") (r "^0.5") (d #t) (k 0)) (d (n "std-embedded-nal") (r "^0.1") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.9") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)))) (h "0m2n3dq935rhyaxrfk6dnfcpmpmmzrafhjlx8v2r661jh2s3khd2")))

(define-public crate-minireq-0.1.1 (c (n "minireq") (v "0.1.1") (d (list (d (n "embedded-nal") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minimq") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.5") (d #t) (k 0)) (d (n "smlang") (r "^0.6") (d #t) (k 0)) (d (n "std-embedded-nal") (r "^0.1") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.9") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)))) (h "14ai2i5gzs6a7di8zikfcc3xwa53p3v92d4p23vjxill3ixniay0")))

(define-public crate-minireq-0.2.0 (c (n "minireq") (v "0.2.0") (d (list (d (n "embedded-nal") (r "^0.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minimq") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.5") (d #t) (k 0)) (d (n "smlang") (r "^0.6") (d #t) (k 0)) (d (n "std-embedded-time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.9") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)))) (h "08xlpib420inxwm2asadaz7i8lzd51lkb043d76q6wdp1wj60pgq")))

(define-public crate-minireq-0.3.0 (c (n "minireq") (v "0.3.0") (d (list (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minimq") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.5") (d #t) (k 2)) (d (n "smlang") (r "^0.6") (d #t) (k 0)) (d (n "std-embedded-nal") (r "^0.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.9") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)))) (h "0liwdfwfd72fvknkh8y3278fd63np8rz1gjzdmwhvmf6kj427714")))

