(define-module (crates-io mi ni miniquad) #:use-module (crates-io))

(define-public crate-miniquad-0.1.0 (c (n "miniquad") (v "0.1.0") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.1.0") (d #t) (t "cfg(windows)") (k 0)))) (h "12q4d4ssf8an6kcik11rm7w3avjxdj9fspijfr9qkqgszk27agdw")))

(define-public crate-miniquad-0.1.1 (c (n "miniquad") (v "0.1.1") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.1.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1fp8y19cbxgxpdh0gspa3qkx8i6n7d036xsxfwxjg873kwpsczqr")))

(define-public crate-miniquad-0.1.2 (c (n "miniquad") (v "0.1.2") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.1.0") (d #t) (t "cfg(windows)") (k 0)))) (h "16damwnvg18fy7v3ixpvbpnc8aqkkq61ib5q3i10a8d2qh30h9g6")))

(define-public crate-miniquad-0.1.3 (c (n "miniquad") (v "0.1.3") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.1.0") (d #t) (t "cfg(windows)") (k 0)))) (h "10y4sk616yq5w9qkwwzsc9c43pbvfdhwz4c0rhv45gah8xymxb7y")))

(define-public crate-miniquad-0.2.0 (c (n "miniquad") (v "0.2.0") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0bsffzarbzwmvj95p6nag1ai9wjzspg1kb9daq0rr2idi8vd7wki")))

(define-public crate-miniquad-0.2.1 (c (n "miniquad") (v "0.2.1") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0hn8bxq0s4vdmlm58q0372c2lv9p17m96wq5hlgypp0hvjkc05w9")))

(define-public crate-miniquad-0.2.2 (c (n "miniquad") (v "0.2.2") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "0c33irskk747vn0a3lwd716dg7amzvq4y1amy2zmq5vfvpc0skm2")))

(define-public crate-miniquad-0.2.3 (c (n "miniquad") (v "0.2.3") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "0zmvj7adpm2c7p75w67p86r8gi3yyfnkq8a5l1fkhi86nllz72jm")))

(define-public crate-miniquad-0.2.4 (c (n "miniquad") (v "0.2.4") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "12vzlpq38404p0xy21jrb53n67gx4phlarvsgd1a85naydapw56a")))

(define-public crate-miniquad-0.2.5 (c (n "miniquad") (v "0.2.5") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "03m7nl6z788dl0b0n57q1jx6gvyjp3l6ir4ngkf7mdk41nnmyc6a")))

(define-public crate-miniquad-0.2.6 (c (n "miniquad") (v "0.2.6") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-linux") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "sapp-wasm") (r "^0.1.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "0jrgz0q6102hk23wczmxarh3h9rgf15blyfml3gr7j7d6nxbs8za")))

(define-public crate-miniquad-0.2.7 (c (n "miniquad") (v "0.2.7") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1k2idm51bjg4m41fm7hn0qnxiv2kmzjz1widr7ppg0a60m36dv8j")))

(define-public crate-miniquad-0.2.8 (c (n "miniquad") (v "0.2.8") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1snkkldxynmzfjhwjmrlx1rqafjnmayxmd2zigh3ypswdxihhs77")))

(define-public crate-miniquad-0.2.9 (c (n "miniquad") (v "0.2.9") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.3") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1031nm31fhdl04xh89rhw4hv311rp6x579dlbbxzslnvdm3q724m")))

(define-public crate-miniquad-0.2.10 (c (n "miniquad") (v "0.2.10") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "01nhl2nxqw3ypkwr0la8mygklmpf9pi7l1nmixx5gm9ilwn0n3xc")))

(define-public crate-miniquad-0.2.11 (c (n "miniquad") (v "0.2.11") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1qcakj616165hdxzk7ficn45qbc7skfdnjcvffb2v9wjdij1hc91")))

(define-public crate-miniquad-0.2.12 (c (n "miniquad") (v "0.2.12") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1bwd74cd3j69j84zcvwr5niy2d8hw17jfkh38cm4q8c23753c74q")))

(define-public crate-miniquad-0.2.13 (c (n "miniquad") (v "0.2.13") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.4") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)))) (h "070rfbkgfd75hiprnwwzvrnhwbh06kznna8zayh6jmvjv22qkq81")))

(define-public crate-miniquad-0.2.14 (c (n "miniquad") (v "0.2.14") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.5") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)))) (h "1bg6y5nwlb97dz67zgm5m4rqw6r3vqmrmhmn8xzfsv80fmbcilfj")))

(define-public crate-miniquad-0.2.15 (c (n "miniquad") (v "0.2.15") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.1") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.5") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1haq62s23j896bdl1hh2z6yvxsr09rgvc4nm2zr6yzlb0xbga4sb")))

(define-public crate-miniquad-0.2.17 (c (n "miniquad") (v "0.2.17") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.8") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "03243w1xxpgzw2335v3q2bmg4m54j7yf3yh2dgd5ifp7k05f3bry")))

(define-public crate-miniquad-0.2.18 (c (n "miniquad") (v "0.2.18") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.8") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "061q2cbg3avsdrydcfni2ylpgc8rzadrdj0rb8dkg960d62ckns5")))

(define-public crate-miniquad-0.2.19 (c (n "miniquad") (v "0.2.19") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.8") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "10ja602ymlnywzwqhs3yn7hb5sbx2f3666ljaxf9bj7n6rbp7vk8")))

(define-public crate-miniquad-0.2.20 (c (n "miniquad") (v "0.2.20") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.8") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0m1i0cki8vmlmklvzb51ax9cyvwvz68sbl85nzr3xfyfa5q7p69w")))

(define-public crate-miniquad-0.2.21 (c (n "miniquad") (v "0.2.21") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.9") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0dnxlqlsyildrcmq9jbw11wnqqlyhpmip93vhdmcky597pf2npym")))

(define-public crate-miniquad-0.2.22 (c (n "miniquad") (v "0.2.22") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.10") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1p817z4k41gxa84bgiclfm8lrs07a5gjjvaa1wmlvmaimydl7mpc")))

(define-public crate-miniquad-0.2.23 (c (n "miniquad") (v "0.2.23") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0rkfkx2hj002n58iyl2ijsrr68ipalb20kx41b996ry7w6zqidcw")))

(define-public crate-miniquad-0.2.24 (c (n "miniquad") (v "0.2.24") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1r2r23bp41wgnfwqvgnkgxn8yzvpa1lc8qyb7d3l8lgvfw29xkgs") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.25 (c (n "miniquad") (v "0.2.25") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1yfzvz2i5w79sl930xc1y92xyyd6607s6wj3bki1g5i8b3iqyqbr") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.27 (c (n "miniquad") (v "0.2.27") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "12yh3a0c6rys1yv83q3x2nda5awkj9y6ik299vd2qscn2n7016hv") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.28 (c (n "miniquad") (v "0.2.28") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1ifn4j7mmk55mb4h19lxbc8k6ih48rlbj0km32bvx9nvsmyj2z54") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.29 (c (n "miniquad") (v "0.2.29") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1hxpz1g1k05azrbpj3bd82vhrxd1032dx2qar9spnycbsfa3dwkn") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.30 (c (n "miniquad") (v "0.2.30") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "01whkgfbrck3rkny9cyr0fiwxwvd2xybgy2vk5wdihm3ivblqlx9") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.31 (c (n "miniquad") (v "0.2.31") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.2") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.11") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "18q13chkzfayqf4pqysk2al12jgxn0ydd741hb30gsv6fi2j38zq") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.32 (c (n "miniquad") (v "0.2.32") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "^0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "^0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "^0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1qgbby0s5z32klh3j1y5491cwc7jl7jk27zbn41idsswsrqzix0y") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.33 (c (n "miniquad") (v "0.2.33") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0ca2ncb6ady85dk855c4bffrqrrzgn7gzn3zi656bdv9pkh0gxgy") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.34 (c (n "miniquad") (v "0.2.34") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "09x61caj09jgxm9rjcd68gfn3j746nlncnbykxi9klwnrx27x5ns") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.35 (c (n "miniquad") (v "0.2.35") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1rg62jfscz5mfbl9q99cgsdim9fx5gj25yh5kg7y42zcs15k2kdc") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.36 (c (n "miniquad") (v "0.2.36") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1y2wg9kjfbi18957z4hhjyp83ya9k4pssrhr3yn3ag10w9iw81ap") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.37 (c (n "miniquad") (v "0.2.37") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "049jpmmarbq9ixlyz2xf7h42d3pmz62ai0qb0h7br2mghypiaa12") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.38 (c (n "miniquad") (v "0.2.38") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0yz7s7clnj1phhrs5fg16961l1rb5cnw0vgxf7lkmqarmlaxwxgr") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.39 (c (n "miniquad") (v "0.2.39") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0cscmaizx9zw3gglf90q3myq8860ribp5kb6jfb1l29qsywi83mw") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.40 (c (n "miniquad") (v "0.2.40") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0ysb0prnxi5vdkvpdc4w9hn1qjm4cqis2s4gpxilwd6bcql4yvf2") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.41 (c (n "miniquad") (v "0.2.41") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.12") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0p1gwz0p424c1c01538057yy750sbsg1vhdzlm8rlvxz0zllmkdq") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.42 (c (n "miniquad") (v "0.2.42") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.13") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1xsgznrh6gjsccipx8da1jr40q6mazjzji11dsq3mlfgm1azfrji") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.43 (c (n "miniquad") (v "0.2.43") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.13") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0qv37s0ni3m1749w1fbrxn6vm4ypgvmd98qldsakr0gvqgzsrhsh") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.44 (c (n "miniquad") (v "0.2.44") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.13") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0mxqhrbf9zv08c7fqcja53agjcfns0702n370r53wv097m06mbxv") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.45 (c (n "miniquad") (v "0.2.45") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1kgjvd9pg3hh1c1qxk2yhxq4gywzkp196vkc6aa0cdyh5hbvsrv8") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.46 (c (n "miniquad") (v "0.2.46") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0z411nhwv1njhz2nwlcznqx16ylym1qv3c8zhib0a1ca86gdsz2b") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.47 (c (n "miniquad") (v "0.2.47") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "060yxdj934czcpxrbhp95a3ax4iq7d6mzx2hjbfzz4mrj1far335") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.48 (c (n "miniquad") (v "0.2.48") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1fx467wg1riw643c9xiwbdwmxcrwv4qxnn7m6adfm3hxdsz52dix") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.49 (c (n "miniquad") (v "0.2.49") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0dgmai31pr33xjwb3d1i4iwl802ciya7a5hc8ks21p1yn2gmnmki") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.50 (c (n "miniquad") (v "0.2.50") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0a6ihla4y9zdrri3bg8p6pqqhw2qaimsmg26j8h8ci254nc6gl12") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.51 (c (n "miniquad") (v "0.2.51") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.14") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1dbjwrx7d7ssp6l39wspz14ghlg4xc6parrf8flsb9q7zcxgf4x3") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.52 (c (n "miniquad") (v "0.2.52") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0dl7ks1z8m4a3fj2fyi8isvxfd80bfyg9pi4jhhnp6qz81jzpkms") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.53 (c (n "miniquad") (v "0.2.53") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0azlab4yrjp5dbcjlslnq7lyr0hbb3mznx99h9393d6bjfifn47a") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.54 (c (n "miniquad") (v "0.2.54") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "08y4fzrjjlp454n8al5swqa4fn6q5mxc161kjphz53i3xshdq5mr") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.0 (c (n "miniquad") (v "0.3.0-alpha.0") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "0bpm720ran8k1q6gshk2mh1nyiykfx6p7gm1k9ia63as9z4slq5n") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.2.55 (c (n "miniquad") (v "0.2.55") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "087vpnqh0yxcg1d5l504w2bk4xx0wfimpnbzpzsq9alwbadxd0ws") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.2 (c (n "miniquad") (v "0.3.0-alpha.2") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1077am50wnnsc9gcamd5c9klq7ghwqdf0q4zjc2jrry131p62a9p") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.3 (c (n "miniquad") (v "0.3.0-alpha.3") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "18k3xf4wfnyq6grd9pzcwsjzidxzalw5mz3pjkwl5rhjx29bjava") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.4 (c (n "miniquad") (v "0.3.0-alpha.4") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.15") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "0fxlqwa3iwchxywi7yj32ib6zd473ymaklxlay3mbfimiz6firin") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.5 (c (n "miniquad") (v "0.3.0-alpha.5") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "= 0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "= 0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "= 0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "= 0.1.16") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "= 0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1gzicxxbvg45dkjlici3xcp3k0rzii4rsh4szvzv2pxsg56qj08i") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.6 (c (n "miniquad") (v "0.3.0-alpha.6") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.16") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1cigai1ixp5h92kqf6x02j0rwa44aydis91a6x6wgf2qqcnfzlc6") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.7 (c (n "miniquad") (v "0.3.0-alpha.7") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.17") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "13b0bb27md1xvplgc2paz68dkpfd5cz1gl68gm4jlyydi6qq57w3") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.8 (c (n "miniquad") (v "0.3.0-alpha.8") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.17") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1msf8afnaks8qj1imyb4lmgff9p8p3n7vfk56mg7nhb895k2mipn") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.9 (c (n "miniquad") (v "0.3.0-alpha.9") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.17") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1s28g4sjqky3id8bk0gxhd79ywd4prdqrdk5xyy0vjqi9wjfbpkn") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.10 (c (n "miniquad") (v "0.3.0-alpha.10") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"anroid\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.18") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "15x1n1qynpxr23k8ib3ag0kyckrf098svf0323lgl5824d20z8mv") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.11 (c (n "miniquad") (v "0.3.0-alpha.11") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.18") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1s8vjmn4a0spqv7kk6gq545f9r3db048450hx401f2hlf4yn31wh") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.12 (c (n "miniquad") (v "0.3.0-alpha.12") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.18") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "00k85gmbikc7krsxyvigcbax6c2ps7znjv98qx6f7alw7sxrws1d") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.13 (c (n "miniquad") (v "0.3.0-alpha.13") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.18") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.9") (d #t) (t "cfg(windows)") (k 0)))) (h "0p4mh2lws2zsh6c5vxqk3cb44x0lg40dm1w9vcrndf9fxa1s0ybd") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.14 (c (n "miniquad") (v "0.3.0-alpha.14") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.3") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "0sf6fpm11fqczmax9ww0vqbjajs398j4lcn3lg98r9nns8jc2gdj") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.15 (c (n "miniquad") (v "0.3.0-alpha.15") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1zgjvbpakx9yyka8835dvdpvy859pwl92xjfpmm5nzbxr6z9agm0") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.16 (c (n "miniquad") (v "0.3.0-alpha.16") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1ahds59dfw6d30sxpxmrbcrlfk19v7fbik7cf5m176jydk6fd45b") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.17 (c (n "miniquad") (v "0.3.0-alpha.17") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "066a0mgzih3mjn6lazqp193dk84ncymm8141yxdj85vxb6zhrk2b") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.18 (c (n "miniquad") (v "0.3.0-alpha.18") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1wsga9q7jd6q9lxk729gh2ddqmvaljasc03ln3grlx47ma6vlghj") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.19 (c (n "miniquad") (v "0.3.0-alpha.19") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.10") (d #t) (t "cfg(windows)") (k 0)))) (h "08xibzwi3pzv2r8afd8c0k1z58cwxkzp26iw7agslkx145qnlarr") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.20 (c (n "miniquad") (v "0.3.0-alpha.20") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.11") (d #t) (t "cfg(windows)") (k 0)))) (h "0lxnya633vmrahbv5n1r1bqnldylmnjpdxyz2zyllwps68h69p3q") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.21 (c (n "miniquad") (v "0.3.0-alpha.21") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.12") (d #t) (t "cfg(windows)") (k 0)))) (h "1wdf2y5cdb4qxhw26d9zi4rd94mr6vp5mpqn2f0k8zjd8c11xn2m") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.22 (c (n "miniquad") (v "0.3.0-alpha.22") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.13") (d #t) (t "cfg(windows)") (k 0)))) (h "032d5lalya3kq1hn9rkmzck2ychilcik527mrq6pw68d8hvwjs3d") (f (quote (("log-impl") ("default"))))))

(define-public crate-miniquad-0.3.0-alpha.23 (c (n "miniquad") (v "0.3.0-alpha.23") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.9") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.13") (d #t) (t "cfg(windows)") (k 0)))) (h "1crwjzc54gmyzc9wcszdm8vlripjd2c982fjcl0jmfhspz8ps48h") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.24 (c (n "miniquad") (v "0.3.0-alpha.24") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.4") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.10") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.19") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "sapp-windows") (r "=0.2.13") (d #t) (t "cfg(windows)") (k 0)))) (h "09lmzs4i9h836b4y5sd4g8bblg40n4znqhyrb06zc1wlw0fi80cd") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.25 (c (n "miniquad") (v "0.3.0-alpha.25") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.11") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.14") (d #t) (t "cfg(windows)") (k 0)))) (h "07f1nms03vz38y3blwy57pck4i5q2lrapdg3dxvbf60j67vqzyjg") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.26 (c (n "miniquad") (v "0.3.0-alpha.26") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.11") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.14") (d #t) (t "cfg(windows)") (k 0)))) (h "1brwgv2zdm8pq0a9m333pz7nlz9f1sgl86g8cd85cbbbaa5xr4rg") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.27 (c (n "miniquad") (v "0.3.0-alpha.27") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.12") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.22") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.15") (d #t) (t "cfg(windows)") (k 0)))) (h "13x3qdc7rw35yvxi9y9lasa0x6nzpagjz52jb5rwij0v6w8dy4l7") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.28 (c (n "miniquad") (v "0.3.0-alpha.28") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.12") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.23") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "11pj92vd6ry93zznifg7qm269fbaxk7c6zzgzsgi2w2rqhqfa99p") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.29 (c (n "miniquad") (v "0.3.0-alpha.29") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.12") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.23") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "091whqkmwm0wxdh1wxml5p4scij9p0h7rmmdvdh4pqcfrariihgh") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.30 (c (n "miniquad") (v "0.3.0-alpha.30") (d (list (d (n "glam") (r "^0.8") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.12") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.24") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "0f7qycqj51815758v4kin40zxddb83mvp2lhyi2lh256kd3lyksl") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.31 (c (n "miniquad") (v "0.3.0-alpha.31") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.12") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "0znkgdpxlk0fqyq6y4hcw4d74rrlpzsrknm77an9sdnbvszr3y5q") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.33 (c (n "miniquad") (v "0.3.0-alpha.33") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "178bv8c92r0cg1592p8vxqxl5cjb5437m06a9livvk9ih0cv09ky") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.34 (c (n "miniquad") (v "0.3.0-alpha.34") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.16") (d #t) (t "cfg(windows)") (k 0)))) (h "09cvrhh9wvr9dqp918glphm5xi8vgwcmxh2fa9nn385y0w10s2kk") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.35 (c (n "miniquad") (v "0.3.0-alpha.35") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.17") (d #t) (t "cfg(windows)") (k 0)))) (h "1ryhmipzzvzb6919n6d1652qnh3s9km3irkmckvlx8flscg5yx8f") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.36 (c (n "miniquad") (v "0.3.0-alpha.36") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.18") (d #t) (t "cfg(windows)") (k 0)))) (h "1jmgnajmwryvfkyhdszkf4fx0i98fy4dmvm0ld4mpcykrlzfaapp") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.37 (c (n "miniquad") (v "0.3.0-alpha.37") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.18") (d #t) (t "cfg(windows)") (k 0)))) (h "1fvzka42q2pgcrfb0gf688ky56vlz2mr681h05ygqlv9hkps74v7") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.38 (c (n "miniquad") (v "0.3.0-alpha.38") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "0x7rd04phbgg8qxbjpg48y5lpqbabccj0cpz4h8h2dya575firya") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.39 (c (n "miniquad") (v "0.3.0-alpha.39") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "^0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.18") (d #t) (t "cfg(windows)") (k 0)))) (h "0l56mssh47bph6yxcnd3qpb2dyb4hz7z8wx0bi4rafkj45l8g2xk") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.40 (c (n "miniquad") (v "0.3.0-alpha.40") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.18") (d #t) (t "cfg(windows)") (k 0)))) (h "01iwv82l2vcax8r52id9krxpp4i32ipq7m4csp0ra3f4gj5r8125") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.41 (c (n "miniquad") (v "0.3.0-alpha.41") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "1dc2ikh7x20rf3ps63lkx6a4w638yj23swgrw2zhi5dvblk47kl4") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux")))) (y #t)))

(define-public crate-miniquad-0.3.0-alpha.42 (c (n "miniquad") (v "0.3.0-alpha.42") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.14") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "181vjvliv7c1iq6pxm2p8ankkbhyjj1v1jwzi3vvh75aplyagfvm") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.43 (c (n "miniquad") (v "0.3.0-alpha.43") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-linux") (r "=0.1.13") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "1a4xf85w4k8y87hifnbmil3zlaq7vaaksidsq167l9jglq5xy7jb") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.44 (c (n "miniquad") (v "0.3.0-alpha.44") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-linux") (r "=0.1.14") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "0ikb4s38jdd774j27i330ml4dd0x0qxygwg52fpxswri6c0fak9p") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.45 (c (n "miniquad") (v "0.3.0-alpha.45") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-linux") (r "=0.1.14") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.19") (d #t) (t "cfg(windows)") (k 0)))) (h "0pmgmxp47jq4zpymhsn3y0qflxzggr42aw9dds3xmxrv10j9kcx5") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0-alpha.46 (c (n "miniquad") (v "0.3.0-alpha.46") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-linux") (r "=0.1.14") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.20") (d #t) (t "cfg(windows)") (k 0)))) (h "00yphr9b0ipv9dhby23val93c621iznlmaqmf76dw4qqzdcj8in1") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.0 (c (n "miniquad") (v "0.3.0") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "sapp-android") (r "=0.1.15") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "sapp-darwin") (r "=0.1.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sapp-dummy") (r "=0.1.5") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"macos\", target_os = \"android\", target_os = \"ios\", target_arch = \"wasm32\", windows)))") (k 0)) (d (n "sapp-ios") (r "=0.1.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "sapp-kms") (r "=0.1.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-linux") (r "=0.1.15") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "sapp-wasm") (r "=0.1.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sapp-windows") (r "=0.2.21") (d #t) (t "cfg(windows)") (k 0)))) (h "0idnnm1apna6z9pf888nsv55885aaj00vj3pcm4gnq7b7kl2rfdl") (f (quote (("log-impl") ("kms" "sapp-kms") ("default" "sapp-linux"))))))

(define-public crate-miniquad-0.3.1 (c (n "miniquad") (v "0.3.1") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0x44gs8098aipz1z5wjb0iyni5kivbsfb5w40vgwi7hpr8xfmxia") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.2 (c (n "miniquad") (v "0.3.2") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0hlar488yih697ypcg11j93nf685iplvgsigyap0jc3zbgi3hy2s") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.3 (c (n "miniquad") (v "0.3.3") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0w63rdkylpc26qb3s074ak46drxs0fnshmcwixirr1a817ah6mlf") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.4 (c (n "miniquad") (v "0.3.4") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0amw5p6h026fapx1wvqsf086av8z4fghwf51aj8iwf5h2cs0wlqy") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.5 (c (n "miniquad") (v "0.3.5") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0b1dsgznqps7v2v61400g1k0jzxwa3zmjfbymy86dpmczxd555an") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.7 (c (n "miniquad") (v "0.3.7") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ghzani2jbvm4z1yjzfja5j0zgc02dp22vhqrqii1xvwqskd79b6") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.8 (c (n "miniquad") (v "0.3.8") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "152qy7rj1prq3z55via1nrlpps4256n87zp3cf22949qq8mf416q") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.9 (c (n "miniquad") (v "0.3.9") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0d3azw4fyviiv72skxirbqrcmg9gz0xsjmppqq4rb37wr39cq2ly") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.10 (c (n "miniquad") (v "0.3.10") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "00nb0ihdx92gjjkldfaarcjb6mxb065y7nsc0yndsh9c4qmdvsn0") (f (quote (("log-impl")))) (y #t)))

(define-public crate-miniquad-0.3.11 (c (n "miniquad") (v "0.3.11") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "047ncsbw2yxhagc5s1xapd9dzqvwav2lc6b2hipj6jwm8f84c770") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.12 (c (n "miniquad") (v "0.3.12") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0mpxfdly4zaqi9533bpix622hyq185z1h94k0d6ygnyjm62crlgi") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.13 (c (n "miniquad") (v "0.3.13") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1m1g4vpg9vn597klgg56ki9hhfg0nc6xhb84bwv9j2r9iyqpayd0") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.14 (c (n "miniquad") (v "0.3.14") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15hlb40brba69jb8j7ymc82i7j84l4kgrr530ajbz4dzkzh1yf26") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.15 (c (n "miniquad") (v "0.3.15") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "03r7m2vffz450qg20p1082bndw19mqghmsgcbdq9djc6axzfrlyk") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.0 (c (n "miniquad") (v "0.4.0-alpha.0") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19ms19w9k54rf87xzlg2kyj644gxnf86ddcvjibwjgqgk9arf4ak") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.3.16 (c (n "miniquad") (v "0.3.16") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1dhq4mm5s67rq1m7m0vqg071bgz8ad13bv1c7c30jwgavxiis9f1") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.2 (c (n "miniquad") (v "0.4.0-alpha.2") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hj7akwd0vrkiz5hy41is4q4s7dyhclf04svnmcswn0wm8wg4qql") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.3 (c (n "miniquad") (v "0.4.0-alpha.3") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "16qz5j4rpb4kcam0cmgqfh2xzb2byy93kzgykdl4qdz11dwsq2gl") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.4 (c (n "miniquad") (v "0.4.0-alpha.4") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0f7mh1cvw3377av4xv5vji28xarbh834q1c77sq53rvgpqmwg87r") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.5 (c (n "miniquad") (v "0.4.0-alpha.5") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18lpq5f188sarc1w1yc36ix1sa53hhb574jr1h14y6lqmm7ymcrz") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.6 (c (n "miniquad") (v "0.4.0-alpha.6") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0prlxzhvh5ddkp1balhr49sirzsjfbrcxm7wvwscfh1w83xk6q54") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.7 (c (n "miniquad") (v "0.4.0-alpha.7") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1lyx4580f5h69kjh5a1k23k7g3zsnsyzn2h7h6c0xnprx4x227d1") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.8 (c (n "miniquad") (v "0.4.0-alpha.8") (d (list (d (n "glam") (r "^0.14") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0wrkdvmv898nw5fv9m1fc3cilc2pn3wy6jjiqacp1l9jrir3y1bj") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.9 (c (n "miniquad") (v "0.4.0-alpha.9") (d (list (d (n "glam") (r "^0.24") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0gs7i2pjz2w0ckxh97da3mdwzs1411acdd7jvydail9h1y6cn3pi") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0-alpha.10 (c (n "miniquad") (v "0.4.0-alpha.10") (d (list (d (n "glam") (r "^0.24") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02qa79a2hq2vj1njw375hriqjbcyijindlvjrasdk8ls1i02qx0q") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.0 (c (n "miniquad") (v "0.4.0") (d (list (d (n "glam") (r "^0.24") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "120rdq9kbpmfplgha1ix23bfqqn736cxvgsi4x8q87r6mmwcbsci") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.1 (c (n "miniquad") (v "0.4.1") (d (list (d (n "glam") (r "^0.24") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1lkwaxxrzranwlzs04rgbqd4js9n2yjk1ikrdzpwjdmphsr84wp1") (f (quote (("log-impl"))))))

(define-public crate-miniquad-0.4.2 (c (n "miniquad") (v "0.4.2") (d (list (d (n "glam") (r "^0.24") (f (quote ("scalar-math"))) (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "quad-rand") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi" "windef" "shellscalingapi" "errhandlingapi" "windowsx" "winbase" "hidusage"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18rj5g9xfs7hwfx875d8pyw7jidjpg0ccwbfbm3hw44ikaxh1i28") (f (quote (("log-impl"))))))

