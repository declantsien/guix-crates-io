(define-module (crates-io mi ni mini-rxtx) #:use-module (crates-io))

(define-public crate-mini-rxtx-0.1.0 (c (n "mini-rxtx") (v "0.1.0") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.0") (d #t) (k 0)) (d (n "heapless") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "13c373d3mbv0cj9xcif3slwd2mf1df1laq2s3krgkkbqwi1cxvva") (f (quote (("std" "ssmarshal/std" "log" "thiserror"))))))

(define-public crate-mini-rxtx-0.1.1 (c (n "mini-rxtx") (v "0.1.1") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.0") (d #t) (k 0)) (d (n "heapless") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "17kn6g7jyvq84s8mh55560iadm930j05hc5kgyrsb1xwj51cq6vx") (f (quote (("std" "ssmarshal/std" "log" "thiserror"))))))

(define-public crate-mini-rxtx-0.1.2 (c (n "mini-rxtx") (v "0.1.2") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0dv3x7qn8fbps2zbpqyymkxbcn4ckanrm32bw5ha96hfgj3db52g") (f (quote (("std" "ssmarshal/std" "log" "thiserror")))) (y #t)))

(define-public crate-mini-rxtx-0.2.0 (c (n "mini-rxtx") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0rhm15ixc808wdnccbndm40n8c1ncbkag7nk6nbnx618bbpd17cj") (f (quote (("std" "ssmarshal/std" "log" "thiserror"))))))

(define-public crate-mini-rxtx-0.3.0 (c (n "mini-rxtx") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "defmt") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1cga57j3lsywph60cbqmdnp5iy1a0w3qacrs6gh8c64xqqxwzlwa") (f (quote (("std" "ssmarshal/std" "log" "thiserror") ("print-defmt" "defmt"))))))

