(define-module (crates-io mi ni minidumper) #:use-module (crates-io))

(define-public crate-minidumper-0.3.0 (c (n "minidumper") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ji6c4s2lhaa63kg4x0jf1c3aas8idsi5766ihzpslp6fy28p639")))

(define-public crate-minidumper-0.3.1 (c (n "minidumper") (v "0.3.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1p3jsjw2lwyb3yqgvysc41jmpag95z6jnddqlnnibn4kqhzvlqw1")))

(define-public crate-minidumper-0.4.0 (c (n "minidumper") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07f6gbvhsg3iyx1ik1l594dn844w8qy69f1gizvblk2k77fpigfn")))

(define-public crate-minidumper-0.5.0 (c (n "minidumper") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ci9i08rps6sgddx89ipkag7h9xxkxy6jrjpcmril8jjz4ci1hsd")))

(define-public crate-minidumper-0.5.1 (c (n "minidumper") (v "0.5.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11k5sa81innq138ygxni1069ghawqizbwjvqlj70sxpkghp97h3v")))

(define-public crate-minidumper-0.6.0 (c (n "minidumper") (v "0.6.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "windows-sys") (r "^0.42") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1yrlfn3yln81wcz9qydvm95fg10c427fv039y77fmazp4is5grx8")))

(define-public crate-minidumper-0.7.0 (c (n "minidumper") (v "0.7.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "winbase" "winsock2"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zgasg2mjxj9fhya61azn10j37ry9m785vhq4cn9bnnaqkhs1l4c")))

(define-public crate-minidumper-0.8.0 (c (n "minidumper") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^2.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)))) (h "15wzhqjd16mknsayw2xj2ykzxc88ra1fixbkhlpmd67c8jyic696")))

(define-public crate-minidumper-0.8.1 (c (n "minidumper") (v "0.8.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^3.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)))) (h "0ka5598z589y8552mn84fz01xjwbzm0b85gk47c8g3l618a86kk2")))

(define-public crate-minidumper-0.8.2 (c (n "minidumper") (v "0.8.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crash-context") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polling") (r "^3.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "scroll") (r "^0.12") (f (quote ("derive"))) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uds") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 2)))) (h "1cnynsv7yfg6dblv0sliyp252f2gwjzdrbk3s6i1q8l3hix6k68v")))

