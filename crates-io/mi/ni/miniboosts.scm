(define-module (crates-io mi ni miniboosts) #:use-module (crates-io))

(define-public crate-miniboosts-0.1.0 (c (n "miniboosts") (v "0.1.0") (d (list (d (n "grb") (r "^1.3.0") (d #t) (k 0)) (d (n "polars") (r "^0.27.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "18ypkl31ajqm7ag4gpxlncc527s948r78gnq358g9bcn52f9dg43")))

(define-public crate-miniboosts-0.2.0 (c (n "miniboosts") (v "0.2.0") (d (list (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.27.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "1i589aq08cai8fi88dcnxjiak31dvmwkvc55ybys4z451fh0gsqg") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.2.1 (c (n "miniboosts") (v "0.2.1") (d (list (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.27.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "1p7kxiimy73j643szzfb0dh40vvrz8jy77dw17s409gqya65bxb2") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.2.2 (c (n "miniboosts") (v "0.2.2") (d (list (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.27.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "1rv51f7lpgvvlzpi933dh5m2dkh64v8ddw9cs9144y76g27n3by9") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.2.3 (c (n "miniboosts") (v "0.2.3") (d (list (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.30.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)))) (h "0n4hc4x5qyfgzjm7k57axxv90kj5k86rjpcjhb6kaqin5kypbc1p") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.3.0 (c (n "miniboosts") (v "0.3.0") (d (list (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (d #t) (k 0)) (d (n "polars") (r "^0.32.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)))) (h "0d67ll4rq5lq0z17ji08v0nrr6kk5j5h2czyqi650dry8k10izjg") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.3.1 (c (n "miniboosts") (v "0.3.1") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (d #t) (k 0)) (d (n "polars") (r "^0.32.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)))) (h "0xq4bc9xxznxlca9dcx376y2a2vaxpaasm3k8p2i5cxpzpszfayi") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.3.2 (c (n "miniboosts") (v "0.3.2") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)))) (h "009nrjcg7q2qicw1i39k8pka2hv70a62300hbni5bf1793mv0wzc") (f (quote (("extended" "grb"))))))

(define-public crate-miniboosts-0.3.3 (c (n "miniboosts") (v "0.3.3") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)))) (h "1z302j664x31c65wncq85v27ixma785zqlimqhbm02n7ni2grqhb") (f (quote (("extended" "grb"))))))

