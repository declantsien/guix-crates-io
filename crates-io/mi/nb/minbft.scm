(define-module (crates-io mi nb minbft) #:use-module (crates-io))

(define-public crate-minbft-0.1.0 (c (n "minbft") (v "0.1.0") (h "0240rmwc3wds8bp61zcdwbikaf5qpyhj2hx1yrswp8k9d9ldn16j") (y #t)))

(define-public crate-minbft-0.0.0-reserved (c (n "minbft") (v "0.0.0-reserved") (h "0av29rgbdlfsi9xrh4vppdz7r18c7nxq1k5wkijkylxgy4bv8zr9") (y #t)))

(define-public crate-minbft-0.10.0 (c (n "minbft") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (d #t) (k 0)) (d (n "shared-ids") (r "^0.10.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "usig") (r "^0.10.0") (d #t) (k 0)))) (h "127nm2m37p3a1az9y4nybw7wffcqvl3pf11j4lznr3saa2ayxds7")))

(define-public crate-minbft-1.0.0 (c (n "minbft") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.0") (d #t) (k 0)) (d (n "shared-ids") (r "^0.11.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "usig") (r "^0.11.0") (d #t) (k 0)))) (h "0f7h6sqhmrldqqz3pv7x2svpy7ysg7gfnsh5qbs4cgqksh5d6r5q")))

(define-public crate-minbft-1.0.2 (c (n "minbft") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.0") (d #t) (k 0)) (d (n "shared-ids") (r "^0.11.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "usig") (r "^0.11.0") (d #t) (k 0)))) (h "07s3zrby5iwwih9hzmaq8yarfbdn7sw1wc75k5kkba0jfnpnw360")))

(define-public crate-minbft-1.0.3 (c (n "minbft") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.0") (d #t) (k 0)) (d (n "shared-ids") (r "^0.11.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "usig") (r "^0.11.0") (d #t) (k 0)))) (h "07ji0q2jbb469zyrvnmk78zdj1rszj8y02yn01l6p94324f4pbaa")))

