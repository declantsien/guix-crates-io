(define-module (crates-io mi rr mirro-rs) #:use-module (crates-io))

(define-public crate-mirro-rs-0.1.0 (c (n "mirro-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "archlinux") (r "^0.1.0") (f (quote ("time"))) (d #t) (k 0) (p "mirrors-arch")) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.0.7") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.6") (d #t) (k 1)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "tui-logger") (r "^0.8.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "0g4nwjmw970acpy0kcbd0rl787zsn69r075cv05bqq0qh1zzv6zj") (f (quote (("default")))) (s 2) (e (quote (("yaml" "dep:serde_yaml" "dep:notify" "dep:cfg-if") ("toml" "dep:toml" "dep:notify" "dep:cfg-if") ("json" "dep:serde_json" "dep:notify" "dep:cfg-if"))))))

(define-public crate-mirro-rs-0.2.0 (c (n "mirro-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "archlinux") (r "^0.1.1") (f (quote ("time"))) (d #t) (k 0) (p "mirrors-arch")) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.0.7") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.6") (d #t) (k 1)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (f (quote ("crossterm"))) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "systemd-journal-logger") (r "^2.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "tui-logger") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1b6kxsnjchajr49sx4zqb3gspnydpipl6073k64xjhg7iv64iss4") (f (quote (("default")))) (s 2) (e (quote (("yaml" "dep:serde_yaml" "dep:notify" "dep:cfg-if") ("toml" "dep:toml" "dep:notify" "dep:cfg-if") ("json" "dep:serde_json" "dep:notify" "dep:cfg-if"))))))

(define-public crate-mirro-rs-0.2.1 (c (n "mirro-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "archlinux") (r "^0.1.1") (f (quote ("time"))) (d #t) (k 0) (p "mirrors-arch")) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.0.7") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.6") (d #t) (k 1)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (f (quote ("crossterm"))) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "systemd-journal-logger") (r "^2.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tui-logger") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "18chcg1iadasrnhnybzrqzway2n48j7h5hwkcwc0r0bh0zmn1rnd") (f (quote (("default")))) (s 2) (e (quote (("yaml" "dep:serde_yaml" "dep:notify" "dep:cfg-if") ("toml" "dep:toml" "dep:notify" "dep:cfg-if") ("json" "dep:serde_json" "dep:notify" "dep:cfg-if"))))))

(define-public crate-mirro-rs-0.2.2 (c (n "mirro-rs") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "archlinux") (r "^0.1.3") (f (quote ("time"))) (d #t) (k 0) (p "mirrors-arch")) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.0.7") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.6") (d #t) (k 1)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (f (quote ("crossterm"))) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-journald") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-logger") (r "^0.10.0") (f (quote ("crossterm" "tracing-support"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1nfq0l7lgkrf2lvc6apn5h7lk90125k8r860513fjrprr1md0w8b") (f (quote (("default")))) (s 2) (e (quote (("yaml" "dep:serde_yaml" "dep:notify" "dep:cfg-if") ("toml" "dep:toml" "dep:notify" "dep:cfg-if") ("json" "dep:serde_json" "dep:notify" "dep:cfg-if"))))))

(define-public crate-mirro-rs-0.2.3 (c (n "mirro-rs") (v "0.2.3") (d (list (d (n "ahash") (r "^0.8.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "archlinux") (r "^0.1.3") (f (quote ("time"))) (d #t) (k 0) (p "mirrors-arch")) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.5.1") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.20") (d #t) (k 1)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.26.1") (f (quote ("crossterm"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.114") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.32") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-journald") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-logger") (r "^0.11.0") (f (quote ("crossterm" "tracing-support"))) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0mn2ck8zr05zyz0pa1h3d7qfrkxqykwi4dha0xg3n44i8wh977y2") (f (quote (("default")))) (s 2) (e (quote (("yaml" "dep:serde_yaml" "dep:notify" "dep:cfg-if") ("toml" "dep:toml" "dep:notify" "dep:cfg-if") ("json" "dep:serde_json" "dep:notify" "dep:cfg-if"))))))

