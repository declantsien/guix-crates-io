(define-module (crates-io mi x_ mix_link) #:use-module (crates-io))

(define-public crate-mix_link-0.0.0 (c (n "mix_link") (v "0.0.0") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.0") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.5") (d #t) (k 0)) (d (n "subtle") (r "^0.6.0") (d #t) (k 0)))) (h "1v64kakbcpkm2k01sd70s2g2rdsbg02ipwfmmcxnvfnnq4a1qg2r")))

(define-public crate-mix_link-0.0.1 (c (n "mix_link") (v "0.0.1") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.4") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.0") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.9") (d #t) (k 0)) (d (n "subtle") (r "^1") (f (quote ("nightly"))) (d #t) (k 0)))) (h "0jdwywg6dxd80bzxlinc3j74k46kdz7q3y9xfmbmd79qp3l3qsqb")))

(define-public crate-mix_link-0.0.2 (c (n "mix_link") (v "0.0.2") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.0") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.10") (d #t) (k 0)) (d (n "subtle") (r "^1") (f (quote ("nightly"))) (d #t) (k 0)))) (h "0vhb4daxp62lambz6vrl5k23nfjgavxykq1cqr8rvi21mijxdh05")))

(define-public crate-mix_link-0.0.3 (c (n "mix_link") (v "0.0.3") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.6") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.0") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.12") (d #t) (k 0)) (d (n "subtle") (r "^1") (f (quote ("nightly"))) (d #t) (k 0)))) (h "0fh31npba48clmmm8c6vq2i8aykzxjsc28cp4gr5rcbwhszjwkid")))

(define-public crate-mix_link-0.0.4 (c (n "mix_link") (v "0.0.4") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.7") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.0") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.15") (d #t) (k 0)) (d (n "subtle") (r "^1") (f (quote ("nightly"))) (d #t) (k 0)))) (h "17hlpz52sqnfwkv34ww641jql8cfkajyf7iza2pi8qb5zm7gvy33")))

(define-public crate-mix_link-0.0.5 (c (n "mix_link") (v "0.0.5") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.9") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "snow") (r "^0.4.2") (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.0.19") (d #t) (k 0)) (d (n "subtle") (r "^2") (f (quote ("nightly"))) (d #t) (k 0)))) (h "0zk6rhc3b68fppdrkxq7aksnlc850m1v36w1k93598dmr41r6sxi")))

(define-public crate-mix_link-0.1.0 (c (n "mix_link") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2.2") (d #t) (k 0)) (d (n "ecdh_wrapper") (r "^0.0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 2)) (d (n "serde") (r "^1.0.94") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.94") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 2)) (d (n "snow") (r "^0.7.2") (f (quote ("hfs" "pqclean_kyber1024"))) (d #t) (k 0)) (d (n "sphinxcrypto") (r "^0.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)))) (h "07x6blzga3dqw9y9j2020llgfmmm5cnbyf0h0aknrifl0r5ghi5w") (f (quote (("std" "subtle/std") ("nightly" "subtle/nightly"))))))

