(define-module (crates-io mi ne minetestworld) #:use-module (crates-io))

(define-public crate-minetestworld-0.1.0 (c (n "minetestworld") (v "0.1.0") (d (list (d (n "rusqlite") (r "^0.19.0") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.10") (d #t) (k 0)))) (h "156mrf20cyrxrkm9a8ir154rh55a9nxj8xksdwnxym9f7iklf561")))

(define-public crate-minetestworld-0.1.1 (c (n "minetestworld") (v "0.1.1") (d (list (d (n "rusqlite") (r "^0.19.0") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.10") (d #t) (k 0)))) (h "014w74r1sjqxgil0gbkfl302s8kvl7g380nmkdlky1z6cfx81qg1")))

(define-public crate-minetestworld-0.2.0 (c (n "minetestworld") (v "0.2.0") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "sqlite"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.10") (d #t) (k 0)))) (h "15s22n7lhp7aindbaa1vndhh32n3s8r8mgf44qz8g8p1z9ls69i1")))

(define-public crate-minetestworld-0.2.1 (c (n "minetestworld") (v "0.2.1") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "sqlite"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.10") (d #t) (k 0)))) (h "0p97cmfk9qqm2i5g876xrvinfyn8kcf9gj4nxdx6cl1ygvszyyvq")))

(define-public crate-minetestworld-0.3.0 (c (n "minetestworld") (v "0.3.0") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "redis") (r "^0.21.0") (f (quote ("async-std-comp"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "sqlite"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zstd") (r "^0.10") (d #t) (k 0)))) (h "1qsi2nz4vwrsrl13kl8vxym3yx0lfddis6ybfgjv6fazgsljmgzj")))

(define-public crate-minetestworld-0.3.1 (c (n "minetestworld") (v "0.3.1") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "redis") (r "^0.21.0") (f (quote ("async-std-comp"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "1dj0x0x283f1spb8jz4lbi4zidszq08033qg1spigi6fwcn8pwpk") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("default" "redis" "sqlite"))))))

(define-public crate-minetestworld-0.4.0 (c (n "minetestworld") (v "0.4.0") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.21.0") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "05b6az5092vg4na3wj1v6hb6632xnjlcl1s1y1v7pl5zwa3fq2ry") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.0-rc.1 (c (n "minetestworld") (v "0.5.0-rc.1") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.21") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "0xj9xdnijkj3kyz366y0mj8bdcrv25fbnfsbirw8369qr0146vk7") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.0 (c (n "minetestworld") (v "0.5.0") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12") (d #t) (k 0)))) (h "0xib2w4677qs6l2fgvi8rb62ns7g7v39j4w48vb4xi379788az1z") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.1 (c (n "minetestworld") (v "0.5.1") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.22.2") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12") (d #t) (k 0)))) (h "06ik1nmzym68hv4ivnzp9ygpk6g6z1ydcrfwmpkbg4xca29nm436") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.2 (c (n "minetestworld") (v "0.5.2") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.22.2") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12") (d #t) (k 0)))) (h "032lkqfmzx35px0rspja6zgl3w944b4y9xrx4wx301rvsvz0w7p9") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.3 (c (n "minetestworld") (v "0.5.3") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.23") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12") (d #t) (k 0)))) (h "05x55wj34anxr16mn164cbyc0nap3bjaqw1yfwnfi17y2b31w94s") (f (quote (("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

(define-public crate-minetestworld-0.5.4 (c (n "minetestworld") (v "0.5.4") (d (list (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "leveldb-rs") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("async-std-comp"))) (o #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.13") (d #t) (k 0)))) (h "01jv63xvqzfc2qldzq6mzpx9kd9xgnx9vz71pb3m8ykly3akj979") (f (quote (("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres" "url") ("experimental-leveldb" "leveldb-rs") ("default" "redis" "sqlite" "postgres")))) (s 2) (e (quote (("redis" "dep:redis" "url"))))))

