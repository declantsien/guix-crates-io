(define-module (crates-io mi ne minetest-worldmapper) #:use-module (crates-io))

(define-public crate-minetest-worldmapper-0.2.1 (c (n "minetest-worldmapper") (v "0.2.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "minetestworld") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1wy3bkblhw8x1qjnn8bx9igypcpsrzmwhbgy7dsp4ngwmn79n2zh") (f (quote (("smartstr" "minetestworld/smartstring" "smartstring") ("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.2.2 (c (n "minetest-worldmapper") (v "0.2.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "minetestworld") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0zarc1707ap5663a9qzxskk8gx29ihjbh3g9kp5wq2v1ags2bkgv") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.2.3 (c (n "minetest-worldmapper") (v "0.2.3") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "minetestworld") (r "^0.3") (f (quote ("redis"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0ilfhg4pywyk0ywlqyscyx5iwdj94l3rx3yw2ijnggp8b3fm9c0z") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.2.4 (c (n "minetest-worldmapper") (v "0.2.4") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "minetestworld") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0iscp95pbzr0k7rk5nq3z0asg0xhrb3746fdhfh930b1s2hlap48") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.3.0 (c (n "minetest-worldmapper") (v "0.3.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log_err") (r "^1.1") (d #t) (k 0)) (d (n "minetestworld") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0b7564szr6hm2ibfyni60lg5pgjliajrk9vb0r30jw7s6lywqm55") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.3.1 (c (n "minetest-worldmapper") (v "0.3.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log_err") (r "^1.1") (d #t) (k 0)) (d (n "minetestworld") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "12kbp23nwf5hf7z8pldl0am676wxlfgfp739jvvmy264hhngqyxz") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.3.2 (c (n "minetest-worldmapper") (v "0.3.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log_err") (r "^1.1") (d #t) (k 0)) (d (n "minetestworld") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0dg5lncvq816pl84k94slny6fj515p8sm3rpvs5gxm69bgbr8da5") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.3.3 (c (n "minetest-worldmapper") (v "0.3.3") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log_err") (r "^1.1") (d #t) (k 0)) (d (n "minetestworld") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)))) (h "1g1sbkl3pqk2jx5948xck9vkzlq2740vcf6v2lin8896lmvj458j") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

(define-public crate-minetest-worldmapper-0.3.4 (c (n "minetest-worldmapper") (v "0.3.4") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log_err") (r "^1.1") (d #t) (k 0)) (d (n "minetestworld") (r "^0.5.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "00v4gbbk7wm7pcgz56lxigwa1bf7yp2af6myig5v96jvb8yj2bvq") (f (quote (("png" "image/png") ("jpeg" "image/jpeg_rayon") ("default" "png" "bmp") ("bmp" "image/bmp") ("avif" "image/avif"))))))

