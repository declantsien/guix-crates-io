(define-module (crates-io mi de miden-crypto) #:use-module (crates-io))

(define-public crate-miden-crypto-0.1.0 (c (n "miden-crypto") (v "0.1.0") (d (list (d (n "blake3") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.4") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.4.1") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.4.1") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.4.1") (k 0) (p "winter-utils")))) (h "1ll9pdrmy24pha07z09jh8mmddcg9wr08r3yfb9khjqxza6whfpw") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default"))))))

(define-public crate-miden-crypto-0.1.1 (c (n "miden-crypto") (v "0.1.1") (d (list (d (n "blake3") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.4") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.4.1") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.4.1") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.4.1") (k 0) (p "winter-utils")))) (h "130xv2957zbs34w9k1v5aphrm5s8ja4y85qgvd224jz6x3lblpn6") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default"))))))

(define-public crate-miden-crypto-0.1.2 (c (n "miden-crypto") (v "0.1.2") (d (list (d (n "blake3") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.4") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.4.1") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.4.1") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.4.1") (k 0) (p "winter-utils")))) (h "0c0kz43pn749bkhf4jknvdr673f2d7dprbl9w6jcghs55hfk9gdm") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default"))))))

(define-public crate-miden-crypto-0.1.3 (c (n "miden-crypto") (v "0.1.3") (d (list (d (n "blake3") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.4") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.5.1") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.5.1") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.5.1") (k 0) (p "winter-utils")))) (h "01lbi38zx2wv4s8wb42wr7k88bsx49yc04hy94hyqv4m3i340kxd") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default"))))))

(define-public crate-miden-crypto-0.1.4 (c (n "miden-crypto") (v "0.1.4") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.5") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.5") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.5") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.5") (k 0) (p "winter-utils")))) (h "01csb5q3gyj3b4gasy8y5vcbkh9wnqpkxhknafbh1pfbg5q1ylmg") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.2.0 (c (n "miden-crypto") (v "0.2.0") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "08qgp3qx1b6p38id1lvy1n3ki3hw786sgpnca51wxrdrjk9lca9a") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.3.0 (c (n "miden-crypto") (v "0.3.0") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1zm3zyxaf05czj0nw25hhyq9ayqmiy1x2nirvbnajbw3i679rw8d") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.4.0 (c (n "miden-crypto") (v "0.4.0") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "00qlbwn1filpc9anqbxc8y0sry7cr4cw9sp7pc0xv2f7y0gk6spr") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.5.0 (c (n "miden-crypto") (v "0.5.0") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "11h2pwf60jxbbrm13v1ybdfibzjc5j1zmq9ybi6lmw3qw1ri9274") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.6.0 (c (n "miden-crypto") (v "0.6.0") (d (list (d (n "blake3") (r "^1.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "167pq0y4s8asnhkgm4y7c5w5hhaywpkd5whxbbpwhpzfafwmvycw") (f (quote (("std" "blake3/std" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("default" "blake3/default" "std" "winter_crypto/default" "winter_math/default" "winter_utils/default")))) (r "1.67")))

(define-public crate-miden-crypto-0.7.0 (c (n "miden-crypto") (v "0.7.0") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (o #t) (k 0)) (d (n "proptest") (r "^1.3") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1dl5afmsgp2midysdxz9h89n3zxmiwr0gz7vvwnfnkpyg72rdrgs") (f (quote (("sve" "std") ("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "dep:libc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.73")))

(define-public crate-miden-crypto-0.7.1 (c (n "miden-crypto") (v "0.7.1") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (o #t) (k 0)) (d (n "proptest") (r "^1.3") (d #t) (k 2)) (d (n "rand_utils") (r "^0.6") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.6") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1kriw5dxp669lgz71ch8icpkydy5l42sj1j0gsafimgxv8g5gp9j") (f (quote (("sve" "std") ("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "dep:libc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.73")))

(define-public crate-miden-crypto-0.8.0 (c (n "miden-crypto") (v "0.8.0") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (o #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.8") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "093jln6sxfjwb1s42agydaqfyccw8xyhgl9rpqdy0j4r3iygn3rn") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "dep:libc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.8.1 (c (n "miden-crypto") (v "0.8.1") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (o #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.8") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "1dqx5anngk10v2x72fihjmcgwrdp4d1s7cddzk6yn3ggrjnjj8gl") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "dep:libc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.8.2 (c (n "miden-crypto") (v "0.8.2") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.8") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "1yr9fvqp8ig4zmk2hmpg04kp2dlmrmq0zln6frfj2fzaknf3kcml") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.8.3 (c (n "miden-crypto") (v "0.8.3") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.8") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "0wmvvidvcm5z0c9b7n1nn291yr963gf66dazcf1469h40cazahy3") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.8.4 (c (n "miden-crypto") (v "0.8.4") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand_utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "winter_crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "winter_math") (r "^0.8") (k 0) (p "winter-math")) (d (n "winter_utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "09s6y7mhx4sham0f6xff4w1g7assaqxpwkqn97q0lbkqzpbbx1m1") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "winter_crypto/std" "winter_math/std" "winter_utils/std") ("serde" "dep:serde" "serde?/alloc" "winter_math/serde") ("executable" "dep:clap" "dep:rand_utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.9.0 (c (n "miden-crypto") (v "0.9.0") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 2)) (d (n "num") (r "^0.4") (f (quote ("alloc" "libm"))) (k 0)) (d (n "num-complex") (r "^0.4.4") (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand-utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "rand_chacha") (r "^0.3") (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "winter-crypto") (r "^0.8") (k 0)) (d (n "winter-math") (r "^0.8") (k 0)) (d (n "winter-utils") (r "^0.8") (k 0)))) (h "0mp37b3icbq6mi6s4lbhxp4909v40lwry383m75qx0q6bgnw81pd") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "rand/std" "rand/std_rng" "winter-crypto/std" "winter-math/std" "winter-utils/std") ("serde" "dep:serde" "serde?/alloc" "winter-math/serde") ("executable" "dep:clap" "dep:rand-utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.9.1 (c (n "miden-crypto") (v "0.9.1") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 2)) (d (n "num") (r "^0.4") (f (quote ("alloc" "libm"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand-utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "rand_chacha") (r "^0.3") (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "winter-crypto") (r "^0.8") (k 0)) (d (n "winter-math") (r "^0.8") (k 0)) (d (n "winter-utils") (r "^0.8") (k 0)))) (h "1cimqx2bl46ham5x3dq7q22yaissvvnnb3jjc19i7qq4hxb3kqzi") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "rand/std" "rand/std_rng" "winter-crypto/std" "winter-math/std" "winter-utils/std") ("serde" "dep:serde" "serde?/alloc" "winter-math/serde") ("executable" "dep:clap" "dep:rand-utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.9.2 (c (n "miden-crypto") (v "0.9.2") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 2)) (d (n "num") (r "^0.4") (f (quote ("alloc" "libm"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand-utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "rand_chacha") (r "^0.3") (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "winter-crypto") (r "^0.8") (k 0)) (d (n "winter-math") (r "^0.8") (k 0)) (d (n "winter-utils") (r "^0.8") (k 0)))) (h "0xrzm9bs20l77hvdmz0f814rjrz0dwwz1jdcphada9akpad0fm13") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "rand/std" "rand/std_rng" "winter-crypto/std" "winter-math/std" "winter-utils/std") ("serde" "dep:serde" "serde?/alloc" "winter-math/serde") ("executable" "dep:clap" "dep:rand-utils" "std")))) (r "1.75")))

(define-public crate-miden-crypto-0.9.3 (c (n "miden-crypto") (v "0.9.3") (d (list (d (n "blake3") (r "^1.5") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (o #t) (d #t) (k 1)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 2)) (d (n "num") (r "^0.4") (f (quote ("alloc" "libm"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand-utils") (r "^0.8") (o #t) (d #t) (k 0) (p "winter-rand-utils")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "rand_chacha") (r "^0.3") (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "winter-crypto") (r "^0.8") (k 0)) (d (n "winter-math") (r "^0.8") (k 0)) (d (n "winter-utils") (r "^0.8") (k 0)))) (h "0fmwp1vdc17wdl4fsi414biq6nhl4663hadlkgpd43bs3mqd5ns0") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "blake3/std" "dep:cc" "rand/std" "rand/std_rng" "winter-crypto/std" "winter-math/std" "winter-utils/std") ("serde" "dep:serde" "serde?/alloc" "winter-math/serde") ("executable" "dep:clap" "dep:rand-utils" "std")))) (r "1.75")))

