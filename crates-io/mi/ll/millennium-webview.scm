(define-module (crates-io mi ll millennium-webview) #:use-module (crates-io))

(define-public crate-millennium-webview-1.0.0-beta.1 (c (n "millennium-webview") (v "1.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "millennium-core") (r "^1.0.0-beta.1") (f (quote ("serde"))) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09xmifrycbagv12pkgw8xzs1p0dc09ll0yg5ac95vzc3xyb4sajy") (f (quote (("tray" "millennium-core/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "millennium-core/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol") ("ayatana" "millennium-core/ayatana")))) (y #t) (r "1.57")))

(define-public crate-millennium-webview-1.0.0-beta.2 (c (n "millennium-webview") (v "1.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "millennium-core") (r "^1.0.0-beta.2") (f (quote ("serde"))) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0n143iyhbrbsb95ggmvs31yz0p6c8g9cixq5z9566iy5yi0cfxfc") (f (quote (("tray" "millennium-core/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "millennium-core/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol") ("ayatana" "millennium-core/ayatana")))) (y #t) (r "1.57")))

(define-public crate-millennium-webview-1.0.0-beta.3 (c (n "millennium-webview") (v "1.0.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "millennium-core") (r "^1.0.0-beta.3") (f (quote ("serde"))) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1a97645hnzv29xfjabr4vrykrlhgp4pdvc6zgi3bm2q77z3hkmgn") (f (quote (("tray" "millennium-core/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "millennium-core/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (y #t) (r "1.57")))

