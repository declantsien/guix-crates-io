(define-module (crates-io mi sc miscreant) #:use-module (crates-io))

(define-public crate-miscreant-0.0.0 (c (n "miscreant") (v "0.0.0") (h "1n81v8ck38gn85w9dah7pw32xmmc6rawvw6c3xxnpbvpbkkcsm71") (y #t)))

(define-public crate-miscreant-0.1.0 (c (n "miscreant") (v "0.1.0") (d (list (d (n "aesni") (r "^0.1") (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (f (quote ("i128"))) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "= 0.1") (d #t) (k 0)))) (h "1jzqdfvwzdq6x88kawg9ss5rfk60ndsmpsysa0xijmzrk1l1xb78") (y #t)))

(define-public crate-miscreant-0.2.0 (c (n "miscreant") (v "0.2.0") (d (list (d (n "aesni") (r "^0.1") (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (f (quote ("i128"))) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 2)) (d (n "ring") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^0.2") (k 0)))) (h "076vgpbw1zx2880ff2mrjagyrh7vw09wwlg491hmhg0hc9bwazbs") (f (quote (("bench" "ring")))) (y #t)))

(define-public crate-miscreant-0.3.0 (c (n "miscreant") (v "0.3.0") (d (list (d (n "aesni") (r "^0.2") (d #t) (k 0)) (d (n "block-cipher-trait") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "cmac") (r "^0.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.6") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 2)) (d (n "dbl") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "pmac") (r "^0.1") (d #t) (k 0)) (d (n "ring") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^0.3") (k 0)))) (h "0a06hafpp1pi2hlmnhm05c8667g8abprksm0n3xf5877djq54nrl") (f (quote (("std") ("default" "std") ("bench" "ring")))) (y #t)))

(define-public crate-miscreant-0.4.0-beta1 (c (n "miscreant") (v "0.4.0-beta1") (d (list (d (n "aes") (r "^0.1.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "cmac") (r "^0.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.6") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 2)) (d (n "dbl") (r "^0.1") (d #t) (k 0)) (d (n "pmac") (r "^0.1") (d #t) (k 0)) (d (n "ring") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^0.3") (k 0)))) (h "01db7bz8gm2dvx6sp22k6g477vf6yy8ckk8x7axirym3hwpk1hbq") (f (quote (("std") ("staticlib") ("nightly" "clear_on_drop/nightly") ("default" "std") ("bench" "ring") ("aes-soft" "aes/force_soft")))) (y #t)))

(define-public crate-miscreant-0.4.0-beta2 (c (n "miscreant") (v "0.4.0-beta2") (d (list (d (n "aes") (r "^0.1.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "cmac") (r "^0.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.6") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 2)) (d (n "dbl") (r "^0.1") (d #t) (k 0)) (d (n "pmac") (r "^0.1") (d #t) (k 0)) (d (n "ring") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^0.3") (k 0)))) (h "0lsvd8axh4f7z9shciv8vknnwys6fg05xaj8a56d53sv5g3c31zd") (f (quote (("std") ("staticlib") ("nightly" "clear_on_drop/nightly") ("default" "std") ("bench" "ring") ("aes-soft" "aes/force_soft")))) (y #t)))

(define-public crate-miscreant-0.4.0 (c (n "miscreant") (v "0.4.0") (d (list (d (n "aes") (r "^0.3") (o #t) (k 0)) (d (n "aesni") (r "^0.6") (t "cfg(all(target_feature = \"aes\", target_feature = \"sse2\", any(target_arch = \"x86_64\", target_arch = \"x86\")))") (k 0)) (d (n "byteorder") (r "^1.2") (o #t) (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "dbl") (r "^0.2") (k 0)) (d (n "generic-array") (r "^0.12") (k 0)) (d (n "pmac") (r "^0.2") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^0.5") (k 0)))) (h "0rqpdrpjbjxgv7r4cqfsmijjsirldr29gn59cch8m70sd3187g4l") (f (quote (("stream" "byteorder") ("std" "alloc") ("soft-aes" "aes") ("nightly" "zeroize/nightly") ("default" "std" "stream") ("alloc")))) (y #t)))

(define-public crate-miscreant-0.4.1 (c (n "miscreant") (v "0.4.1") (d (list (d (n "aes") (r "^0.3") (o #t) (k 0)) (d (n "aesni") (r "^0.6") (t "cfg(all(target_feature = \"aes\", target_feature = \"sse2\", any(target_arch = \"x86_64\", target_arch = \"x86\")))") (k 0)) (d (n "byteorder") (r "^1.2") (o #t) (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "dbl") (r "^0.2") (k 0)) (d (n "generic-array") (r "^0.12") (k 0)) (d (n "pmac") (r "^0.2") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^0.5") (k 0)))) (h "19hfvaw74dvn7v8nh8j9x1iz3rzr5lfrv2wxfxjk507hcifkzbfm") (f (quote (("stream" "byteorder") ("std" "alloc") ("soft-aes" "aes") ("nightly" "zeroize/nightly") ("default" "std" "stream") ("alloc")))) (y #t)))

(define-public crate-miscreant-0.4.2 (c (n "miscreant") (v "0.4.2") (d (list (d (n "aes") (r "^0.3") (o #t) (k 0)) (d (n "aesni") (r "^0.6") (t "cfg(all(target_feature = \"aes\", target_feature = \"sse2\", any(target_arch = \"x86_64\", target_arch = \"x86\")))") (k 0)) (d (n "byteorder") (r "^1.2") (o #t) (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "dbl") (r "^0.2") (k 0)) (d (n "generic-array") (r "^0.12") (k 0)) (d (n "pmac") (r "^0.2") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^0.5") (k 0)))) (h "1n8irqgx7zg0p9wskvfsa2kbrm7qvcmwmlrnh0crxwbkzxzxfdvy") (f (quote (("stream" "byteorder") ("std" "alloc") ("soft-aes" "aes") ("nightly" "zeroize/nightly") ("default" "std" "stream") ("alloc")))) (y #t)))

(define-public crate-miscreant-0.5.0 (c (n "miscreant") (v "0.5.0") (d (list (d (n "aes") (r "^0.3") (k 0)) (d (n "aes-siv") (r "^0.2") (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "pmac_crate") (r "^0.2") (o #t) (k 0) (p "pmac")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 2)))) (h "0aa2q7v70aw1b1s9bgw1l8vmfvh7wdqan79xx750zpx5597iszgy") (f (quote (("stream") ("std" "alloc") ("pmac" "pmac_crate" "aes-siv/pmac") ("default" "std" "pmac" "stream") ("alloc" "aes-siv/alloc")))) (y #t)))

(define-public crate-miscreant-0.5.1 (c (n "miscreant") (v "0.5.1") (d (list (d (n "aes") (r "^0.3") (k 0)) (d (n "aes-siv") (r "^0.2") (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "pmac_crate") (r "^0.2") (o #t) (k 0) (p "pmac")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 2)))) (h "038ayypvzib8avr17bbw8mmw0sr1vlgp2rmzzal190nz9z1yp6cc") (f (quote (("stream") ("std" "alloc") ("pmac" "pmac_crate" "aes-siv/pmac") ("default" "std" "pmac" "stream") ("alloc" "aes-siv/alloc")))) (y #t)))

(define-public crate-miscreant-0.5.2 (c (n "miscreant") (v "0.5.2") (d (list (d (n "aes") (r "^0.3") (k 0)) (d (n "aes-siv") (r "^0.2") (k 0)) (d (n "cmac") (r "^0.2") (k 0)) (d (n "crypto-mac") (r "^0.7") (k 0)) (d (n "ctr") (r "^0.3") (k 0)) (d (n "pmac_crate") (r "^0.2") (o #t) (k 0) (p "pmac")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stream-cipher") (r "^0.3") (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 2)))) (h "0wi6dn7qdf10pikbrjcvrp0p9g5ir71qmqyy0z3z99khmmh465rw") (f (quote (("stream") ("std" "alloc") ("pmac" "pmac_crate" "aes-siv/pmac") ("default" "std" "pmac" "stream") ("alloc" "aes-siv/alloc")))) (y #t)))

(define-public crate-miscreant-0.99.0 (c (n "miscreant") (v "0.99.0") (h "017rmdv28pa0ijllapmssalbggv1bp38h7pkginqzd2knp1x0mkh") (y #t)))

