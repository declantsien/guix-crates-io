(define-module (crates-io mi ra miraland-program) #:use-module (crates-io))

(define-public crate-miraland-program-1.14.17-rc.1 (c (n "miraland-program") (v "1.14.17-rc.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc.1") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc.1") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1r3s1h7xp0x9gd7kchw2s6bkxa06rbpfhidd7cgkf7kj08n992jl") (f (quote (("default")))) (y #t)))

(define-public crate-miraland-program-1.14.17-rc1 (c (n "miraland-program") (v "1.14.17-rc1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc1") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc1") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0kdmsbgj390avkml6dxwcgy0dqvn6i6xf6ffsyr0zz1hs169ln1l") (f (quote (("default")))) (y #t)))

(define-public crate-miraland-program-1.14.17-rc2 (c (n "miraland-program") (v "1.14.17-rc2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc2") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc2") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0sp81rx5csbb96x6yk8wzg7c2vaypr29iiayn2fafy08xijfssix") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.17-rc3 (c (n "miraland-program") (v "1.14.17-rc3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc3") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc3") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc3") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1g9cyxlrm3mr7w1l8wghbjmi53dz0s3b0lp748pxh7jph09lbsbq") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.17-rc4 (c (n "miraland-program") (v "1.14.17-rc4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc4") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc4") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1smv3vqrhm0fr2zhw6ha6z1xddkdn4n64lifjjaypbrklaw0khyz") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.17-rc5 (c (n "miraland-program") (v "1.14.17-rc5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc5") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc5") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc5") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "13gr5x2lwh8qp104h9p2c06qs6478fd03pcx1sk3z2z78m0knbih") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.17-rc6 (c (n "miraland-program") (v "1.14.17-rc6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.14.17-rc6") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.14.17-rc6") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.14.17-rc6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.14.17-rc6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1qkvcjcgvvciqmvp4369yg6w67l7m4hcl34jr3k7f083j7knnnc0") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.17 (c (n "miraland-program") (v "1.14.17") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "=1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "^1.14.17") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "^1.14.17") (d #t) (k 0)) (d (n "miraland-logger") (r "^1.14.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "^1.14.17") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1sjhckj2ymkkdb18y3hp67rib22xd9zyqzgcj1jdpj88m5nf3n6l") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.18 (c (n "miraland-program") (v "1.14.18") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.10.3") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "=1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "jobserver") (r "=0.1.26") (d #t) (k 1)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "=0.2.141") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "^1.14.18") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "^1.14.18") (d #t) (k 0)) (d (n "miraland-logger") (r "^1.14.18") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "^1.14.18") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0qwn0bmpdxjz9xi8la2y9cm5bjcvdy9rcs6slz66zxx1q86gr0gm") (f (quote (("default"))))))

(define-public crate-miraland-program-1.14.19 (c (n "miraland-program") (v "1.14.19") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.10.3") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "jobserver") (r "^0.1.26") (d #t) (k 1)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.141") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "^1.14.19") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "^1.14.19") (d #t) (k 0)) (d (n "miraland-logger") (r "^1.14.19") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "^1.14.19") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0cwl7nkpnd5m5ip7q0pxfqx4xh78hi41kshvngw2056bmmm96kd7") (f (quote (("default"))))))

(define-public crate-miraland-program-1.18.0 (c (n "miraland-program") (v "1.18.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.18.0") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.18.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1ccip7jjg400kgqnljxbwf28zmpcrwbhxa70kyadk7xzn1ans2s8") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-miraland-program-1.18.1 (c (n "miraland-program") (v "1.18.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.18.1") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.18.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1h89gfn8nw9vy3amx32siidq91zl2mj2mafhz15kriskghj9iqq3") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-miraland-program-1.18.2 (c (n "miraland-program") (v "1.18.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.18.2") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.18.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0ib51k93rs5va2v6dl38l1l33bc0ndmj43n3qpyw59cjwrzvz2i4") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-miraland-program-1.18.3 (c (n "miraland-program") (v "1.18.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 2)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.3.0") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "miraland-frozen-abi") (r "=1.18.3") (d #t) (k 0)) (d (n "miraland-frozen-abi-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "miraland-logger") (r "=1.18.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "miraland-sdk-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "00xx1p6bdcwfmjqh2wk6c3g3jnhy980vig2wa2pk9wf6gva7mnss") (f (quote (("default")))) (r "1.72.0")))

