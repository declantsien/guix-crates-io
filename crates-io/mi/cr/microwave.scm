(define-module (crates-io mi cr microwave) #:use-module (crates-io))

(define-public crate-microwave-0.1.0 (c (n "microwave") (v "0.1.0") (d (list (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.7.0") (d #t) (k 0)))) (h "1cf5vqmgadvigdn2zvm7cwkdx6qg4xxl5qa95h8jifrs7cr6fhh6")))

(define-public crate-microwave-0.1.0-docfix (c (n "microwave") (v "0.1.0-docfix") (d (list (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.7.0") (d #t) (k 0)))) (h "0i7lidy2fcqvrp5gd5dhqpn8rk8d7659lqgk3lddrhvx2wxn1f57") (y #t)))

(define-public crate-microwave-0.1.0-docfix2 (c (n "microwave") (v "0.1.0-docfix2") (d (list (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.7.0") (d #t) (k 0)))) (h "1a1aan8jxa3b0bhc6gvggylrri72vx9ks3rfnq0wsjxm7vxc3wdx") (y #t)))

(define-public crate-microwave-0.2.0 (c (n "microwave") (v "0.2.0") (d (list (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.8.0") (d #t) (k 0)))) (h "141095s2dhfp4cj4lb24lv17fr8vy6bpcdbq8q36abs79pniz1b5")))

(define-public crate-microwave-0.3.0 (c (n "microwave") (v "0.3.0") (d (list (d (n "fluidlite") (r "^0.1.2") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.2") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.8.0") (d #t) (k 0)))) (h "08nw9k21dl731qd75165dr6pxxmkp2237hfd1c89m8k5hq1wiflq")))

(define-public crate-microwave-0.4.0 (c (n "microwave") (v "0.4.0") (d (list (d (n "fluidlite") (r "^0.1.2") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.2") (f (quote ("with-sf3"))) (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.9.0") (d #t) (k 0)) (d (n "winit") (r "^0.22.2") (d #t) (k 0)))) (h "0q8hv78ywbbhiw40sal13zxjlylwqfv58s16ifx9klcg0bzw37dp")))

(define-public crate-microwave-0.5.0 (c (n "microwave") (v "0.5.0") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.10.0") (d #t) (k 0)) (d (n "winit") (r "^0.22.2") (d #t) (k 0)))) (h "0vsyrm8y6lck9as4wmmildg79rsd17mcysnrgdw3wbj0la4yjxg3") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.6.0 (c (n "microwave") (v "0.6.0") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.1") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.11.0") (d #t) (k 0)) (d (n "winit") (r "^0.22.2") (d #t) (k 0)))) (h "1gxd04c9p3flqnazrm9lacyj6abr3rn9x3kpkv93hg954xs4pwp7") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.7.0 (c (n "microwave") (v "0.7.0") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.1") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.11.0") (d #t) (k 0)))) (h "0fg7m5dqr23azxjai367nh212g62nsx80lffhr0k2pnjgry1biaq") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.7.1 (c (n "microwave") (v "0.7.1") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.1") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.11.0") (d #t) (k 0)))) (h "03aj0nf8i7ci5v5p58xl85zqmwy9jc65cs1rzshg3d1lhsd7d5q9") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.8.0 (c (n "microwave") (v "0.8.0") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.13.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.10.0") (d #t) (k 0)))) (h "05xrfn792s3ryipaspaph1kj9czj1q9i38a84r6ljq3lc6g61ma5") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.8.1 (c (n "microwave") (v "0.8.1") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.13.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.10.0") (d #t) (k 0)))) (h "0i8x0p1sm58mw3yhjqw1c34r37fbcqpd8c36zd327ylscnh6wn73") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.9.0 (c (n "microwave") (v "0.9.0") (d (list (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (d #t) (k 0)) (d (n "tune") (r "^0.13.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.10.0") (d #t) (k 0)))) (h "0clrdj2yx6s9hlyck1j8098hpl6sai6n58l6x9vjx0kn38y7xki0") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.10.0 (c (n "microwave") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.14.1") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.14.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.11.0") (d #t) (k 0)))) (h "1303ypis9xwhlqykj0l63155vaqcsmkxwfi68f0h8x6krbhd1bx5") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.11.0 (c (n "microwave") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.15.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.18.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.1") (d #t) (k 0)))) (h "19qrqg9cyx1xba5rw5s0avagsz6k3p5mpqwv6ii6mwjnph2dy7lz") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.12.0 (c (n "microwave") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.15.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.2") (d #t) (k 0)))) (h "0a8k4g4w580kdgk6xavzwzb80ncc2qwy67wlfl65d0pgbmp9n4ic") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.13.0 (c (n "microwave") (v "0.13.0") (d (list (d (n "chrono") (r ">=0.4.15, <0.5.0") (d #t) (k 0)) (d (n "fluidlite") (r ">=0.1.3, <0.2.0") (d #t) (k 0)) (d (n "fluidlite-lib") (r ">=0.1.3, <0.2.0") (d #t) (k 0)) (d (n "hound") (r ">=3.4.0, <4.0.0") (d #t) (k 0)) (d (n "midir") (r ">=0.6.2, <0.7.0") (d #t) (k 0)) (d (n "nannou") (r ">=0.15.0, <0.16.0") (d #t) (k 0)) (d (n "nannou_audio") (r ">=0.15.0, <0.16.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.16, <0.4.0") (d #t) (k 0)) (d (n "tune") (r ">=0.19.0, <0.20.0") (d #t) (k 0)) (d (n "tune-cli") (r ">=0.14.2, <0.15.0") (d #t) (k 0)))) (h "1d0hpaaa988nfifyzrdf8rr411chavzcf7srl5g90mf0345gwxvq") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.14.0 (c (n "microwave") (v "0.14.0") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.2") (d #t) (k 0)))) (h "12di8vjhhn7hi332kygv6fc55vla7xm34sj9ipwpadckw9yqgmm7") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.15.0 (c (n "microwave") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.2") (d #t) (k 0)))) (h "0j3vy8yp6pn2d72pwb1593wvnrlrbf44h5n1d4n0lr5qdnls4k7i") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.16.0 (c (n "microwave") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.6.2") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "nannou_audio") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.2") (d #t) (k 0)))) (h "018pnl7q3kw33cgwgv1ddhv026fvpn6fbm1fhyizbllc59a7naks") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.16.1 (c (n "microwave") (v "0.16.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.3") (d #t) (k 0)))) (h "0afm9bl1hxf8cdnjfxc1svcibapwljbf6g2cib9s7z0f2703qdqf") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.17.0 (c (n "microwave") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.19.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.14.3") (d #t) (k 0)))) (h "11sw75sahwi630kxgh8807ym8piqgfvdc5wy5kvxm4c6ijdpij70") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.18.0 (c (n "microwave") (v "0.18.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.22.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.17.0") (d #t) (k 0)))) (h "07if28xgppv73mrhbp4ajksl9f4f2i6haqr46qibabvgvlxl62by") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.19.0 (c (n "microwave") (v "0.19.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.1.3") (d #t) (k 0)) (d (n "fluidlite-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.23.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.0") (d #t) (k 0)))) (h "0nygz21llflz33a865m2n9czk1cdc2xxm2d6mm25jmj3qjahl0sy") (f (quote (("sf3" "fluidlite-lib/with-sf3"))))))

(define-public crate-microwave-0.19.1 (c (n "microwave") (v "0.19.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.23.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.0") (d #t) (k 0)))) (h "00ajcn8bkzkb3c9hwic2kif11ljsai0nh4k8y3da4dd31ksw98wb") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.20.0 (c (n "microwave") (v "0.20.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.15.0") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.23.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.0") (d #t) (k 0)))) (h "1jsfrikjvcw7r37ndn81mavb8w7n6gly4gw4i1vmw52rclcajmmq") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.21.0 (c (n "microwave") (v "0.21.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.23.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.0") (d #t) (k 0)))) (h "1x92qnq5np26nprgxqdfgnsxv4ykdnbx34hy5bdy35d4hj5jm5sz") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.22.0 (c (n "microwave") (v "0.22.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.23.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.0") (d #t) (k 0)))) (h "0y1h49d4dgg66x63090w3msr3436cgf4di6ycj4cml40q9pcb5xp") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.23.0 (c (n "microwave") (v "0.23.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.24.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.18.1") (d #t) (k 0)))) (h "1jhjvjpx6gdbfy3igfz1r2zi5pizx62clrjmr532a61wfvs0y70a") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.24.0 (c (n "microwave") (v "0.24.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.27.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.21.0") (d #t) (k 0)))) (h "1rbmlk97y8c11msyn6lp4d2nbp9h6yy1h97vd7bl8xf0qg0hnhmd") (f (quote (("sf3" "fluidlite/with-sf3"))))))

(define-public crate-microwave-0.25.0 (c (n "microwave") (v "0.25.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.27.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.21.0") (d #t) (k 0)))) (h "0625ix4sw7hcp9av75g0zjcfijw51nlj2y9w75yzsym9j7y5vwlp") (f (quote (("sf3" "fluidlite/with-sf3")))) (r "1.56")))

(define-public crate-microwave-0.26.0 (c (n "microwave") (v "0.26.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluid-xenth-tune") (r "^0.27.0") (d #t) (k 0) (p "tune")) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.28.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.22.0") (d #t) (k 0)))) (h "0pcibhsdpmfl1hf2397jcc6ai2bnxp3hjsc34j8x4q94mhvwjsy2") (f (quote (("sf3" "fluidlite/with-sf3")))) (r "1.56")))

(define-public crate-microwave-0.27.0 (c (n "microwave") (v "0.27.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluid-xenth-tune") (r "^0.27.0") (d #t) (k 0) (p "tune")) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.28.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.22.0") (d #t) (k 0)))) (h "0pb5khbdwzp0gprccdlx8qkyhxwjhjs6baql2j6pgcg0h4ryfgvb") (f (quote (("sf3" "fluidlite/with-sf3")))) (r "1.56")))

(define-public crate-microwave-0.27.1 (c (n "microwave") (v "0.27.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluid-xenth-tune") (r "^0.27.0") (d #t) (k 0) (p "tune")) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (d #t) (k 0)) (d (n "tune") (r "^0.28.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.22.0") (d #t) (k 0)))) (h "1l4sv7pcd9p89hcyqr85pp2vwvfrxf3i1696r39d26ib4nxnbwvs") (f (quote (("sf3" "fluidlite/with-sf3")))) (r "1.56")))

(define-public crate-microwave-0.28.0 (c (n "microwave") (v "0.28.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.2.0") (d #t) (k 0)) (d (n "fluid-xenth-tune") (r "^0.27.0") (d #t) (k 0) (p "tune")) (d (n "fluidlite") (r "^0.2.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.29.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.23.0") (d #t) (k 0)))) (h "01hfw2b278882kkknvvn23l7pjn7lwgnzvfmv44g1izyy4nlzbzq") (f (quote (("sf3" "fluidlite/with-sf3")))) (r "1.56")))

(define-public crate-microwave-0.29.0 (c (n "microwave") (v "0.29.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.3.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.30.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.23.1") (d #t) (k 0)))) (h "0fjdjgw08yz1xfc849npkig7a5najik1hd3y2iw8c07qaljhblpf") (f (quote (("stb" "fluid-xenth/stb") ("sf3" "fluid-xenth/sf3")))) (r "1.56")))

(define-public crate-microwave-0.30.0 (c (n "microwave") (v "0.30.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.4.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.1.0") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.31.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.24.0") (d #t) (k 0)))) (h "0ky9dimx97p74spxgn9c3zs3430jh9hzybgiw71n961cqgz66adq") (f (quote (("stb" "fluid-xenth/stb") ("sf3" "fluid-xenth/sf3")))) (r "1.61")))

(define-public crate-microwave-0.31.0 (c (n "microwave") (v "0.31.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.5.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.1.1") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.31.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.24.0") (d #t) (k 0)))) (h "1yvdk965phcjrlpb30183i79g47izmxfsxr7jq4ifsc8xw5nbymf") (f (quote (("sf3" "fluid-xenth/sf3")))) (r "1.61")))

(define-public crate-microwave-0.32.0 (c (n "microwave") (v "0.32.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.6.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.2.0") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.32.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.25.0") (d #t) (k 0)))) (h "1dqiqlixdhalaxdrj0dxybhmvdn3d2kggr8nl5h1cs8ija27w5gm") (f (quote (("sf3" "fluid-xenth/sf3")))) (r "1.61")))

(define-public crate-microwave-0.33.0 (c (n "microwave") (v "0.33.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^3.0.6") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.6.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.3.0") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nannou") (r "^0.18.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.32.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.25.0") (d #t) (k 0)))) (h "1vqf81mfl28l4fy6m3ks9ajflcdlrr8pnsq00ah2p8qdxbk0lhh9") (f (quote (("sf3" "fluid-xenth/sf3")))) (r "1.61")))

(define-public crate-microwave-0.34.0 (c (n "microwave") (v "0.34.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bevy") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.6.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.3.0") (d #t) (k 0)) (d (n "midir") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.32.1") (d #t) (k 0)) (d (n "tune-cli") (r "^0.25.1") (d #t) (k 0)))) (h "184b9g6gjgmzwifdd3in530w49bx1klcy4d9380gafpfh5zf1lm7") (f (quote (("sf3" "fluid-xenth/sf3") ("fast-compile" "bevy/dynamic")))) (r "1.61")))

(define-public crate-microwave-0.35.0 (c (n "microwave") (v "0.35.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bevy") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "fluid-xenth") (r "^0.7.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "magnetron") (r "^0.4.0") (d #t) (k 0)) (d (n "midir") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.33.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.26.0") (d #t) (k 0)))) (h "0r84isbns91vcsygzm1a1wqz9gfgnaczjpicpplfj878zivh5z48") (f (quote (("sf3" "fluid-xenth/sf3") ("fast-compile" "bevy/dynamic")))) (r "1.61")))

(define-public crate-microwave-0.36.0 (c (n "microwave") (v "0.36.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bevy") (r "^0.12.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cpal") (r "^0.15.0") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fluid-xenth") (r "^0.8.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "indexed_db_futures") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "magnetron") (r "^0.5.0") (d #t) (k 0)) (d (n "midir") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)) (d (n "tune") (r "^0.34.0") (d #t) (k 0)) (d (n "tune-cli") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("File" "Location" "UrlSearchParams"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hrhbp8bs2n543mfzhhdmb3cqm7vcmvxdswhkgzx2xqws0m5y1mz") (f (quote (("sf3" "fluid-xenth/sf3") ("fast-compile" "bevy/dynamic_linking")))) (r "1.66")))

