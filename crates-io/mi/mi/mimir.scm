(define-module (crates-io mi mi mimir) #:use-module (crates-io))

(define-public crate-mimir-0.1.0 (c (n "mimir") (v "0.1.0") (d (list (d (n "bitflags") (r "^0.8.2") (d #t) (k 0)) (d (n "chrono") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2.0.2") (d #t) (k 0)))) (h "1l3grj86ngizph6z2yacwjzjvii5n40rchq5kxhwclg24r0hgvdv")))

(define-public crate-mimir-0.1.1 (c (n "mimir") (v "0.1.1") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2.0.2") (d #t) (k 0)))) (h "0pv5yaavpgm5qkysqyj30ag42dcn06mng0kfhpj1pf3j3z5ld337")))

(define-public crate-mimir-0.1.2 (c (n "mimir") (v "0.1.2") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0-rc.2") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2.0.2") (d #t) (k 0)))) (h "0lfsdiiq0vzyhwsar6hpblgxlvz8wfv95fwxc1f8h1zf2zjydi9q")))

(define-public crate-mimir-0.2.0 (c (n "mimir") (v "0.2.0") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0-rc.2") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2.0.2") (d #t) (k 0)))) (h "1qlnaa0krhd7p0vviqmijhmf34z47kvm6rx4yfdfvvs82kznvymp")))

(define-public crate-mimir-0.3.0 (c (n "mimir") (v "0.3.0") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "hex-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-term") (r "^2.2.0") (d #t) (k 2)) (d (n "slog-try") (r "^0.1.0") (d #t) (k 0)))) (h "0ai3av1nq0rv3vd7bl03fshqkf4qd9gghs747vincpvbdgyg4n8b") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

(define-public crate-mimir-0.3.1 (c (n "mimir") (v "0.3.1") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "hex-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-term") (r "^2.2.0") (d #t) (k 2)) (d (n "slog-try") (r "^0.1.0") (d #t) (k 0)))) (h "04kxrklkczg4459vgnkd7m08z1a61mii095w3ppa1wpix0wz7mnp") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

(define-public crate-mimir-0.3.2 (c (n "mimir") (v "0.3.2") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "hex-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-term") (r "^2.2.0") (d #t) (k 2)) (d (n "slog-try") (r "^0.1.0") (d #t) (k 0)))) (h "0a0n0ajy148w3xgswcgpwgijlz2bq8yzqdi780wcglna29wkh6g2") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

(define-public crate-mimir-0.3.3 (c (n "mimir") (v "0.3.3") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "hex-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-term") (r "^2.2.0") (d #t) (k 2)) (d (n "slog-try") (r "^0.1.0") (d #t) (k 0)))) (h "0nycp3w6p2bir0yrf1flfjwzpv2vvdqyw94wnvyrlllx4f5lx3dj") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

(define-public crate-mimir-0.3.4 (c (n "mimir") (v "0.3.4") (d (list (d (n "bitflags") (r "^0.9.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gcc") (r "^0.3.45") (d #t) (k 1)) (d (n "getset") (r "^0.0.5") (d #t) (k 0)) (d (n "hex-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-term") (r "^2.2.0") (d #t) (k 2)) (d (n "slog-try") (r "^0.1.0") (d #t) (k 0)))) (h "04cnwb9p7q2hbzfzdywkrv5jgg195y920wd0xgwcq8f7i957hbzv") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

(define-public crate-mimir-0.3.5 (c (n "mimir") (v "0.3.5") (d (list (d (n "bitflags") (r "^0") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0") (d #t) (k 0)) (d (n "error-chain") (r "^0") (d #t) (k 0)) (d (n "gcc") (r "^0") (d #t) (k 1)) (d (n "getset") (r "^0") (d #t) (k 0)) (d (n "hex-slice") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2") (d #t) (k 2)) (d (n "slog-term") (r "^2") (d #t) (k 2)) (d (n "slog-try") (r "^0") (d #t) (k 0)))) (h "1f597iph4j4h3yw6jk2nmzvvx9aanwpvzblrhxl4ggzd18qj0mmy") (f (quote (("trace" "slog/max_level_trace" "slog/release_max_level_trace") ("default" "slog") ("debug" "slog/max_level_debug" "slog/release_max_level_debug"))))))

