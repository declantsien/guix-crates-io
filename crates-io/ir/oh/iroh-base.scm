(define-module (crates-io ir oh iroh-base) #:use-module (crates-io))

(define-public crate-iroh-base-0.10.0 (c (n "iroh-base") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bao-tree") (r "^0.9.1") (f (quote ("tokio_fsm"))) (o #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1qpa4dgica5rga4z58fp8m905rlnjm5m9jazbffyqlsbcmy3p49g") (f (quote (("hash" "bao-tree" "multibase" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (r "1.72")))

(define-public crate-iroh-base-0.11.0 (c (n "iroh-base") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bao-tree") (r "^0.9.1") (f (quote ("tokio_fsm"))) (o #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0046i9lnb5z6mzr5w08rkkflxxnxfgm55pkhffd6shcwyk0w5rm3") (f (quote (("hash" "bao-tree" "multibase" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (r "1.72")))

(define-public crate-iroh-base-0.12.0 (c (n "iroh-base") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.9.1") (f (quote ("tokio_fsm"))) (o #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0vk2by1ylknxcm2y74w9h6c2fw0bh5kg16192d4nma1r6vs2xd71") (f (quote (("hash" "bao-tree" "multibase" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (r "1.72")))

(define-public crate-iroh-base-0.13.0 (c (n "iroh-base") (v "0.13.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.11.1") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.1") (f (quote ("debug" "display"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "01jc9iz3fc06yflvyr4dprmwfa6j1n736j62546g0b2vbhzn54jq") (f (quote (("hash" "bao-tree" "multibase" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more")))) (r "1.75")))

(define-public crate-iroh-base-0.14.0 (c (n "iroh-base") (v "0.14.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.13") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.1") (f (quote ("debug" "display"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "02lfkhj37j03n1nw9nm1h4rnrjdrvk38pd9gyp3xr9j7dam1w32w") (f (quote (("hash" "bao-tree" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more")))) (r "1.75")))

(define-public crate-iroh-base-0.15.0 (c (n "iroh-base") (v "0.15.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.13") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.1") (f (quote ("debug" "display" "from_str"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "15w9311rviyz2yv16zl1vmh2xq10gnpxdpwnjfhwzgkv79dz2kwb") (f (quote (("hash" "bao-tree" "data-encoding" "postcard") ("default" "hash" "base32") ("base32" "data-encoding")))) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more")))) (r "1.75")))

(define-public crate-iroh-base-0.16.0 (c (n "iroh-base") (v "0.16.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.13") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.6") (f (quote ("debug" "display" "from_str"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "0x6dqya1lxyksls6dzybrybyjgn29948xwwrgjg3lxzglxvaflan") (f (quote (("default" "hash" "base32")))) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more") ("hash" "dep:bao-tree" "dep:data-encoding" "dep:postcard" "dep:derive_more") ("base32" "dep:data-encoding")))) (r "1.75")))

(define-public crate-iroh-base-0.16.1 (c (n "iroh-base") (v "0.16.1") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.13") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.6") (f (quote ("debug" "display" "from_str"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "1ri51r515xcwfyfsavryr1g5i38v599zpw05bydwavqifbj9fdha") (f (quote (("default" "hash" "base32")))) (y #t) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more") ("hash" "dep:bao-tree" "dep:data-encoding" "dep:postcard" "dep:derive_more") ("base32" "dep:data-encoding")))) (r "1.75")))

(define-public crate-iroh-base-0.16.2 (c (n "iroh-base") (v "0.16.2") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bao-tree") (r "^0.13") (f (quote ("tokio_fsm" "validate"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.6") (f (quote ("debug" "display" "from_str"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "0czq4vbd02l5ma8vzybc2lhqsixwkvszji2a8fqq38957crab882") (f (quote (("default" "hash" "base32")))) (s 2) (e (quote (("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more") ("hash" "dep:bao-tree" "dep:data-encoding" "dep:postcard" "dep:derive_more") ("base32" "dep:data-encoding")))) (r "1.75")))

(define-public crate-iroh-base-0.17.0 (c (n "iroh-base") (v "0.17.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("bytes"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "blake3") (r "^1.4.5") (o #t) (d #t) (k 0) (p "iroh-blake3")) (d (n "crypto_box") (r "^0.9.1") (f (quote ("serde" "chacha20"))) (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^1.0.0-beta.6") (f (quote ("debug" "display" "from_str"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc" "use-std" "experimental-derive"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "redb") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-error") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "ssh-key") (r "^0.6.0") (f (quote ("ed25519" "std" "rand_core"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ttl_cache") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (o #t) (d #t) (k 0)))) (h "1z1ra691w4rv63xy6af80lz8hv4hd4qnfz7pbj820kfl5r20pgmi") (f (quote (("default" "hash" "base32")))) (s 2) (e (quote (("wasm" "getrandom?/js") ("redb" "dep:redb") ("key" "dep:ed25519-dalek" "dep:once_cell" "dep:rand" "dep:rand_core" "dep:ssh-key" "dep:ttl_cache" "dep:aead" "dep:crypto_box" "dep:zeroize" "dep:url" "dep:derive_more" "dep:getrandom") ("hash" "dep:blake3" "dep:data-encoding" "dep:postcard" "dep:derive_more" "base32") ("base32" "dep:data-encoding" "dep:postcard")))) (r "1.76")))

