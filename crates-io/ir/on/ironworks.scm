(define-module (crates-io ir on ironworks) #:use-module (crates-io))

(define-public crate-ironworks-0.1.0 (c (n "ironworks") (v "0.1.0") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0zpq7sy1p1mna1dwi7fy21xac0k07a45khmixxxsjxkjk7c7vk4y") (f (quote (("sqpack" "flate2") ("ffxiv") ("excel" "enum-as-inner" "num_enum"))))))

(define-public crate-ironworks-0.2.0 (c (n "ironworks") (v "0.2.0") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0gwp8ijfyn7wwwn1h12hj7j9g6fvj0kd13dclnqwwnhw21hxyh1y") (f (quote (("sqpack" "flate2") ("ffxiv") ("excel" "enum-as-inner" "num_enum"))))))

(define-public crate-ironworks-0.3.0 (c (n "ironworks") (v "0.3.0") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0xvdrdzr63kjbr15xfi1kn3rqc9p65cq1h62g82qrni046ngmy7y") (f (quote (("ffxiv") ("exl") ("exh") ("exd")))) (y #t) (s 2) (e (quote (("sqpack" "dep:flate2") ("excel" "dep:enum-as-inner" "dep:num_enum" "exd" "exh" "exl"))))))

(define-public crate-ironworks-0.3.1 (c (n "ironworks") (v "0.3.1") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1k54xwgx8sx33xnnwjhsagwfmpgj0q7zhc2hb1vglar9z1mbpdlb") (f (quote (("exl") ("exh") ("exd")))) (s 2) (e (quote (("sqpack" "dep:flate2") ("ffxiv" "dep:num_enum") ("excel" "dep:enum-as-inner" "dep:num_enum" "exd" "exh" "exl"))))))

(define-public crate-ironworks-0.4.0 (c (n "ironworks") (v "0.4.0") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "half") (r "^1.8.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "09x0yf7rkp32rkrlyd8p20vc98fpdlzsc21xkb0bbhlly1y1ahir") (f (quote (("sklb") ("pbd") ("mtrl") ("exl") ("exh") ("exd")))) (s 2) (e (quote (("tex" "dep:modular-bitfield" "dep:num_enum") ("sqpack" "dep:flate2") ("mdl" "dep:half" "dep:modular-bitfield" "dep:num_enum") ("ffxiv" "dep:num_enum") ("excel" "dep:enum-as-inner" "dep:num_enum" "exd" "exh" "exl") ("eqdp" "dep:modular-bitfield"))))))

(define-public crate-ironworks-0.4.1 (c (n "ironworks") (v "0.4.1") (d (list (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "half") (r "^1.8.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "07vd95smpjs999fx5ivx2flwq67pnvls4k3lvr6ap7f25y05r77k") (f (quote (("sklb") ("pbd") ("mtrl") ("exl") ("exh") ("exd")))) (s 2) (e (quote (("tex" "dep:modular-bitfield" "dep:num_enum") ("sqpack" "dep:flate2") ("mdl" "dep:half" "dep:modular-bitfield" "dep:num_enum") ("ffxiv" "dep:num_enum") ("excel" "dep:enum-as-inner" "dep:num_enum" "exd" "exh" "exl") ("eqdp" "dep:modular-bitfield"))))))

