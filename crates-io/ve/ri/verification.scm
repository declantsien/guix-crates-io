(define-module (crates-io ve ri verification) #:use-module (crates-io))

(define-public crate-verification-0.0.0 (c (n "verification") (v "0.0.0") (h "1zd3jc0k8mvlkpak2fjbs5lfyijqh3ckyc3szfs22kvy42zvvpr9")))

(define-public crate-verification-0.1.0 (c (n "verification") (v "0.1.0") (d (list (d (n "blockchain") (r "^0.1.0") (d #t) (k 0) (p "vapcore-blockchain")) (d (n "call-contract") (r "^0.1.0") (d #t) (k 0) (p "vapcore-call-contract")) (d (n "client-traits") (r "^0.1.0") (d #t) (k 0)) (d (n "common-types") (r "^0.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "enjen") (r "^0.1.0") (d #t) (k 0)) (d (n "len-caching-lock") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashina") (r "^0.1.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tetsy-bytes") (r "^0.1.0") (d #t) (k 0)) (d (n "tetsy-crypto") (r "^0.4.2") (f (quote ("publickey"))) (d #t) (k 2)) (d (n "tetsy-keccak-hash") (r "^0.4.0") (d #t) (k 0)) (d (n "tetsy-rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "tetsy-unexpected") (r "^0.1.0") (d #t) (k 0)) (d (n "tetsy-util-mem") (r "^0.3.0") (d #t) (k 0)) (d (n "time-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "triehash") (r "^0.2") (d #t) (k 0) (p "triehash-vapory")) (d (n "vapcore-io") (r "^1.12.0") (d #t) (k 0)) (d (n "vapory-types") (r "^0.8.0") (d #t) (k 0)))) (h "10285niii7q7qj68pwgaz7j0r6qhjmy3b8y0sf3qnp6blcxik7gc") (f (quote (("bench"))))))

