(define-module (crates-io ve il veilid_duplex) #:use-module (crates-io))

(define-public crate-veilid_duplex-0.1.0 (c (n "veilid_duplex") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.30.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.4") (f (quote ("rt-tokio"))) (d #t) (k 0)))) (h "0pd4q6ijz7i29gvjx81zw3nrpb8dawjzrrfqf089akjsf0inv58w")))

(define-public crate-veilid_duplex-0.1.1 (c (n "veilid_duplex") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.4") (f (quote ("default-async-std"))) (k 0)))) (h "14p4f1bf7xicrs32d61iipq0vydlwgbmzd664hkx2g63kl3ghhpc")))

(define-public crate-veilid_duplex-0.1.2 (c (n "veilid_duplex") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-async-std"))) (k 0)))) (h "1zzq8mqycgkzcvfaxnqqyd8lhbn7np6hv9c2hz3hhf1f67wwfbfn")))

(define-public crate-veilid_duplex-0.1.3 (c (n "veilid_duplex") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-async-std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14m5i29sj8mbvajbazz4pcc21jdsbb9ci7p5d0fahbcag593nh0m")))

(define-public crate-veilid_duplex-0.1.5 (c (n "veilid_duplex") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-async-std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "veilid-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wchbgcg32wwz4qdva8j8m7gi7fhpv637qw4mxsha4yd2m53cspb")))

(define-public crate-veilid_duplex-0.1.6 (c (n "veilid_duplex") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-async-std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "veilid-core") (r "^0.2.5") (f (quote ("default-wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "veilid-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ry013q3s07zqdys4rmzy51kiiz225i226l0ad5g7v34c5kdjcll")))

(define-public crate-veilid_duplex-0.2.0 (c (n "veilid_duplex") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid-core") (r "^0.3") (f (quote ("default-async-std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "veilid-core") (r "^0.3") (f (quote ("default-wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "veilid-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1rj7l6slam4yql5fb2qac8vkswxj1cmh86q2hpjbsahym26yy80w")))

