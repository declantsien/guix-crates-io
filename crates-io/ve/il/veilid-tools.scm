(define-module (crates-io ve il veilid-tools) #:use-module (crates-io))

(define-public crate-veilid-tools-0.1.0 (c (n "veilid-tools") (v "0.1.0") (h "1ad1lklx5pi4cc9kvxipmcmvfzjy10hvhh83dk9r0xbsiann37vr") (y #t)))

(define-public crate-veilid-tools-0.2.0 (c (n "veilid-tools") (v "0.2.0") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1awzgzb5ldjm62h8jgcw7x271af51b2vmygn37b33pmgnk2236nm") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.2.1 (c (n "veilid-tools") (v "0.2.1") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0lnkyh1v66spwbqzwzy14b0jxr2fb14hrb9g39c2rpg6mw7nbszb") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.2.2 (c (n "veilid-tools") (v "0.2.2") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0g3mng70r2w0ah5xxnqmprrxv22y6hb4r7w3gjca0y4jcf0h5faz") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.2.3 (c (n "veilid-tools") (v "0.2.3") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1vdcr3lvn9g7i945q4cqmv899kyfjgs5llmcj7ymh3ld7211gxvc") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.2.4 (c (n "veilid-tools") (v "0.2.4") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ifstructs") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "netlink-packet-route") (r "=0.17.1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "netlink-sys") (r "=0.8.5") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "rtnetlink") (r "=0.13.1") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("iptypes" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11dbv9jvfhsfg9cvmqpbksa105ks4cfkyhpixixqa21nmiwb31s7") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "rtnetlink/tokio_socket" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std" "rtnetlink/smol_socket") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:tracing" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.2.5 (c (n "veilid-tools") (v "0.2.5") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ifstructs") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "netlink-packet-route") (r "=0.17.1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "netlink-sys") (r "=0.8.5") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.9") (d #t) (k 0)) (d (n "rtnetlink") (r "=0.13.1") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (f (quote ("async"))) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("iptypes" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19d0n7sps9sbszmkgaz20l9i30296yg0p2w87p6chqlkds8y00p7") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "rtnetlink/tokio_socket" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std" "rtnetlink/smol_socket") ("network-result-info") ("network-result-extra") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:tracing" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.3.0 (c (n "veilid-tools") (v "0.3.0") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ifstructs") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "netlink-packet-route") (r "=0.17.1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "netlink-sys") (r "=0.8.5") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.13") (d #t) (k 0)) (d (n "rtnetlink") (r "=0.13.1") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (f (quote ("async"))) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("net"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("iptypes" "iphlpapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rsxqdm97al87mc025lqsmb5j1nlidl1wa47yf49lbwjwrc0dpxp") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "tokio-stream" "rtnetlink/tokio_socket" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std" "rtnetlink/smol_socket") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:tracing" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.3.1 (c (n "veilid-tools") (v "0.3.1") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ifstructs") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "netlink-packet-route") (r "=0.17.1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "netlink-sys") (r "=0.8.5") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.13") (d #t) (k 0)) (d (n "rtnetlink") (r "=0.13.1") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (f (quote ("async"))) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("net"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("iptypes" "iphlpapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "042s37f7c0xd8zggfc8ps0j9p0xaky32sg9f6kjjz9yakg16qavj") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "tokio-stream" "rtnetlink/tokio_socket" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std" "rtnetlink/smol_socket") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:tracing" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

(define-public crate-veilid-tools-0.3.2 (c (n "veilid-tools") (v "0.3.2") (d (list (d (n "android_logger") (r "^0.13.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("unstable"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async_executors") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "fn_name") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("alloc"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("async-await" "sink" "std" "io"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ifstructs") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7.0") (f (quote ("logger"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "netlink-packet-route") (r "=0.17.1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "netlink-sys") (r "=0.8.5") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("user"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "oslog") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "paranoid-android") (r "^0.2.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "range-set-blaze") (r "^0.1.13") (d #t) (k 0)) (d (n "rtnetlink") (r "=0.13.1") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "send_wrapper") (r "^0.6.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serial_test") (r "^2.0.0") (f (quote ("async"))) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "simplelog") (r "^0.12.1") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "stop-token") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("net"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log" "attributes"))) (o #t) (d #t) (k 0)) (d (n "tracing-oslog") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-wasm") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("iptypes" "iphlpapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1j8n676ndlx8s7ypz76zfp6c6vqfs30rdy2gqmcw53wml6qpid7n") (f (quote (("rt-wasm-bindgen" "async_executors/bindgen" "async_executors/timer") ("rt-tokio" "tokio" "tokio-util" "tokio-stream" "rtnetlink/tokio_socket" "async_executors/tokio_tp" "async_executors/tokio_io" "async_executors/tokio_timer") ("rt-async-std" "async-std" "async_executors/async_std" "rtnetlink/smol_socket") ("default" "rt-tokio")))) (s 2) (e (quote (("veilid_tools_ios_tests" "dep:tracing" "dep:oslog" "dep:tracing-oslog") ("veilid_tools_android_tests" "dep:paranoid-android") ("tracing" "dep:tracing" "dep:tracing-subscriber"))))))

