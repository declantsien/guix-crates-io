(define-module (crates-io ve x- vex-rt) #:use-module (crates-io))

(define-public crate-vex-rt-0.1.0 (c (n "vex-rt") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 2)))) (h "17am9fn1mkv16cxmqai06hnl9va3aagc8wql9h2gm4b6ar8driag")))

(define-public crate-vex-rt-0.1.1 (c (n "vex-rt") (v "0.1.1") (d (list (d (n "bindgen") (r "^0.53.1") (d #t) (k 1)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 2)) (d (n "libc_alloc") (r "^1.0.2") (d #t) (k 0)))) (h "0snvqx2djcch9cf914bg7zy16ri6q40bsall8mdnjl2z5i0yfdyv")))

(define-public crate-vex-rt-0.2.0 (c (n "vex-rt") (v "0.2.0") (d (list (d (n "bindgen") (r "^0.53.1") (d #t) (k 1)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1hjpwyfd55jvpv1l397pwhrcgq8sjmqzjr397lbsg2sfq9wvl3l0")))

(define-public crate-vex-rt-0.3.0 (c (n "vex-rt") (v "0.3.0") (d (list (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0vmyin626fi3l6pcryx2wj9friwvfjmjb549hrn080lhw4gg16cz")))

(define-public crate-vex-rt-0.4.0 (c (n "vex-rt") (v "0.4.0") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "19k0q5zn6lj037rzgqrm4zily6fwzrz0ghrqiy53zf5r2s2yf0f7") (y #t)))

(define-public crate-vex-rt-0.4.1 (c (n "vex-rt") (v "0.4.1") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1dnyy97rkv9lnfy2g9nmi6s8qx959x0ndkxvvyi91wfb1lshq6ii") (y #t)))

(define-public crate-vex-rt-0.4.2 (c (n "vex-rt") (v "0.4.2") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1wx3jkphswy3lp1acv4nv3nkn6fimi3yf79lwm8mwhfri087415g")))

(define-public crate-vex-rt-0.4.3 (c (n "vex-rt") (v "0.4.3") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "15pagfh51ygchq057kwfr56pgm2r8c3wp19zkqx2g0dnzz6vsip6")))

(define-public crate-vex-rt-0.5.0 (c (n "vex-rt") (v "0.5.0") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1y145rvv8axscl5ni63vxjfb8rrvm42skfard1v1bbpzxr4hbnib")))

(define-public crate-vex-rt-0.6.0 (c (n "vex-rt") (v "0.6.0") (d (list (d (n "array-init") (r "^1.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.57.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0215xczh05i1k0yv4hcgw4bmcdrqpwnf0fwib1g7dldzn1xh2gxz")))

(define-public crate-vex-rt-0.7.0 (c (n "vex-rt") (v "0.7.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1jlj5a87xy99vxh64nmqsj7rwrvfifks5zmhk1liihm7mdfjmcdm")))

(define-public crate-vex-rt-0.8.0 (c (n "vex-rt") (v "0.8.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "087p7axlrlbnwfcngg80pgjq0iwnkk0mm41bv6nk8vrz4ra65ln6") (y #t)))

(define-public crate-vex-rt-0.8.1 (c (n "vex-rt") (v "0.8.1") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0yp6xpqpg999x902havq0m7cc9b8f5v8cfgkh47kjiv7i4mc4khz")))

(define-public crate-vex-rt-0.9.0 (c (n "vex-rt") (v "0.9.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "19zp33aa639c8hw8a7k7hp2wwq0i07zj878b911qmgb3lk5l7zdy")))

(define-public crate-vex-rt-0.10.0 (c (n "vex-rt") (v "0.10.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0mp8wpw2rpgzap1wnwq9lfyxy6krcv8zsn2i54v6y2q1h0f76v9m")))

(define-public crate-vex-rt-0.10.1 (c (n "vex-rt") (v "0.10.1") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1667hag25mbh3n62424z1p176awv7raa6if2hhnij9gr4g5iml14")))

(define-public crate-vex-rt-0.10.2 (c (n "vex-rt") (v "0.10.2") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1dl50ykqbr7zdiymzmplddwpafvbh0m75f22b73kvs6yqfj92zsn") (y #t)))

(define-public crate-vex-rt-0.11.0 (c (n "vex-rt") (v "0.11.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.58.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1hlpf9f186568rgq9wwzwyr4yyxxczyznmfslgsysvpxyfni4488")))

(define-public crate-vex-rt-0.11.1 (c (n "vex-rt") (v "0.11.1") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.59.2") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1zaw5mm4bfw7dl814dbkr9dfvmd7rlhcv3h5ja92y501dbmxzki4")))

(define-public crate-vex-rt-0.11.2 (c (n "vex-rt") (v "0.11.2") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.61.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0qzmps2b051c4dhr54h35zj62ggnsszqm3sgn0z3lvcdzliwk8i6")))

(define-public crate-vex-rt-0.12.0 (c (n "vex-rt") (v "0.12.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.61.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "17h6wdvkjd2lzi1gr04vhxz1qsjbladk167x59cm492cp3zhi96j")))

(define-public crate-vex-rt-0.13.0 (c (n "vex-rt") (v "0.13.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1cp0wvljhpsp5nfg9lmv6r0ldm0y2lmcr1n7iff057pyfgkv5b84")))

(define-public crate-vex-rt-0.14.0 (c (n "vex-rt") (v "0.14.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.137") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "1wlvj6901g70y1qwspc1jp8h7ddyga0d9gxbv824zdg2c35jcnaz")))

(define-public crate-vex-rt-0.15.0 (c (n "vex-rt") (v "0.15.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.137") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 2)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "06k217sivpasyhadw7v4v5n3jrzafggd320qybbpd1l1ky0xfx59")))

(define-public crate-vex-rt-0.15.1 (c (n "vex-rt") (v "0.15.1") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.137") (k 0)) (d (n "libc-print") (r "^0.1.14") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 2)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.0") (d #t) (k 1)))) (h "0pp1xxpz6vys4d9dqykfkhgaak86g21iffiln31a7r92f5aqvlzr")))

(define-public crate-vex-rt-1.0.0-rc.1 (c (n "vex-rt") (v "1.0.0-rc.1") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "1dcra4yb11npd6xnrgwdh7pmik4hki9ccn0amfdpb1wkrhl6ghc0") (s 2) (e (quote (("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.2 (c (n "vex-rt") (v "1.0.0-rc.2") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0dv9mlbphrzhndijbcsrm24nvgpivz20i571lvz0f9sjd2sm08lx") (s 2) (e (quote (("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.3 (c (n "vex-rt") (v "1.0.0-rc.3") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0jsnx3238xdqw5ci71risr6jn7vmxps8skzlih3xpfn1ajl929p0") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.4 (c (n "vex-rt") (v "1.0.0-rc.4") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "1a36rf1k1d0r2na1v02vfxiwniykd5fazf8ff2bjjvj1ff934cvl") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.5 (c (n "vex-rt") (v "1.0.0-rc.5") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "newlib-alloc") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0pf3fpmhr8wa6szvfsmrsl4jmwblx92yqv6gzf3f22gjcaych419") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.6 (c (n "vex-rt") (v "1.0.0-rc.6") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0lxg7crd4h0mr0wx5wiy07rf9366njkxchzi48z7qm6i8zcsylci") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.7 (c (n "vex-rt") (v "1.0.0-rc.7") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.63.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0v836qj4iia9bhs33izqc7ghkk5c0ajp4rppj56wji1bnhy1daia") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.8 (c (n "vex-rt") (v "1.0.0-rc.8") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.34.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "183m7xs3m82dm0ms5q2v9kzz111pzdif3p5fnd0lsx8nazg3i7sc") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.9 (c (n "vex-rt") (v "1.0.0-rc.9") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "uom") (r "^0.33.0") (f (quote ("f64" "i32" "si" "try-from"))) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (d #t) (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "1xmsdlidwwp7jg36ny82nyib3y1sa9vgcd5m537d5s3bdpiwypz8") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.10 (c (n "vex-rt") (v "1.0.0-rc.10") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.0-beta.3") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "036544w32gpdvp97j5vzrnim0s22mifs9hi8a7m7jv0a1vwzzg3b") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.11 (c (n "vex-rt") (v "1.0.0-rc.11") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.0-beta.3") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "10hhkz48i7k9grss25r8bbyja6hc3fvajag49i23ivmxsr3mm9jd") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.12 (c (n "vex-rt") (v "1.0.0-rc.12") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.0-beta.3") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "1w6n6vsb9h2hvn7vqwffxaval6wfpa0zcz4qx5qbwrfz4vgb8sp4") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.13 (c (n "vex-rt") (v "1.0.0-rc.13") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.0-beta.3") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0xlrnjqxv3pbv4qxc4q136dxnw6dpn9z9y7i1cwk7mrhg1cvm808") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.14 (c (n "vex-rt") (v "1.0.0-rc.14") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.0-beta.3") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "0vgf79i7hb9m0iz26pib8m6ps6hhp3jvlsl2haq9rflnwxdl3bdq") (s 2) (e (quote (("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

(define-public crate-vex-rt-1.0.0-rc.15 (c (n "vex-rt") (v "1.0.0-rc.15") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.64.0") (d #t) (k 1)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "by_address") (r "^1.1.0") (d #t) (k 0)) (d (n "cstring-interop") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (o #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("alloc" "async-await"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10.5") (f (quote ("use_alloc"))) (k 2)) (d (n "libc") (r "^0.2.139") (k 0)) (d (n "libc-print") (r "^0.1.20") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "owner-monad") (r "^0.1.0") (d #t) (k 0)) (d (n "queue-model") (r "^0.1.2") (d #t) (k 0)) (d (n "qunit") (r "^0.1.2") (f (quote ("math" "libm"))) (k 0)) (d (n "raii-map") (r "^0.1.0") (d #t) (k 0)) (d (n "rcstring") (r "^0.2.1") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (f (quote ("nightly"))) (o #t) (k 0)) (d (n "slice-copy") (r "^0.3.0") (d #t) (k 0)) (d (n "slint") (r "^1.5.0") (f (quote ("compat-1-2" "unsafe-single-threaded" "libm" "renderer-software"))) (o #t) (k 0)) (d (n "slint-build") (r "^1.5.0") (o #t) (d #t) (k 1)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "vex-rt-macros") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "zip") (r "^0.6.3") (k 1)) (d (n "zip-extensions") (r "^0.6.1") (d #t) (k 1)))) (h "02c069hp4200lp9s2vlkkgh75c0m6xzh912hfr7zqb3dn7zl0bdr") (s 2) (e (quote (("slint-backend" "dep:slint" "dep:slint-build" "dep:either" "dep:memoffset") ("logging" "dep:log") ("async-await" "dep:futures" "dep:replace_with"))))))

