(define-module (crates-io lo g4 log4rs) #:use-module (crates-io))

(define-public crate-log4rs-0.1.1 (c (n "log4rs") (v "0.1.1") (d (list (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "0iq7m465b4fmi24b8iscm28bacxv84by9m1wpi1j80b3l51l0bl9")))

(define-public crate-log4rs-0.2.0 (c (n "log4rs") (v "0.2.0") (d (list (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "0wssg3dzybpkx5iif35wad260dq7cyw9zikhapc1v09cl7yajww9")))

(define-public crate-log4rs-0.2.1 (c (n "log4rs") (v "0.2.1") (d (list (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "1xkhvns6n2j6wrgcfh6ny402mwbpyh0cbgafk27wf5id33a0nik9")))

(define-public crate-log4rs-0.3.0 (c (n "log4rs") (v "0.3.0") (d (list (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "0a2z7vs3gggx673z9igid1dwy140xdy4s2s5rq7hwxbc9wjjm2jv")))

(define-public crate-log4rs-0.3.1 (c (n "log4rs") (v "0.3.1") (d (list (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "18jp3jggaxraclw450dkjj0vccxvk2g8rmryj0rkag79j01p2inr")))

(define-public crate-log4rs-0.3.2 (c (n "log4rs") (v "0.3.2") (d (list (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "0qyi7c7b0fj6yyfpis4040hncxaq0kkcrbywc5r0m39ras7mxjmw")))

(define-public crate-log4rs-0.3.3 (c (n "log4rs") (v "0.3.3") (d (list (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.1") (d #t) (k 0)))) (h "0m7aa1nx1hbg3n0krd9x5fzb7nh993hnwl1ihrr14x3v97m0h2qq")))

(define-public crate-log4rs-0.4.0 (c (n "log4rs") (v "0.4.0") (d (list (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "14ayn3jlg41i36jawywkmn31fr1fvz713lfvpfz8sx9vpcfpy5ki") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.1 (c (n "log4rs") (v "0.4.1") (d (list (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "1cjw5lys35d8h3nby6jvnpbjqri478mkcfdd62dx0mi8410dzxlf") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.2 (c (n "log4rs") (v "0.4.2") (d (list (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "0gvyz3apnscdxkqrpm9sbsjxigsmk2bs7b755z66my6r09p02rnm") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.3 (c (n "log4rs") (v "0.4.3") (d (list (d (n "antidote") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "0ga9jlf3ry6d246kascwcbdi8gq12zcp03ishsllr7n1h60bmpll") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.4 (c (n "log4rs") (v "0.4.4") (d (list (d (n "antidote") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7.5") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "0czlipkppsp7asawqhb5cmdh48xwlx6y6caz51qfqdd6zm4z3di9") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.5 (c (n "log4rs") (v "0.4.5") (d (list (d (n "antidote") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7.5") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "1n479dkr7m998cp7380h4lrq17cnqpbzb1a9bvqviw4df7k0r05y") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.6 (c (n "log4rs") (v "0.4.6") (d (list (d (n "antidote") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7.5") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "19ms0vahcxlqxisvfxfykm6nkynf6l03x22fz4572bywx7qqprjv") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.7 (c (n "log4rs") (v "0.4.7") (d (list (d (n "antidote") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7.5") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0cpjl11rndfqp7pi3n1hz2b6mpj8c0hgywm6lg605jw7wgb0mbb7") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.4.8 (c (n "log4rs") (v "0.4.8") (d (list (d (n "antidote") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7.5") (d #t) (k 0)) (d (n "serde-value") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.1.28") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0fjqw1qicx44bp0fkxsl1w8qf49kngd0niq25wm26bj2fyz78w3a") (f (quote (("yaml" "serde_yaml") ("json" "serde_json"))))))

(define-public crate-log4rs-0.5.0 (c (n "log4rs") (v "0.5.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.2") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1si6ygjcx692b1vlzmjxpnhlrhdl2319nbyd0vn94m0gf60x06ca") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde-value" "typemap") ("delete_roller") ("default" "console_appender" "file_appender" "pattern_encoder" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.5.1 (c (n "log4rs") (v "0.5.1") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r ">= 0.4, < 0.6") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.2") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "17sz51vxf9apq66cv90cacippkzhbpp9xmrhkig1n52i48s0ydf8") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde-value" "typemap") ("delete_roller") ("default" "console_appender" "file_appender" "pattern_encoder" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.5.2 (c (n "log4rs") (v "0.5.2") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r ">= 0.4, < 0.6") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.2") (f (quote ("serde"))) (o #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0522s47ldaglrv2yjcsjfyph2raqvzlscg7n0l4j98ficjbc7www") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde-value" "typemap") ("delete_roller") ("default" "console_appender" "file_appender" "pattern_encoder" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.6.0 (c (n "log4rs") (v "0.6.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.6.0-rc1") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0cx325asyvk76wxmkbj0c3x3xbwphkg7ykxmbr143cvv8f1ng48y") (f (quote (("yaml_format" "serde_yaml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.6.1 (c (n "log4rs") (v "0.6.1") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.6.0-rc1") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0lmxaqan59s99k7y87m1mnzn6k6rjvraywr1asifn5j629lviswy") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.6.2 (c (n "log4rs") (v "0.6.2") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.6.0-rc1") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0kfd7s7016rzg3dzc8y1phscxvdzbrp7yfr8i5jkgr84ayjaj81p") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.6.3 (c (n "log4rs") (v "0.6.3") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.6.0-rc1") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "08dxfg31fiisskqxa6041n5i3wr5f86xa6x5nvs5scaijxsml20v") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.7.0 (c (n "log4rs") (v "0.7.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0k9n52qwqilf77xxksgqj48nl522wvqg4kz70xy4lc3xiisbbgp9") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "kernel32-sys" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.8.0 (c (n "log4rs") (v "0.8.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0qxfqwyalm9h2k17vnyr1x81zrsk7q5k2171jjx0y82kln861wd1") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.8.1 (c (n "log4rs") (v "0.8.1") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "00jr1wk9klvqm4lddc6wx5nd23j0whhxhf7b5mm12d566y3zrq15") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.8.2 (c (n "log4rs") (v "0.8.2") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arc-swap") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0liv0wkv11cml2vs3r4mf0wnxxbyn2ab32hk4xwgpmbic8vwsn40") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.8.3 (c (n "log4rs") (v "0.8.3") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arc-swap") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "06xxmmbsqdfqikvgkdbq054pi6f99513yzcafg05i0gr9m3m400h") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.9.0 (c (n "log4rs") (v "0.9.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arc-swap") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0qrv3kipnaaa4n3hwc8gf370x7a4qzqzsbxj9ggj5a512wnz6ag2") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.10.0 (c (n "log4rs") (v "0.10.0") (d (list (d (n "antidote") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0wgf8jh6zk0pyamadila02smrpa1cm4bwz82rzfri5y54jbbjgc5") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "antidote" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "antidote" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "gzip" "file" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.11.0 (c (n "log4rs") (v "0.11.0") (d (list (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0597m4jmqb8r3cgdpx08z5biv4b1ymz39lnlvm51xw6dgi1sayxl") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "file" "yaml_format" "gzip") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.12.0 (c (n "log4rs") (v "0.12.0") (d (list (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1yp4yq41rdxxc60k7lb1p44ss2zk6ihcqahk2fkwr6pqsphydn7l") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "file" "yaml_format" "gzip") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-0.13.0 (c (n "log4rs") (v "0.13.0") (d (list (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^1.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1mkcr2gkcfvlffaml6gmv2nfbrnpin372pf3c3bj8j2qwi2svqg1") (f (quote (("yaml_format" "serde_yaml") ("xml_format" "serde-xml-rs") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "serde_derive" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("file" "humantime" "serde" "serde_derive" "serde-value" "typemap" "log/serde") ("delete_roller") ("default" "all_components" "file" "yaml_format" "gzip") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.0.0-alpha-1 (c (n "log4rs") (v "1.0.0-alpha-1") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0mvvvffy30jhk6cxrknyxwv5gl7ha7hpa2fm0451zhz7cnmw5ksq") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.0.0-alpha-2 (c (n "log4rs") (v "1.0.0-alpha-2") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0nic56h40h35d06q56wzn8cv2zjbdg265z3wzy7gkfyfmqj3kvx4") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.0.0 (c (n "log4rs") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "04d21kkb6if7hly0syp64m15a9695fpfgvlnff3gy58i1n42lmyi") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder" "regex") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.1.0 (c (n "log4rs") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "palaver") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^4") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0ri2qg2kkfrkfpbvl8yq5ia2hqp226zlbcrhhkv2l1jxa1aqi4z4") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id" "palaver") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.1.1 (c (n "log4rs") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^4") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1wr2i1ns1mdqn213b0mr0q1mli6vhmizbb828gly5y5yyicsygl9") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.2.0 (c (n "log4rs") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^4") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "typemap-ors") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1z9kfnba38smyrpmq49pjl82yqbvj2h81m3878cvhycydmwa2v6k") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap-ors" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "json_encoder" "pattern_encoder" "threshold_filter"))))))

(define-public crate-log4rs-1.3.0 (c (n "log4rs") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (o #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "log-mdc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "thread-id") (r "^4") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "typemap-ors") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "processenv" "winbase" "wincon"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "19jck058vgb2k1jypknjcgpadq1ydrzb7sl4y8f3kl2vw5d165h8") (f (quote (("yaml_format" "serde_yaml") ("toml_format" "toml") ("time_trigger" "rand") ("threshold_filter") ("size_trigger") ("simple_writer") ("rolling_file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("pattern_encoder" "chrono" "log-mdc" "thread-id") ("json_format" "serde_json") ("json_encoder" "serde" "serde_json" "chrono" "log-mdc" "log/serde" "thread-id") ("gzip" "flate2") ("fixed_window_roller") ("file_appender" "parking_lot" "simple_writer" "pattern_encoder") ("delete_roller") ("default" "all_components" "config_parsing" "yaml_format") ("console_writer" "ansi_writer" "libc" "winapi") ("console_appender" "console_writer" "simple_writer" "pattern_encoder") ("config_parsing" "humantime" "serde" "serde-value" "typemap-ors" "log/serde") ("compound_policy") ("background_rotation") ("ansi_writer") ("all_components" "console_appender" "file_appender" "rolling_file_appender" "compound_policy" "delete_roller" "fixed_window_roller" "size_trigger" "time_trigger" "json_encoder" "pattern_encoder" "threshold_filter")))) (r "1.69")))

