(define-module (crates-io lo gi logic-mesh) #:use-module (crates-io))

(define-public crate-logic-mesh-0.1.0 (c (n "logic-mesh") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.11") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11wci7wk069wbfgx5li72pslqq2a13i8493hg77c3waqiw6h38f8") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.1 (c (n "logic-mesh") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.11") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0lh0dcbpph9wvm8cfnfrj3bmif1avrlvd177ry48cvra0n5lnvkd") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.2 (c (n "logic-mesh") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.11") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0s75rj1rr422cnjjg20x1m3prgairgs3p0xq56n9fbj4l0fi60yh") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.3 (c (n "logic-mesh") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.11") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b5gfwk0i613i2jqgsq114rll550jiwzq0df6xa9gl7viq9flda3") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.4 (c (n "logic-mesh") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.12") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dzhyy5z9h6d29s61zl8fhbjz9cdxm51vip3f9wp2jqc66x89n5g") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.5 (c (n "logic-mesh") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.65") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0f8l7r0gn1kch1xhd5m16iwwnyp331b7l21vzn9nlar1aw70bj0h") (f (quote (("default" "console_error_panic_hook"))))))

(define-public crate-logic-mesh-0.1.6 (c (n "logic-mesh") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.65") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jsyad0nmvvrnx5wmnxls688kpgcz3a80z8766bgcs917jnx6212")))

(define-public crate-logic-mesh-0.1.7 (c (n "logic-mesh") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.65") (f (quote ("Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b6zvlv1g756d8by2gnmfj7y1mm08c7y52cy6wvvz8m49dpy52pq")))

(define-public crate-logic-mesh-0.1.8 (c (n "logic-mesh") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)))) (h "1gznk0s34dsdv19mr7aaslszl0xrn4fn5aa8vw75mk6fc1f6d981")))

(define-public crate-logic-mesh-0.1.9 (c (n "logic-mesh") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)))) (h "0ls1xl4vbpg4y5bpmfcp86vgr1f1mr1ny104ws4a77q7v3pfbphv")))

(define-public crate-logic-mesh-0.1.10 (c (n "logic-mesh") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhaystack") (r "^1.0.13") (f (quote ("value" "zinc" "json"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "logic_mesh_block_macro") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-console-logger") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (k 2)))) (h "0sl9h4f3wn6y8h0n3zgqskz2b9nzvxdhl25vk88r6q1z1wbs2j95")))

