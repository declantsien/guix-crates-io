(define-module (crates-io lo gs logsley) #:use-module (crates-io))

(define-public crate-logsley-0.1.0 (c (n "logsley") (v "0.1.0") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "0c2ghaaql57ivqd8vy60hfq1f7nijjw1bxs0b7lgd77ain4f6g3k") (y #t)))

(define-public crate-logsley-0.1.1 (c (n "logsley") (v "0.1.1") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "1xd07dn5gfxrrid917ndwpd5hvwlp3n8wbakpm2vxq0gwc2mlkfy") (y #t)))

(define-public crate-logsley-0.1.2 (c (n "logsley") (v "0.1.2") (d (list (d (n "async-std") (r ">=1.7.0, <2.0.0") (d #t) (k 2)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "log-panics") (r ">=2.0.0, <3.0.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "slog") (r ">=2.5.0, <3.0.0") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r ">=2.5.0, <3.0.0") (d #t) (k 0)) (d (n "slog-envlogger") (r ">=2.2.0, <3.0.0") (d #t) (k 0)) (d (n "slog-json") (r ">=2.3.0, <3.0.0") (d #t) (k 0)) (d (n "slog-scope") (r ">=4.0.0, <5.0.0") (d #t) (k 0)) (d (n "slog-scope-futures") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "slog-stdlog") (r ">=4.0.0, <5.0.0") (d #t) (k 0)) (d (n "slog-term") (r ">=2.6.0, <3.0.0") (d #t) (k 0)))) (h "1kv1pszj0pgvs33wp8fcci68v2yal30hdixws3xrm0hk902sjl5x") (y #t)))

(define-public crate-logsley-0.1.3 (c (n "logsley") (v "0.1.3") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "17p8yqmyd28971j4xmbhl9dh72g2jhln82yasxpvgrs93rknxk02") (y #t)))

(define-public crate-logsley-0.1.4 (c (n "logsley") (v "0.1.4") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "1i12xyaxhm97hkc5y6xxh6bip4c83cshy3swln188nawslx44i6z") (y #t)))

(define-public crate-logsley-0.1.5 (c (n "logsley") (v "0.1.5") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "00mp18s425i6sgzwvwfkfamspss79s35xxvaafs8cipgs595273s") (y #t)))

(define-public crate-logsley-0.1.6 (c (n "logsley") (v "0.1.6") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "0w2aksxaq42np7iw9q75nl4qyczcyazisfgbpy091zn0szrz3x4a")))

(define-public crate-logsley-0.1.7 (c (n "logsley") (v "0.1.7") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "05zj010cjgkippiq8b3kbb4ih2y2vkfgchwzm9ahj28jfd4xc7mj")))

(define-public crate-logsley-0.1.8 (c (n "logsley") (v "0.1.8") (d (list (d (n "async-std") (r "^1.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.5") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-json") (r "^2.3") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "slog-scope-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (d #t) (k 0)) (d (n "slog-term") (r "^2.6") (d #t) (k 0)))) (h "12yvj4pb48bpdszzivc80sgc6nph0xhg31b54h31mn8cdrnq2cca") (f (quote (("async" "slog-scope-futures"))))))

