(define-module (crates-io lo ad loader-rs) #:use-module (crates-io))

(define-public crate-loader-rs-0.1.0 (c (n "loader-rs") (v "0.1.0") (d (list (d (n "failure") (r "^0") (d #t) (k 0)) (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case-derive") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "0lqihsfdgymbx32jipiyirsgcgs461qjysl0fwfmwlqc63hy94ca") (f (quote (("trait_testing" "json-trait-rs") ("trait_serde_yaml" "serde_yaml") ("trait_serde_json" "serde_json") ("trait_json" "json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.2.0 (c (n "loader-rs") (v "0.2.0") (d (list (d (n "failure") (r "^0") (d #t) (k 0)) (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case-derive") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "0q3gmvajnf7m1jvdb3cb6w69265spy9wid7fanjnh8xw230axzhb") (f (quote (("trait_testing" "json-trait-rs") ("trait_serde_yaml" "serde_yaml") ("trait_serde_json" "serde_json") ("trait_json" "json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.3.0 (c (n "loader-rs") (v "0.3.0") (d (list (d (n "failure") (r "^0") (d #t) (k 0)) (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0.3") (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case-derive") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "11q3xwvq6x9n4a0h5isp49v3rs3zl6il1v6dk16q49bp7byygjs4") (f (quote (("trait_serde_yaml" "serde_yaml") ("trait_serde_json" "serde_json") ("trait_json" "json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.4.0 (c (n "loader-rs") (v "0.4.0") (d (list (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0.3") (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "12dirkgskv4ky24814ghwhwg551jb92cx3hrmwab5b863p52vbh7") (f (quote (("trait_serde_yaml" "serde_yaml" "json-trait-rs/trait_serde_yaml") ("trait_serde_json" "serde_json" "json-trait-rs/trait_serde_json") ("trait_json" "json" "json-trait-rs/trait_json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.4.1 (c (n "loader-rs") (v "0.4.1") (d (list (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0.3") (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "1r0rin8ymv45xq4248ngbhz7d344ghy43y1ilayjacnmb8wc23qj") (f (quote (("trait_serde_yaml" "serde_yaml" "json-trait-rs/trait_serde_yaml") ("trait_serde_json" "serde_json" "json-trait-rs/trait_serde_json") ("trait_json" "json" "json-trait-rs/trait_json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.5.0 (c (n "loader-rs") (v "0.5.0") (d (list (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0.3") (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "gzip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case") (r "^0") (d #t) (k 2)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "0jmn38sdjhf296xn881hf5f390l3idbcyc0zijcrflffg1xv30k9") (f (quote (("trait_serde_yaml" "serde_yaml" "json-trait-rs/trait_serde_yaml") ("trait_serde_json" "serde_json" "json-trait-rs/trait_serde_json") ("trait_json" "json" "json-trait-rs/trait_json") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.6.0 (c (n "loader-rs") (v "0.6.0") (d (list (d (n "cached") (r "^0") (d #t) (k 0)) (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "gzip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0k5qfzz45cm6avmqgp67972zp26fwk8sanz2w917l0hy6x70fr51") (f (quote (("trait_serde_yaml" "serde_yaml" "json-trait-rs/trait_serde_yaml" "trait_json_trait_rs") ("trait_serde_json" "serde_json" "json-trait-rs/trait_serde_json" "trait_json_trait_rs") ("trait_json_trait_rs" "json-trait-rs") ("trait_json" "json" "json-trait-rs/trait_json" "trait_json_trait_rs") ("regular_expression" "regex") ("default"))))))

(define-public crate-loader-rs-0.7.0 (c (n "loader-rs") (v "0.7.0") (d (list (d (n "cached") (r "^0") (d #t) (k 0)) (d (n "derive_builder") (r "^0") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0") (d #t) (k 2)) (d (n "json") (r "^0") (o #t) (d #t) (k 0)) (d (n "json-trait-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockito") (r "^0") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "gzip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0") (d #t) (k 0)) (d (n "strum_macros") (r "^0") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1gl2rmr4kz5s8j8lnpcsjj07la71hchfmg0slkzbljmlxx0i4v2p") (f (quote (("trait_serde_yaml" "json-loader" "serde_yaml" "json-trait-rs/trait_serde_yaml") ("trait_serde_json" "json-loader" "serde_json" "json-trait-rs/trait_serde_json") ("trait_json" "json-loader" "json" "json-trait-rs/trait_json") ("testing-helpers" "derive_builder" "mockito" "serde_json" "json-trait-rs/trait_serde_json") ("json-loader" "json-trait-rs") ("default"))))))

