(define-module (crates-io lo ad loadstone) #:use-module (crates-io))

(define-public crate-loadstone-1.0.0 (c (n "loadstone") (v "1.0.0") (d (list (d (n "alloc-cortex-m") (r "0.4.*") (d #t) (k 0)) (d (n "anyhow") (r "1.0.*") (d #t) (k 1)) (d (n "blue_hal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 0)) (d (n "crc") (r "^1.8.1") (k 0)) (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("pem"))) (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "loadstone_config") (r "^1.0.0") (d #t) (k 1)) (d (n "marker-blanket") (r "0.1.*") (d #t) (k 0)) (d (n "nb") (r "0.1.*") (d #t) (k 0)) (d (n "p256") (r "0.8.*") (f (quote ("ecdsa" "sha256" "pem"))) (o #t) (k 0)) (d (n "panic-semihosting") (r "0.5.*") (d #t) (k 0)) (d (n "ron") (r "0.6.*") (d #t) (k 1)) (d (n "serde") (r "1.0.*") (d #t) (k 1)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "static_assertions") (r "1.1.*") (d #t) (k 0)) (d (n "ufmt") (r "0.1.*") (k 0)))) (h "0i6sx21dbb65w2z0vby8g9g7azdqqc62ar3hyhdqsn2s97q67mr5") (f (quote (("wgm160p" "blue_hal/wgm160p" "efm32gg11b_any") ("stm32f4_any" "blue_hal/stm32_any" "stm32_any") ("stm32f469" "blue_hal/stm32f469" "stm32f4_any") ("stm32f429" "blue_hal/stm32f429" "stm32f4_any") ("stm32f412" "blue_hal/stm32f412" "stm32f4_any") ("stm32f407" "blue_hal/stm32f407" "stm32f4_any") ("stm32_any" "cortex_m_any") ("relocate-to-bootable-bank") ("efm32gg11b_any" "cortex_m_any") ("ecdsa-verify" "ecdsa" "p256") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "defmt-default") ("cortex_m_any"))))))

