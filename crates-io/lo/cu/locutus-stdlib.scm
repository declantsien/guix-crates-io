(define-module (crates-io lo cu locutus-stdlib) #:use-module (crates-io))

(define-public crate-locutus-stdlib-0.0.1 (c (n "locutus-stdlib") (v "0.0.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "locutus-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasmer") (r "^2.0") (f (quote ("sys-default" "wat"))) (d #t) (k 2)) (d (n "wasmer-wasi") (r "^2.3") (d #t) (k 2)) (d (n "xz2") (r "^0.1") (o #t) (d #t) (k 0)))) (h "05nbb5j2mqvccaqir1vc6jv49scgqqdskrr3gpk2l1s7d8lwh8ym") (f (quote (("testing" "arbitrary") ("archive" "xz2")))) (r "1.58.0")))

(define-public crate-locutus-stdlib-0.0.2 (c (n "locutus-stdlib") (v "0.0.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "locutus-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasmer") (r "^2.0") (f (quote ("sys-default" "wat"))) (d #t) (k 2)) (d (n "wasmer-wasi") (r "^2.3") (d #t) (k 2)) (d (n "xz2") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hvgldy9r4x8zr3x2ma7j8x99sphx73aglrl29qzvsyhln60q0iw") (f (quote (("testing" "arbitrary") ("archive" "xz2")))) (r "1.58.0")))

(define-public crate-locutus-stdlib-0.0.3 (c (n "locutus-stdlib") (v "0.0.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"unix\")") (k 2)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(target_family = \"unix\")") (k 2)) (d (n "blake2") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "locutus-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (t "cfg(target_family = \"unix\")") (k 2)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\"))") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "parking_lot" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("default" "env-filter"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\"))") (k 0)) (d (n "wasmer") (r "^3") (f (quote ("sys-default"))) (d #t) (t "cfg(target_family = \"unix\")") (k 2)) (d (n "wasmer-wasi") (r "^3") (d #t) (t "cfg(target_family = \"unix\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket"))) (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\"))") (k 0)) (d (n "xz2") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1gl9p1nvq67kh48rgr3h8qhlx577ci9ncgxjvpxpx100j1i1i96n") (f (quote (("trace") ("testing" "arbitrary") ("net" "serde-wasm-bindgen" "tokio" "tokio-tungstenite" "wasm-bindgen" "web-sys") ("default") ("archive" "xz2")))) (r "1.58.0")))

