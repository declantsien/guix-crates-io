(define-module (crates-io ai dl aidl-parser) #:use-module (crates-io))

(define-public crate-aidl-parser-0.1.0 (c (n "aidl-parser") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "16js3qndhrbai6wlbd2693a52j7xqaib7rnzhz5hhy2bnqy8310b")))

(define-public crate-aidl-parser-0.1.1 (c (n "aidl-parser") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0kfd8n9f3mhwps8n4lld0qjki8wsb80c84k119x759jy97i46yra")))

(define-public crate-aidl-parser-0.1.2 (c (n "aidl-parser") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1jmmzf7kiwxr5kd971gi71cj0ik8084ncd1drpbx657rz71w65xx")))

(define-public crate-aidl-parser-0.1.3 (c (n "aidl-parser") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "16513szy413fkv12hdvgpvf1x1jq6armnqjvck8jgdsrh7bkgwmb")))

(define-public crate-aidl-parser-0.1.4 (c (n "aidl-parser") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "15k9683yjapi4cgn0vs5x30xcf1gq1lz96sai7nvpqwg790pmsyw")))

(define-public crate-aidl-parser-0.1.5 (c (n "aidl-parser") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0ga0fhp1vcfzx825vw76jhfjfslqqn9bf77f62h9nxpgwg9a51db")))

(define-public crate-aidl-parser-0.2.0 (c (n "aidl-parser") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "07hhgqz157razvzfmdb3nmwjhp8n9zx6qkiq4skf2sz81n42sqyh")))

(define-public crate-aidl-parser-0.3.0 (c (n "aidl-parser") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "19vmm1dw8g4diy1459i519aqyx3xzvdlndypg9i5l4gv79hhinnr")))

(define-public crate-aidl-parser-0.4.0 (c (n "aidl-parser") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "116hqn3gysxy0w005zywrrzz761vq1q3xvcbhdinq7zxhdl37lhg")))

(define-public crate-aidl-parser-0.5.0 (c (n "aidl-parser") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0088qrva30yh7b2znpdfwfkks596qpbdhpdcrmmfd6awi521cy11")))

(define-public crate-aidl-parser-0.6.0 (c (n "aidl-parser") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1a130341v22pwx0ybd2w501kb9smalagby11zmzf0c7zz12bil4f")))

(define-public crate-aidl-parser-0.6.1 (c (n "aidl-parser") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1rgl3p122jz8hq1f1hmh9c4m0cbqydsj0r151lzdhg8r915nk3ak")))

(define-public crate-aidl-parser-0.6.2 (c (n "aidl-parser") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "05c9ni82sw9vdr4agzhk8w6ck3wrsfzcy9mf1a1wfba2bxh15r7d")))

(define-public crate-aidl-parser-0.7.0 (c (n "aidl-parser") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0pz8q6zdwg9knq4bmawr7shslai7dxcz2r7w24gawx3y3700pklm")))

(define-public crate-aidl-parser-0.7.1 (c (n "aidl-parser") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1b0rfny7g8vd52fxnj027vs2dz6l8sbyyzwlzfgys5ha6xldyf4i")))

(define-public crate-aidl-parser-0.7.2 (c (n "aidl-parser") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1xp5hdwnikynrcjjil6br7xcz3kxb99rwjmxz6yg1lq4fd61k1ic")))

(define-public crate-aidl-parser-0.7.3 (c (n "aidl-parser") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1cili6p44y6mjnnvla80p0xndy3qaml6fcihg5dmn3dr37w5ly3i")))

(define-public crate-aidl-parser-0.8.0 (c (n "aidl-parser") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "06hrqmv6z8cl3hxjrl2hd0z0mz0gdkgbnjjmfpb5gghdpw5bm2hh")))

(define-public crate-aidl-parser-0.10.0 (c (n "aidl-parser") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1f5xgw2k7m5260cnmwgxslps9hxdjlzw89y6xha75mkxdvyk3rj3") (y #t)))

(define-public crate-aidl-parser-0.9.0 (c (n "aidl-parser") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1pr3yw2phf4h0p2bfg5kk50d985br3s3kd3kwr3kxn9l67mr0w74")))

(define-public crate-aidl-parser-0.9.1 (c (n "aidl-parser") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0i0m7980fdir6hx895f4hg7jp35mly9p1avcvzcgi2y15qcgfw72")))

(define-public crate-aidl-parser-0.10.1 (c (n "aidl-parser") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "17fzc20c34bxw0dfm7wfajliyfk7bkpvzkk8qazx5qxv1sr9lbsh")))

(define-public crate-aidl-parser-0.11.0 (c (n "aidl-parser") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "0j5rvs5m6al44g2x1rsca25yg50dix033hrmd0f477g40pzv3gkk")))

(define-public crate-aidl-parser-0.12.0 (c (n "aidl-parser") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "1zxm2d0s1bycck07wk6r74jqs1kab4lq344wkshfw6cmz9dlf8ir")))

(define-public crate-aidl-parser-0.12.1 (c (n "aidl-parser") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "1nbfwjd1ywmg3n47gswjxc7xwwv4z64f5rvfp0adbrg25465mbzj")))

(define-public crate-aidl-parser-0.12.2 (c (n "aidl-parser") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "09gy7sbkds7d86rjgfac2b6m7jnm95knnf57xrsrlxgm467h15xp")))

(define-public crate-aidl-parser-0.12.3 (c (n "aidl-parser") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "line-col") (r "^0.2") (f (quote ("grapheme-clusters"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (f (quote ("redactions" "ron"))) (d #t) (k 2)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 1)))) (h "1inp3rfxz54jrys7rzvhc6am488w7mvr1qncpy2knqji9v11pxl0")))

