(define-module (crates-io ai gc aigc_core) #:use-module (crates-io))

(define-public crate-aigc_core-5.1.2 (c (n "aigc_core") (v "5.1.2") (d (list (d (n "blake2") (r "^0.2") (d #t) (k 0) (p "blake2-rfc")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "croaring") (r "^0.4.6") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "keychain") (r "^5.1.2") (d #t) (k 0) (p "aigc_keychain")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru-cache") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "siphasher") (r "^0.3") (d #t) (k 0)) (d (n "util") (r "^5.1.2") (d #t) (k 0) (p "aigc_util")) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "15arncdxpxkazgp7zn8bkdvcxrik8lvppi6jpn5mmbyjqrg08jd4")))

