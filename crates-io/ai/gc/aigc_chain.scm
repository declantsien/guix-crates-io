(define-module (crates-io ai gc aigc_chain) #:use-module (crates-io))

(define-public crate-aigc_chain-5.1.2 (c (n "aigc_chain") (v "5.1.2") (d (list (d (n "aigc_core") (r "^5.1.2") (d #t) (k 0)) (d (n "aigc_keychain") (r "^5.1.2") (d #t) (k 0)) (d (n "aigc_store") (r "^5.1.2") (d #t) (k 0)) (d (n "aigc_util") (r "^5.1.2") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "croaring") (r "^0.4.6") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru-cache") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "1jspc2pmymjcf7kp83ypcgsqzkyzs6ay3hrrzjisxl6z0zzzhh0p")))

