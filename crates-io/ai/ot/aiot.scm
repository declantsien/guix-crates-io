(define-module (crates-io ai ot aiot) #:use-module (crates-io))

(define-public crate-aiot-0.6.0 (c (n "aiot") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1g7mhcls3zqnngkg4bznyl3vp53shsb7i5qjncglaz5w39gf4wdg")))

(define-public crate-aiot-0.6.1 (c (n "aiot") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1xdh7mfirfyniyllc7x41gn4bsis6fysjap9x3235f13dj8ya6zz")))

(define-public crate-aiot-0.6.2 (c (n "aiot") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0karmxaarwlas6zgmd8kdcdfy0lcj6pm0syig4jnrpdss0ql46bj")))

(define-public crate-aiot-0.6.3 (c (n "aiot") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0y7jdysa9vr0bsbnn82vsy4vbkj0k4hzxxyzwvwk91icfi6v4nl8")))

(define-public crate-aiot-0.6.5 (c (n "aiot") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0f69wjbgz7mxw2x8sw13arp1pq8szkdjqqssykmqg583589h2rdg")))

(define-public crate-aiot-0.7.0 (c (n "aiot") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1h9m5cqyypw103ckzkiqbqjdgmpa04frmrnz40i4mvgy0r35bmd9")))

(define-public crate-aiot-0.8.0 (c (n "aiot") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.8") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.10.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1g55nby90aqdn94hf8qyxyvbwi7jwx02qm9wivp7fg1fzlhbjxfw")))

(define-public crate-aiot-0.8.4 (c (n "aiot") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0m21jbcvspdxfxccdryl9vjrklk26k4aicn4aldrfbkqms2rlvxf")))

(define-public crate-aiot-0.8.5 (c (n "aiot") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0ai6n02zhydbb91v82g58jyykngmvpgs32da60f3ydin5947whbq")))

(define-public crate-aiot-0.8.6 (c (n "aiot") (v "0.8.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0n9lcwz7bzmpiz5p39gj0ry5z3224x5f8i25c2gylv2vvm156as2")))

(define-public crate-aiot-0.9.0 (c (n "aiot") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1m0l2djqchpxbh12wikfqazayhgk6indk0vp8gnhjm9xzwagnnvv")))

(define-public crate-aiot-0.9.1 (c (n "aiot") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0pwbyvxm96qb0gj0gsd3wi67kmb2dnxkgp3g2qf07sbj0wdrms5r")))

(define-public crate-aiot-0.9.2 (c (n "aiot") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0afpqm5lpzsz7bnkfx59aa6xbcvjqr99bmj8f1lahc5db0nnqb8q")))

(define-public crate-aiot-0.9.3 (c (n "aiot") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0mg7dix1xgybqsr9hqhvvrcp33agx1ks0qdzi2a2849p7nkkl5zd")))

(define-public crate-aiot-0.9.4 (c (n "aiot") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1mxs62l64vla9syg35jwkr5ph7dy3gvdvbk5g9jjwxpl4krfb33c")))

(define-public crate-aiot-0.9.5 (c (n "aiot") (v "0.9.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0s6ymh44jzpc31aj3skjzlcrg81yjxfv08j0dv94cm8gi9x2nb50")))

(define-public crate-aiot-0.9.6 (c (n "aiot") (v "0.9.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "12l50ih2d54xzr2n6andmf9kqgr1kx79995pkpdj90xw6hwxqw8z")))

(define-public crate-aiot-0.10.0 (c (n "aiot") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enum-kinds") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (d #t) (k 0)) (d (n "rumqttc") (r "^0.12.0") (f (quote ("use-rustls"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt-multi-thread" "macros" "io-util"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "06cbijflbgc2bqr2bivcmvz825p17n3f7jfffk62yj13khb380dx")))

