(define-module (crates-io ai r- air-testing-framework) #:use-module (crates-io))

(define-public crate-air-testing-framework-0.1.7 (c (n "air-testing-framework") (v "0.1.7") (d (list (d (n "air-test-utils") (r "^0.4.7") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.4.7") (f (quote ("test_with_native_code"))) (d #t) (k 2)) (d (n "aquavm-air-parser") (r "^0.7.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0pzpi5yxh9p82g76wwwm1hffbzsxswjv424fqqbg247znkw4d69l")))

(define-public crate-air-testing-framework-0.2.0 (c (n "air-testing-framework") (v "0.2.0") (d (list (d (n "air-test-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.5.0") (f (quote ("test_with_native_code"))) (d #t) (k 2)) (d (n "aquavm-air-parser") (r "^0.7.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ipbrdlygpvyy6a6ask60s31zrpi540bsf0lj7hlj0rcaxchppv3")))

(define-public crate-air-testing-framework-0.2.1 (c (n "air-testing-framework") (v "0.2.1") (d (list (d (n "air-test-utils") (r "^0.6.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.7.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0r5mp6zpill6cfxbij07li4644sjxw657h1wmk280m15rpzn45v7")))

(define-public crate-air-testing-framework-0.3.0 (c (n "air-testing-framework") (v "0.3.0") (d (list (d (n "air-test-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.7.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1wraysh3qwa101qbrpffzv5g7l5vg1si4xl35glyp4rp77jw11nj")))

(define-public crate-air-testing-framework-0.4.0 (c (n "air-testing-framework") (v "0.4.0") (d (list (d (n "air-test-utils") (r "^0.7.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1rn89zvkg2cj0z97rwwmhnivi9ghz4fw1f340i2dqml47djzxqkj")))

(define-public crate-air-testing-framework-0.4.2 (c (n "air-testing-framework") (v "0.4.2") (d (list (d (n "air-test-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1drirpz9mqaa5g487c99jywv7pkilfq74vhq2hliihql6gncp1fq")))

(define-public crate-air-testing-framework-0.4.3 (c (n "air-testing-framework") (v "0.4.3") (d (list (d (n "air-test-utils") (r "^0.8.2") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1zhxbzxac0blw0iffrpxgz5pkr5vl3gbycb2jqs4qdwp6fa3f1sz")))

(define-public crate-air-testing-framework-0.5.1 (c (n "air-testing-framework") (v "0.5.1") (d (list (d (n "air-test-utils") (r "^0.10.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1h9gwvzl8al9vpla9w2jsg0b3qb4drlb5fipiap059qb7q7wwyd1")))

(define-public crate-air-testing-framework-0.5.2 (c (n "air-testing-framework") (v "0.5.2") (d (list (d (n "air-test-utils") (r "^0.10.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0sx7cxspas67b0ssci6vn4hir06p83h963fvnsm70cq6kja8yr1r")))

(define-public crate-air-testing-framework-0.5.3 (c (n "air-testing-framework") (v "0.5.3") (d (list (d (n "air-test-utils") (r "^0.10.2") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1hqgm112jr5iy80hiph2klqq0fv1vdflkpdym1n0q7ma3w2bznk5")))

(define-public crate-air-testing-framework-0.5.4 (c (n "air-testing-framework") (v "0.5.4") (d (list (d (n "air-test-utils") (r "^0.10.3") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1h4hsrgnzqzl0vrhwk41q7q4rgxk98vliphbz0cccz138yxl7nmh")))

(define-public crate-air-testing-framework-0.5.5 (c (n "air-testing-framework") (v "0.5.5") (d (list (d (n "air-test-utils") (r "^0.10.4") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1g4cn4qny73rpf4v8gggbcg7r781dz9w27qcgd2lqa21z6xz52pr")))

(define-public crate-air-testing-framework-0.6.0 (c (n "air-testing-framework") (v "0.6.0") (d (list (d (n "air-test-utils") (r "^0.10.5") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0cb1cfifrpxq039pvj6fdpbs6a0azp3hg1c1gk480h2fa9qipw76")))

(define-public crate-air-testing-framework-0.6.1 (c (n "air-testing-framework") (v "0.6.1") (d (list (d (n "air-test-utils") (r "^0.10.6") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1x4rqagpmqpbn0f7g3sy5zbpcrkkgbagd0a0bgffklj5r1mfqp6n")))

(define-public crate-air-testing-framework-0.7.0 (c (n "air-testing-framework") (v "0.7.0") (d (list (d (n "air-interpreter-signatures") (r "^0.1.2") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.11.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "081ryp1xcb2m0yzf9n8dycgrwz24xb56pxvwrq4mqir2jan652lv")))

(define-public crate-air-testing-framework-0.7.1 (c (n "air-testing-framework") (v "0.7.1") (d (list (d (n "air-interpreter-signatures") (r "^0.1.2") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.11.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vv1k07cir43gla6sara0xid04nrzx07sxqh1f0v7j1m660xr61q")))

(define-public crate-air-testing-framework-0.7.3 (c (n "air-testing-framework") (v "0.7.3") (d (list (d (n "air-interpreter-signatures") (r "^0.1.4") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.12.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0d39lfwafns92k97g8wmdpniisgszw1acr1yyw65365ywx4i3dkd")))

(define-public crate-air-testing-framework-0.8.0 (c (n "air-testing-framework") (v "0.8.0") (d (list (d (n "air-interpreter-signatures") (r "^0.1.5") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.13.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.11.0") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0pnv6pkz5n6p8xpbcknlvjavh5kf6g515h01dhd3fsq7gijnrqni")))

(define-public crate-air-testing-framework-0.8.2 (c (n "air-testing-framework") (v "0.8.2") (d (list (d (n "air-interpreter-signatures") (r "^0.1.6") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.14.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.11.1") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0fj90nirrjnphfmq4bg8ca5z7pp4wb39966dsmhjiv2r6ang66lv")))

(define-public crate-air-testing-framework-0.8.3 (c (n "air-testing-framework") (v "0.8.3") (d (list (d (n "air-interpreter-signatures") (r "^0.1.7") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.15.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.11.1") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1wx4m6vvlc7fdr2yp9x5zrizmzjikdj4dzbh6m5j5mkqik0qphrm")))

(define-public crate-air-testing-framework-0.8.4 (c (n "air-testing-framework") (v "0.8.4") (d (list (d (n "air-interpreter-signatures") (r "^0.1.7") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.15.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.11.1") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1i82zdd935wva0xfjd46f8n4y3gprcf1nrqy7yp271aqlzyrczl0")))

(define-public crate-air-testing-framework-0.10.1 (c (n "air-testing-framework") (v "0.10.1") (d (list (d (n "air-interpreter-signatures") (r "^0.1.7") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.17.1") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.12.0") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1bs144lrnffx21sliqmws09nl0zkz7jvcll19pvf416cab81mkxd")))

(define-public crate-air-testing-framework-0.11.0 (c (n "air-testing-framework") (v "0.11.0") (d (list (d (n "air-interpreter-signatures") (r "^0.1.7") (d #t) (k 0)) (d (n "air-test-utils") (r "^0.18.0") (d #t) (k 0)) (d (n "aquavm-air-parser") (r "^0.12.0") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "14byi21wdp656j3lyp4k1g7v4jc5sacrcff38akmd8hsg9yd5yz8")))

