(define-module (crates-io ai ch aichat) #:use-module (crates-io))

(define-public crate-aichat-0.1.0 (c (n "aichat") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (f (quote ("editor"))) (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0r0kh2km1p1xw6v4yyv81vkgvvl0v2ykv1j4iki33z9djr62bkd8")))

(define-public crate-aichat-0.2.0 (c (n "aichat") (v "0.2.0") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "mdcat") (r "^1.1.0") (f (quote ("static"))) (k 0)) (d (n "pulldown-cmark") (r "^0.9.2") (f (quote ("simd"))) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-fancy" "default-themes" "default-syntaxes"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)))) (h "0lhfdz2qmkil3n7z4i3f61jyyln6qicb2nckg9335rbfpdbgsrfh")))

(define-public crate-aichat-0.3.0 (c (n "aichat") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "copypasta") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "mdcat") (r "^1.1.0") (f (quote ("static"))) (k 0)) (d (n "pulldown-cmark") (r "^0.9.2") (f (quote ("simd"))) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-fancy" "default-themes" "default-syntaxes"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)))) (h "02nynjyd9hw87jszcss42lq874kr8r1rl7g7k5midhlwpqiwkvmx")))

(define-public crate-aichat-0.4.0 (c (n "aichat") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "copypasta") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "mdcat") (r "^1.1.0") (f (quote ("static"))) (k 0)) (d (n "pulldown-cmark") (r "^0.9.2") (f (quote ("simd"))) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-fancy" "default-themes" "default-syntaxes"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0m0sqqfx2v1g6pq38gnz16hk7pkknxhswl2kp6npg2l79m5w5f55")))

(define-public crate-aichat-0.5.0 (c (n "aichat") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "0zz3i7ig4dk91gxyvqyxrb7y3q6n9jwwhp5gnz9szga067dsrncp")))

(define-public crate-aichat-0.6.0 (c (n "aichat") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "15qglgm505bmqa55k0czyjbynbmw2gb67q7mj1fk6zh3ij31v7rg")))

(define-public crate-aichat-0.7.0 (c (n "aichat") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "11c0mkxji7193m173fvmnb6zzwibzvfd6lgcn7ajf3r2h6hipc2l")))

(define-public crate-aichat-0.8.0 (c (n "aichat") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "eventsource-stream") (r "^0.2.3") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig"))) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "05ifnn0h6fhy72wi63ca30zvyhgwqmlknbcxyb6rxvx6ad1823v2")))

(define-public crate-aichat-0.9.0 (c (n "aichat") (v "0.9.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.2.0") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.21.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)))) (h "191n9302ps1xr6vjdgqymb2qcwgrvaj1by7dfjbfms6ibg4c6siw")))

(define-public crate-aichat-0.10.0 (c (n "aichat") (v "0.10.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.2.0") (t "cfg(not(any(target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.21.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)))) (h "1q2wsln3gs8ail5qg4wa93ayd77sbbfa0pnpynf99rc218y9bnq0")))

(define-public crate-aichat-0.11.0 (c (n "aichat") (v "0.11.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.12.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)))) (h "0wdvgx8npvv7xbla22k5cq5adasrnmyfdfak1splk83qrmn3xryd")))

(define-public crate-aichat-0.12.0 (c (n "aichat") (v "0.12.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.27.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)))) (h "002w48as5jzdxi6qzw4vagd74s9hxb2qca0dmc7psdx5bsy1p156")))

(define-public crate-aichat-0.13.0 (c (n "aichat") (v "0.13.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"linux\", target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.7.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.29.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0hzrbjkk6dyakbyhzgiwcwh0vrxyjw21j0dawq4n0zddbhkw1qga")))

(define-public crate-aichat-0.14.0 (c (n "aichat") (v "0.14.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"linux\", target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.7.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.30.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.5.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "1psd5gwqjv3z8zjlpf1928hzxp8ihy5w0g1fw2pi4aiyprdaxdf7")))

(define-public crate-aichat-0.15.0 (c (n "aichat") (v "0.15.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"linux\", target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.7.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.0") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.6.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0jr25sq142vgryg6a7d5vzfk50jzils4jfa5dl3ahhk33faf6hd5")))

(define-public crate-aichat-0.16.0 (c (n "aichat") (v "0.16.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"linux\", target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "inquire") (r "^0.7.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.0") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.6.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal"))) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0dgzdxwz2h4697h9qi42n4yvxvbj5f85798b17njlw14pp946mhb")))

(define-public crate-aichat-0.17.0 (c (n "aichat") (v "0.17.0") (d (list (d (n "ansi_colours") (r "^1.2.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "arboard") (r "^3.3.0") (t "cfg(not(any(target_os = \"linux\", target_os = \"android\", target_os = \"emscripten\")))") (k 0)) (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-smithy-eventstream") (r "^0.60.4") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^1.8.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("server-auto" "client-legacy"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "inquire") (r "^0.7.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reedline") (r "^0.32.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.0") (f (quote ("json" "multipart" "socks" "rustls-tls" "rustls-tls-native-roots"))) (k 0)) (d (n "reqwest-eventsource") (r "^0.6.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("parsing" "regex-onig" "plist-load"))) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "time" "macros" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-graceful") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.15") (f (quote ("sync"))) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)))) (h "048yj16wgzrqbdc5cq80fsja51dgq0izf6ldypya2d3ibl0p7yc7")))

