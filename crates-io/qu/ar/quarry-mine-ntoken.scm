(define-module (crates-io qu ar quarry-mine-ntoken) #:use-module (crates-io))

(define-public crate-quarry-mine-ntoken-5.0.2 (c (n "quarry-mine-ntoken") (v "5.0.2") (d (list (d (n "anchor-lang") (r ">=0.22, <=0.24") (d #t) (k 0)) (d (n "anchor-spl") (r ">=0.22, <=0.24") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "quarry-mint-wrapper-ntoken") (r "^5.0.2") (f (quote ("cpi"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "solana-security-txt") (r "^1.0.1") (d #t) (k 0)) (d (n "spl-math") (r "^0.1.0") (f (quote ("no-entrypoint"))) (d #t) (k 0)) (d (n "u128") (r "^0.1.0") (d #t) (k 0)) (d (n "vipers") (r "^2.0") (d #t) (k 0)))) (h "0l2cmzyzpkc4bv1l1mlfa8m43xpvm173ysw340sjqcq0vwzn565f") (f (quote (("no-log-ix-name") ("no-idl") ("no-entrypoint") ("default") ("cpi" "no-entrypoint"))))))

(define-public crate-quarry-mine-ntoken-5.0.3 (c (n "quarry-mine-ntoken") (v "5.0.3") (d (list (d (n "anchor-lang") (r ">=0.22, <=0.24") (d #t) (k 0)) (d (n "anchor-spl") (r ">=0.22, <=0.24") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "quarry-mint-wrapper-ntoken") (r "^5.0.3") (f (quote ("cpi"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "solana-security-txt") (r "^1.0.1") (d #t) (k 0)) (d (n "spl-math") (r "^0.1.0") (f (quote ("no-entrypoint"))) (d #t) (k 0)) (d (n "u128") (r "^0.1.0") (d #t) (k 0)) (d (n "vipers") (r "^2.0") (d #t) (k 0)))) (h "0f8fq6fpb4jqzv36pnk9is5p9nyw9aavvijccpg8h65rbnp9n593") (f (quote (("no-log-ix-name") ("no-idl") ("no-entrypoint") ("default") ("cpi" "no-entrypoint"))))))

