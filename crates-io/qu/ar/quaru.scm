(define-module (crates-io qu ar quaru) #:use-module (crates-io))

(define-public crate-quaru-0.2.0 (c (n "quaru") (v "0.2.0") (d (list (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gcd") (r "^2.3.0") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openqasm-parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "stopwatch") (r "^0.0.7") (d #t) (k 0)))) (h "1dxdm7jrvx0kjgxycpf9i704070sjalpagfn9rrmsyr26dya57sl") (f (quote (("blas" "ndarray/blas"))))))

(define-public crate-quaru-1.0.0 (c (n "quaru") (v "1.0.0") (d (list (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gcd") (r "^2.3.0") (d #t) (k 0)) (d (n "inquire") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openqasm-parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "stopwatch") (r "^0.0.7") (d #t) (k 0)))) (h "1yc25w9mh5iy77b6b07inragl3g37p76n5fhklkclhnmg2j1s2i8") (f (quote (("blas" "ndarray/blas")))) (r "1.67.0")))

