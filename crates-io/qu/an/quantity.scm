(define-module (crates-io qu an quantity) #:use-module (crates-io))

(define-public crate-quantity-0.1.0 (c (n "quantity") (v "0.1.0") (d (list (d (n "ang") (r "^0.4") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "numpy") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.13") (f (quote ("extension-module" "abi3" "abi3-py36"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0nl3l098z5wk3fjh5979bh82jap7br3z6qpm8railxx09x97w30d") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.1.1 (c (n "quantity") (v "0.1.1") (d (list (d (n "ang") (r "^0.4") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "numpy") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.13") (f (quote ("extension-module" "abi3" "abi3-py36"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xa6gvfyp4qk1g93abzzz46m3lwh8mgjl1wzr03rkppaxqj5bnk4") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.2.0 (c (n "quantity") (v "0.2.0") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "numpy") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.14") (f (quote ("extension-module" "abi3" "abi3-py36" "multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09cns37xnamxx5s2dk2866akbd4p7pq2amdz9ib23ml65ml0qq53") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.3.0 (c (n "quantity") (v "0.3.0") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "numpy") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.14") (f (quote ("extension-module" "abi3" "abi3-py36" "multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09xdprh51fsama18ykzfd3x15vapfbc2i3ykc1yji08cg6dgfhiy") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.3.1 (c (n "quantity") (v "0.3.1") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "numpy") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.14") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mrryrhardp78qcd7acm2khha2dflabf4adbkkvaxdid6kpfdhld") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.3.2 (c (n "quantity") (v "0.3.2") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "numpy") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.14") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gcmfpd0xywg93w6qiywk3qf6nr9gbq2igs028qyv4brrz0rcih8") (f (quote (("python" "pyo3" "numpy") ("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("linalg" "ndarray-linalg") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("default"))))))

(define-public crate-quantity-0.4.0 (c (n "quantity") (v "0.4.0") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "06bq2k7s08gn4i432cvrfvy5pvm0b2s8a9vw18vikxqhksbigqd5") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.4.1 (c (n "quantity") (v "0.4.1") (d (list (d (n "ang") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vb1smrv7ih8yjizr9s224sn84y35f6ija8x3lb8avl40hrb2pdi") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.5.0 (c (n "quantity") (v "0.5.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "112yd9js2ab851h192j1ljf0c8qwrnp16k3rcjnv9p862jr0p9jr") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.5.1 (c (n "quantity") (v "0.5.1") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0nnw7ksn9jn0nkw57sda2a1yichp17cpprdskfgs8rd98m2ykvzr") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.6.0 (c (n "quantity") (v "0.6.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ca3i0d3cq12mhq5d9nf2qs16421pssbrmcgzzfi1jpdhk36k8x4") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.6.1 (c (n "quantity") (v "0.6.1") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16xrlgdh3hijgqsbjyc3n56pglsqc64a0qmrfiddh46b8ah0yxaz") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.6.2 (c (n "quantity") (v "0.6.2") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ynrwyx93lz17bgdrgrnvli0zb1kvzgj4qpa4m8c7492fhqvr76j") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.7.0 (c (n "quantity") (v "0.7.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "numpy") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wgkw6g9z7w47jils41s1vxr415vqgfd9hc9ff70ip09xvd8rdv7") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

(define-public crate-quantity-0.8.0 (c (n "quantity") (v "0.8.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "numpy") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.21") (f (quote ("multiple-pymethods"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c6wbmi9dfv2k65vppyzn8a59p099rk6ipv6gxxjkrxj8bn64xvg") (f (quote (("python" "pyo3" "numpy") ("linalg") ("default"))))))

