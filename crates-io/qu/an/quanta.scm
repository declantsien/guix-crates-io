(define-module (crates-io qu an quanta) #:use-module (crates-io))

(define-public crate-quanta-0.1.0 (c (n "quanta") (v "0.1.0") (d (list (d (n "clocksource") (r "^0.4") (f (quote ("rdtsc"))) (d #t) (k 2)) (d (n "libc") (r "^0.2.46") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0fwv7rpj123ynrlhmkj2m8nk2q3sk1x264k0wgrm7dqyb9ynxg34") (f (quote (("tsc") ("asm" "tsc"))))))

(define-public crate-quanta-0.2.0 (c (n "quanta") (v "0.2.0") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "08qdb7nk2mf2vvbmmfgd53b0vcisi2q4pv77c1nnyza74c82j9fx") (f (quote (("tsc") ("asm" "tsc"))))))

(define-public crate-quanta-0.3.0 (c (n "quanta") (v "0.3.0") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "113j2s5glrxj3gv7lp3v98jss15fqsbzprh69j0kjpxx5syclrwh") (f (quote (("tsc") ("asm" "tsc"))))))

(define-public crate-quanta-0.3.1 (c (n "quanta") (v "0.3.1") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1k3vah6b17232fxpi84h9x3l0p26llr3vjabj5sq06braf8a3xzl") (f (quote (("tsc") ("asm" "tsc"))))))

(define-public crate-quanta-0.4.0 (c (n "quanta") (v "0.4.0") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ijs1zrif0pw7vcp6lsb5angza0l07is76i7574w1gjnphca8qiy") (f (quote (("tsc") ("metrics" "metrics-core") ("asm" "tsc"))))))

(define-public crate-quanta-0.4.1 (c (n "quanta") (v "0.4.1") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0df16kybg37s9nva02h9al2brhglj7vd7sbalaqpd6x3lxvwg3fr") (f (quote (("tsc") ("metrics" "metrics-core") ("asm" "tsc"))))))

(define-public crate-quanta-0.5.0 (c (n "quanta") (v "0.5.0") (d (list (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0kfgcva2fhq08mq93nyqbz2g1ifn7106bdmpfr309pl9ldrxrd4v") (f (quote (("tsc") ("metrics" "metrics-core") ("asm" "tsc")))) (y #t)))

(define-public crate-quanta-0.5.1 (c (n "quanta") (v "0.5.1") (d (list (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0kdaqxbpw8nbpbvajwm3rqc6i3dqy4k8wm8f45mczgijh2v58z4z") (f (quote (("metrics" "metrics-core")))) (y #t)))

(define-public crate-quanta-0.5.2 (c (n "quanta") (v "0.5.2") (d (list (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kgjx6kxhv4v3x9djpj7mid2zpmblh6hk8rbqc7v3y8s43w45n7j") (f (quote (("metrics" "metrics-core"))))))

(define-public crate-quanta-0.5.3-alpha.1 (c (n "quanta") (v "0.5.3-alpha.1") (d (list (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10aab7a8g5f1pc86dp24kx8zp01f9xxq6qjfzyns73ybxwrm2plw") (f (quote (("metrics" "metrics-core"))))))

(define-public crate-quanta-0.5.3-alpha.2 (c (n "quanta") (v "0.5.3-alpha.2") (d (list (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bd6f7lcp7a71bvvxrqgkr3w6srks0n759ww42hnyxa50bmad066") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.0 (c (n "quanta") (v "0.6.0") (d (list (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ykng6z2p4s5jvm9j15dr2faf9lkybblqxy46nyk2irdannsyd82") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.1 (c (n "quanta") (v "0.6.1") (d (list (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ngzdv8dslsabm5jr1bx3wk2rg2334xqlmwj6j25b2fbcqqp1idc") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.2 (c (n "quanta") (v "0.6.2") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1imv3pdgzmmh8l1yfy0ry6byv002xngc74xzb1wi81rnkbvxi2ds") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.3.2 (c (n "quanta") (v "0.3.2") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "clocksource") (r "^0.4") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("profileapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0faxchaj4kn167vwgw0a7xa2g98dbmxcfmbpwgzazmwa7pd4yj11") (f (quote (("tsc") ("asm" "tsc"))))))

(define-public crate-quanta-0.6.3 (c (n "quanta") (v "0.6.3") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "clocksource") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1j0kdjnglhmyyzbg2q6qp7gp45qzq0vz9afhl967k0l2zrjivcv2") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.4 (c (n "quanta") (v "0.6.4") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rgdf6arc8q8a12q30z789d06czz4gpm6qmffip64mjs8l80qg7i") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.5 (c (n "quanta") (v "0.6.5") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1p6jssddgbpais78yg6ndym57q554can4lacp2m0ar1cjmv7g6kb") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.6.6-alpha.1 (c (n "quanta") (v "0.6.6-alpha.1") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1.15") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bgwzpcx2zdy494cpf3crdqf60vsd8r0k3smkri5hl4by3d7ray1") (f (quote (("prost" "prost-types") ("metrics" "metrics-core"))))))

(define-public crate-quanta-0.7.0 (c (n "quanta") (v "0.7.0") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12gany6n0svh105p1qp48zw3zvyn8f3443y97a16rax6p22sy2y0") (f (quote (("prost" "prost-types") ("metrics" "metrics-core") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.7.1 (c (n "quanta") (v "0.7.1") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05cgfmswfn7blpk0jrr3w0sq3wda9zklfqpfzpx1i60h5hn0aakx") (f (quote (("prost" "prost-types") ("metrics" "metrics-core") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.7.2 (c (n "quanta") (v "0.7.2") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metrics-core") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jdkkzgc8mjfsrfqh5x61qj84xwl3qklccdzcc1jrknhxzyklsp7") (f (quote (("prost" "prost-types") ("metrics" "metrics-core") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.8.0 (c (n "quanta") (v "0.8.0") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.12") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nzyskx88f7b70ivzlrk306w214cyragnk2p9284layrrgjps3dj") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.9.0 (c (n "quanta") (v "0.9.0") (d (list (d (n "atomic-shim") (r "^0.1.0") (d #t) (k 0)) (d (n "average") (r "^0.12") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"mips\")") (k 0)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(target_arch = \"powerpc\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\"), not(target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15h02sypvyvqgzr7rjcdifqdpv0g1qlfmmqhm7dw3sr0cmsyr66k") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.9.1 (c (n "quanta") (v "0.9.1") (d (list (d (n "average") (r "^0.12") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\"), not(target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^9.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pfjrz54ggpy76fzkly38m0n19bdyswxvwqy7iw7h4hc20wcxhxl") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.9.2 (c (n "quanta") (v "0.9.2") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\"), not(target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0z88xzf1sqp4c745nc30q4f7gby8nxz2amyk94zaisc720mh4915") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.9.3 (c (n "quanta") (v "0.9.3") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"windows\"), not(target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1a1q4ah3jvhrnvl7067li88qza664fi0lx0jiffqfpid54afgbr0") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.10.0 (c (n "quanta") (v "0.10.0") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05qbjpm6whap3a842587zlqba5nzc0sdw7lq2nafg9x0831p9zds") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.10.1 (c (n "quanta") (v "0.10.1") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.10") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09xfyj1xk5m53xn97dq2zxs8858pwzh65jkcwmaz81b750qi7qxp") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests"))))))

(define-public crate-quanta-0.11.0 (c (n "quanta") (v "0.11.0") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0czd7n8s6cnkvrwmj6yvxpxxxggc15ppxishwkf4nk1iz513riwc") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

(define-public crate-quanta-0.11.1 (c (n "quanta") (v "0.11.1") (d (list (d (n "average") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^10.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1axrw0nqc90bq671w05jd9460pmwg86c4r132mjsi4c2g8m6czm1") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

(define-public crate-quanta-0.12.0 (c (n "quanta") (v "0.12.0") (d (list (d (n "average") (r "^0.14") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06ca0b61macgxkr5k2yxwmnvy7j2wbhba0w2py0qd7sm7xpf8rj9") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

(define-public crate-quanta-0.12.1 (c (n "quanta") (v "0.12.1") (d (list (d (n "average") (r "^0.14") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kca1y4cj6zqxgcbb633fcnqwmakllwcr0351vddfkm9j2h5az2p") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

(define-public crate-quanta-0.12.2 (c (n "quanta") (v "0.12.2") (d (list (d (n "average") (r "^0.14") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0b6y27qcqcpf0ldylq84ki2z3702aby8hwmp1g24hwmrq2xbg84w") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

(define-public crate-quanta-0.12.3 (c (n "quanta") (v "0.12.3") (d (list (d (n "average") (r "^0.14") (d #t) (k 2)) (d (n "criterion") (r "=0.3.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_os = \"windows\", target_arch = \"wasm32\")))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86\")") (k 0)) (d (n "raw-cpuid") (r "^11.0") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"wasi\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19cds3yg3ri0wrypn7b3j2x8qf1w9rkw5yl4nah2i4k1fyj6flcf") (f (quote (("prost" "prost-types") ("flaky_tests") ("default" "flaky_tests")))) (r "1.60")))

