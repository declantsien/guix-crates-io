(define-module (crates-io qu ec quectel-bg77) #:use-module (crates-io))

(define-public crate-quectel-bg77-0.2.1 (c (n "quectel-bg77") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.7.2") (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (t "cfg(any(windows, unix))") (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.3") (d #t) (k 0)) (d (n "inverted-pin") (r "^0.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-probe") (r "^0.2.0") (f (quote ("print-rtt"))) (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "rtt-target") (r "^0.3.0") (f (quote ("cortex-m"))) (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "try-ascii") (r "^1.0.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "1fp26g2g4v6j0q7cxb8mbr4ijis94pxsf974ck600s78csgqjxdr") (f (quote (("sensing_puck" "bg77") ("motion2se" "bg770") ("direct-serial-access") ("bg770") ("bg77"))))))

(define-public crate-quectel-bg77-0.2.2 (c (n "quectel-bg77") (v "0.2.2") (d (list (d (n "cortex-m") (r "^0.7.2") (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (t "cfg(any(windows, unix))") (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.3") (d #t) (k 0)) (d (n "inverted-pin") (r "^0.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-probe") (r "^0.2.0") (f (quote ("print-rtt"))) (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "rtt-target") (r "^0.3.0") (f (quote ("cortex-m"))) (d #t) (t "cfg(not(any(windows, unix)))") (k 2)) (d (n "try-ascii") (r "^1.0.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "15c4w88dspbfzmfcs0xmq2sr5d3nrh75fa6k48d236z3dj2csvhv") (f (quote (("sensing_puck" "bg77") ("motion2se" "bg770") ("direct-serial-access") ("bg770") ("bg77"))))))

