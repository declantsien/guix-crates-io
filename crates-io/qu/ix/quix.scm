(define-module (crates-io qu ix quix) #:use-module (crates-io))

(define-public crate-quix-0.0.1 (c (n "quix") (v "0.0.1") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "derive") (r "^0.0.1") (d #t) (k 0) (p "quix-derive")) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "json") (r "^1") (d #t) (k 0) (p "serde_json")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zm97w0j3f3rhbw781jjz257v2ybixn2wvy7w2w58flypyscqqhp")))

(define-public crate-quix-0.0.2 (c (n "quix") (v "0.0.2") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "json") (r "^1") (d #t) (k 0) (p "serde_json")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "quix-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wcm6rbx4zdxdwrmw0zpb54s7my1pjnmh7bgfhpxvdx80zcgwacl")))

(define-public crate-quix-0.0.3 (c (n "quix") (v "0.0.3") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "derive") (r "^0.0.3") (d #t) (k 0) (p "quix-derive")) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "json") (r "^1") (d #t) (k 0) (p "serde_json")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-types") (r "^0.6.1") (d #t) (k 0)) (d (n "quix-build") (r "^0.0.3") (d #t) (k 1) (p "quix-build")) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "08b9nd9lqmj4hbbdzczm8hp08fvx011618py49gql5kyqi1vqjvh")))

(define-public crate-quix-0.0.4 (c (n "quix") (v "0.0.4") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "derive") (r "^0.0.4") (d #t) (k 0) (p "quix-derive")) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "json") (r "^1") (d #t) (k 0) (p "serde_json")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-types") (r "^0.6.1") (d #t) (k 0)) (d (n "quix-build") (r "^0.0.4") (d #t) (k 1) (p "quix-build")) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mywhxcz2sq33g6prm3ss9683kg5j4ycpwwwqdi4iwai0z67rl60")))

(define-public crate-quix-0.0.5 (c (n "quix") (v "0.0.5") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "derive") (r "^0.0.5") (d #t) (k 0) (p "quix-derive")) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "json") (r "^1") (d #t) (k 0) (p "serde_json")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-types") (r "^0.6.1") (d #t) (k 0)) (d (n "quix-build") (r "^0.0.5") (d #t) (k 1) (p "quix-build")) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ipb3q4a30dk30lahn7l84pawgb99awssygan83g285sq9zwxjyb")))

(define-public crate-quix-0.0.6 (c (n "quix") (v "0.0.6") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "derive") (r "^0.0.6") (d #t) (k 0) (p "quix-derive")) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "quix-build") (r "^0.0.6") (d #t) (k 1) (p "quix-build")) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "tokio-util") (r "=0.3.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zs87mhzfjp1g2qmh8gmxwl7mgjwha36wyyjgbsgk0wiz205yz17")))

