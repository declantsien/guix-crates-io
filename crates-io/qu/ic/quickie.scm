(define-module (crates-io qu ic quickie) #:use-module (crates-io))

(define-public crate-quickie-0.1.0 (c (n "quickie") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quinn") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("quic"))) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0r5nqk1nglcqyha85ppc5j57zxdvgkx84067ddpv9kp3xmnwc5ig") (f (quote (("test")))) (r "1.56")))

(define-public crate-quickie-0.2.0 (c (n "quickie") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quinn") (r "^0.8") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.8") (k 0)) (d (n "rcgen") (r "^0.9") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 2)) (d (n "rustls") (r "^0.20") (f (quote ("quic"))) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1p26a9l5hm21p3yd2s5qx831hkwrdbrp3mas4lka7mpczi45ck43") (f (quote (("test")))) (r "1.56")))

(define-public crate-quickie-0.3.0 (c (n "quickie") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quinn") (r "^0.8") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.8") (k 0)) (d (n "rcgen") (r "^0.9") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 2)) (d (n "rustls") (r "^0.20") (f (quote ("quic"))) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1912ari46q7qdjnkc5lkp4x222dbg8fplvy8mhblhk200y7m8zas") (f (quote (("test")))) (r "1.56")))

(define-public crate-quickie-0.4.0 (c (n "quickie") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "quinn") (r "^0.9") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.9") (k 0)) (d (n "rcgen") (r "^0.10") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 2)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration" "quic"))) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1hxaidx00dzc8xl3w31n7q5gjmmbwjhnqswqz29qmfffxc06j0ql") (f (quote (("test")))) (r "1.56")))

(define-public crate-quickie-0.5.0 (c (n "quickie") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "humansize") (r "^2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.10") (k 0)) (d (n "rcgen") (r "^0.10") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (f (quote ("dangerous_configuration" "quic"))) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1ls8wfqrffi5kam3rgvsl9pknlcz4mgnzzh95xrmhmg972q0n0g7") (f (quote (("test")))) (r "1.56")))

(define-public crate-quickie-0.6.0 (c (n "quickie") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "humansize") (r "^2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.10") (k 0)) (d (n "rcgen") (r "^0.11") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (f (quote ("dangerous_configuration" "quic"))) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "11c446w7dgkpdmzxqf73n14d81d8yabjxjcvipyq71b6yjqs5dmm") (f (quote (("test")))) (r "1.70")))

(define-public crate-quickie-0.7.0 (c (n "quickie") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "humansize") (r "^2") (d #t) (k 2)) (d (n "libp2p") (r "^0.53") (f (quote ("macros" "quic" "tokio"))) (k 2)) (d (n "libp2p-quic") (r "^0.10") (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "quinn") (r "^0.11") (f (quote ("ring" "runtime-tokio"))) (d #t) (k 0)) (d (n "quinn-proto") (r "^0.11") (k 0)) (d (n "rcgen") (r "^0.13") (f (quote ("pem" "ring"))) (k 2)) (d (n "rustls") (r "^0.23") (f (quote ("ring" "std"))) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "macros" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0raqq7a8wbgbkrsr6fmjlx5y8q8zijbjh94rag0j2m09c6ryzfmg") (f (quote (("test")))) (r "1.70")))

