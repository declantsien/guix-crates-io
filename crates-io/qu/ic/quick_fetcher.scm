(define-module (crates-io qu ic quick_fetcher) #:use-module (crates-io))

(define-public crate-quick_fetcher-0.1.0 (c (n "quick_fetcher") (v "0.1.0") (d (list (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("stream"))) (d #t) (k 0)) (d (n "reqwest-middleware") (r "^0.3.1") (d #t) (k 0)) (d (n "reqwest-retry") (r "^0.5.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "tokio") (r "^1.38.0") (f (quote ("fs"))) (d #t) (k 0)))) (h "11r8k5pgj1z1bfa32hkzjf73hvaxgqydpqsm3db1wdwzmzh3cnih") (f (quote (("verification" "md-5" "sha1" "sha2") ("render_progress" "indicatif") ("default" "render_progress" "verification"))))))

(define-public crate-quick_fetcher-0.1.1 (c (n "quick_fetcher") (v "0.1.1") (d (list (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("stream"))) (d #t) (k 0)) (d (n "reqwest-middleware") (r "^0.3.1") (d #t) (k 0)) (d (n "reqwest-retry") (r "^0.5.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "tokio") (r "^1.38.0") (f (quote ("fs"))) (d #t) (k 0)))) (h "16qay6yf4pl5s5di7i82pn931ir80yzz6v2ssg04ng5n8sa7qc3p") (f (quote (("verification" "md-5" "sha1" "sha2") ("render_progress" "indicatif") ("default" "render_progress" "verification"))))))

