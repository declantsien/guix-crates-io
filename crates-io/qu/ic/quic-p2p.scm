(define-module (crates-io qu ic quic-p2p) #:use-module (crates-io))

(define-public crate-quic-p2p-0.1.0 (c (n "quic-p2p") (v "0.1.0") (h "07a5373lb7h1cbbbwmarff8g1cdgmg9f5bd5dn0wgrxjpklg38lm")))

(define-public crate-quic-p2p-0.1.1 (c (n "quic-p2p") (v "0.1.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.2.1") (d #t) (k 0)) (d (n "rustls") (r "~0.15.2") (d #t) (k 0)) (d (n "rustyline") (r "~4.0.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.1.19") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)))) (h "1qy3zk4h7n2vxn0z84fwh2fzb6w05s4kg1hbmz4vw0366g7da005")))

(define-public crate-quic-p2p-0.2.0 (c (n "quic-p2p") (v "0.2.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.2.1") (d #t) (k 0)) (d (n "rustls") (r "~0.15.2") (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.1.19") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)))) (h "0ndf7qm9hzamzz3yj732lfyrb28fgnhhc9cgvs92yqpjdzmcxjd5")))

(define-public crate-quic-p2p-0.2.1 (c (n "quic-p2p") (v "0.2.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.2.1") (d #t) (k 0)) (d (n "rustls") (r "~0.15.2") (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.1.19") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)))) (h "15j88vijbb6yzdq57jsrsqi2r9fwmf5lgc16fr9xhpxzraw8q0cx")))

(define-public crate-quic-p2p-0.3.0 (c (n "quic-p2p") (v "0.3.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.2.1") (d #t) (k 0)) (d (n "rustls") (r "~0.15.2") (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.1.19") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)))) (h "0a16qz148jj09rvdacpgp7krk1rqjvj2nsvxgrqf245kw9dkh75n")))

(define-public crate-quic-p2p-0.4.0 (c (n "quic-p2p") (v "0.4.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "^0.5.3") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.16.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "1k28364hx3qgf35xrq3adccqjhhyxsachyzclq15yhj3jjhqvrrr")))

(define-public crate-quic-p2p-0.5.0 (c (n "quic-p2p") (v "0.5.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.0") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "0mdh1kwwkwibw7kh8flsc5bvb9gpi86lmsjvp8y01sxyjfd2q8df")))

(define-public crate-quic-p2p-0.6.0 (c (n "quic-p2p") (v "0.6.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "igd") (r "~0.10.2") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.4") (d #t) (k 2)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "05bks2ycrvr355grd7j076awrh7b9rlfkdbvhka3v6ad3qpl4ay6") (f (quote (("upnp" "igd"))))))

(define-public crate-quic-p2p-0.6.1 (c (n "quic-p2p") (v "0.6.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "igd") (r "~0.10.2") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.4") (d #t) (k 2)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "0k2dqxlzv1rvmkz8xmbq1ma1yj38631y9wfvjw9aq940mvmpkin9") (f (quote (("upnp" "igd"))))))

(define-public crate-quic-p2p-0.6.2 (c (n "quic-p2p") (v "0.6.2") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "~1.1.2") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "crc") (r "~1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "directories") (r "~1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "igd") (r "~0.10.2") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "~4.1.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.39") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.4") (d #t) (k 2)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "1rqylk279ns73hq92nv89ch19gb5hnmgs64ib57hkd16qcnkv6hy") (f (quote (("upnp" "igd"))))))

(define-public crate-quic-p2p-0.7.0 (c (n "quic-p2p") (v "0.7.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (d #t) (k 2)) (d (n "crc") (r "^1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "derive_more") (r "~0.99.2") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "~0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "igd") (r "~0.10.2") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "^4.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.111") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.4") (d #t) (k 2)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "1z4qas2fcxr4vz02ga1zmid6dz3632sq5kn0b1f1hm17jwin00ga") (f (quote (("upnp" "igd"))))))

(define-public crate-quic-p2p-0.7.1 (c (n "quic-p2p") (v "0.7.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (d #t) (k 2)) (d (n "crc") (r "^1.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "derive_more") (r "~0.99.2") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (t "cfg(any(all(unix, not(any(target_os = \"android\", target_os = \"androideabi\", target_os = \"ios\"))), windows))") (k 0)) (d (n "env_logger") (r "~0.6.1") (d #t) (k 2)) (d (n "err-derive") (r "~0.2.2") (d #t) (k 0)) (d (n "futures") (r "~0.3.1") (d #t) (k 0)) (d (n "igd") (r "~0.10.2") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 2)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "rustls") (r "~0.17.0") (f (quote ("dangerous_configuration"))) (d #t) (k 0)) (d (n "rustyline") (r "^4.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.111") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "structopt") (r "~0.2.15") (d #t) (k 0)) (d (n "tokio") (r "~0.2.5") (f (quote ("rt-core" "sync" "time" "io-driver"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.4") (d #t) (k 2)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)) (d (n "webpki") (r "~0.21.2") (d #t) (k 0)))) (h "1y6m9bmbrfxd0s8rjsi8drzy79dcx82jzv56xlzrinkjy23vhrgq") (f (quote (("upnp" "igd"))))))

