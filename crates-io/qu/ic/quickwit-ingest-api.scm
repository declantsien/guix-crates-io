(define-module (crates-io qu ic quickwit-ingest-api) #:use-module (crates-io))

(define-public crate-quickwit-ingest-api-0.3.0 (c (n "quickwit-ingest-api") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quickwit-actors") (r "^0.3.0") (d #t) (k 0)) (d (n "quickwit-metastore") (r "^0.3.0") (d #t) (k 0)) (d (n "quickwit-proto") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rocksdb") (r "^0.18") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "017wnym7kla7jl8c9gwyqaaxl5qalq6sl48vd3k43drfa4lixy1z")))

