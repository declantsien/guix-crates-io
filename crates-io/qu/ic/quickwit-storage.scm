(define-module (crates-io qu ic quickwit-storage) #:use-module (crates-io))

(define-public crate-quickwit-storage-0.1.0 (c (n "quickwit-storage") (v "0.1.0") (h "0v8gqz45f1kzkpdvp70lbqpnds1mpapj7bi2qsmzqgfgdj2hr79f")))

(define-public crate-quickwit-storage-0.3.0 (c (n "quickwit-storage") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ec2_instance_metadata") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quickwit-aws") (r "^0.3.0") (d #t) (k 0)) (d (n "quickwit-common") (r "^0.3.0") (d #t) (k 0)) (d (n "quickwit-config") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (f (quote ("rustls"))) (k 0)) (d (n "rusoto_s3") (r "^0.47") (f (quote ("rustls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tantivy") (r "^0.18.0") (f (quote ("mmap" "lz4-compression" "quickwit"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1azmg31fqdj1v15w89qzwl3v46gabp7ca5rwsclhkkgijb0qyxg7") (f (quote (("testsuite" "mockall") ("ci-test"))))))

