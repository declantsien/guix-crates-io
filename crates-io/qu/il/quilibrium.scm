(define-module (crates-io qu il quilibrium) #:use-module (crates-io))

(define-public crate-quilibrium-0.1.0 (c (n "quilibrium") (v "0.1.0") (d (list (d (n "libp2p-identity") (r "^0.2.5") (f (quote ("peerid" "serde"))) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tonic") (r "^0.10.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (d #t) (k 1)))) (h "1wdxg00ql6m3pavqy74lhgsy7cz10gbl4cm16fjqs7b4aj9nd6x8")))

(define-public crate-quilibrium-0.1.1 (c (n "quilibrium") (v "0.1.1") (d (list (d (n "libp2p-identity") (r "^0.2.5") (f (quote ("peerid" "serde"))) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tonic") (r "^0.10.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (d #t) (k 1)))) (h "0rkgxj7qriqhpxyjxh3r5ilvy1hvfc05g4vxfrmp17nkwk91626g")))

(define-public crate-quilibrium-0.2.0 (c (n "quilibrium") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.5") (f (quote ("peerid" "serde"))) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tonic") (r "^0.10.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (d #t) (k 1)))) (h "1jskdf5y1k7sbfyi9p6p1x5vz9sbi1kr16wll91q8d6sbapsxfnd")))

(define-public crate-quilibrium-0.2.1 (c (n "quilibrium") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.5") (f (quote ("peerid" "serde"))) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tonic") (r "^0.10.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (d #t) (k 1)))) (h "0pk126m4qy259giy7gx2vgdr31bf2zc43i78fj3f0yvgh9a6nxff")))

