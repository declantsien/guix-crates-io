(define-module (crates-io qu il quilkin-network-conditioner) #:use-module (crates-io))

(define-public crate-quilkin-network-conditioner-0.1.0 (c (n "quilkin-network-conditioner") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.11.9") (d #t) (k 1)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "protobuf-src") (r "^1.1.0") (d #t) (k 1)) (d (n "quilkin") (r "^0.6.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("rt-multi-thread" "fs" "signal" "test-util" "parking_lot" "tracing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("json" "env-filter"))) (d #t) (k 0)))) (h "0qkjrm5yn395jfagvmjwnsbg4lh2qbg2xj3dcmjzs83i45g0qbgh")))

