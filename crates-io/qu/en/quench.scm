(define-module (crates-io qu en quench) #:use-module (crates-io))

(define-public crate-quench-0.1.0 (c (n "quench") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "112wxf2c8rvz9rx2pdqdn8nr3dmv9q3r08jk5m3xpmybz011hjxh")))

(define-public crate-quench-0.1.1 (c (n "quench") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "11vcnl6hvmvymk8m1ixwp0xrh4410zlsqnqam6siwpvb2b2dn3lx")))

(define-public crate-quench-0.1.2 (c (n "quench") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0bb11fbzlnwzib1bcwsiz814mv80xmjjy9c89j2kmbx62z3avnd3")))

(define-public crate-quench-0.2.0 (c (n "quench") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0rpxx4z402rxw0y6r4acmwqkmr426mhg7028cnw1822c004s5ayv")))

(define-public crate-quench-0.2.1 (c (n "quench") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0r4jwh3dhs64pw5hhwzpyqdcimfh4gvqjfi12pavrdjz6mvvyk7z")))

(define-public crate-quench-0.2.2 (c (n "quench") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "1081dyzhsvyys12n9swv2l1kmc3afc016fl37qxsz0p5f0f61r45")))

(define-public crate-quench-0.2.3 (c (n "quench") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "1ryysypbf4vafdmlfxfmfhwc3a4zxqxf6yfhawwd62w5kc532cwm")))

(define-public crate-quench-0.2.4 (c (n "quench") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "01kj0la8gjd1yjbxfgdph7l081v04ynl0cc74p05chhgbiv4is9p")))

(define-public crate-quench-0.3.0 (c (n "quench") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "comrak") (r "^0.10") (d #t) (k 2)) (d (n "deno_core") (r "^0.83") (d #t) (k 0)) (d (n "deno_runtime") (r "^0.10") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "goldenfile") (r "^1") (d #t) (k 2)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lspower") (r "^0.6") (d #t) (k 0)) (d (n "no_color") (r "^0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rusty_v8") (r "^0.21") (d #t) (k 0)) (d (n "salsa") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_v8") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "slurp") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "vergen") (r "^5") (d #t) (k 1)))) (h "067xg4ksh7afv9bhij73z5lyjr1si4nbqylk1dyqw4gmj6al3gli")))

