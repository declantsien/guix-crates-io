(define-module (crates-io qu in quinn-noise) #:use-module (crates-io))

(define-public crate-quinn-noise-0.1.0 (c (n "quinn-noise") (v "0.1.0") (d (list (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (f (quote ("reduced-round"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.7.3") (f (quote ("ring"))) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "sha2") (r "^0.9.4") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "xoodoo") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "0s91ddkqfjw4rbh7b1fqqgibkmy0c3iydkiimlckqlhwgf70fnzz")))

(define-public crate-quinn-noise-0.2.0 (c (n "quinn-noise") (v "0.2.0") (d (list (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (f (quote ("reduced-round"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.7.3") (f (quote ("ring"))) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "sha2") (r "^0.9.4") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "xoodoo") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "1ga993ba7sq57fny04kr1iv43prr7bdfyvp6lsj26xsdlkbyk93a")))

(define-public crate-quinn-noise-0.2.1 (c (n "quinn-noise") (v "0.2.1") (d (list (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (f (quote ("reduced-round"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.7.3") (f (quote ("ring"))) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "sha2") (r "^0.9.4") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "xoodoo") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "0d6v97xiqbp4fmm8agcsm0432pb949vsicym71myhkqqg9m65rw3")))

(define-public crate-quinn-noise-0.3.0 (c (n "quinn-noise") (v "0.3.0") (d (list (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (f (quote ("reduced-round"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.7.3") (f (quote ("ring"))) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "sha2") (r "^0.9.4") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "xoodoo") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "1abyw0m33f8b1gjpqlycwm4gpyd6nnx1fgbmg6d4i39r5z95072y")))

(define-public crate-quinn-noise-0.4.0 (c (n "quinn-noise") (v "0.4.0") (d (list (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (f (quote ("reduced-round"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "quinn-proto") (r "^0.9.1") (f (quote ("ring"))) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "sha2") (r "^0.9.4") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "xoodoo") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "1a6yspaiqmqygxs6p922nbhff4ici8d0xfph7v8gb2b22xwz7xcr")))

