(define-module (crates-io fd -f fd-find) #:use-module (crates-io))

(define-public crate-fd-find-3.0.0 (c (n "fd-find") (v "3.0.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)))) (h "1rfbafby5p9353r1fklmz0vjim11pmpr3p0kvafasml50r27ji6x")))

(define-public crate-fd-find-3.1.0 (c (n "fd-find") (v "3.1.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)))) (h "15j8379lnsf9fag7h5cl7j68qwbn0zjz7sx4bjpw4b5x92w68y27")))

(define-public crate-fd-find-4.0.0 (c (n "fd-find") (v "4.0.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0clrsv8hdhc5n6w8i6idwjmgsll13x57fcpghlacnkb3r9b3zl4c")))

(define-public crate-fd-find-5.0.0 (c (n "fd-find") (v "5.0.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "shell-escape") (r "^0.1.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1wk57jj4cnljdwjc85f29nl8bdcm26fqgpg79f6l4j1dsbhpy645")))

(define-public crate-fd-find-5.0.1 (c (n "fd-find") (v "5.0.1") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "shell-escape") (r "^0.1.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "00nimn0lhf32d0qrf9qpmw6rqq85cw2mwhb2swcgv7wyg1448dx1")))

(define-public crate-fd-find-6.0.0 (c (n "fd-find") (v "6.0.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1937q2zqmfz7q8l2wcgfh5wh5q386gm3w2pqkapxyn1wvb4ry4zj")))

(define-public crate-fd-find-6.1.0 (c (n "fd-find") (v "6.1.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "09a4gz7zrqkm2rzbdnl9d5pqlfw0qyx15fd0r5jks57xwv550ddq")))

(define-public crate-fd-find-6.2.0 (c (n "fd-find") (v "6.2.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "12z6ckv5vqpqikqywkpi43chjrpwzmnkbwzyfpvgzdf9yvl2iks7")))

(define-public crate-fd-find-6.3.0 (c (n "fd-find") (v "6.3.0") (d (list (d (n "ansi_term") (r "^0.9") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.26.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0p1gzc9953j0v1d0lsn9p8zw9hmr2s8anbs9sanri42av83pw8rz")))

(define-public crate-fd-find-7.0.0 (c (n "fd-find") (v "7.0.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.30.0") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.30.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.4.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^0.2.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.5") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0a1wqn3kz8cbms3dzbaj8jdcnmnag7dn8ss0l5qmfjv8ayrzhicz")))

(define-public crate-fd-find-7.1.0 (c (n "fd-find") (v "7.1.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "17a3rn51wrnp8qpnw8jsnpmmnqaavshyv8cihridg0hr02k4k9gs")))

(define-public crate-fd-find-7.2.0 (c (n "fd-find") (v "7.2.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "humantime") (r "^1.1.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "046r1dk08hwjlkgn1p7sry6i8ai5s4a0icfz73rw2qzsfyh4bfdm")))

(define-public crate-fd-find-7.3.0 (c (n "fd-find") (v "7.3.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "humantime") (r "^1.1.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "0rip3q3zghs4qm79lmzsdrmhs9ihn658gg5rzrs4afmzj8vk9kzi")))

(define-public crate-fd-find-7.4.0 (c (n "fd-find") (v "7.4.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^1.1.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "147m872zff0srwq9vaxkkbab06g3fkklbk1g2lx90vdhgs37f5xj")))

(define-public crate-fd-find-7.5.0 (c (n "fd-find") (v "7.5.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1g4gqw22nymj7w9knl6dhh9y77ry0kh47i67z4kmwxa94d14268i")))

(define-public crate-fd-find-8.0.0 (c (n "fd-find") (v "8.0.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0dg677v58icam8bvi2j08m2w4jjyfjxkk3v6434vzkxrmak19if2")))

(define-public crate-fd-find-8.1.0 (c (n "fd-find") (v "8.1.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_os = \"macos\"), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.10.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "01pbldqgpimnplwflhkkj3rk89q0bdw6zwfmkqw2rqw4aywl4dwj")))

(define-public crate-fd-find-8.1.1 (c (n "fd-find") (v "8.1.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_os = \"macos\"), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.10.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "124a5r8hpk2phs1288jybh34d48yxy44wr7gv5ggchs272gs2jam")))

(define-public crate-fd-find-8.2.0 (c (n "fd-find") (v "8.2.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "040pj4fd2p7wn3b3sk0kg4wwqiq73wadz32m8b2x9wk3cchqij9l")))

(define-public crate-fd-find-8.2.1 (c (n "fd-find") (v "8.2.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_env = \"musl\")))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "19358di2g9vxpn18765ll9b113y5fhkv5lp0ich87a8arh0jfab8")))

(define-public crate-fd-find-8.3.0 (c (n "fd-find") (v "8.3.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.31.3") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 1)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_env = \"musl\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.8") (d #t) (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1aci66pqiqq549nhh8s8wmkvfjhj43y9ywm2qkfz6ycfchcv36x4")))

(define-public crate-fd-find-8.3.1 (c (n "fd-find") (v "8.3.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("suggestions" "color" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_env = \"musl\"), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.8") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0mca7fzzijw0mk4g2f54ih3cs4kp0mi94ra438ss2w7n0z7c5ss8") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc"))))))

(define-public crate-fd-find-8.3.2 (c (n "fd-find") (v "8.3.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("suggestions" "color" "wrap_help" "cargo"))) (d #t) (k 0)) (d (n "clap") (r "^3.0") (d #t) (k 1)) (d (n "clap_complete") (r "^3.0") (d #t) (k 1)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_env = \"musl\"), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.8") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0w0qh9aghis446w7ar9yi632kbvxrfzcylw59dnmylhxmgynas8n") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc"))))))

(define-public crate-fd-find-8.4.0 (c (n "fd-find") (v "8.4.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped"))) (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.1") (d #t) (k 1)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_env = \"musl\"), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.10") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^2.0") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1pxrzs8qjf9wsn3wcwwrrhvq0v9ndwsa2r1c979rvmfp7amg4awx") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc"))))))

(define-public crate-fd-find-8.5.0 (c (n "fd-find") (v "8.5.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0.12") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.12") (d #t) (k 0)) (d (n "nix") (r "^0.24.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1ay0n93xdvv6848hxgc3cl4kh1vn5kj99svg442lw7qni9xk3xq4") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc"))))))

(define-public crate-fd-find-8.5.1 (c (n "fd-find") (v "8.5.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0.12") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.12") (d #t) (k 0)) (d (n "nix") (r "^0.24.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "14816w9pacb235ygzk3psahz5kibshbi4rh24csi9aac6y4hwxrs") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc"))))))

(define-public crate-fd-find-8.5.2 (c (n "fd-find") (v "8.5.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0.12") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.12") (d #t) (k 0)) (d (n "nix") (r "^0.24.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0nd7vb3ybah5ri1nvxgxs77clppx41pv71n06g760ay54faydlzl") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc"))))))

(define-public crate-fd-find-8.5.3 (c (n "fd-find") (v "8.5.3") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.12") (d #t) (k 0)) (d (n "nix") (r "^0.24.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1bpnlq4x8imsjldxapqd61y1zwa1ld590aiw9zmg4s86fz301nl6") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc"))))))

(define-public crate-fd-find-8.6.0 (c (n "fd-find") (v "8.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.13") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.24.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "000ghpj60xrkx87azdlynaydcm48hvb68m6k1dzjcmli98rpk766") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc"))))))

(define-public crate-fd-find-8.7.0 (c (n "fd-find") (v "8.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("suggestions" "color" "wrap_help" "cargo" "unstable-grouped" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.13") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "186217yyb0znfn4jcc9l3i51fhfyb23lhbm3gg084sdrbj6bdnbg") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc")))) (r "1.64.0")))

(define-public crate-fd-find-8.7.1 (c (n "fd-find") (v "8.7.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("suggestions" "color" "wrap_help" "cargo" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.1") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "etcetera") (r "^0.8") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_os = \"openbsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.15") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^1.1.1") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "regex") (r "^1.9.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "test-case") (r "^3.1") (d #t) (k 2)) (d (n "users") (r "^0.11.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0r00sakz4sjsj03vx9271g536f6fx12bc9pv7ngqs55x3j91xjv6") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc")))) (r "1.70.0")))

(define-public crate-fd-find-9.0.0 (c (n "fd-find") (v "9.0.0") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("suggestions" "color" "wrap_help" "cargo" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "etcetera") (r "^0.8") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_os = \"openbsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.16") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("signal" "user"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^1.1.1") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "regex") (r "^1.9.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1is6xrsnbiy4la3lrmxzl3pzzkygnx9mp8h5k8gfrc29bq8m7891") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc")))) (r "1.70.0")))

(define-public crate-fd-find-10.0.0 (c (n "fd-find") (v "10.0.0") (d (list (d (n "aho-corasick") (r "^1.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.4.13") (f (quote ("suggestions" "color" "wrap_help" "cargo" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.9") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "etcetera") (r "^0.8") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_os = \"openbsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.17") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.28.0") (f (quote ("signal" "user"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^1.1.1") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0s10fz8vyw53jxibdwv65bx6nx73lrk7hky84zszdslspw7g1072") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc")))) (r "1.77.2")))

(define-public crate-fd-find-10.1.0 (c (n "fd-find") (v "10.1.0") (d (list (d (n "aho-corasick") (r "^1.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "argmax") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.4.13") (f (quote ("suggestions" "color" "wrap_help" "cargo" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.9") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "etcetera") (r "^0.8") (d #t) (k 0)) (d (n "faccess") (r "^0.2.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2") (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (t "cfg(all(not(windows), not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"freebsd\"), not(target_os = \"openbsd\"), not(all(target_env = \"musl\", target_pointer_width = \"32\")), not(target_arch = \"riscv64\")))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(target_os = \"redox\")))") (k 0)) (d (n "lscolors") (r "^0.17") (f (quote ("nu-ansi-term"))) (k 0)) (d (n "nix") (r "^0.28.0") (f (quote ("signal" "user"))) (t "cfg(unix)") (k 0)) (d (n "normpath") (r "^1.1.1") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "04ni9mi1dmsh6ad327d5l29nvdfdi4q1g15c3p2x5zks1sicgbrs") (f (quote (("use-jemalloc" "jemallocator") ("default" "use-jemalloc" "completions") ("completions" "clap_complete") ("base" "use-jemalloc")))) (r "1.77.2")))

