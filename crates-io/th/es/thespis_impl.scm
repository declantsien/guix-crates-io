(define-module (crates-io th es thespis_impl) #:use-module (crates-io))

(define-public crate-thespis_impl-0.0.0 (c (n "thespis_impl") (v "0.0.0") (h "13rsgqj3vk81xm6k56qdpz7kwy3dysfk1swnbcz13m4ypx7cph5z")))

(define-public crate-thespis_impl-0.1.0-alpha.1 (c (n "thespis_impl") (v "0.1.0-alpha.1") (d (list (d (n "actix") (r "^0.10.0-alpha") (d #t) (k 2)) (d (n "actix-rt") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "async_executors") (r "^0.3") (d #t) (k 0)) (d (n "async_executors") (r "^0.3") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct"))) (d #t) (k 2)) (d (n "async_nursery") (r "^0.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.8") (d #t) (k 2)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "thespis") (r "^0.1.0-alpha") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "json" "tracing-log" "chrono"))) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0h52n3qysm5z1y8r4f98jpnlya57143x4f5rl2lgr92i948xs98v") (f (quote (("tokio_channel" "tokio/sync" "tokio/stream" "async_chanx") ("default"))))))

(define-public crate-thespis_impl-0.1.0-alpha.2 (c (n "thespis_impl") (v "0.1.0-alpha.2") (d (list (d (n "actix") (r "^0.10.0-alpha") (d #t) (k 2)) (d (n "actix-rt") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "async_executors") (r "^0.4.0-beta") (d #t) (k 0)) (d (n "async_executors") (r "^0.4.0-alpha") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct"))) (d #t) (k 2)) (d (n "async_nursery") (r "^0.3.0-beta") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.8") (d #t) (k 2)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "thespis") (r "^0.1.0-alpha") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "json" "tracing-log" "chrono"))) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wgaxd8jhi846rdssx3pz3sw4fnsrc539vi0gvx185zlalha7c80") (f (quote (("tokio_channel" "tokio/sync" "tokio/stream" "async_chanx") ("default"))))))

(define-public crate-thespis_impl-0.1.0-alpha.3 (c (n "thespis_impl") (v "0.1.0-alpha.3") (d (list (d (n "actix") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "actix-rt") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.4") (d #t) (k 0)) (d (n "async_executors") (r "^0.4") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct" "tokio_tp" "tracing"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.4") (f (quote ("bindgen" "async_std"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "async_nursery") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.8") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "thespis") (r "^0.1.0-alpha") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "fmt" "json" "tracing-log" "chrono"))) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "05wxac8gqa79zlq03jc32wyn4zscn0byy1gmnby8yiv1c9x22485") (f (quote (("not_wasm") ("default" "not_wasm"))))))

(define-public crate-thespis_impl-0.1.0 (c (n "thespis_impl") (v "0.1.0") (d (list (d (n "actix") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "actix-rt") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.4") (d #t) (k 0)) (d (n "async_executors") (r "^0.4") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct" "tokio_tp" "tracing"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.4") (f (quote ("bindgen" "async_std"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "async_nursery") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.8") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "stream_throttle") (r "^0.4") (f (quote ("timer-futures-timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thespis") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "fmt" "json" "tracing-log" "chrono" "env-filter"))) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1scc8hvrkxvhffnp5bjc5x9awd1bxydgwsv6g4fiimliwfcx3kw2") (f (quote (("not_wasm") ("default" "not_wasm"))))))

(define-public crate-thespis_impl-0.2.0 (c (n "thespis_impl") (v "0.2.0") (d (list (d (n "actix") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "actix-rt") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (d #t) (k 0)) (d (n "async_executors") (r "^0.6") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct" "tokio_tp" "tracing"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (f (quote ("bindgen" "async_std"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "async_nursery") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.11") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "stream_throttle") (r "^0.4") (f (quote ("timer-futures-timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thespis") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "fmt" "json" "tracing-log" "env-filter"))) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1gxnp4f10vqssskil6jwxchfya2ypyq3a321fqvbzjidkn21klss") (f (quote (("not_wasm") ("default" "not_wasm"))))))

(define-public crate-thespis_impl-0.2.1 (c (n "thespis_impl") (v "0.2.1") (d (list (d (n "actix") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "actix-rt") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (d #t) (k 0)) (d (n "async_executors") (r "^0.6") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct" "tokio_tp" "tracing"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (f (quote ("bindgen" "async_std"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "async_nursery") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.11") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "stream_throttle") (r "^0.4") (f (quote ("timer-futures-timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thespis") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "fmt" "json" "tracing-log" "env-filter"))) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0qlhgrq7101qzv3s5k31p8z9jr8jgd7c2i2wkfap2723a5yaz217") (f (quote (("not_wasm") ("default" "not_wasm"))))))

(define-public crate-thespis_impl-0.3.0 (c (n "thespis_impl") (v "0.3.0") (d (list (d (n "actix") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "actix-rt") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async_chanx") (r "^0.1.0-alpha") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (d #t) (k 0)) (d (n "async_executors") (r "^0.6") (f (quote ("localpool" "threadpool" "async_std" "tokio_ct" "tokio_tp" "tracing"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "async_executors") (r "^0.6") (f (quote ("bindgen" "async_std"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "async_nursery") (r "^0.5") (d #t) (k 2)) (d (n "async_progress") (r "^0.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std" "compat"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("thread-pool"))) (k 2)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "ring-channel") (r "^0.11") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "stream_throttle") (r "^0.4") (f (quote ("timer-futures-timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thespis") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "fmt" "json" "tracing-log" "env-filter"))) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1a1wzj0m8h3lld5v5402pai1ypc5m8lamfrdbnbd4vvpvsx6v2s2") (f (quote (("not_wasm") ("default" "not_wasm"))))))

