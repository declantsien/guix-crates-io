(define-module (crates-io th or thor-devkit) #:use-module (crates-io))

(define-public crate-thor-devkit-0.1.0-alpha.1 (c (n "thor-devkit") (v "0.1.0-alpha.1") (d (list (d (n "alloy-rlp") (r "^0.3.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1-ffi"))) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "ethabi") (r "^18.0.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "tiny-bip39") (r "^1.0.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.4") (d #t) (k 2)))) (h "0masrcsp0kk5vdfvl1xv683lbq5zl3jpw3n65jyg45jksgpxhpsf")))

(define-public crate-thor-devkit-0.1.0-beta.1 (c (n "thor-devkit") (v "0.1.0-beta.1") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1-ffi"))) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ethabi") (r "^18.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "tiny-bip39") (r "^1.0.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.9.4") (d #t) (k 2)))) (h "1bax8670ngjmjbypiaigcvldxb54drsd5l9b6fswawg73gjsicrh") (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json" "dep:serde_with") ("http" "dep:reqwest" "serde")))) (r "1.67.1")))

(define-public crate-thor-devkit-0.1.0-beta.2 (c (n "thor-devkit") (v "0.1.0-beta.2") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1-ffi"))) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ethabi") (r "^18.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "tiny-bip39") (r "^1.0.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.9.4") (d #t) (k 2)))) (h "1vh9f9p64pwm3kydhzz92xfpaaqaa2fa2hy7c0ll2z0ymgib42nz") (y #t) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json" "dep:serde_with") ("http" "dep:reqwest" "serde")))) (r "1.67.1")))

(define-public crate-thor-devkit-0.1.0-beta.3 (c (n "thor-devkit") (v "0.1.0-beta.3") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1-ffi"))) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ethabi") (r "^18.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "tiny-bip39") (r "^1.0.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.9.4") (d #t) (k 2)))) (h "0p7lhdc5xdjcf4z7gh6hz3yva7ki8yn6kw6pxcjc44a9d156dywp") (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json" "dep:serde_with") ("http" "dep:reqwest" "serde") ("builder" "http" "dep:rand")))) (r "1.69.0")))

(define-public crate-thor-devkit-0.1.0-beta.4 (c (n "thor-devkit") (v "0.1.0-beta.4") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1-ffi"))) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ethabi") (r "^18.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "tiny-bip39") (r "^1.0.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.9.4") (d #t) (k 2)))) (h "1m8x11f48ldhbm80i4akl94phy6cakamdpz26lqv6xfr972l29mc") (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json" "dep:serde_with") ("http" "dep:reqwest" "serde") ("builder" "http" "dep:rand")))) (r "1.69.0")))

