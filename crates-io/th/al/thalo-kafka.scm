(define-module (crates-io th al thalo-kafka) #:use-module (crates-io))

(define-public crate-thalo-kafka-0.3.1 (c (n "thalo-kafka") (v "0.3.1") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thalo") (r "^0.3.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0sww1h3vr92ib8ijfmnf9q5wcq0scnns39ppz36gdx0g5z2ig27g")))

(define-public crate-thalo-kafka-0.3.2 (c (n "thalo-kafka") (v "0.3.2") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thalo") (r "^0.3.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1ai0lp0zgdar6yn8q8x8xz711b8ml1a27lphlf5dnk7dchk0zxwh")))

(define-public crate-thalo-kafka-0.3.3 (c (n "thalo-kafka") (v "0.3.3") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thalo") (r "^0.3.3") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1d0myb323zsnflg3asb4vpnqxp4f6v9mpd7acx8qnww083cqmzx4")))

(define-public crate-thalo-kafka-0.4.0 (c (n "thalo-kafka") (v "0.4.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thalo") (r "^0.4.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0slka31ppgkw1hnldfwjl4062hhqk8l4zvdpsyyb2fcc09b54b5k")))

(define-public crate-thalo-kafka-0.5.0 (c (n "thalo-kafka") (v "0.5.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thalo") (r "^0.5.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1j5qr80lkralhk6dkpq2gchwy77221d61lanli2195gwb93arvcp")))

