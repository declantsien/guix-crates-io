(define-module (crates-io th ym thyme) #:use-module (crates-io))

(define-public crate-thyme-0.0.1 (c (n "thyme") (v "0.0.1") (d (list (d (n "glium") (r "^0.27") (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "1zrzf6glkxkh8mrh3v72p1d3bbkzz82m66karp74i0c87p6qa8zc")))

(define-public crate-thyme-0.1.0 (c (n "thyme") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "wgpu") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "0zqx8rz4k5gck39fyk5md537f7wb2kxignb6g73qcrx2h4a2kfc1") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("default"))))))

(define-public crate-thyme-0.2.0 (c (n "thyme") (v "0.2.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "wgpu") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "1ga049r92pbwqkfk25kp4wa2j9mipl284yggdr7p602kka2p3yq2") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("default" "image"))))))

(define-public crate-thyme-0.3.0 (c (n "thyme") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "wgpu") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.22") (d #t) (k 0)))) (h "19czdy9lr5i85x59iqw606y0dbf795wgabm2cq2ifjsi2alg13z8") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("default" "image"))))))

(define-public crate-thyme-0.4.0 (c (n "thyme") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "wgpu") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.23") (d #t) (k 0)))) (h "0q0dqfajlx7r1mfpdafy5l8xzhmf16xxk86g76347bhn92aydkwg") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("default" "image"))))))

(define-public crate-thyme-0.5.0 (c (n "thyme") (v "0.5.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.23") (d #t) (k 0)))) (h "149ra3i4g2cs0dpajnadagamzkp8q2jwdag128x6d5xm8dipkqh3") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("default" "image"))))))

(define-public crate-thyme-0.6.0 (c (n "thyme") (v "0.6.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0rr5jkvp41fac6vlbp279pk6byblvi88yrb6f84fz6kcckxscgbz") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("gl_backend" "gl" "glutin" "memoffset") ("default" "image"))))))

(define-public crate-thyme-0.7.0 (c (n "thyme") (v "0.7.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "notify") (r "^4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("spirv"))) (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "10k68p1da0rz5cfx8f01s87l9mi6yfx638mkx5s1rcnrnm5mwjvx") (f (quote (("wgpu_backend" "wgpu" "futures" "bytemuck") ("glium_backend" "glium") ("gl_backend" "gl" "glutin" "memoffset") ("default" "image"))))))

