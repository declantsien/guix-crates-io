(define-module (crates-io th re thread-priority) #:use-module (crates-io))

(define-public crate-thread-priority-0.1.0 (c (n "thread-priority") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "1qh57izvc2dnx04zza82kv71jqdryznw4qash907px2chnbw0mg6")))

(define-public crate-thread-priority-0.1.1 (c (n "thread-priority") (v "0.1.1") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "122ihnzqkjcj391nkrg04aill4z0d19lpm7nyykhk1wl13lq9h2j")))

(define-public crate-thread-priority-0.2.0 (c (n "thread-priority") (v "0.2.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rslgrvw95fnbx96wz0bydskp2fpq5lnlxz5kisfmlm5iadqfbrk")))

(define-public crate-thread-priority-0.2.1 (c (n "thread-priority") (v "0.2.1") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ldz53m2zq4845b45764mzvdfv79nmjhq9vqf0v7hbrqsrrq1zrd")))

(define-public crate-thread-priority-0.2.2 (c (n "thread-priority") (v "0.2.2") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xf7qg9g1h1xrasq009naz857y0rqv4i5155kx0bpjp68aqr6080")))

(define-public crate-thread-priority-0.2.3 (c (n "thread-priority") (v "0.2.3") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "121p9zv3kxb6xjqvhfibdixrrpwaabjdi1l808m5ycww4viwrpni")))

(define-public crate-thread-priority-0.2.4 (c (n "thread-priority") (v "0.2.4") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1v0q935i1l8g070cslyci79dp7jcasgskmvpwq3jpbfx4h8nif6b")))

(define-public crate-thread-priority-0.3.0 (c (n "thread-priority") (v "0.3.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0g1166brjv47j09wgz7idi8v1sivvnkjvj6i54yskvpwzj00v3vl")))

(define-public crate-thread-priority-0.4.0 (c (n "thread-priority") (v "0.4.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1nbhjim1a31imm6n8ky3pga42ixk2m6i6n78badnric6qvb1gxx0")))

(define-public crate-thread-priority-0.4.1 (c (n "thread-priority") (v "0.4.1") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ccidjv5ra017knav1h34bzlscpx856fhz7kln3zhszh3jpr8qqg")))

(define-public crate-thread-priority-0.5.0 (c (n "thread-priority") (v "0.5.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0yh6kg0nni5c0l02m0mwscxzz6p8icr8km3s1nxyq6xw9ab8ksli")))

(define-public crate-thread-priority-0.6.0 (c (n "thread-priority") (v "0.6.0") (d (list (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1si3gi7cfljdgbzpwbkb665sps3gidgk1dcpdscv530v15qgsbdz")))

(define-public crate-thread-priority-0.6.1 (c (n "thread-priority") (v "0.6.1") (d (list (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1zfkbapimqh3nf5mlxprjs8fgbiz6h8vyik3b46z8wm8pmzrkyzm")))

(define-public crate-thread-priority-0.7.0 (c (n "thread-priority") (v "0.7.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05jkh93kfizdqsghln34h9jbhq6w8z8qf6h9r31jps4xpaga6jpv")))

(define-public crate-thread-priority-0.8.0 (c (n "thread-priority") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0r8z1zkywzkrjzgyg3qmjdpy9bprjl5z61ks47g01ihaiznfcgwv")))

(define-public crate-thread-priority-0.8.1 (c (n "thread-priority") (v "0.8.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.122") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.122") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19a6585kam85ryvqavggz2mgb0s39ri6rys4zksr2a8zczx2pyvn")))

(define-public crate-thread-priority-0.8.2 (c (n "thread-priority") (v "0.8.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "03c7n3av45lk6gzs9wh7kymjr5hyf3xrl7p111z77bc3i6k6hrk9")))

(define-public crate-thread-priority-0.9.0 (c (n "thread-priority") (v "0.9.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ramn2qi23vpif17psny621qdpbc58iw3rff4sqf20mxb2fmhjhi")))

(define-public crate-thread-priority-0.9.1 (c (n "thread-priority") (v "0.9.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0jpgkinfp3a17jasl7amgi0x61q3mrgfviv9xg7ll5mcvxvwcl9v")))

(define-public crate-thread-priority-0.9.2 (c (n "thread-priority") (v "0.9.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0q3l3aq7c141ir0lzds83w9jpmldkvxcfhgdqs5djh7xa85rb2js")))

(define-public crate-thread-priority-0.10.0 (c (n "thread-priority") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0w9vrpkdlig1mrdxlz14815bgad3nm5dm22bjqpkb4b89jp1k1cp")))

(define-public crate-thread-priority-0.11.0 (c (n "thread-priority") (v "0.11.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "12q2phsldqa06ypy60fq9p9s6qx34aml1inbz4b7ynjb8hzj51v9")))

(define-public crate-thread-priority-0.12.0 (c (n "thread-priority") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rxkkssc6dbyy08b7h06y3j052zklmslv9bf2fkszgiv5jgl5r1f")))

(define-public crate-thread-priority-0.13.0 (c (n "thread-priority") (v "0.13.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rkn5w7mvh0pys4c40p8xz2zxkh49zz7bxrpy261n76jxxpq8qwm")))

(define-public crate-thread-priority-0.13.1 (c (n "thread-priority") (v "0.13.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1pl8abh6z0zf596alz78a268k5yy4lg218y13yhslpi8y69cwmhc")))

(define-public crate-thread-priority-0.15.0 (c (n "thread-priority") (v "0.15.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"ios\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "199s1q7vrgifzcvw4aq4vwzq0bs6fwfnxm5vwisbcv8v9i9vq10m")))

(define-public crate-thread-priority-0.15.1 (c (n "thread-priority") (v "0.15.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"ios\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1cskxk5x3mahfvzcfwkp0d3ybl8zhyrqpxnf82ajvvk0h2av8b5p")))

(define-public crate-thread-priority-0.16.0 (c (n "thread-priority") (v "0.16.0") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"ios\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0g3yajzyscapy88kppm1g6fw9jgv1nw7yhp2m00qni10xgpfj5x6")))

(define-public crate-thread-priority-1.0.0 (c (n "thread-priority") (v "1.0.0") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"ios\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18rw8rr227bc1dl2bzk25s6a9ybcrjg31sddxi8bf513kj18x7jr") (r "1.67.1")))

(define-public crate-thread-priority-1.1.0 (c (n "thread-priority") (v "1.1.0") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"macos\", target_os = \"ios\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r ">=0.2.123") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "processthreadsapi" "winnt" "minwindef" "winbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0difadg94nsvnqhj63z238yzh8dmg9y88yqn5dkbhcwn7k9h8fqd") (r "1.67.1")))

