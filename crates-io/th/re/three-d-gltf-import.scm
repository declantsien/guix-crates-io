(define-module (crates-io th re three-d-gltf-import) #:use-module (crates-io))

(define-public crate-three-d-gltf-import-0.0.1 (c (n "three-d-gltf-import") (v "0.0.1") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "gltf") (r "^0.15") (f (quote ("names" "KHR_materials_pbrSpecularGlossiness" "import"))) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg" "png"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "three-d") (r "^0.6.1") (f (quote ("image-io"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)))) (h "0x26017x29p6vjwhpy5l1k065clzd67jgc2alyg6axm0nd2z87hq")))

(define-public crate-three-d-gltf-import-0.0.2 (c (n "three-d-gltf-import") (v "0.0.2") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "gltf") (r "^0.15") (f (quote ("names" "KHR_materials_pbrSpecularGlossiness" "import"))) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg" "png"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "three-d") (r "^0.6.1") (f (quote ("image-io"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)))) (h "0610xijzf33k5dazyzgf5kfwqznjffx0isp1p1zj1bjz8qnqdpsb")))

(define-public crate-three-d-gltf-import-0.0.3 (c (n "three-d-gltf-import") (v "0.0.3") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "gltf") (r "^0.15") (f (quote ("names" "KHR_materials_pbrSpecularGlossiness" "import"))) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg" "png"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "three-d") (r "^0.6.1") (f (quote ("image-io"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)))) (h "171rbgx2ifh3y54ri9cjsmzsz9ydwcyk1jiiycddzwf4qwm1yips")))

