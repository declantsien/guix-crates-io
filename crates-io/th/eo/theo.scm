(define-module (crates-io th eo theo) #:use-module (crates-io))

(define-public crate-theo-0.1.0 (c (n "theo") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.13.1") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "cosmic-text") (r "^0.9.0") (f (quote ("std" "swash"))) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("color"))) (k 2)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 2)) (d (n "glow") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30.6") (f (quote ("egl"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "piet") (r "^0.6.2") (k 0)) (d (n "piet-glow") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "piet-tiny-skia") (r "^0.2.0") (d #t) (k 0)) (d (n "piet-wgpu") (r "^0.3.0") (o #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (o #t) (k 0)) (d (n "softbuffer") (r "^0.3.0") (k 0)) (d (n "softbuffer") (r "^0.3.0") (f (quote ("x11"))) (k 2)) (d (n "tiny-skia") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("HtmlCanvasElement" "WebGl2RenderingContext" "WebGlRenderingContext" "Window" "Document" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu0") (r "^0.17.0") (o #t) (k 0) (p "wgpu")) (d (n "winit") (r "^0.28.1") (f (quote ("x11"))) (k 2)) (d (n "x11-dl") (r "^2.21.0") (d #t) (t "cfg(not(any(windows, target_arch = \"wasm32\")))") (k 2)))) (h "0pal2axmrwk1jmj9hw2rnxykiyfgzgcbc9g0hs9lyw6rc7sgjvpk") (f (quote (("wgpu" "piet-wgpu" "wgpu0" "slab") ("wgl" "gl" "glutin/wgl") ("glx" "gl" "glutin/glx") ("gl" "glow" "glutin" "piet-glow") ("egl" "gl" "glutin/egl") ("default" "gl" "x11" "wayland" "egl" "glx" "wgl" "wgpu")))) (s 2) (e (quote (("x11" "glutin?/x11" "softbuffer/x11") ("wayland" "glutin?/wayland" "softbuffer/wayland"))))))

