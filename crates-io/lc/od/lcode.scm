(define-module (crates-io lc od lcode) #:use-module (crates-io))

(define-public crate-lcode-0.1.0 (c (n "lcode") (v "0.1.0") (d (list (d (n "atoi") (r "^2.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "html2text") (r "^0.6.0") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "sea-orm") (r "^0.12.1") (f (quote ("sqlx-sqlite" "runtime-async-std-native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.173") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "simsearch") (r "^0.2.4") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1saq7z7zdywnxznxjzmffzmycn9kwaz0yrmvw3igv7bckkx2p8m0")))

(define-public crate-lcode-0.1.1 (c (n "lcode") (v "0.1.1") (d (list (d (n "atoi") (r "^2.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "html2text") (r "^0.6.0") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "sea-orm") (r "^0.12.1") (f (quote ("sqlx-sqlite" "runtime-async-std-native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.173") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "simsearch") (r "^0.2.4") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0yraby7p5d4xzj60giswcf9f8jjfbp02gbdr35nz4dm1rsjp6gar")))

(define-public crate-lcode-0.5.8 (c (n "lcode") (v "0.5.8") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "html2text") (r "^0.6.0") (d #t) (k 0)) (d (n "ini") (r "^1") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "openssl") (r "^0.10.56") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2") (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "sea-orm") (r "^0.12") (f (quote ("sqlx-sqlite" "runtime-tokio-rustls"))) (d #t) (k 0)) (d (n "secret-service") (r "^3") (f (quote ("rt-tokio-crypto-rust"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2.4") (d #t) (k 0)) (d (n "syntect") (r "^5") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.3.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "0nvngv0hq7wxfs89b65czayhqmqv8d9zqkx6zsgynl61m4rj6x7g")))

(define-public crate-lcode-0.5.9 (c (n "lcode") (v "0.5.9") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "html2text") (r "^0.6.0") (d #t) (k 0)) (d (n "ini") (r "^1") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "openssl") (r "^0.10.56") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2") (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "sea-orm") (r "^0.12") (f (quote ("sqlx-sqlite" "runtime-tokio-rustls"))) (d #t) (k 0)) (d (n "secret-service") (r "^3") (f (quote ("rt-tokio-crypto-rust"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2.4") (d #t) (k 0)) (d (n "syntect") (r "^5") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.3.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1mvgz8bkm9da3mcj851z8hkvnrydw66qkyamh16r45f46x41hi8l")))

(define-public crate-lcode-0.6.0 (c (n "lcode") (v "0.6.0") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "html2text") (r "^0.6.0") (d #t) (k 0)) (d (n "ini") (r "^1") (d #t) (k 0)) (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "openssl") (r "^0.10.56") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2") (d #t) (k 0)) (d (n "ratatui") (r "^0.24.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "sea-orm") (r "^0.12") (f (quote ("sqlx-sqlite" "runtime-tokio-rustls"))) (d #t) (k 0)) (d (n "secret-service") (r "^3") (f (quote ("rt-tokio-crypto-rust"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2.4") (d #t) (k 0)) (d (n "syntect") (r "^5") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.3.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1acvyzrypbcwvzw7s5d2lkyghyzyxhixvj33flx0pa6ddhv0kdx5")))

(define-public crate-lcode-0.6.1 (c (n "lcode") (v "0.6.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "html2text") (r "^0.6") (d #t) (k 0)) (d (n "ini") (r "^1") (d #t) (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9") (d #t) (k 0)) (d (n "pulldown-cmark-mdcat") (r "^2") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.18") (d #t) (k 0)) (d (n "sea-orm") (r "^0.12") (f (quote ("sqlx-sqlite" "runtime-tokio-rustls"))) (d #t) (k 0)) (d (n "secret-service") (r "^3") (f (quote ("rt-tokio-crypto-rust"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "syntect") (r "^5") (f (quote ("regex-fancy" "default-syntaxes"))) (k 0)) (d (n "tabled") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1mq1ifxnk33mq68ack0dyw08jsl9v69dy81s5k35fb7vr3fj4g08")))

(define-public crate-lcode-0.7.0 (c (n "lcode") (v "0.7.0") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.2") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.1") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.25") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1h8y82a3d0asr05qj3rfjja3dwh0kr7zrgassf4z5ylpl5kx8zir")))

(define-public crate-lcode-0.7.1 (c (n "lcode") (v "0.7.1") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.2") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.2") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.25") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0ryiamw3a8i8ralhnhjbp55jk6phwjh86i0mh4bwk4hs99q1mmg4")))

(define-public crate-lcode-0.7.2 (c (n "lcode") (v "0.7.2") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.25") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1i3ani3q1pg5xdv2c5f725ixclsdny6dif916i5rrwdrwkr7krc5")))

(define-public crate-lcode-0.7.3 (c (n "lcode") (v "0.7.3") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^6") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "14kafr7b9vp1l21cg4b4fjrwchgwrajlbimbfi8wrfmb23yxpvnd")))

(define-public crate-lcode-0.7.4 (c (n "lcode") (v "0.7.4") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^6") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1n1d86lni0ghjm4jiy3xnc83xqnk99p9cz74xy5cbcv9mhk8m2c8")))

(define-public crate-lcode-0.7.5 (c (n "lcode") (v "0.7.5") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0az7dg51sxw9dvasvsj1g690wiqg5yrksrki6nipiziamj22f2z3")))

(define-public crate-lcode-0.7.6 (c (n "lcode") (v "0.7.6") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1mw7l3489bjvp3fgshfgc5nk67wlgyzki4n1qk252y906j3plc79") (y #t) (r "1.78")))

(define-public crate-lcode-0.7.7 (c (n "lcode") (v "0.7.7") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (d #t) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0zgpr9ivi5c9hqfnp9rzsvyd16kkf8x6srwgsnmvqq7sfa22ylvg") (r "1.78")))

(define-public crate-lcode-0.7.8 (c (n "lcode") (v "0.7.8") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (f (quote ("macros" "crossterm"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0caf47gkd2ra65fgxdls8576r7ck5835p4pdnbm4l2a6kcilf8xd") (r "1.78")))

(define-public crate-lcode-0.7.10 (c (n "lcode") (v "0.7.10") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.6") (f (quote ("macros" "crossterm"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1bh09bs4wpfa18rlhgm82q5gzy86yygyiww71qxnm5jisimvz40m") (r "1.78")))

(define-public crate-lcode-0.7.11 (c (n "lcode") (v "0.7.11") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "18rl48myjf94hgrzix75a79aqmbjjm71bbjak8czi08yvdnjyav4") (r "1.78")))

(define-public crate-lcode-0.7.12 (c (n "lcode") (v "0.7.12") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0df60fqglk74ag2hq3bz3lszg120fy0r06yaxfzmp0xc2smif07b") (r "1.78")))

(define-public crate-lcode-0.7.13 (c (n "lcode") (v "0.7.13") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0xrm3pwbjqx12wq9qcy44v95jl7q2dk9yiadbllffnvnjwqvj7kr") (r "1.78")))

(define-public crate-lcode-0.7.14 (c (n "lcode") (v "0.7.14") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0p2a7fx52fyza584rpmq7avidp8vdz5g63a5a7hnl3ki2xpq6did") (r "1.79")))

(define-public crate-lcode-0.7.15 (c (n "lcode") (v "0.7.15") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "17iwhwkakx38qx3s8fvwyf1agn3c2gxz4vn5sipdd8xbx0s4ylvj") (r "1.79")))

(define-public crate-lcode-0.7.16 (c (n "lcode") (v "0.7.16") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "nucleo-matcher") (r "^0.3.1") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1g09p90w5jzkgc8w3wy2pdji6p4wxhy3x14zfvmlxf666cc44yi0") (r "1.79")))

(define-public crate-lcode-0.7.17 (c (n "lcode") (v "0.7.17") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0p7r4985k4ljbr5rlp1rwj3mxmn6dd30mh6amccqi06d0907zsmd") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.79")))

(define-public crate-lcode-0.7.18 (c (n "lcode") (v "0.7.18") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "10d4gwsv7i6br2y59cbc6ar32lpgyyy0y7ikscfzd3dvsbwaqjj6") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.79")))

(define-public crate-lcode-0.8.0 (c (n "lcode") (v "0.8.0") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0rxk8njmydnhl8s0li7cl66b935llihihb4brj2rfzwklmdc0jii") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.79")))

(define-public crate-lcode-0.8.1 (c (n "lcode") (v "0.8.1") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1y626xm22ac2jqzacmcr1csmndncywfkgqrd5jjdfrjmmy51174f") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.79")))

(define-public crate-lcode-0.9.0 (c (n "lcode") (v "0.9.0") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "=0.26.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1d5dmcrqvvnmkjcz85h239ahk5l996swn00b1alf0pg6i2wha222") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.80")))

(define-public crate-lcode-0.9.1 (c (n "lcode") (v "0.9.1") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.3") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "=0.26.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1ggzcwpjbr40iy1gxr1ah8gclzrgqhizpxdix82c4cibqrl8fj5i") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.80")))

(define-public crate-lcode-0.9.2 (c (n "lcode") (v "0.9.2") (d (list (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std" "help" "error-context" "suggestions" "usage" "color"))) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "inquire") (r "^0.7") (f (quote ("macros" "crossterm" "fuzzy"))) (k 0)) (d (n "lcode-config") (r "^0.3") (d #t) (k 0)) (d (n "leetcode-api") (r "^0.4") (f (quote ("ratatui"))) (d #t) (k 0)) (d (n "miette") (r "^7") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (f (quote ("d"))) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26.3") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "simsearch") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "05dk5rr2i4xc410r8qfsrvpl2gd15yympykyw19s1inivm2k60ss") (f (quote (("cross" "notify-rust/d_vendored")))) (r "1.80")))

