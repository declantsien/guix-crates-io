(define-module (crates-io lc ax lcax_convert) #:use-module (crates-io))

(define-public crate-lcax_convert-2.0.5 (c (n "lcax_convert") (v "2.0.5") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "1ljg8g8g74nfnc4v90435pl25iz1b85s2d1g740cbgpd9s45zk6z")))

(define-public crate-lcax_convert-2.0.6 (c (n "lcax_convert") (v "2.0.6") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "00fli7sfqkzmvps72k93hazlrwcdw28mwv0nj7fhcmc1xpld4w7b")))

(define-public crate-lcax_convert-2.1.0 (c (n "lcax_convert") (v "2.1.0") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "1lxjk58rc4xmlv6phasn94rw6x3v6hc4wcxrdnj74c0gyd7i7cma")))

(define-public crate-lcax_convert-2.1.1 (c (n "lcax_convert") (v "2.1.1") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "04ia920ysxkxq02q78fn7y4yiby6bbmw7xjxr9nqapg22vhrafz8")))

(define-public crate-lcax_convert-2.1.2 (c (n "lcax_convert") (v "2.1.2") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "1752hnsgs2ypr7xcyqh8cwq3wq048k8fsbgafc4q2jzy85nml85i")))

(define-public crate-lcax_convert-2.2.0 (c (n "lcax_convert") (v "2.2.0") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "186cj0n3mmjq411l34ah4xb4hr2wm6lvy9q3qrlakks7z80q5cqs")))

(define-public crate-lcax_convert-2.2.1 (c (n "lcax_convert") (v "2.2.1") (d (list (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "field_access") (r "^0.1.4") (d #t) (k 0)) (d (n "lcax_core") (r ">2.0.0") (d #t) (k 0)) (d (n "lcax_models") (r ">2.0.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("flate2" "snap"))) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "v5"))) (d #t) (k 0)))) (h "1n4cf4kz3pkzcxz74h3cjwqq6j5w1pkkzvqp1x8zg83x1507f4ry")))

