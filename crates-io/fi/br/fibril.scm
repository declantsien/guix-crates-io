(define-module (crates-io fi br fibril) #:use-module (crates-io))

(define-public crate-fibril-0.0.0 (c (n "fibril") (v "0.0.0") (d (list (d (n "corosensei") (r "^0.1") (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)))) (h "1sq936cc7rrdh8z32mzh2ghd4jf752rzc67fdkllrc06n4j14g42") (f (quote (("serde" "fibril_core/serde"))))))

(define-public crate-fibril-0.0.1 (c (n "fibril") (v "0.0.1") (d (list (d (n "corosensei") (r "^0.1") (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)))) (h "0kd9lamrsw7wa7w35y26qxsaw2jkdgd4mmlim3hqjnmp0r3vvfvc") (f (quote (("serde" "fibril_core/serde"))))))

(define-public crate-fibril-0.0.2 (c (n "fibril") (v "0.0.2") (d (list (d (n "corosensei") (r "^0.1") (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)))) (h "1k9pr0011pc734mr3gmxl7jv83ixw3dhybgdgdak8raijs539whb") (f (quote (("serde_json" "fibril_core/serde_json") ("serde" "fibril_core/serde") ("rt" "fibril_core/rt"))))))

(define-public crate-fibril-0.0.3 (c (n "fibril") (v "0.0.3") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "037qx701mqhr2blmggi4s3j99c2f4is2di2bszgq1n4s652gcdj0") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

(define-public crate-fibril-0.0.4 (c (n "fibril") (v "0.0.4") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "17487ml3sia2kl2raa050iwsaga1qqa6w7kpdzq5pky2zy5hr170") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

(define-public crate-fibril-0.0.5 (c (n "fibril") (v "0.0.5") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "010idh2sw8cch1l4n5317ryfg5vydq644kr6k7fnq70nq8z6nxwf") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

(define-public crate-fibril-0.0.6 (c (n "fibril") (v "0.0.6") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "083ab7v07h0n9v2vcn58zp4d2zgdkipxp8bccv09nvvxf9m9kv28") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

(define-public crate-fibril-0.0.7 (c (n "fibril") (v "0.0.7") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1c9pd720sm0kycwf7db2lawg7l6iqlym7nxz593kg8x2n3jfsdwa") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

(define-public crate-fibril-0.0.8 (c (n "fibril") (v "0.0.8") (d (list (d (n "corosensei") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fibril_core") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0fqjr1gp0pnygpx4md1lz7wyd7gqidbri6w3izjikjapj2km55fz") (s 2) (e (quote (("serde_json" "dep:serde_json") ("rt" "dep:futures" "dep:tokio" "dep:serde" "dep:tracing") ("fibers" "dep:corosensei"))))))

