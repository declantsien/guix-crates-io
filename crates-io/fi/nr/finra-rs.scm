(define-module (crates-io fi nr finra-rs) #:use-module (crates-io))

(define-public crate-finra-rs-0.1.0 (c (n "finra-rs") (v "0.1.0") (d (list (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "join-string") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0m57h7h7nrlwzjh4iv9ixi6aw4fk6dmp93ls4pwvnq5rm45y1ay5") (f (quote (("default")))) (s 2) (e (quote (("tokio" "dep:tokio"))))))

