(define-module (crates-io fi re firewood) #:use-module (crates-io))

(define-public crate-firewood-0.0.1 (c (n "firewood") (v "0.0.1") (d (list (d (n "assert_cmd") (r "^2.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "enum-as-inner") (r "^0.5.1") (d #t) (k 0)) (d (n "firewood-growth-ring") (r "^0.0.1") (d #t) (k 0) (p "firewood-growth-ring")) (d (n "firewood-libaio") (r "^0.0.1") (d #t) (k 0) (p "firewood-libaio")) (d (n "firewood-shale") (r "^0.0.1") (d #t) (k 0) (p "firewood-shale")) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.15.3") (d #t) (k 2)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "nix") (r "^0.26.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.1") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("impl-rlp"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt" "sync" "macros"))) (d #t) (k 0)) (d (n "triehash") (r "^0.8.4") (d #t) (k 2)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)))) (h "11r3m5k7b5a3gz8r2v3nc8cxk3m4fydmlb7x104kmqrc5ji7xjk1") (f (quote (("proof") ("eth")))) (y #t)))

(define-public crate-firewood-0.0.2 (c (n "firewood") (v "0.0.2") (d (list (d (n "aquamarine") (r "^0.3.1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "enum-as-inner") (r "^0.5.1") (d #t) (k 0)) (d (n "firewood-growth-ring") (r "^0.0.2") (d #t) (k 0)) (d (n "firewood-libaio") (r "^0.0.2") (d #t) (k 0)) (d (n "firewood-shale") (r "^0.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.15.3") (d #t) (k 2)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "nix") (r "^0.26.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.1") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("impl-rlp"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt" "sync" "macros"))) (d #t) (k 0)) (d (n "triehash") (r "^0.8.4") (d #t) (k 2)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)))) (h "17sn7z79rcn2mhan012mhdsqk2a80v0wrli01hxjnrnyqnjp80x4") (f (quote (("proof") ("eth")))) (y #t)))

