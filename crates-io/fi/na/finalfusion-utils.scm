(define-module (crates-io fi na finalfusion-utils) #:use-module (crates-io))

(define-public crate-finalfusion-utils-0.5.0 (c (n "finalfusion-utils") (v "0.5.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.5") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.2") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)))) (h "0krkl0hzaa8c9d9fgspc802q0d4lsbym6f2vgjdfhphky9m2rnrl") (f (quote (("opq" "reductive/opq-train") ("default"))))))

(define-public crate-finalfusion-utils-0.5.1 (c (n "finalfusion-utils") (v "0.5.1") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.5") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.2") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)))) (h "1xpkiaw4zb7jd5f2ylfrcv7g96k82yk1y16h92w6xah9rq4dmlcb") (f (quote (("opq" "reductive/opq-train") ("default"))))))

(define-public crate-finalfusion-utils-0.7.0 (c (n "finalfusion-utils") (v "0.7.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.7.1") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.2") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1gf0cq0q8l478c42flcy6kxpig9nzak9w85k50mqdz32107r0wf7") (f (quote (("opq" "reductive/opq-train") ("default"))))))

(define-public crate-finalfusion-utils-0.8.0 (c (n "finalfusion-utils") (v "0.8.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.8") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.2") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "151hpxbhd32aiaxs23c5yllz7q1j4209277zqas6nndni47yrzc2") (f (quote (("opq" "reductive/opq-train") ("default"))))))

(define-public crate-finalfusion-utils-0.8.1 (c (n "finalfusion-utils") (v "0.8.1") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.8.1") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.2") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0mjfn61kqh2cd32pjsxn31wgcdg8agz6vprb9g5dma3fm7dx6zb0") (f (quote (("opq" "reductive/opq-train") ("default"))))))

(define-public crate-finalfusion-utils-0.9.0 (c (n "finalfusion-utils") (v "0.9.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.3") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0wdh1d3li4hrc3djqhnbk364ww5a96il85s1xmai73m6vf9lhwcs") (f (quote (("opq") ("openblas" "opq" "reductive/openblas" "openblas-src/system") ("netlib" "opq" "reductive/netlib") ("intel-mkl" "opq" "reductive/intel-mkl") ("default"))))))

(define-public crate-finalfusion-utils-0.9.1 (c (n "finalfusion-utils") (v "0.9.1") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.3") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0mshjm1i0z3gfqs0fhdfkirngb2jymvhmfr1wwv5rg21cfw1wi31") (f (quote (("opq") ("openblas" "opq" "reductive/openblas" "openblas-src/system") ("netlib" "opq" "reductive/netlib") ("intel-mkl" "opq" "reductive/intel-mkl") ("default"))))))

(define-public crate-finalfusion-utils-0.10.0 (c (n "finalfusion-utils") (v "0.10.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "finalfusion") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.12") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.4") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0gh8hpdqvd6qzyvy6zjq1p1n0yzdd6yqczpq99kkr940k9691wbc") (f (quote (("opq") ("openblas" "opq" "reductive/openblas" "openblas-src/system") ("netlib" "opq" "reductive/netlib") ("intel-mkl" "opq" "reductive/intel-mkl") ("default"))))))

(define-public crate-finalfusion-utils-0.11.0 (c (n "finalfusion-utils") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "finalfusion") (r "^0.12.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.12") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.4") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0jqkn3qqksi014z7g44hqkqz3h8qab4yhs98v7lxjwdkp5gi3x19") (f (quote (("opq") ("openblas" "opq" "ndarray/blas" "reductive/openblas" "openblas-src/system") ("netlib" "opq" "ndarray/blas" "reductive/netlib") ("intel-mkl" "opq" "ndarray/blas" "reductive/intel-mkl") ("default"))))))

(define-public crate-finalfusion-utils-0.11.1 (c (n "finalfusion-utils") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "finalfusion") (r "^0.12.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.12") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.4") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10ahqq3y1ibabansk5v5wnf5zqjmrznyf3478li8y4zm1jd02y9y") (f (quote (("opq") ("openblas" "opq" "ndarray/blas" "reductive/openblas" "openblas-src/system") ("netlib" "opq" "ndarray/blas" "reductive/netlib") ("intel-mkl" "opq" "ndarray/blas" "reductive/intel-mkl") ("default"))))))

(define-public crate-finalfusion-utils-0.11.2 (c (n "finalfusion-utils") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "finalfusion") (r "^0.13") (d #t) (k 0)) (d (n "indicatif") (r "^0.12") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (f (quote ("mkl-static-ilp64-seq"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.5") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1m7dlwg7b3mjsysylh073jiwig8zf1jkhj36893dyg6hpxqcvng1") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src") ("default"))))))

(define-public crate-finalfusion-utils-0.12.0 (c (n "finalfusion-utils") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "finalfusion") (r "^0.14") (d #t) (k 0)) (d (n "indicatif") (r "^0.12") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (f (quote ("mkl-static-ilp64-seq"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.5") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0b49p29f16y4aka739749xxdglk6wjv49gpadnvyhzy75772r74v") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src") ("default"))))))

(define-public crate-finalfusion-utils-0.13.0 (c (n "finalfusion-utils") (v "0.13.0") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finalfusion") (r "^0.16") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.7") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1i3v7xpg8f1hxabwf5jxv7b3j1imrcc0jni4x9qvk67phvrqsg75") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl-amd" "opq" "ndarray/blas" "intel-mkl-src/mkl-dynamic-ilp64-seq") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src/mkl-static-ilp64-seq" "intel-mkl-src/download") ("default") ("accelerate" "opq" "ndarray/blas" "accelerate-src"))))))

(define-public crate-finalfusion-utils-0.13.1 (c (n "finalfusion-utils") (v "0.13.1") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finalfusion") (r "^0.16") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.7") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10yqd8a921qqr3xjzrvz128nprvcryzrlwv4wyqz8kb90d73axdz") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl-amd" "opq" "ndarray/blas" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("accelerate" "opq" "ndarray/blas" "accelerate-src"))))))

(define-public crate-finalfusion-utils-0.14.0 (c (n "finalfusion-utils") (v "0.14.0") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finalfusion") (r "^0.17.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.9") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1if8ff344harh6ychv9jnqps3bh2d7m5hmkimxaanbf8h6hnhxal") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl-amd" "opq" "ndarray/blas" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download" "openssl/vendored") ("default") ("accelerate" "opq" "ndarray/blas" "accelerate-src"))))))

(define-public crate-finalfusion-utils-0.14.1 (c (n "finalfusion-utils") (v "0.14.1") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 1)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finalfusion") (r "^0.17.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "netlib-src") (r "^0.8") (f (quote ("cblas" "lapacke" "system"))) (o #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reductive") (r "^0.9") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0xidb6rwaw3v6j1sh6p0vkd6pwspadaphvkfzlxlx4jqjmhbpxy0") (f (quote (("opq" "reductive/opq-train") ("openblas" "opq" "ndarray/blas" "openblas-src") ("netlib" "opq" "ndarray/blas" "netlib-src") ("intel-mkl-amd" "opq" "ndarray/blas" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl" "opq" "ndarray/blas" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download" "openssl/vendored") ("default") ("accelerate" "opq" "ndarray/blas" "accelerate-src"))))))

