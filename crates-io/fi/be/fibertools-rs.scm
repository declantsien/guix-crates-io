(define-module (crates-io fi be fibertools-rs) #:use-module (crates-io))

(define-public crate-fibertools-rs-0.0.1 (c (n "fibertools-rs") (v "0.0.1") (d (list (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "1qiw307apj7nbkhdbjqx239hng5iaphh9g125yw1gxafc43ihb9a") (y #t)))

(define-public crate-fibertools-rs-0.0.2 (c (n "fibertools-rs") (v "0.0.2") (d (list (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "0r5wc71aa2jlimj0pnc5bm06svdwp47vi0fgww706vljpc2320as") (y #t)))

(define-public crate-fibertools-rs-0.0.3-alpha (c (n "fibertools-rs") (v "0.0.3-alpha") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "0hp1aqw1k6pa92jkh2bnp2wb67l9mbkskqn7zlkva8h8pglcnbr7") (y #t)))

(define-public crate-fibertools-rs-0.0.4 (c (n "fibertools-rs") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "0627f2gffk0c0qn3dxa87mv7flz8757827xjzm23r9iy4j2q7859") (y #t)))

(define-public crate-fibertools-rs-0.0.5 (c (n "fibertools-rs") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "0najp12vwl997k8zrvb4s1232asgvgbzqqnnk8zqmgprqhrjafg8") (y #t)))

(define-public crate-fibertools-rs-0.0.6-alpha.1 (c (n "fibertools-rs") (v "0.0.6-alpha.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "0xw8sv8rr5ph4xbdl8vwclrsi9w66jgh9d0mcnrblif6pzl09rj1") (y #t)))

(define-public crate-fibertools-rs-0.0.6 (c (n "fibertools-rs") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)))) (h "05rivps0liyb1wkiv8cy16yqxqn427rh065d7hz92d3rnp365xp8") (y #t)))

(define-public crate-fibertools-rs-0.0.7 (c (n "fibertools-rs") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "13jdkf87ac7x9in5jba79bm7ffvigdnibcm1vjjh2achg346wd06") (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.0.8 (c (n "fibertools-rs") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "cargo") (r "^0.66.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0p66lmwq8p0a09g6dr5pcvdm50094hfjvnqblspb024wrnway4kp") (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.0.9 (c (n "fibertools-rs") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "cargo") (r "^0.66.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "00afp5aic2rhcf08qvw7fm3mfghl78sgpsjzh7ra0n0ik01m0zay") (f (quote (("default" "cnn")))) (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.0.10 (c (n "fibertools-rs") (v "0.0.10") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0q66rs6wg2x05nz008gf6lccphaqk74ssp142fsq8kaw34shdwsx") (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.0.11 (c (n "fibertools-rs") (v "0.0.11") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0g68h8jjx9lk9yk2da2h816msz64cmli4bdbdcl453mn6fscx4s4") (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.0 (c (n "fibertools-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1fn0hqj2z1ma5g4hs19ypln32ms7phl372sdrdij87399a6q0xbc") (y #t) (s 2) (e (quote (("cnn" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.1-alpha (c (n "fibertools-rs") (v "0.1.1-alpha") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0bj6d0fiaw7wi3zn0d4ykdrm55aij02zc8g0cvbjy3a2razqszdy") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.1-alpha.1 (c (n "fibertools-rs") (v "0.1.1-alpha.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1z2a3zhbkdbg2q5z2b64s1drxn0ghdzzfckkaab9dsvjsgngz1bb") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.1-alpha.2 (c (n "fibertools-rs") (v "0.1.1-alpha.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0w0wshpd9yipqy5hw1901d67n95v7w9v8ac5rkc2pz8aid09rnbx") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.1-alpha.3 (c (n "fibertools-rs") (v "0.1.1-alpha.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0xaxl18q9v2r3brsdgn90xip8gzx2lws2lc2c1mdwg6zkw5r7144") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.1 (c (n "fibertools-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0gm384fbsqmpqcw58iy7xv8iysha2ww9rnsnq4qnf9vk7gq0hj83") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.2 (c (n "fibertools-rs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "172lgdlmypl2dhqm0vxgaqd1ampf96j7vcsn890lfffc33v01nbg") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.3 (c (n "fibertools-rs") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-markdown") (r "^0.1.3") (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1sa1j9y7jwc57id4m9shknwjrcgpk9fk6p48lfba14mjbc51bg2v") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.1.4 (c (n "fibertools-rs") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^0.41.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-markdown") (r "^0.1.3") (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1wzpg7l6yc5pyc0fkal8yrwaa789c65lcyp6rx1s1qiw8plpra4m") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.0 (c (n "fibertools-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-markdown") (r "^0.1.3") (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "git2") (r "^0.15") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "quote") (r "^0.6.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "syn") (r "^0.15.20") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "11y48lhqdrg93ngiddsqqpdfjagqnbm4ljly2b097pybn9c5mqlq") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.1 (c (n "fibertools-rs") (v "0.2.1") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.3") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0izhgqjbgi0dqzc2s6crxawjw1ngb3bqsb433fd830m824k6slfb") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.2 (c (n "fibertools-rs") (v "0.2.2") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0nniv5dzskd2krm8vq6ahncdspih5grllis4vx80n737sn0z9hja") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.3 (c (n "fibertools-rs") (v "0.2.3") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.1.0") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1jly0ci7d7fv4qfhdkildpv3mjx62civdc2s9l27f9ksapc027b1") (f (quote (("default" "predict")))) (y #t) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.4 (c (n "fibertools-rs") (v "0.2.4") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.1.0") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1d1nhn879mppam5r41gyd4dk7w5p5g7ji6r3rn047rv3q0vw2bf0") (f (quote (("default" "predict")))) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.5 (c (n "fibertools-rs") (v "0.2.5") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.1.0") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0m3w9d17n2pcn0yva2hgjaazv3vj3qb0nlb4pz8dxyp76n8mhbk8") (f (quote (("default" "predict")))) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.2.6 (c (n "fibertools-rs") (v "0.2.6") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.1.1") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0yawqzdfk8xij64rj1yj8ff2253hzcs4wrb23nybv07fcr9xm86d") (f (quote (("default" "predict")))) (s 2) (e (quote (("predict" "dep:tch"))))))

(define-public crate-fibertools-rs-0.3.0 (c (n "fibertools-rs") (v "0.3.0") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.2") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0409dgziys8p272w6cvy9zzyca15zyza5zxgxprwcbwfmlf0fr6s") (f (quote (("default" "predict" "cli")))) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.1 (c (n "fibertools-rs") (v "0.3.1") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1b684xc16d9h88wsjp6nim047pb0bvq5ana7gan9kxkai8hxyv3k") (f (quote (("default" "predict" "cli")))) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.2 (c (n "fibertools-rs") (v "0.3.2") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("cargo" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0rh28rkdc1jx4nnhdbm3nfzxlhvfiyksx7xi1vppmbgazqkiszi2") (f (quote (("default" "predict" "cli")))) (y #t) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.3 (c (n "fibertools-rs") (v "0.3.3") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1b356znlc2h78hqfzhbrddnk86w8kz6mp40xgsackplkr6v29xgq") (f (quote (("default" "predict" "cli")))) (y #t) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.4 (c (n "fibertools-rs") (v "0.3.4") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "180j63cjx1g45qsr1vj49mmyiaj6xlsl4dz80zs878bbpz13w1m5") (f (quote (("default" "predict" "cli")))) (y #t) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.5 (c (n "fibertools-rs") (v "0.3.5") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0kp9jxvxj4ivxcmwv87r8cjadhicrlmick1hsx6208x70qv3px3w") (f (quote (("default" "predict" "cli")))) (y #t) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.6 (c (n "fibertools-rs") (v "0.3.6") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bamlift") (r "^0.3") (d #t) (k 0)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "bio-io") (r "^0.3.2") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0ayw0sycix7d139yg6qjz4f2sw2npiz2gfp3kq9rdahdx1pd8msb") (f (quote (("default" "predict" "cli")))) (s 2) (e (quote (("predict" "dep:tch" "dep:gbdt" "dep:serde" "dep:serde_json") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.7 (c (n "fibertools-rs") (v "0.3.7") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "^0.1.1") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1z3kz1vf3rh01ypzprflj3w0470m1jgk5igjfyg94rmk44hd2c8r") (f (quote (("default" "cli")))) (s 2) (e (quote (("predict" "dep:tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.8 (c (n "fibertools-rs") (v "0.3.8") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "=0.1.3") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0fgaacpq30sjixd1a04knqp7nywznzdx7rbf6qqrsjiaf64jxf0l") (f (quote (("default" "cli")))) (s 2) (e (quote (("predict" "dep:tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.3.9 (c (n "fibertools-rs") (v "0.3.9") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "=0.1.3") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1qxbd4f4vvadb3dc32p9nqv3q60jnhflh17vf1vn8ffvwjxnpzf9") (f (quote (("default" "cli")))) (s 2) (e (quote (("predict" "dep:tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console"))))))

(define-public crate-fibertools-rs-0.4.0 (c (n "fibertools-rs") (v "0.4.0") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "burn") (r "^0.12") (f (quote ("candle"))) (o #t) (d #t) (k 0)) (d (n "burn-import") (r "^0.12") (d #t) (k 1)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "=0.1.3") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0npnbpznd4dg590qd0kh8znq5a532r8jvvvsqmr0nmydlnp6wi0z") (f (quote (("default" "cli" "burn")))) (y #t) (s 2) (e (quote (("tch" "dep:tch" "burn/tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console") ("burn" "dep:burn"))))))

(define-public crate-fibertools-rs-0.4.1 (c (n "fibertools-rs") (v "0.4.1") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "burn") (r "^0.12") (f (quote ("candle"))) (o #t) (d #t) (k 0)) (d (n "burn-import") (r "^0.12") (d #t) (k 1)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "=0.1.3") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1577i0d1xlj6k27rnrlrqhvffi0i533clmjjc3ccbjfqbigl8nqq") (f (quote (("default" "cli" "burn")))) (y #t) (s 2) (e (quote (("tch" "dep:tch" "burn/tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console") ("burn" "dep:burn"))))))

(define-public crate-fibertools-rs-0.4.2 (c (n "fibertools-rs") (v "0.4.2") (d (list (d (n "anstyle") (r "^1.0.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bio") (r "^1.2.0") (d #t) (k 0)) (d (n "burn") (r "^0.12") (f (quote ("candle"))) (o #t) (d #t) (k 0)) (d (n "burn-import") (r "^0.12") (d #t) (k 1)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "string" "wrap_help" "color" "unstable-styles" "derive"))) (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (o #t) (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gbdt") (r "=0.1.3") (d #t) (k 0)) (d (n "gzp") (r "^0.11.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "niffler") (r "^2.5.0") (f (quote ("gz"))) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.43") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "tch") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0q5f8ff9xblhbqfy3200g6cy4qq7q8h41sivlzg0wnjvjml4zypn") (f (quote (("default" "cli" "burn")))) (s 2) (e (quote (("tch" "dep:tch" "burn/tch") ("cli" "dep:clap" "dep:clap_complete" "dep:clap_mangen" "dep:console") ("burn" "dep:burn"))))))

