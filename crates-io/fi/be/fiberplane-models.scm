(define-module (crates-io fi be fiberplane-models) #:use-module (crates-io))

(define-public crate-fiberplane-models-1.0.0-alpha.3 (c (n "fiberplane-models") (v "1.0.0-alpha.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0-alpha.1") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "0qal4b508r3ngq728n5pz35kbk5jhi2jabh738ckb0fw92xdhd94") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.1 (c (n "fiberplane-models") (v "1.0.0-beta.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0-beta.1") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "142fiwzdg6j2psf5dg9m5j3n0xskjhbrns1b1yqlpclmkir606v8") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.2-alpha.1 (c (n "fiberplane-models") (v "1.0.0-beta.2-alpha.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0-beta.1") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "11dhyba15zf6j508gixfrgdncyyc1dpnwx2smh5npisgvvr0hlqn") (y #t) (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.2 (c (n "fiberplane-models") (v "1.0.0-beta.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "0iv2mfyx9d7qanv9061zaawd96yyiprmsjp808a9wakaw5665s0q") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.3 (c (n "fiberplane-models") (v "1.0.0-beta.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "06zi2h2478alra0hs2sqa7gjapl159pq0hwyjxm9ssp8mpmldha7") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.4 (c (n "fiberplane-models") (v "1.0.0-beta.4") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "0khj434i20l358zxss7gqxg1rsqa4c5cghl7niv2vh7f19x3s873") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.5 (c (n "fiberplane-models") (v "1.0.0-beta.5") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "01l0vrb88lmn4pdlrpgyynx1f5iaikhwgmm81cf37a1i9kisrfn4") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.6 (c (n "fiberplane-models") (v "1.0.0-beta.6") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1x1pazc9q00kjgda29wkc4ddvvkwprmdkngl5rrgra348in8l2db") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.7 (c (n "fiberplane-models") (v "1.0.0-beta.7") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1xk14zglc1gb7p28i2nbjm0j04616qj1clkxl7dycdpc6xcfcf3j") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.8 (c (n "fiberplane-models") (v "1.0.0-beta.8") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6") (f (quote ("macros" "runtime-tokio-rustls"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1zj1aiz06n26kx770a476jq0zg1xyrib86m0r6jdkqsnwghspqa9") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.9 (c (n "fiberplane-models") (v "1.0.0-beta.9") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.0.0-beta.1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.3") (f (quote ("macros"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1ar9b06ab7mb9cywbd0sk3vm4zg8mbby1k0kdlplc9ra47m1s39p") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.11 (c (n "fiberplane-models") (v "1.0.0-beta.11") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.3") (f (quote ("macros"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1qrs6rgn6yp7a8fq4jhy8j1bybng4zjnnfbn56nq46qha12rl382") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.12 (c (n "fiberplane-models") (v "1.0.0-beta.12") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.3") (f (quote ("macros"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "13b14ypsammhiad16kxxl97zhjjzckzsakxajlgvl0974v0pynan") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.13 (c (n "fiberplane-models") (v "1.0.0-beta.13") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.3") (f (quote ("macros"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "09j2brqjh7pccv2fmzyk3zf5f9jh1x5234fzikp8hy16h8zxnd3h") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

(define-public crate-fiberplane-models-1.0.0-beta.14 (c (n "fiberplane-models") (v "1.0.0-beta.14") (d (list (d (n "axum_06") (r "^0.6") (o #t) (d #t) (k 0) (p "axum")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "fp-bindgen") (r "^3.0.0") (f (quote ("bytes-compat" "serde-json-compat" "time-compat"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 0)) (d (n "rmpv") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.3") (f (quote ("macros"))) (o #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde" "serde"))) (d #t) (k 0)))) (h "1h1lf63jv1nhxv5n3lvh8y2hfihcf66v0r1amh31r39kc8rh2vag") (s 2) (e (quote (("fp-bindgen" "base64uuid/fp-bindgen" "dep:fp-bindgen") ("clap" "dep:clap")))) (r "1.64")))

