(define-module (crates-io fi be fiberplane-templates) #:use-module (crates-io))

(define-public crate-fiberplane-templates-1.0.0-alpha.3 (c (n "fiberplane-templates") (v "1.0.0-alpha.3") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)))) (h "1picdlbffhjs9mkms7gm9p0mygwfznrbz56waq9hb72xxsb68ha1") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.1 (c (n "fiberplane-templates") (v "1.0.0-beta.1") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.1") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)))) (h "0pi7ch796cwgqajsppxigl2633jsbnrp771889c5ikjh1ldg4jpl") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.3 (c (n "fiberplane-templates") (v "1.0.0-beta.3") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12zdnkvq8sl426m7q5nnxq9m0x9h6s184cmi9k0y1d97scyicswm") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.4 (c (n "fiberplane-templates") (v "1.0.0-beta.4") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.4") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n4lzzij2846qy5yayapbryc6rxn0nx4s1mfyzjrwm9i9nw08683") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.5 (c (n "fiberplane-templates") (v "1.0.0-beta.5") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1sw67qk20k4ldasz2jvnnm4w08bbvngfshq3cw94fyqgpakjn1pm") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.6 (c (n "fiberplane-templates") (v "1.0.0-beta.6") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.6") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1p27mhmiq7v1l1x349gq93w2szhwd6v888fpjibs40h85b0pipdg") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.7 (c (n "fiberplane-templates") (v "1.0.0-beta.7") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.7") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11jx8m01ri7vb5nx0pda2ygz17xdlcbh5i77sm4dvlky8lhn08xy") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.8 (c (n "fiberplane-templates") (v "1.0.0-beta.8") (d (list (d (n "base64uuid") (r "^1.0.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.8") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1gvabndg45d7l6kz83498c02397av0z29l7mh1yd3cpsbgxflkfp") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.9 (c (n "fiberplane-templates") (v "1.0.0-beta.9") (d (list (d (n "base64uuid") (r "^1.0.0-beta.1") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.9") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qpm8rnwscma4scgw61wky60vvvy834xdr9ll71gzy7n5r7hw40l") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.11 (c (n "fiberplane-templates") (v "1.0.0-beta.11") (d (list (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.11") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1f3ywji4vs9hhd9mq2ajmcr976g2af2j464nn7dkxj6xsyy8jswg") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.12 (c (n "fiberplane-templates") (v "1.0.0-beta.12") (d (list (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.12") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01yl5phvwrnaksh6ngyybkvh05j7qbzj5fcn3nrnx9aa3n3nwhhd") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.13 (c (n "fiberplane-templates") (v "1.0.0-beta.13") (d (list (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.13") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ldgyhkbx3myjcw5q8f2h5d69y9z0i56qi6dn29w406kxfcfjxk9") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.14 (c (n "fiberplane-templates") (v "1.0.0-beta.14") (d (list (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.13") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cw7s26mbakyxaxqk36nmnclagrmkspkczns99ybhay70ql797fx") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

(define-public crate-fiberplane-templates-1.0.0-beta.15 (c (n "fiberplane-templates") (v "1.0.0-beta.15") (d (list (d (n "base64uuid") (r "^1.1.0") (k 0)) (d (n "fiberplane-models") (r "^1.0.0-beta.14") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("macros" "serde-human-readable" "serde-well-known"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1vmxn87a49173kgzwwf9217kpy32zbri49amych71y0g6dsa6dyv") (f (quote (("types" "serde" "serde_json") ("expand" "jrsonnet-evaluator" "jrsonnet-types" "thiserror" "time" "types") ("examples") ("default" "convert" "expand" "examples") ("convert" "once_cell" "percent-encoding" "regex" "time")))) (r "1.64")))

