(define-module (crates-io fi le filesystem_in_a_file) #:use-module (crates-io))

(define-public crate-filesystem_in_a_file-0.0.1 (c (n "filesystem_in_a_file") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "cpio") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getset") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "sendstream_parser") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "xattr") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)))) (h "1y7n96ncam4478n7ar2f86jqmk3bivpc5nfwssdlxdcbj08ypygx") (f (quote (("default" "btrfs" "cpio" "diff" "tar") ("archive")))) (s 2) (e (quote (("tar" "archive" "dep:memmap" "dep:tar") ("diff" "dep:similar" "dep:twox-hash") ("cpio" "archive" "dep:cpio" "dep:memmap") ("btrfs" "dep:memmap" "dep:sendstream_parser" "dep:thiserror" "dep:uuid"))))))

