(define-module (crates-io fi nc finch) #:use-module (crates-io))

(define-public crate-finch-0.1.0 (c (n "finch") (v "0.1.0") (d (list (d (n "clap") (r "~2.19.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.1") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)))) (h "0m302fh3qbbsb67cih8fjwscn2y309cbchyn77qxwl7grlinb3l2")))

(define-public crate-finch-0.1.1 (c (n "finch") (v "0.1.1") (d (list (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "1vf7yi550ympa9abzy4w18s8r4zfcp3x8hl0qgxmfzlhq3ws45di")))

(define-public crate-finch-0.1.2 (c (n "finch") (v "0.1.2") (d (list (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "1wmiargm2axij0g1i2kc5nd2kpvkmwwaxdcn329yw4vixb62rmri")))

(define-public crate-finch-0.1.3 (c (n "finch") (v "0.1.3") (d (list (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "1agajang9wwaxs48cqx99ljb3w44li2cxgfavy9fpr5a7bdyyhbq")))

(define-public crate-finch-0.1.4 (c (n "finch") (v "0.1.4") (d (list (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "05fzjkzzbnpbba17rz5hr8x5y9gd61cij4abic029ywgyfgwzf20")))

(define-public crate-finch-0.1.5 (c (n "finch") (v "0.1.5") (d (list (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "0dfbawh1gchc2l7b1waz3v1dyfmrw2hlgvjvxw5zav4czl5vx08y")))

(define-public crate-finch-0.1.6 (c (n "finch") (v "0.1.6") (d (list (d (n "capnp") (r "^0.8.17") (o #t) (d #t) (k 0)) (d (n "clap") (r "~2.26.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "08n2dncrbvfwbh6wvw4hqbg02rmqxf1d2359l52mdrrmjsxcmizp") (f (quote (("mash_format" "capnp") ("default" "mash_format"))))))

(define-public crate-finch-0.1.7 (c (n "finch") (v "0.1.7") (d (list (d (n "capnp") (r "^0.8.17") (o #t) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "~0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)))) (h "165qj77pygdwkyr8nrcxlc6yvqc3jazhvhlpnkgk0m69cmywa697") (f (quote (("mash_format" "capnp") ("default" "mash_format"))))))

(define-public crate-finch-0.1.8 (c (n "finch") (v "0.1.8") (d (list (d (n "capnp") (r "^0.8.17") (o #t) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)))) (h "1nsd3d4vplq2jb6khmizkm7cgcp2817vlmkv5kbxqap7np9wpmy0") (f (quote (("mash_format" "capnp") ("default" "mash_format"))))))

(define-public crate-finch-0.1.9 (c (n "finch") (v "0.1.9") (d (list (d (n "capnp") (r "^0.8.17") (o #t) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)))) (h "0162x0l2jgd6lic1k59n1h1cc2zdkv7h9chyc9w4kjyg6slfdwjb") (f (quote (("mash_format" "capnp") ("default" "mash_format"))))))

(define-public crate-finch-0.2.0 (c (n "finch") (v "0.2.0") (d (list (d (n "capnp") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "needletail") (r "^0.2.2") (d #t) (k 0)) (d (n "numpy") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.72") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)))) (h "1xlsdanyb6mkam38v327z2x3aynqpas7xix111xl6hvmawigx5ax") (f (quote (("python" "numpy" "pyo3") ("mash_format" "capnp") ("default" "mash_format"))))))

(define-public crate-finch-0.3.0 (c (n "finch") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^0.10") (d #t) (k 2)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.9.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "needletail") (r "^0.3.1") (d #t) (k 0)) (d (n "numpy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.0") (d #t) (k 2)) (d (n "pyo3") (r "^0.8.2") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)))) (h "1cwi4k6af9h7cfs22497qsk34r8g785pz3bpq3a7xlnb012g04m0") (f (quote (("python" "numpy" "pyo3") ("default"))))))

(define-public crate-finch-0.4.0 (c (n "finch") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "finch_lib") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1y54yx1sibihnkcq93dp3bgr62adl4pdhmdilbxpajhca303fxjc") (y #t)))

(define-public crate-finch-0.4.1 (c (n "finch") (v "0.4.1") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "numpy") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1v6fh5igvlj6ldq5hayw1afb5a076h87685lrh061vihy8fl4nqg") (f (quote (("python" "numpy" "pyo3" "pyo3/extension-module") ("default"))))))

(define-public crate-finch-0.4.2 (c (n "finch") (v "0.4.2") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "numpy") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ljsrgzvhcbf9jimmg8hihkvd6qsd6vj7dx4s9b6qdla4di5pzq6") (f (quote (("python" "pyo3" "pyo3/extension-module") ("default"))))))

(define-public crate-finch-0.4.3 (c (n "finch") (v "0.4.3") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "numpy") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "05mrps5xsms4kncbsqfszkmnq3q27ddsqlvmbpzk4gcq6as2gqib") (f (quote (("python" "pyo3" "pyo3/extension-module") ("default"))))))

(define-public crate-finch-0.5.0 (c (n "finch") (v "0.5.0") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "numpy") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1bnq02z9pgk8hqqwpv1vlraang0krxbj7sm5dks728m408dq9hin") (f (quote (("python" "pyo3" "pyo3/extension-module") ("default"))))))

(define-public crate-finch-0.6.0 (c (n "finch") (v "0.6.0") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.5") (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)))) (h "0fdzp5af2rk86zva57gr95gjlwk3ap3k2wn40z2gcfjw7ii8njqg") (f (quote (("python" "pyo3" "pyo3/extension-module" "numpy") ("default"))))))

