(define-module (crates-io ku be kubetsu) #:use-module (crates-io))

(define-public crate-kubetsu-0.1.0 (c (n "kubetsu") (v "0.1.0") (d (list (d (n "fake") (r "^2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sqlx") (r "^0") (o #t) (k 0)) (d (n "sqlx") (r "^0") (f (quote ("runtime-tokio" "macros" "sqlite"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "1sb0kysnmlzf26zk4ajqw1gsvlqv58ah18pkh2m8na7916q7dx0a") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite") ("sqlx-mysql" "sqlx" "sqlx/mysql") ("sqlx-any" "sqlx" "sqlx/any") ("default") ("all" "serde" "fake" "sqlx-mysql" "sqlx-sqlite" "sqlx-any")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde") ("fake" "dep:fake"))))))

(define-public crate-kubetsu-0.1.1 (c (n "kubetsu") (v "0.1.1") (d (list (d (n "fake") (r "^2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sqlx") (r "^0") (o #t) (k 0)) (d (n "sqlx") (r "^0") (f (quote ("runtime-tokio" "macros" "sqlite"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "01fz9ynipwnd3kldi15cq19x89vr7n0pdpy87mdlzsk0fanrcjks") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite") ("sqlx-mysql" "sqlx" "sqlx/mysql") ("sqlx-any" "sqlx" "sqlx/any") ("default") ("all" "serde" "fake" "sqlx-mysql" "sqlx-sqlite" "sqlx-any")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde") ("fake" "dep:fake"))))))

(define-public crate-kubetsu-0.2.0 (c (n "kubetsu") (v "0.2.0") (d (list (d (n "fake") (r "^2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sqlx") (r "^0") (o #t) (k 0)) (d (n "sqlx") (r "^0") (f (quote ("runtime-tokio" "macros" "sqlite"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "1g303x2fjcz9l0xzww71f585gy7ixasb6ydydl4kjqjkgbm0w55w") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite") ("sqlx-postgres" "sqlx" "sqlx/postgres") ("sqlx-mysql" "sqlx" "sqlx/mysql") ("sqlx-any" "sqlx" "sqlx/any") ("default") ("all" "serde" "fake" "sqlx-mysql" "sqlx-sqlite" "sqlx-postgres" "sqlx-any")))) (s 2) (e (quote (("sqlx" "dep:sqlx") ("serde" "dep:serde") ("fake" "dep:fake"))))))

