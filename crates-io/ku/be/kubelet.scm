(define-module (crates-io ku be kubelet) #:use-module (crates-io))

(define-public crate-kubelet-0.2.0 (c (n "kubelet") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "k8s-openapi") (r "^0.7") (f (quote ("v1_17"))) (k 0)) (d (n "kube") (r "^0.33") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio-tls") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0wlqvj5h3ww865ahii6a402wcgxz53n2vychp7qci082z2nvq2j1") (f (quote (("docs" "cli") ("cli" "structopt"))))))

(define-public crate-kubelet-0.2.1 (c (n "kubelet") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "k8s-openapi") (r "^0.7") (f (quote ("v1_17"))) (k 0)) (d (n "kube") (r "^0.33") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio-tls") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0pk2klp2z2rmddg289v0hfpzyp5jjmx9niv5kf9qnrh6d02vk9wj") (f (quote (("docs" "cli") ("cli" "structopt"))))))

(define-public crate-kubelet-0.3.0 (c (n "kubelet") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "k8s-openapi") (r "^0.8") (f (quote ("v1_17"))) (k 0)) (d (n "kube") (r "^0.34") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.2") (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-tls") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "warp") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)))) (h "0kxj1yxd5mfxlp2rr0a2carqzgl48vw8fvq8fk06576vrdp8akd5") (f (quote (("rustls-tls" "kube/rustls-tls" "oci-distribution/rustls-tls") ("kube-native-tls" "kube/native-tls" "oci-distribution/native-tls") ("docs" "cli") ("default" "kube-native-tls") ("cli" "structopt"))))))

(define-public crate-kubelet-0.4.0 (c (n "kubelet") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "k8s-openapi") (r "^0.8") (f (quote ("v1_17"))) (k 0)) (d (n "kube") (r "^0.35") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.3") (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.10") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-tls") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)))) (h "0s8inqd91ywm46vkdh8qhcfs17na6drp8s50323hfrr5269qgh0k") (f (quote (("rustls-tls" "kube/rustls-tls" "oci-distribution/rustls-tls" "reqwest/rustls-tls") ("kube-native-tls" "kube/native-tls" "oci-distribution/native-tls" "reqwest/native-tls") ("docs" "cli") ("default" "kube-native-tls") ("cli" "structopt"))))))

(define-public crate-kubelet-0.5.0 (c (n "kubelet") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "k8s-openapi") (r "^0.9") (f (quote ("v1_17"))) (k 0)) (d (n "kube") (r "^0.40") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.4") (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.10") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-tls") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)))) (h "065pqfl1mgl3qhd4cs1k1annnmjw8hl927zcvl4wi47xsw5nbdi8") (f (quote (("rustls-tls" "kube/rustls-tls" "oci-distribution/rustls-tls" "reqwest/rustls-tls") ("kube-native-tls" "kube/native-tls" "oci-distribution/native-tls" "reqwest/native-tls") ("docs" "cli") ("default" "kube-native-tls") ("cli" "structopt"))))))

(define-public crate-kubelet-0.6.0 (c (n "kubelet") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.3") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (t "cfg(target_family = \"windows\")") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("stream"))) (k 0)) (d (n "iovec") (r "^0.1.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "json-patch") (r "^0.2") (d #t) (k 0)) (d (n "k8s-csi") (r "^0.2") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.9") (f (quote ("v1_18"))) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "krator") (r "^0.1") (k 0)) (d (n "kube") (r "^0.42") (k 0)) (d (n "kube-runtime") (r "^0.42") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "miow") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "notify") (r "^5.0.0-pre.3") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.5") (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.10") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("fs" "stream" "macros" "signal" "uds"))) (d #t) (k 0)) (d (n "tonic") (r "^0.3") (d #t) (k 0)) (d (n "tonic-build") (r "^0.3") (d #t) (k 1)) (d (n "tower") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.5") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "warp") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "ws2_32-sys") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1wqm0nj4x4nffx7jpf3r7s6km5978wmssvdhn8byi9hwflqg5yhs") (f (quote (("rustls-tls" "kube/rustls-tls" "kube-runtime/rustls-tls" "oci-distribution/rustls-tls" "reqwest/rustls-tls" "krator/rustls-tls") ("kube-native-tls" "kube/native-tls" "kube-runtime/native-tls" "oci-distribution/native-tls" "reqwest/native-tls" "krator/kube-native-tls") ("docs" "cli" "derive") ("derive" "krator/derive") ("default" "kube-native-tls") ("cli" "structopt"))))))

(define-public crate-kubelet-0.7.0 (c (n "kubelet") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.3") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (t "cfg(target_family = \"windows\")") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (k 0)) (d (n "iovec") (r "^0.1.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "json-patch") (r "^0.2") (d #t) (k 0)) (d (n "k8s-csi") (r "^0.3") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.11") (f (quote ("v1_18"))) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "krator") (r "^0.2") (k 0)) (d (n "kube") (r "^0.48") (f (quote ("jsonpatch"))) (k 0)) (d (n "kube-runtime") (r "^0.48") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "mio") (r "^0.6") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "miow") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "notify") (r "^5.0.0-pre.3") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.6") (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "macros" "signal" "net"))) (d #t) (k 0)) (d (n "tokio-compat-02") (r "^0.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs" "net"))) (d #t) (k 0)) (d (n "tokio_02") (r "^0.2") (f (quote ("fs" "macros" "signal" "net"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0) (p "tokio")) (d (n "tonic") (r "^0.4") (d #t) (k 0)) (d (n "tonic-build") (r "^0.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.2") (f (quote ("util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.5") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "ws2_32-sys") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0nyxyhzd4cs06bwdhsajfrsr60gldgqrrddccqfhvlydzw3fay60") (f (quote (("rustls-tls" "kube/rustls-tls" "kube-runtime/rustls-tls" "oci-distribution/rustls-tls" "reqwest/rustls-tls" "krator/rustls-tls") ("kube-native-tls" "kube/native-tls" "kube-runtime/native-tls" "oci-distribution/native-tls" "reqwest/native-tls" "krator/kube-native-tls") ("docs" "cli" "derive") ("derive" "krator/derive") ("default" "kube-native-tls") ("cli" "structopt"))))))

(define-public crate-kubelet-1.0.0-alpha.1 (c (n "kubelet") (v "1.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^0.3") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0.0") (d #t) (k 0) (p "dirs-next")) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (t "cfg(target_family = \"windows\")") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (k 0)) (d (n "iovec") (r "^0.1.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "json-patch") (r "^0.2") (d #t) (k 0)) (d (n "k8s-csi") (r "^0.3") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.12") (f (quote ("v1_21" "api"))) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "krator") (r "^0.4") (k 0)) (d (n "kube") (r "^0.58") (f (quote ("jsonpatch"))) (k 0)) (d (n "kube-runtime") (r "^0.58") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "mio") (r "^0.6") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "miow") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "notify") (r "^5.0.0-pre.3") (d #t) (k 0)) (d (n "oci-distribution") (r "^0.7") (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "rcgen") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "remove_dir_all") (r "^0.7.0") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "macros" "signal" "net"))) (d #t) (k 0)) (d (n "tokio-compat-02") (r "^0.2") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs" "net"))) (d #t) (k 0)) (d (n "tokio_02") (r "^0.2") (f (quote ("fs" "macros" "signal" "net"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0) (p "tokio")) (d (n "tonic") (r "^0.4") (d #t) (k 0)) (d (n "tonic-build") (r "^0.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.2") (f (quote ("util"))) (d #t) (k 0)) (d (n "tower-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.5") (d #t) (t "cfg(target_family = \"windows\")") (k 2)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "ws2_32-sys") (r "^0.2.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1vf26fr8l3b5xkk53si578bwv9a8l7bm2m1ccilpl3wlkdh1g66m") (f (quote (("rustls-tls" "kube/rustls-tls" "oci-distribution/rustls-tls" "reqwest/rustls-tls" "krator/rustls-tls") ("kube-native-tls" "kube/native-tls" "oci-distribution/native-tls" "reqwest/native-tls" "krator/kube-native-tls") ("docs" "cli" "derive") ("derive" "krator/derive") ("default" "kube-native-tls") ("cli" "structopt"))))))

