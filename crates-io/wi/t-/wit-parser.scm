(define-module (crates-io wi t- wit-parser) #:use-module (crates-io))

(define-public crate-wit-parser-0.1.0 (c (n "wit-parser") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "wit-schema-version") (r "^0.1.0") (d #t) (k 0)))) (h "1xdlq5i723gy7ilvkad9b1lpimr2xifsi19lf526vdrx8wbixcvb")))

(define-public crate-wit-parser-0.1.1 (c (n "wit-parser") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "wit-schema-version") (r "^0.1.0") (d #t) (k 0)))) (h "18v2gv9x9csrk2yc0hfl18v1vcyrla4a7j56qkifyd2hg6mpi8r9")))

(define-public crate-wit-parser-0.2.0 (c (n "wit-parser") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "wit-schema-version") (r "^0.1.0") (d #t) (k 0)))) (h "1xq67c2nq11cc4y1rl1dgsiqn39xdx2gkg2pxphwifglcrwdjprz")))

(define-public crate-wit-parser-0.3.0 (c (n "wit-parser") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "07prb266s988g1fy3yis4g128vrahs8wzmza7r0qi7r3zg7k8f49")))

(define-public crate-wit-parser-0.3.1 (c (n "wit-parser") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "19lwrm3lqv32lk4cap8abykww8z46lkh1zzpa0nwbwlzz39b2gkh")))

(define-public crate-wit-parser-0.4.0 (c (n "wit-parser") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0kba902hdmb4sfy91sk6qk6y3fh6qs1l25hfgvrk0581fn9agkq2")))

(define-public crate-wit-parser-0.4.1 (c (n "wit-parser") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "013g6nsnnkr47xf82f7617xw1crrdkcw11vmmi7kkx2c5ljc8q1f")))

(define-public crate-wit-parser-0.5.0 (c (n "wit-parser") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0vsjb0garvmjwp17x22436nimc8ma6975zbniqz31srry642ssw9")))

(define-public crate-wit-parser-0.6.0 (c (n "wit-parser") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1iy2gzl5qmilgc06g811iwl87zqxxnsx3b9pf0mb8a15lcjy43vf")))

(define-public crate-wit-parser-0.6.1 (c (n "wit-parser") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "0h0z233sh7isyg1n91s7s6sbjxrg2h1jfdasgw423gqhjiw6ajd8")))

(define-public crate-wit-parser-0.6.2 (c (n "wit-parser") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1j8x1hgwml6vdhg40yz2hnd0b6dlhqxi8wnhzr8pngfli7m192dl")))

(define-public crate-wit-parser-0.6.3 (c (n "wit-parser") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1h56rc2albnvmsnr2ya9rya1h9c2r5bc5lyfvcg3qkq6d9mqnc10") (y #t)))

(define-public crate-wit-parser-0.6.4 (c (n "wit-parser") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1cr8qxpjsma6k4jl9lflnrblfsh22dsnmgkf0whv6lbsabdc71zq")))

(define-public crate-wit-parser-0.7.0 (c (n "wit-parser") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1i3yggb0yxkjl7r4rzrjacmr3nflw2qz83gi5mvczjp2azj76lin")))

(define-public crate-wit-parser-0.7.1 (c (n "wit-parser") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "0wlij4razxd0m6770llxhppp2n7dnflxg0s9fp8zcgjpc485i8jw")))

(define-public crate-wit-parser-0.8.0 (c (n "wit-parser") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1w2hy3byzgwvr8dg9cc61kkvnyrjrqpbkvj383ls1bnvjgqckbkd")))

(define-public crate-wit-parser-0.9.0 (c (n "wit-parser") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "074qfn9sgfyl2yz180fqfb49qlm5kirpmxkk95nm23c2avbszwl2")))

(define-public crate-wit-parser-0.9.1 (c (n "wit-parser") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "155a9j4c8r64z9jrgbp30ilq9ds92lw32dz4z9ziwjn63mph3dck")))

(define-public crate-wit-parser-0.9.2 (c (n "wit-parser") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "060kfybml9zqy43f3jb00f27jc76k5i2y7nsm59xwi758qhgl7jl")))

(define-public crate-wit-parser-0.10.0 (c (n "wit-parser") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "18kb03g8bwprlwfzi5whsxjhmw41fsvgjwga0vi8bwiiz5m95mn8")))

(define-public crate-wit-parser-0.11.0 (c (n "wit-parser") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "1p7082f0q5dvn1lxwpwgsxk390dndvz6xc96ahqw4g51pr4vis31")))

(define-public crate-wit-parser-0.11.1 (c (n "wit-parser") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "19apkq2y8yicj5bwplgpml228gvn0ysdkz8bwrrihsj320k05k8x")))

(define-public crate-wit-parser-0.11.2 (c (n "wit-parser") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "156jm7685hx2cli46zrjnaw5cm8xi4rhw60c9bj23i5818jbq6a4")))

(define-public crate-wit-parser-0.11.3 (c (n "wit-parser") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 0)))) (h "16kbambwqss4fbjyx71swczj8zflb0xzffl4ygg0jqximflxr7m3")))

(define-public crate-wit-parser-0.12.0 (c (n "wit-parser") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "14rzc73z4wyvqx19cqq6mcjfrnr74nzq1kiwib0qlhjwqrbrb36h")))

(define-public crate-wit-parser-0.12.1 (c (n "wit-parser") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "1ksjggqzxpb57nna8dhz65xha0kk1vd6dfbipkdz7fw97nafkb7n")))

(define-public crate-wit-parser-0.12.2 (c (n "wit-parser") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "0xps7n298a2n9c4mznp3r0si4jmx7dfcc3ysz7nc8vm1cgl1wxs3")))

(define-public crate-wit-parser-0.13.0 (c (n "wit-parser") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "1lzahpvpcmxanknilqrvyfwz79083ar5rpyq76zbi56f51xnppqm")))

(define-public crate-wit-parser-0.13.1 (c (n "wit-parser") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "1gi5yq90plx7f9wm3z6pb6mcszmp3ynxwajisqzkg5lh46i16jfz")))

(define-public crate-wit-parser-0.13.2 (c (n "wit-parser") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)))) (h "022yfbn0sldlglxsf4wcdw9xyifh50vvqf9wn2j5lpq0y2lkcsri")))

(define-public crate-wit-parser-0.14.0 (c (n "wit-parser") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.88") (o #t) (d #t) (k 0)))) (h "06pihvv8hx8brb3zfcxqhvalw2x8fh68w33wa1rg4yrn21rsvr0y") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.200.0 (c (n "wit-parser") (v "0.200.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.200.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.200.0") (o #t) (d #t) (k 0)))) (h "04wfik99zrf81sgmyj0kb6f7ndk873qzd9xxjrbc20bzndv7awbz") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.201.0 (c (n "wit-parser") (v "0.201.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.201.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.201.0") (o #t) (d #t) (k 0)))) (h "19nwxzv7by2m2vl7sk1fffrh9cwni4zrnspq7dbshndpqk7kwv8r") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.202.0 (c (n "wit-parser") (v "0.202.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (o #t) (d #t) (k 0)))) (h "1k1bvz0q99qdplpfal64a5cl2x4lnyn10nm0phklybrmi2s3fhkl") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.203.0 (c (n "wit-parser") (v "0.203.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.203.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.203.0") (o #t) (d #t) (k 0)))) (h "0d77cw28jp6bga91b2x6dv8sz6sl7dq8sd0wr0hd1yy0aj8pym1z") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.204.0 (c (n "wit-parser") (v "0.204.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.204.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.204.0") (o #t) (d #t) (k 0)))) (h "007yljzvrc20g3mbx8xgvz60sfpvh8z9azil8blp8x81hj90zhmx") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.205.0 (c (n "wit-parser") (v "0.205.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.205.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.205.0") (o #t) (d #t) (k 0)))) (h "0prfyc2hi2n4x5a8gd8x40ajryx9viaq0bqvppbiw5lcd33k9nx3") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.206.0 (c (n "wit-parser") (v "0.206.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.206.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.206.0") (o #t) (d #t) (k 0)))) (h "1zj2i3yim387ixb3jd4a0cbm3bcw3prx5nib9mkcnlp0jm7dw9nj") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.207.0 (c (n "wit-parser") (v "0.207.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.207.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wat") (r "^1.207.0") (o #t) (d #t) (k 0)))) (h "1qg6zzg1xkdplcqxpigg2y6d1zyyck43qmp3ry38sqd96fmkvj3q") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser"))))))

(define-public crate-wit-parser-0.208.0 (c (n "wit-parser") (v "0.208.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wat") (r "^1.208.0") (o #t) (d #t) (k 0)))) (h "11xqn4bkb84aw65wavwmlwggvhlp7az2z4ch2yp361isx2abzri7") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser")))) (r "1.76.0")))

(define-public crate-wit-parser-0.208.1 (c (n "wit-parser") (v "0.208.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.1") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wat") (r "^1.208.1") (o #t) (d #t) (k 0)))) (h "0z049iq50sbkc97b4ckd9600yj4pcvccivz2r7kf6pvj62kifr2i") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser")))) (r "1.76.0")))

(define-public crate-wit-parser-0.209.0 (c (n "wit-parser") (v "0.209.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wat") (r "^1.209.0") (o #t) (d #t) (k 0)))) (h "1yli0klsnv4wscxx0lhish6g3fnwcakbnlvzvlffq5s8z96zjmcl") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser")))) (r "1.76.0")))

(define-public crate-wit-parser-0.209.1 (c (n "wit-parser") (v "0.209.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "id-arena") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.1") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wat") (r "^1.209.1") (o #t) (d #t) (k 0)))) (h "0s8jlps3zc2iwbjjnkn46hkxpq2ib1j7wca6xjfmifxnq3ivjy9y") (f (quote (("default" "serde" "decoding")))) (s 2) (e (quote (("wat" "decoding" "dep:wat") ("serde" "dep:serde" "dep:serde_derive" "indexmap/serde" "serde_json") ("decoding" "dep:wasmparser")))) (r "1.76.0")))

