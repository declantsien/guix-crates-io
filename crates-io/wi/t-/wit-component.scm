(define-module (crates-io wi t- wit-component) #:use-module (crates-io))

(define-public crate-wit-component-0.0.0 (c (n "wit-component") (v "0.0.0") (h "029wmvrrmvklnfxv9pmli7sz0cbwgky3ck500424sfr0vhcxfw35")))

(define-public crate-wit-component-0.3.1 (c (n "wit-component") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.20.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.44") (d #t) (k 2)) (d (n "wat") (r "^1.0.52") (d #t) (k 2)) (d (n "wit-parser") (r "^0.3.0") (d #t) (k 0)))) (h "1avsn2m5saqfikvykg8j1rwrlcaixwmrrs1ph6yn1249i68xzllv")))

(define-public crate-wit-component-0.3.2 (c (n "wit-component") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.20.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.44") (d #t) (k 2)) (d (n "wat") (r "^1.0.52") (d #t) (k 2)) (d (n "wit-parser") (r "^0.3.1") (d #t) (k 0)))) (h "0ydq1bk10jl98i1q5gkcw4y654nmb8q5ymz297ihq5yynys4sai9")))

(define-public crate-wit-component-0.4.0 (c (n "wit-component") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.21.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.97.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.46") (d #t) (k 2)) (d (n "wat") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.53") (d #t) (k 2)) (d (n "wit-parser") (r "^0.4.0") (d #t) (k 0)))) (h "14l947chg3d9ddygxfia5vpdlvki5l4ak3kyfzn5g44s1qjvafks") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.4.1 (c (n "wit-component") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.21.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.97.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.46") (d #t) (k 2)) (d (n "wat") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.53") (d #t) (k 2)) (d (n "wit-parser") (r "^0.4.0") (d #t) (k 0)))) (h "04s7m0sivirgkqfm5zs6m5048hs683a3g6mn6ws0j5dzkm68mcri") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.4.2 (c (n "wit-component") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.98.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.48") (d #t) (k 2)) (d (n "wat") (r "^1.0.55") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.55") (d #t) (k 2)) (d (n "wit-parser") (r "^0.4.0") (d #t) (k 0)))) (h "1qcq5iikvip6jfypjqnia4qd2z5nqax5bd3w4sbqgw7k9lwq25rg") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.4.3 (c (n "wit-component") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.49") (d #t) (k 2)) (d (n "wat") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.56") (d #t) (k 2)) (d (n "wit-parser") (r "^0.4.1") (d #t) (k 0)))) (h "0awm3dl9hinmv9d2snas1c7fvji7kk10wh9nmqdslyqlshqrinq3") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.4.4 (c (n "wit-component") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.49") (d #t) (k 2)) (d (n "wat") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.56") (d #t) (k 2)) (d (n "wit-parser") (r "^0.4.1") (d #t) (k 0)))) (h "0ycb5417r2098lz64bp1n2wpasis6c1knl5kphqrav2blsljn85y") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.5.0 (c (n "wit-component") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.49") (d #t) (k 2)) (d (n "wat") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.56") (d #t) (k 2)) (d (n "wit-parser") (r "^0.5.0") (d #t) (k 0)))) (h "1p7fx3wrk27i160ns2qs2q1mb7h1maarqv9gww4pby7n8imyr0wp") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.5.1 (c (n "wit-component") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.49") (d #t) (k 2)) (d (n "wat") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.57") (d #t) (k 2)) (d (n "wit-parser") (r "^0.5.0") (d #t) (k 0)))) (h "0bvgbxj49sgha4mg93sfy95a9klpvl7zaf80jv6hnh92fkb6rd9b") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.6.0 (c (n "wit-component") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.23.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.1.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.100.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.50") (d #t) (k 2)) (d (n "wat") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.58") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.0") (d #t) (k 0)))) (h "0myq461kcfdb612lz015fvv308562x4s3rsxq15swcaiqysyc104") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.7.0 (c (n "wit-component") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.101.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.51") (d #t) (k 2)) (d (n "wat") (r "^1.0.59") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.59") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.0") (d #t) (k 0)))) (h "18vfbi19xzxw56rqqi19id2pss0p1dmhhq80lvb2dpr3bq7y61hx") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.7.1 (c (n "wit-component") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.24.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.101.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.52") (d #t) (k 2)) (d (n "wat") (r "^1.0.60") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.60") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.2") (d #t) (k 0)))) (h "0mk1fqsl5s4ps6nmk737bmh5gn5r4v73188cf3g4iniwlvrannjr") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.7.2 (c (n "wit-component") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.3.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.53") (d #t) (k 2)) (d (n "wat") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.61") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.3") (d #t) (k 0)))) (h "1r7wzcj3bx3m157ds1n9xh0vrizpbywhazdz828m73cx2nq86hq8") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.7.3 (c (n "wit-component") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.3.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.53") (d #t) (k 2)) (d (n "wat") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.61") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.4") (d #t) (k 0)))) (h "1g0rlcx4yn1fm19kw03nj08falxs2hbr0b26xh4avyra5466i4qy") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.7.4 (c (n "wit-component") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.3.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.54") (d #t) (k 2)) (d (n "wat") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.61") (d #t) (k 2)) (d (n "wit-parser") (r "^0.6.4") (d #t) (k 0)))) (h "15zc7jyqc55703c3n316znswb2b04aq5r6cbriqzqvkh7413217d") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.8.0 (c (n "wit-component") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.3.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.103.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.55") (d #t) (k 2)) (d (n "wat") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.62") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.0") (d #t) (k 0)))) (h "1r7crg8cwlfii3bqm6y1v77yxp8ngh8a23h9m2fkmqzrj2zpcq2j") (y #t) (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.8.1 (c (n "wit-component") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.103.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.55") (d #t) (k 2)) (d (n "wat") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.62") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.0") (d #t) (k 0)))) (h "1qmxzl72di6vzg56kxyy52j0s16m90il60pvwrcs4xyxbhd4898m") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.8.2 (c (n "wit-component") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.26.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.104.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.56") (d #t) (k 2)) (d (n "wat") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.63") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.1") (d #t) (k 0)))) (h "15j9mvqygi3hh34z0db8gm8zbn3ylzfjp4n67jb5k3lwrf1zz4g2") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.8.3 (c (n "wit-component") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.105.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.57") (d #t) (k 2)) (d (n "wat") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.64") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.1") (d #t) (k 0)))) (h "1qlj0hpchxlnvqy3i4mif8jhq8wp7976pphc56m8qz18lnmwhc5l") (y #t) (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.9.0 (c (n "wit-component") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.105.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.57") (d #t) (k 2)) (d (n "wat") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.64") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.1") (d #t) (k 0)))) (h "0cssj8xxhw7mw0c29gi8zkqp34cmj8vxvl0lw7aq17q02mf47k5k") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.10.0 (c (n "wit-component") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "url") (r "^2.0.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.28.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.106.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.58") (d #t) (k 2)) (d (n "wat") (r "^1.0.65") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.65") (d #t) (k 2)) (d (n "wit-parser") (r "^0.7.1") (d #t) (k 0)))) (h "08vz2yj868r7pck0sqbsvv5wmxh9w7b9jm9xl5zfq8av7dx51bh4") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.11.0 (c (n "wit-component") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.29.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.107.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.59") (d #t) (k 2)) (d (n "wat") (r "^1.0.66") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.66") (d #t) (k 2)) (d (n "wit-parser") (r "^0.8.0") (d #t) (k 0)))) (h "0p2pncdqii8gcl6naq0lws4phjw4fgrp31f8hb22f0s0ixzlrgbw") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.12.0 (c (n "wit-component") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.30.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.108.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.60") (d #t) (k 2)) (d (n "wat") (r "^1.0.67") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.67") (d #t) (k 2)) (d (n "wit-parser") (r "^0.9.0") (d #t) (k 0)))) (h "14z36jvwah6yi4sxmym7ycshb4hr6z31gi9kqvlcmw9jqlkd8fr5") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.13.0 (c (n "wit-component") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.31.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.109.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.61") (d #t) (k 2)) (d (n "wat") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.68") (d #t) (k 2)) (d (n "wit-parser") (r "^0.9.1") (d #t) (k 0)))) (h "1df82hwrp8lp7ll0a9gqkyhqvcw3y8c0wya6a2cx2qhp7gqs2avv") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.13.1 (c (n "wit-component") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.31.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.110.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.62") (d #t) (k 2)) (d (n "wat") (r "^1.0.69") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.69") (d #t) (k 2)) (d (n "wit-parser") (r "^0.9.2") (d #t) (k 0)))) (h "1icb2l0s8zwc6iyr31vzhp61n6nb7m6vmgz815dlc3ddzr6kz13d") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.13.2 (c (n "wit-component") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.31.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.111.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.63") (d #t) (k 2)) (d (n "wasmtime") (r "^11.0.1") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.70") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.70") (d #t) (k 2)) (d (n "wit-parser") (r "^0.10.0") (d #t) (k 0)))) (h "0r1bz24kgz8p2xfyg8kwfz314f3s7qk2x8m5iz1ss9jskhbvd7ja") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.0 (c (n "wit-component") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.32.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.3") (d #t) (k 0)) (d (n "wasmparser") (r "^0.112.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.64") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.71") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.71") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.0") (d #t) (k 0)))) (h "0xm8zx5g1vn93vkrgjx3ln16d1zacsjbgm6g5lvilpfmdp8z5nb6") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.1 (c (n "wit-component") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.4") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.65") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.72") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.1") (d #t) (k 0)))) (h "176pydgc5775d55pg1wzw2lxcd9lgr8mkkszv17ycz5i79f91hm4") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.2 (c (n "wit-component") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.5") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.66") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.73") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.1") (d #t) (k 0)))) (h "0wsld95y386w000gg367hghnhw8iz6gd2bdxqx4wqwyb7vs2x1xg") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.3 (c (n "wit-component") (v "0.14.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.6") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.74") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.74") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.2") (d #t) (k 0)))) (h "0b62lkbdmm0lk1lcclwlx66ihvq8hp1hw8kr4n7qxfpfi1hx6xq4") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.4 (c (n "wit-component") (v "0.14.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.6") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.74") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.74") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.3") (d #t) (k 0)))) (h "1h516s2aml5qka9mj9qa7zmhd19hg8n0dqsnk2n1v1xz813n28zf") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.5 (c (n "wit-component") (v "0.14.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.7") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.3") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.68") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.75") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.3") (d #t) (k 0)))) (h "0j1lkvk9sgfjb6wkjqpd5ddfzv40dcgpd57wwflszibz910zjarf") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.6 (c (n "wit-component") (v "0.14.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.34.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.8") (d #t) (k 0)) (d (n "wasmparser") (r "^0.114.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.69") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^66.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.76") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.76") (d #t) (k 2)) (d (n "wit-parser") (r "^0.12.0") (d #t) (k 0)))) (h "038wap3ccdnckkl2z776za1l28jif4s2gcab3chsdq79c1cwi68f") (y #t) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.15.0 (c (n "wit-component") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.35.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.9") (d #t) (k 0)) (d (n "wasmparser") (r "^0.115.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.70") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^66.0.2") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.77") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.77") (d #t) (k 2)) (d (n "wit-parser") (r "^0.12.0") (d #t) (k 0)))) (h "1hb152z80xkc4bkqrlvd9kx7axbpb1cx7r9m83kjwni0ni5n9g61") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.14.7 (c (n "wit-component") (v "0.14.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.7") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.3") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.68") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wat") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.75") (d #t) (k 2)) (d (n "wit-parser") (r "^0.11.3") (d #t) (k 0)))) (h "09fs840x76yzm3ncpgipkib1kfc6ib752bx9nyvf738ia7l1z636") (s 2) (e (quote (("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.16.0 (c (n "wit-component") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.35.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.9") (d #t) (k 0)) (d (n "wasmparser") (r "^0.115.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.70") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^66.0.2") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.77") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.77") (d #t) (k 2)) (d (n "wit-parser") (r "^0.12.1") (d #t) (k 0)))) (h "0zslajyp7lwwjbanjk8pmxjnjrpqwz5mlckb0yywpqh8gasqhx78") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.16.1 (c (n "wit-component") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.36.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.10") (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^67.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.78") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.78") (d #t) (k 2)) (d (n "wit-parser") (r "^0.12.1") (d #t) (k 0)))) (h "1r3fm1hf0ijikzr6hjvd1997pqh8wq6qvbgj191a9izrh5x2nrv5") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.17.0 (c (n "wit-component") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.36.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.10") (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^67.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.78") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.78") (d #t) (k 2)) (d (n "wit-parser") (r "^0.12.2") (d #t) (k 0)))) (h "07jvv7c3gsfmbxn3lpwk97p0il6bfrf4az0ga6wc21dkg2hc2328") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.18.0 (c (n "wit-component") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.36.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.11") (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.72") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^67.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.79") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.0") (d #t) (k 0)))) (h "17cv485mnq27adx7fm5zmy239rakkvbz0lxaj4ly8msymiqh6kb3") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.18.1 (c (n "wit-component") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.37.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.12") (d #t) (k 0)) (d (n "wasmparser") (r "^0.117.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.73") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^68.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.80") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.0") (d #t) (k 0)))) (h "1p64d5fsns3bvifvw1dmqcy1jxa99bgadl9fnw4w9bfsf0z1il2x") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.18.2 (c (n "wit-component") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.38.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.13") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.74") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^69.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.81") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.0") (d #t) (k 0)))) (h "1qnp2wp42iymk4sxsclxr55mlnb0300685kzsb4rha4rm6i3b2jv") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.19.0 (c (n "wit-component") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.38.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.14") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.75") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^69.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.82") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.0") (d #t) (k 0)))) (h "016c4l0n4wrds6jvxhbnliaj60ah1gsfh428aar0ql614zfhqbjb") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.19.1 (c (n "wit-component") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.39.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.15") (d #t) (k 0)) (d (n "wasmparser") (r "^0.119.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.76") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^70.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.83") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.1") (d #t) (k 0)))) (h "0n9854hm87yigng7hi4x77jysliizzzy6jkjmdm5d9x3zc33r7j2") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.20.0 (c (n "wit-component") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.40.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.16") (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.77") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^70.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.84") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.84") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.1") (d #t) (k 0)))) (h "16wwh13hvg6x9b0y1c3g50xvfr6wnmiy00pyzaky98zk2yc259lg") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.20.1 (c (n "wit-component") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.17") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.78") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^70.0.2") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.85") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.85") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.1") (d #t) (k 0)))) (h "1fvps9m25ylxq1j92rpi228vdf8j4w0dhdvnq6bhf09rsjbf879k") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.20.2 (c (n "wit-component") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.18") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.79") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^71.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.86") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.86") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.2") (d #t) (k 0)))) (h "0p82w1dfa6rbwipmnvi166qjxg7rvsvrkd6m5qxld56ljz0n4yzl") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.20.3 (c (n "wit-component") (v "0.20.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.19") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.80") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^71.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.87") (d #t) (k 2)) (d (n "wit-parser") (r "^0.13.2") (d #t) (k 0)))) (h "05jp3wyzw4sl8jvdvibbw4ljx7g72ywgbp5w0yc56kkvx2862hx4") (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.21.0 (c (n "wit-component") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.2") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.10.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.80") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^71.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.88") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0.88") (d #t) (k 2)) (d (n "wit-parser") (r "^0.14.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "06yranbdlhvphfihp2gy79wvsrs8im92f30x602r74gp5wdwsq5y") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.200.0 (c (n "wit-component") (v "0.200.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.200.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.200.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.200.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.200.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^200.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.200.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.200.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.200.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "05jc50mjm2np866w2m9bdzc4kw85msmv44bvp28a9bhb6hirg5rr") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.201.0 (c (n "wit-component") (v "0.201.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.201.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.201.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.201.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.201.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^201.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.201.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.201.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.201.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "09cqwcigv2dgsapn52dnfr2g3481ka91glig5v1ahq06ia20q722") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.202.0 (c (n "wit-component") (v "0.202.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^202.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.202.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "1ad2291vqvc2mixiy5d0pfv7281112zdhn0p3i1y0bckv4gnp0qc") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.203.0 (c (n "wit-component") (v "0.203.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.203.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.203.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.203.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.203.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^203.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.203.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.203.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.203.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "1zynfm9qfqs46yxxy2hn7dxrxh8xm711b5g9134f5crp7lclx71p") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.204.0 (c (n "wit-component") (v "0.204.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.204.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.204.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.204.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.204.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^204.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.204.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.204.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.204.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "0f3cb84lfhgdbdqqby6q9xzsqp7jdzq7cnnngwdkxbgrsmpsnzv5") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.205.0 (c (n "wit-component") (v "0.205.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.205.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.205.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.205.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.205.0") (d #t) (k 2)) (d (n "wasmtime") (r "^12.0.0") (f (quote ("cranelift" "component-model"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^205.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.205.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.205.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.205.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "1hqqzdywizq290b2s3lzcplcbwfzhppr0lf4m26bvgy2n8bix13l") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.206.0 (c (n "wit-component") (v "0.206.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.206.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.206.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.206.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.206.0") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^206.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.206.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.206.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.206.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "0rss8d7wcv5b610ryfv50bffqm92g65p47ygm0lnww73mi6axqc1") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.207.0 (c (n "wit-component") (v "0.207.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.207.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.207.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.207.0") (f (quote ("std"))) (k 0)) (d (n "wasmprinter") (r "^0.207.0") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^207.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.207.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.207.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.207.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "0jskyvlhd2g6y2z606lg1d6zqa8h0cjqlwqs5hdhjdqp8yfgy4d4") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat"))))))

(define-public crate-wit-component-0.208.0 (c (n "wit-component") (v "0.208.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.208.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.208.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.0") (f (quote ("std"))) (k 0)) (d (n "wasmprinter") (r "^0.208.0") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^208.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.208.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.208.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.208.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "1bk8a7k2i8dcq9yi27bhn965wm0830fk1w9ka5ikbqk19q3rf0xd") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat")))) (r "1.76.0")))

(define-public crate-wit-component-0.208.1 (c (n "wit-component") (v "0.208.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.208.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.208.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.1") (f (quote ("std"))) (k 0)) (d (n "wasmprinter") (r "^0.208.1") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^208.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.208.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.208.1") (d #t) (k 2)) (d (n "wit-parser") (r "^0.208.1") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "1f3dcjwg1036lf56dpv43mzf5dxqi8c5pk4wfgc5s4zm8w7dvxzy") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat")))) (r "1.76.0")))

(define-public crate-wit-component-0.209.0 (c (n "wit-component") (v "0.209.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.209.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.209.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.0") (f (quote ("std"))) (k 0)) (d (n "wasmprinter") (r "^0.209.0") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^209.0.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.209.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.209.0") (d #t) (k 2)) (d (n "wit-parser") (r "^0.209.0") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "019appz7a2l202l11jc5i186l55zx4sjscmpnyxxcsvf75zzb5mr") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat")))) (r "1.76.0")))

(define-public crate-wit-component-0.209.1 (c (n "wit-component") (v "0.209.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.209.1") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.209.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.1") (f (quote ("std"))) (k 0)) (d (n "wasmprinter") (r "^0.209.1") (d #t) (k 2)) (d (n "wasmtime") (r "^20.0.0") (f (quote ("cranelift" "component-model" "runtime" "gc"))) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "wast") (r "^209.0.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.209.1") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.209.1") (d #t) (k 2)) (d (n "wit-parser") (r "^0.209.1") (f (quote ("decoding" "serde"))) (d #t) (k 0)))) (h "16cg2rapmdjdjahackqx3g5a87249gjsdmg14lsb174z0ddvp8i5") (f (quote (("semver-check" "dummy-module")))) (s 2) (e (quote (("wat" "dep:wast" "dep:wat") ("dummy-module" "dep:wat")))) (r "1.76.0")))

