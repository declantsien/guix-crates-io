(define-module (crates-io wi ni winit-gtk) #:use-module (crates-io))

(define-public crate-winit-gtk-0.1.0 (c (n "winit-gtk") (v "0.1.0") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "0ks48b09p0v331vv55c143ywh513xryf2sv0x6l8blfms48x7v8c") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("dox" "gtk/dox") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity"))))))

(define-public crate-winit-gtk-0.28.0 (c (n "winit-gtk") (v "0.28.0") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "16l6nj2irjwybgzjw57sm8m2yr888rw3v68w9n9a7fn83bnrw72i") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("dox" "gtk/dox") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity")))) (y #t)))

(define-public crate-winit-gtk-0.28.1 (c (n "winit-gtk") (v "0.28.1") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "1zm4wq3fwm1jvfrdg026kvfr7j4si8wkf8vfi9mdr7bwck89xhy2") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("dox" "gtk/dox") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity"))))))

(define-public crate-winit-gtk-0.28.2 (c (n "winit-gtk") (v "0.28.2") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "1wvah3m5d7ghzb0lrlvssj0g6x5xz5r9zj6fwackz5pswycx99c4") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("dox" "gtk/dox") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity"))))))

(define-public crate-winit-gtk-0.29.0 (c (n "winit-gtk") (v "0.29.0") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "0vjxjz5l051nrnsc9qdfw2a2gi87fkas1yizs8ynayc629vaw47x") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity"))))))

(define-public crate-winit-gtk-0.29.1 (c (n "winit-gtk") (v "0.29.1") (d (list (d (n "android-activity") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-pixbuf") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdk-sys") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gio") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "glib") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "ndk") (r "^0.7.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "orbclient") (r "^0.3.42") (t "cfg(target_os = \"redox\")") (k 0)) (d (n "raw_window_handle") (r "^0.5") (d #t) (k 0) (p "raw-window-handle")) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-scanner") (r "^0.29.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 1)) (d (n "web-sys") (r "^0.3.22") (f (quote ("CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "AddEventListenerOptions" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventListenerOptions" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_Media" "Win32_System_Com_StructuredStorage" "Win32_System_Com" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (d #t) (t "cfg(all(unix, not(any(target_os = \"redox\", target_arch = \"wasm32\", target_os = \"android\", target_os = \"ios\", target_os = \"macos\"))))") (k 0)))) (h "1bd41ci98jh0g2kw33vmqrqayk5w688b02wwphsbh873k1667mpj") (f (quote (("x11") ("wayland-dlopen") ("wayland-csd-adwaita-notitle") ("wayland-csd-adwaita-crossfont") ("wayland-csd-adwaita") ("wayland") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita") ("android-native-activity" "android-activity/native-activity") ("android-game-activity" "android-activity/game-activity"))))))

