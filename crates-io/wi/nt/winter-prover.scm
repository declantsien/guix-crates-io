(define-module (crates-io wi nt winter-prover) #:use-module (crates-io))

(define-public crate-winter-prover-0.1.0 (c (n "winter-prover") (v "0.1.0") (d (list (d (n "air") (r "^0.1") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.1") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.1") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.1") (k 0) (p "winter-math")) (d (n "utils") (r "^0.1") (k 0) (p "winter-utils")))) (h "1wdry3x32722524f39jmsins38iijdp4sxnlzvgr4hdj2hxi39j9") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std") ("alloc" "air/alloc" "crypto/alloc" "fri/alloc" "math/alloc" "utils/alloc"))))))

(define-public crate-winter-prover-0.2.0 (c (n "winter-prover") (v "0.2.0") (d (list (d (n "air") (r "^0.2") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.2") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.2") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.2") (k 0) (p "winter-math")) (d (n "utils") (r "^0.2") (k 0) (p "winter-utils")))) (h "1ys41c5q5kp2yxhixn4rykay9hp34ld9fwbmdidy888wj6byc1jv") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std"))))))

(define-public crate-winter-prover-0.3.0 (c (n "winter-prover") (v "0.3.0") (d (list (d (n "air") (r "^0.3") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.3") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.3") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.3") (k 0) (p "winter-math")) (d (n "utils") (r "^0.3") (k 0) (p "winter-utils")))) (h "05zv8nyyzpdhdsgi5cnhiv0sa4hx521619qz8w1d8z408cjwpn24") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.57")))

(define-public crate-winter-prover-0.4.0 (c (n "winter-prover") (v "0.4.0") (d (list (d (n "air") (r "^0.4") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.4") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.4") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.4") (k 0) (p "winter-math")) (d (n "utils") (r "^0.4") (k 0) (p "winter-utils")))) (h "1h3wwjqd481c6qd0pn0q9rw2c2kxfcqbiqhvi1lg4xyrr678yhvn") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.60")))

(define-public crate-winter-prover-0.4.1 (c (n "winter-prover") (v "0.4.1") (d (list (d (n "air") (r "^0.4.1") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.4.1") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.4.1") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.4.1") (k 0) (p "winter-math")) (d (n "utils") (r "^0.4.1") (k 0) (p "winter-utils")))) (h "1hpwbig8ci618syr6vl4hw19jvp5cjsjasa2ypznv0sk3mm2qjjb") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.60")))

(define-public crate-winter-prover-0.4.2 (c (n "winter-prover") (v "0.4.2") (d (list (d (n "air") (r "^0.4.2") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.4.2") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.4.2") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.4.2") (k 0) (p "winter-math")) (d (n "utils") (r "^0.4.2") (k 0) (p "winter-utils")))) (h "04a4a8sbvlj3x2a7j3r34rispdd942x7lhirx8irzx32sqzmhc9q") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.60")))

(define-public crate-winter-prover-0.5.0 (c (n "winter-prover") (v "0.5.0") (d (list (d (n "air") (r "^0.5") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.5") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.5") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.5") (k 0) (p "winter-math")) (d (n "utils") (r "^0.5") (k 0) (p "winter-utils")))) (h "0w8jqgl7i0zrwanf8ajd9k2mlijib27dqv4jkyd6l3sngk29yyqx") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.5.1 (c (n "winter-prover") (v "0.5.1") (d (list (d (n "air") (r "^0.5") (k 0) (p "winter-air")) (d (n "crypto") (r "^0.5") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.5") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.5") (k 0) (p "winter-math")) (d (n "utils") (r "^0.5") (k 0) (p "winter-utils")))) (h "118c8vpz7bw32if62f1aycr467ln38qss58b2ban3qkzfycmxlsm") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.6.0 (c (n "winter-prover") (v "0.6.0") (d (list (d (n "air") (r "^0.6") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.6") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.6") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "0bq2x6brip39hnlqlwqkbj061kbhh1k4r03j9zhy2g2pnr73z6j2") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.6.1 (c (n "winter-prover") (v "0.6.1") (d (list (d (n "air") (r "^0.6") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.6") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.6") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1kvzk9bpg9j6mhi5lp72q2l3yanpps6yf0w4hdzg21zpc3nr53dv") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.6.2 (c (n "winter-prover") (v "0.6.2") (d (list (d (n "air") (r "^0.6") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.6") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.6") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1scnpsiv0qxkc0yj4sqz3xg3y4wriy4j6hglxdklvxvgxvpkzyx5") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.6.3 (c (n "winter-prover") (v "0.6.3") (d (list (d (n "air") (r "^0.6") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.6") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.6") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "067yyknw1c8ynf6pzf5kkq6alwrrqa6hzs9j1mx3n8iy11rp6m25") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.6.4 (c (n "winter-prover") (v "0.6.4") (d (list (d (n "air") (r "^0.6") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.6") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.6") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.6") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.6") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.6") (k 0) (p "winter-utils")))) (h "1491fq2xnf80nwcrfk51rnscmsylbfja4ivni8z1pz908vms3pia") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.67")))

(define-public crate-winter-prover-0.7.0 (c (n "winter-prover") (v "0.7.0") (d (list (d (n "air") (r "^0.7") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.7") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.7") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.7") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.7") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.7") (k 0) (p "winter-utils")))) (h "08bjvm165lkpsbk1sky4wljn4yk8s9c8wvb1f2p3r044pxxf649x") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.73")))

(define-public crate-winter-prover-0.7.1 (c (n "winter-prover") (v "0.7.1") (d (list (d (n "air") (r "^0.7") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.7") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.7") (k 0) (p "winter-fri")) (d (n "log") (r "^0.4") (k 0)) (d (n "math") (r "^0.7") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.7") (d #t) (k 2) (p "winter-rand-utils")) (d (n "utils") (r "^0.7") (k 0) (p "winter-utils")))) (h "0yryd64h3qvx32iwd4jg401683svxmg3l4j3pa99yjwwad579lwx") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.73")))

(define-public crate-winter-prover-0.8.0 (c (n "winter-prover") (v "0.8.0") (d (list (d (n "air") (r "^0.8") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.8") (k 0) (p "winter-fri")) (d (n "math") (r "^0.8") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "tracing") (r "^0.1") (k 0)) (d (n "utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "1bsw0iv2rmabymayw78i79ps2p9d2lv8zcxp0r5hb0mxlisyblk8") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.75")))

(define-public crate-winter-prover-0.8.1 (c (n "winter-prover") (v "0.8.1") (d (list (d (n "air") (r "^0.8") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.8") (k 0) (p "winter-fri")) (d (n "math") (r "^0.8") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "tracing") (r "^0.1") (k 0)) (d (n "utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "0k2mnaz0ga71yc242abic200f5gqg18jxskqwxdd7m9m9n2hxv5k") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.75")))

(define-public crate-winter-prover-0.8.3 (c (n "winter-prover") (v "0.8.3") (d (list (d (n "air") (r "^0.8") (k 0) (p "winter-air")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.8") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.8") (k 0) (p "winter-fri")) (d (n "math") (r "^0.8") (k 0) (p "winter-math")) (d (n "rand-utils") (r "^0.8") (d #t) (k 2) (p "winter-rand-utils")) (d (n "tracing") (r "^0.1") (k 0)) (d (n "utils") (r "^0.8") (k 0) (p "winter-utils")))) (h "1pryi6vw8078ry4dqaglnfmsw065a01ylmh1b0jrcq6zhzs1w30p") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std")))) (r "1.75")))

(define-public crate-winter-prover-0.9.0 (c (n "winter-prover") (v "0.9.0") (d (list (d (n "air") (r "^0.9") (k 0) (p "winter-air")) (d (n "async-trait") (r "^0.1.80") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto") (r "^0.9") (k 0) (p "winter-crypto")) (d (n "fri") (r "^0.9") (k 0) (p "winter-fri")) (d (n "math") (r "^0.9") (k 0) (p "winter-math")) (d (n "maybe_async") (r "^0.9") (d #t) (k 0) (p "winter-maybe-async")) (d (n "rand-utils") (r "^0.9") (d #t) (k 2) (p "winter-rand-utils")) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "utils") (r "^0.9") (k 0) (p "winter-utils")))) (h "1pv8fk1s2h990lp66605b9bl2y14ds814kzd067gal3hx6x3szpi") (f (quote (("std" "air/std" "crypto/std" "fri/std" "math/std" "utils/std") ("default" "std") ("concurrent" "crypto/concurrent" "math/concurrent" "fri/concurrent" "utils/concurrent" "std") ("async" "async-trait" "maybe_async/async")))) (r "1.78")))

