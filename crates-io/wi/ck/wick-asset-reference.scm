(define-module (crates-io wi ck wick-asset-reference) #:use-module (crates-io))

(define-public crate-wick-asset-reference-0.3.0 (c (n "wick-asset-reference") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asset-container") (r "^0.2.0") (d #t) (k 0)) (d (n "asset-container") (r "^0.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "normpath") (r "^1.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "test-logger") (r "^0.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wick-logger") (r "^0.2.0") (d #t) (k 2)) (d (n "wick-oci-utils") (r "^0.3.0") (d #t) (k 0)))) (h "0kzcdr6gma6g2j4203lpvlrlx6cafjmgn3xgzssyrcgvd48jdh8r")))

(define-public crate-wick-asset-reference-0.4.0 (c (n "wick-asset-reference") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "asset-container") (r "^0.3.0") (d #t) (k 0)) (d (n "asset-container") (r "^0.3.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "normpath") (r "^1.1") (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pretty_assertions") (r "^1.3") (f (quote ("std"))) (k 2)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "test-logger") (r "^0.2.0") (d #t) (k 2) (p "wick-test-logger")) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wick-logger") (r "^0.3.0") (d #t) (k 2)) (d (n "wick-oci-utils") (r "^0.4.0") (k 0)))) (h "1k9sdp9wf1iirhikpg9bva64qb7xw9l4z7hqf5sw888z65j80vv4")))

(define-public crate-wick-asset-reference-0.5.0 (c (n "wick-asset-reference") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "asset-container") (r "^0.4.0") (d #t) (k 0)) (d (n "asset-container") (r "^0.4.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "normpath") (r "^1.1") (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pretty_assertions") (r "^1.3") (f (quote ("std"))) (k 2)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "test-logger") (r "^0.2.0") (d #t) (k 2) (p "wick-test-logger")) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("sync"))) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wick-logger") (r "^0.4.0") (d #t) (k 2)) (d (n "wick-oci-utils") (r "^0.5.0") (k 0)))) (h "1z6z1v6vb9gv8y0ivv30hmgl9w7sb3rqwy8125y118anwh7hajd5")))

