(define-module (crates-io wi ck wick-stdlib) #:use-module (crates-io))

(define-public crate-wick-stdlib-0.1.0 (c (n "wick-stdlib") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "flow-component") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "seeded-random") (r "^0.3.0") (d #t) (k 0)) (d (n "test-logger") (r "^0.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wick-interface-types") (r "^0.15.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "wick-logger") (r "^0.2.0") (d #t) (k 2)) (d (n "wick-packet") (r "^0.15.0") (d #t) (k 0)) (d (n "wick-rpc") (r "^0.1.0") (d #t) (k 0)))) (h "173kci0qiai93jhlrwa4z6yv067splpd6sh48lnnkccvw5wba6gk")))

(define-public crate-wick-stdlib-0.2.0 (c (n "wick-stdlib") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "flow-component") (r "^0.6.0") (f (quote ("invocation"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 2)) (d (n "seeded-random") (r "^0.5.0") (f (quote ("uuid"))) (k 0)) (d (n "test-logger") (r "^0.2.0") (d #t) (k 2) (p "wick-test-logger")) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wick-interface-types") (r "^0.16.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "wick-logger") (r "^0.3.0") (d #t) (k 2)) (d (n "wick-packet") (r "^0.16.0") (k 0)) (d (n "wick-rpc") (r "^0.2.0") (k 0)))) (h "0rfk2mly49xbvldyqzac333lfni4d8l436608bi6qlmamm9jfdwb")))

