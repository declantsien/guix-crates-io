(define-module (crates-io wi ld wildland-http-client) #:use-module (crates-io))

(define-public crate-wildland-http-client-0.40.0-rc.0 (c (n "wildland-http-client") (v "0.40.0-rc.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "wildland-crypto") (r "^0.40.0-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "bindgen") (r "^0.63") (d #t) (k 1)) (d (n "build-target") (r "^0.4") (d #t) (k 1)) (d (n "minreq") (r "^2.6") (f (quote ("json-using-serde" "https-rustls"))) (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)))) (h "1cfcgnvrbf0di084d62hzydmv4ppaczx88vjq2vmkavr694gjy90")))

(define-public crate-wildland-http-client-0.40.0 (c (n "wildland-http-client") (v "0.40.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "wildland-crypto") (r "^0.40.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "bindgen") (r "^0.63") (d #t) (k 1)) (d (n "build-target") (r "^0.4") (d #t) (k 1)) (d (n "minreq") (r "^2.6") (f (quote ("json-using-serde" "https-rustls"))) (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)))) (h "1qcmhcbkb8jyi4cf44nph7sacszm4b887n3mzxsirgkhmi4gkzss")))

