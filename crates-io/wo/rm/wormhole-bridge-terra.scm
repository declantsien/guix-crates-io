(define-module (crates-io wo rm wormhole-bridge-terra) #:use-module (crates-io))

(define-public crate-wormhole-bridge-terra-0.1.0 (c (n "wormhole-bridge-terra") (v "0.1.0") (d (list (d (n "cosmwasm-std") (r "^0.16.0") (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^0.16.0") (d #t) (k 0)) (d (n "cw20") (r "^0.8.0") (d #t) (k 0)) (d (n "cw20-base") (r "^0.8.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "cw20-wrapped") (r "^0.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.9.4") (f (quote ("ecdsa"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0iadlj78arr9xmbrwvawczxcfa70q01a9fr860rxgn2qzazkm9xl") (f (quote (("library") ("backtraces" "cosmwasm-std/backtraces"))))))

