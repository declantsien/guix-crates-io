(define-module (crates-io wo rm wormhole-vaas-serde) #:use-module (crates-io))

(define-public crate-wormhole-vaas-serde-0.0.0-alpha.1 (c (n "wormhole-vaas-serde") (v "0.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_wormhole") (r "^0.0.0-alpha.1") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wormhole-supported-chains") (r "^0.0.0-alpha.1") (d #t) (k 0)))) (h "1x3q6r9pl19vnp67hfgn51fi4bnp2w1iiy5bb9kjy7al33a0gkqm") (f (quote (("default" "schemars")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-wormhole-vaas-serde-0.1.0 (c (n "wormhole-vaas-serde") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_wormhole") (r "^0.1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wormhole-supported-chains") (r "^0.1.0") (d #t) (k 0)))) (h "1lwfav6bvvfhd0425fxvxks5v6w4kqanvfwpa33fqrnw6rhml314") (f (quote (("default" "schemars")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

