(define-module (crates-io wo rd wordfeud-solver) #:use-module (crates-io))

(define-public crate-wordfeud-solver-0.1.0 (c (n "wordfeud-solver") (v "0.1.0") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "bincode") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bitintr") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "rayon") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tinyvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "0ypzdfvf3qwck40wgl0111c6fpfwf97s6azxfv542kh0bm8qa2bd") (f (quote (("default")))) (y #t)))

(define-public crate-wordfeud-solver-0.1.1 (c (n "wordfeud-solver") (v "0.1.1") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "bincode") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bitintr") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "rayon") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tinyvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "0gjjyh51bnls8q7dmnz50mm3xxcvkgrbyp2my5gwv9x22f2hhlns") (f (quote (("default"))))))

(define-public crate-wordfeud-solver-0.2.2 (c (n "wordfeud-solver") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bitintr") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.0") (d #t) (k 0)))) (h "1yzi7h080vy8684n8mfkjcqsficxy0di8qdjf6l969g88jj57dp6") (f (quote (("default"))))))

(define-public crate-wordfeud-solver-0.3.1 (c (n "wordfeud-solver") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bitintr") (r "^0.3") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "bitintr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "multiset") (r "^0.0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.0") (d #t) (k 0)))) (h "0p1igd7nlas8aw012zhlbr42h2nsqasrnzmxhcwdyn3nwbsrz27s") (f (quote (("default" "rayon"))))))

