(define-module (crates-io wo rk workflow-rpc) #:use-module (crates-io))

(define-public crate-workflow-rpc-0.0.0 (c (n "workflow-rpc") (v "0.0.0") (h "1yhnv80f3jif4gy035vlbwr9vi3aay73z83d7gq2ijqmk2yfvjx7")))

(define-public crate-workflow-rpc-0.1.0 (c (n "workflow-rpc") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("io-util" "time" "sync" "macros" "rt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.17.3") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (k 0)) (d (n "workflow-core") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.1.0") (d #t) (k 0)))) (h "0il6ij15kmgadhi4yqdd5r2vi5wsbqg9w2w7qawxzp315kw371js")))

(define-public crate-workflow-rpc-0.1.1 (c (n "workflow-rpc") (v "0.1.1") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("io-util" "time" "sync" "macros" "rt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.17.3") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (k 0)) (d (n "workflow-core") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.1.1") (d #t) (k 0)))) (h "0m8x1xl2ad5f762byrvp0dgfxam8dm0pflriykmw8w92lk628ghs")))

(define-public crate-workflow-rpc-0.1.2 (c (n "workflow-rpc") (v "0.1.2") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("io-util" "time" "sync" "macros" "rt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.17.3") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (k 0)) (d (n "workflow-core") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.1.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.1.2") (d #t) (k 0)))) (h "1rvyjh9si66dlfywm3i21rbq6pf0n10ja5nvchryl2gvf1il80s9")))

(define-public crate-workflow-rpc-0.3.2 (c (n "workflow-rpc") (v "0.3.2") (d (list (d (n "ahash") (r "^0.8.2") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.61") (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.2") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.2") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.2") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.2") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.2") (d #t) (k 0)))) (h "1idbr9ib924pixz3wns5ry85a9bqr95fsq55hznda8555gc2cclm")))

(define-public crate-workflow-rpc-0.3.6 (c (n "workflow-rpc") (v "0.3.6") (d (list (d (n "ahash") (r "^0.8.2") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.61") (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.6") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.6") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.6") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.6") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.6") (d #t) (k 0)))) (h "0r8hphijlc3biry6bvqvns89p78mcvp5282py753dbg23bll5gyx")))

(define-public crate-workflow-rpc-0.3.7 (c (n "workflow-rpc") (v "0.3.7") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.7") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.7") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.7") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.7") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.7") (d #t) (k 0)))) (h "0x34n7z3jk0vzgv4xlpw19dzsb9k817ppvzjndpwwr2m6b1c0kz5")))

(define-public crate-workflow-rpc-0.3.10 (c (n "workflow-rpc") (v "0.3.10") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.10") (d #t) (k 0)))) (h "06s0pgmzbl15xscb7armc44gx9nyi2j2kmnnj0rxaag01yjb3yjl")))

(define-public crate-workflow-rpc-0.3.11 (c (n "workflow-rpc") (v "0.3.11") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.10") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.10") (d #t) (k 0)))) (h "12pnhzkii49mv6qsvxxf7ck5bpnc6jb0fd81rs4pqmm7pv94lvyg")))

(define-public crate-workflow-rpc-0.3.12 (c (n "workflow-rpc") (v "0.3.12") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.12") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.12") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.12") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.12") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.12") (d #t) (k 0)))) (h "0vbpcap6ggn627x9qd263dnkxzw6labnsb3np8s1zzc5nk5j3j5f")))

(define-public crate-workflow-rpc-0.3.14 (c (n "workflow-rpc") (v "0.3.14") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.14") (d #t) (k 0)))) (h "0djxr3nis8fza6vnr2xrq1akqqhypbngcyz0yiaqy81kdkjrs0q9") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.3.15 (c (n "workflow-rpc") (v "0.3.15") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.15") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.15") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.15") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.15") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.15") (d #t) (k 0)))) (h "1jrfqh1m9bv0wzp9bjianrw4kvfvspki481agrwy5s83d71fq501") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.3.16 (c (n "workflow-rpc") (v "0.3.16") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.16") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.16") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.16") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.16") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.16") (d #t) (k 0)))) (h "062kfm4ixaz7r3jk4jfi5axwzljf3smi4883b8san9b2nwhcdhyr") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.3.17 (c (n "workflow-rpc") (v "0.3.17") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.18.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.17") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.17") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.3.17") (d #t) (k 0)) (d (n "workflow-task") (r "^0.3.17") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.17") (d #t) (k 0)))) (h "05j4vzg2gbgv7h48kiff76s4pski6bbnmyvfp1jfqw2kbh39d81x") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.4.0 (c (n "workflow-rpc") (v "0.4.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.19.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.4.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.4.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.4.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.4.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.4.0") (d #t) (k 0)))) (h "1a3sr420qh15ri2rskx39jlihr3zca4i0v45xapwdyzgp6bfs668") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.5.0 (c (n "workflow-rpc") (v "0.5.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.19.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.5.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.5.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.5.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.0") (d #t) (k 0)))) (h "0n2qh7yri7vwdj60abkrkadnr0fx5asqdfgly4c4qh9mh2gj74ng") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.5.3 (c (n "workflow-rpc") (v "0.5.3") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.19.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.5.3") (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.3") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.5.3") (d #t) (k 0)) (d (n "workflow-task") (r "^0.5.3") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.3") (d #t) (k 0)))) (h "13nx23cmfml2a7f0vk8c0hg4mfb55a0j2iknccym19wmsa43rwja") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.5.4 (c (n "workflow-rpc") (v "0.5.4") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.5.4") (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.4") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.5.4") (d #t) (k 0)) (d (n "workflow-task") (r "^0.5.4") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.4") (d #t) (k 0)))) (h "1lx66qdbxf4fgax4vbv6jbmbcyykk1gc1jv4c051r6xybn2awq3c") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.6.0 (c (n "workflow-rpc") (v "0.6.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.6.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.6.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.6.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.6.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.6.0") (d #t) (k 0)))) (h "08kwmzbx4nba7zazq0s839bhym91lcig61jyw5li7kva7k17xjzc") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.7.0 (c (n "workflow-rpc") (v "0.7.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.7.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.7.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.7.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.7.0") (d #t) (k 0)))) (h "0ydd3v9xf9yz42vd00jq3hf8x08l25rbgsz6ifjnv11hy3bcl9x1") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.8.0 (c (n "workflow-rpc") (v "0.8.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.8.0") (d #t) (k 0)))) (h "0j3nx7jgxk69cq3mpyii3svj21j3bga3sd8zmxw2y79rnwc7dsbf") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.8.1 (c (n "workflow-rpc") (v "0.8.1") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.1") (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.1") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.8.1") (d #t) (k 0)) (d (n "workflow-task") (r "^0.8.1") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.8.1") (d #t) (k 0)))) (h "1qjy2854p9bxzia50ri3px7z7dl4r24gjnx3mw9g2pkf31m454kz") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.10.0 (c (n "workflow-rpc") (v "0.10.0") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.10.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.0") (d #t) (k 0)))) (h "1b44z092m81yh4m4bxw0cnyh8mgs6iizm6dplfcy244b7r0nh9l2") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.10.1 (c (n "workflow-rpc") (v "0.10.1") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.1") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.1") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.10.1") (d #t) (k 0)) (d (n "workflow-task") (r "^0.10.1") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.1") (d #t) (k 0)))) (h "1yf82d8s204jl5ha60b8ds1lkhbsamjj1b1k7c407fq0nyvdv2sb") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.10.2 (c (n "workflow-rpc") (v "0.10.2") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.2") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.2") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.10.2") (d #t) (k 0)) (d (n "workflow-task") (r "^0.10.2") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.2") (d #t) (k 0)))) (h "0bkd5b7cfvf1ss3wfzan6b270zqjw9fmbp3ad8xbsziydq7cqd0m") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.10.3 (c (n "workflow-rpc") (v "0.10.3") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-task") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.3") (d #t) (k 0)))) (h "07nfs7hmx9n7l880q4k06c4zpm1j9kj55dkv27wjn52fsrvldgr4") (f (quote (("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("no-unsafe-eval" "workflow-websocket/no-unsafe-eval") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.11.0 (c (n "workflow-rpc") (v "0.11.0") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.21.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)) (d (n "workflow-core") (r "^0.11.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.11.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.11.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.11.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.11.0") (d #t) (k 0)))) (h "0kif75k61x0n1cniqa9khyl0av7b3q3cmp58mrdai9fidlxz3fk9") (f (quote (("wasm32-sdk" "workflow-websocket/wasm32-sdk") ("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.11.1 (c (n "workflow-rpc") (v "0.11.1") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.21.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)) (d (n "workflow-core") (r "^0.11.1") (d #t) (k 0)) (d (n "workflow-log") (r "^0.11.1") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.11.1") (d #t) (k 0)) (d (n "workflow-task") (r "^0.11.1") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.11.1") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.11.1") (d #t) (k 0)))) (h "13y38zg5g1hj9kri283y8zz5z77nags0fbc4n1fgmsqzzp910acj") (f (quote (("wasm32-sdk" "workflow-websocket/wasm32-sdk") ("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.12.0 (c (n "workflow-rpc") (v "0.12.0") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.21.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)) (d (n "workflow-core") (r "^0.12.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.12.0") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.12.0") (d #t) (k 0)) (d (n "workflow-task") (r "^0.12.0") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.12.0") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.12.0") (d #t) (k 0)))) (h "0dyh19qrjpczwcfdwa2xvg10k3hb6nxzjad517hb5wq5algwl5wh") (f (quote (("wasm32-sdk" "workflow-websocket/wasm32-sdk") ("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

(define-public crate-workflow-rpc-0.12.1 (c (n "workflow-rpc") (v "0.12.1") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("sink" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("io-util" "time" "sync" "macros" "rt" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.21.0") (f (quote ("handshake"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)) (d (n "workflow-core") (r "^0.12.1") (d #t) (k 0)) (d (n "workflow-log") (r "^0.12.1") (d #t) (k 0)) (d (n "workflow-rpc-macros") (r "^0.12.1") (d #t) (k 0)) (d (n "workflow-task") (r "^0.12.1") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.12.1") (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.12.1") (d #t) (k 0)))) (h "0ibpvkb7mkj07yl4wj0ajypwdkw38r65r0rdfpy0613xsax4yy0l") (f (quote (("wasm32-sdk" "workflow-websocket/wasm32-sdk") ("rustls-tls-webpki-roots" "workflow-websocket/rustls-tls-webpki-roots") ("rustls-tls-native-roots" "workflow-websocket/rustls-tls-native-roots") ("native-tls-vendored" "workflow-websocket/native-tls-vendored") ("native-tls" "workflow-websocket/native-tls") ("default" "native-tls"))))))

