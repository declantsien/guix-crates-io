(define-module (crates-io wo rk workflow-rs) #:use-module (crates-io))

(define-public crate-workflow-rs-0.0.0 (c (n "workflow-rs") (v "0.0.0") (h "0rk9lxzz265rmzab8fiyjrma82j8nfy24k80m98d42ajgirikq4p")))

(define-public crate-workflow-rs-0.3.2 (c (n "workflow-rs") (v "0.3.2") (d (list (d (n "workflow-core") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1icmj5rk6lhfv9l3xvmasn2kixm0k7w9q8cmvry6jx7xi5n9vwr1") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.6 (c (n "workflow-rs") (v "0.3.6") (d (list (d (n "workflow-core") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.6") (o #t) (d #t) (k 0)))) (h "1kg0yx100nv22ym05vbr2blc6x8ryh0m780mj8dyra8mcrdq9pxg") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.7 (c (n "workflow-rs") (v "0.3.7") (d (list (d (n "workflow-core") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.7") (o #t) (d #t) (k 0)))) (h "0av3x7vrj3wvdcxrll4kbvzgjnsvqb8png4ayb5n7x1hy70h571j") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.10 (c (n "workflow-rs") (v "0.3.10") (d (list (d (n "workflow-core") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.10") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.10") (o #t) (d #t) (k 0)))) (h "0bzqc37227i00f175qd0mjpp725biz6a3m78j8y5gy495i6h833h") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.12 (c (n "workflow-rs") (v "0.3.12") (d (list (d (n "workflow-core") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.12") (o #t) (d #t) (k 0)))) (h "0jkxc93yyy569zmx10fd9rsjxrmawd3k5frknzg73swklh4gcvx1") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.14 (c (n "workflow-rs") (v "0.3.14") (d (list (d (n "workflow-core") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.14") (o #t) (d #t) (k 0)))) (h "0rvhr66f9k54la59ws3vvw7ld325z9lfbgniff31z7wazlps7zjx") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.15 (c (n "workflow-rs") (v "0.3.15") (d (list (d (n "workflow-core") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.15") (o #t) (d #t) (k 0)))) (h "1k8b0mfndgn41vkbalqy7qni5mbxindci9j0ydlcxwvz7smmy12q") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.16 (c (n "workflow-rs") (v "0.3.16") (d (list (d (n "workflow-core") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "05vhms45n8by56m4pskb6pw32zqjah8m29y59diwhkiiyl05sldy") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.3.17 (c (n "workflow-rs") (v "0.3.17") (d (list (d (n "workflow-core") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0zc5m552pc7qk1pdqsclfb6gdmxr14hjpags0h51m38v9sf4q0g6") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.4.0 (c (n "workflow-rs") (v "0.4.0") (d (list (d (n "workflow-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1bgkav2rk1152r54zc5kim8cqn26mvf8ybzsylwfh8wlh5aszjbv") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.5.0 (c (n "workflow-rs") (v "0.5.0") (d (list (d (n "workflow-core") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "1vjpa0ggw3kbkgx9f36yfwv2d3ln68ijadyi91y8cbpysj5ak77n") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.5.3 (c (n "workflow-rs") (v "0.5.3") (d (list (d (n "workflow-core") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "15v8ja8cypx1hd3ykid42svzd922cvz43mm6p6g0afbas0xpqcqj") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.5.4 (c (n "workflow-rs") (v "0.5.4") (d (list (d (n "workflow-core") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.5.4") (o #t) (d #t) (k 0)))) (h "0aqf03jhxj8p4r2iq69ml0s6nldsk6mh6ssvp62c0nn3a6bi4iqc") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.6.0 (c (n "workflow-rs") (v "0.6.0") (d (list (d (n "workflow-core") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "0vm19cy6wa70598wk2ssc12kxz6alck8yfkganlxzvdx5bzaqcc2") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.7.0 (c (n "workflow-rs") (v "0.7.0") (d (list (d (n "workflow-core") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "0hv5c21h2ap5gy56182gmmzlvjvlxn3pwzi8kvbh3a8070x9flbc") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.8.0 (c (n "workflow-rs") (v "0.8.0") (d (list (d (n "workflow-core") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "138qy98b6rwimzbammbsjk2nz7za0i6axy4099gfzj92aslbr5nn") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.8.1 (c (n "workflow-rs") (v "0.8.1") (d (list (d (n "workflow-core") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0w0a0cmad1ldv7jqa8a7rp5aq63954w0w10h0q9vgw7mg53cz0nq") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.10.0 (c (n "workflow-rs") (v "0.10.0") (d (list (d (n "workflow-core") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "0acyrij4cgvaibbr1fhsy12n34n6wbxay06nnfbfb6hdwikm139s") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.10.1 (c (n "workflow-rs") (v "0.10.1") (d (list (d (n "workflow-core") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.1") (o #t) (d #t) (k 0)))) (h "03q3ryz93q3qcc2czf6j7bknv11xjy4s3gd4lz1186arkc1icw6s") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.10.2 (c (n "workflow-rs") (v "0.10.2") (d (list (d (n "workflow-core") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "142r8c5v2fmpk9k0p2f1bnk50h39pf01j498j3ywpawybhb9k6g9") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.10.3 (c (n "workflow-rs") (v "0.10.3") (d (list (d (n "workflow-core") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.10.3") (o #t) (d #t) (k 0)))) (h "1kmhr67yq9jr9jl841nxyw4y1rpkmy7z9512yvd82hcbiwn3vfjh") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.11.0 (c (n "workflow-rs") (v "0.11.0") (d (list (d (n "workflow-core") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.11.0") (o #t) (d #t) (k 0)))) (h "1f5j00nb8lahhgj6hlk365s334hr5wbk5l09xcif2jffncnrsgpd") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.11.1 (c (n "workflow-rs") (v "0.11.1") (d (list (d (n "workflow-core") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.11.1") (o #t) (d #t) (k 0)))) (h "0388bvqpm4dw2f9z8aafl1sy6kgqpjq4lw2l320jx9hhvgz6mffc") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.12.0 (c (n "workflow-rs") (v "0.12.0") (d (list (d (n "workflow-core") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.12.0") (o #t) (d #t) (k 0)))) (h "069r399m7q370jwx6qjf2hj24x1qkhz89dqv0jzzi51b3m9hapzv") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

(define-public crate-workflow-rs-0.12.1 (c (n "workflow-rs") (v "0.12.1") (d (list (d (n "workflow-core") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-dom") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-html") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-i18n") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-log") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-node") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-nw") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-panic-hook") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-store") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-terminal") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "workflow-websocket") (r "^0.12.1") (o #t) (d #t) (k 0)))) (h "057rw3ajxyxjkszy0hxpd6sxmqfgan5ficp3lbbz3p980q8f822d") (f (quote (("full" "log" "core" "websocket" "rpc" "html" "i18n" "wasm" "terminal" "dom" "store") ("default" "log" "core")))) (s 2) (e (quote (("websocket" "dep:workflow-websocket") ("wasm" "dep:workflow-wasm") ("terminal" "dep:workflow-terminal") ("store" "dep:workflow-store") ("rpc" "dep:workflow-rpc") ("panic-hook" "dep:workflow-panic-hook") ("nw" "dep:workflow-nw") ("node" "dep:workflow-node") ("log" "dep:workflow-log") ("i18n" "dep:workflow-i18n") ("html" "dep:workflow-html") ("dom" "dep:workflow-dom") ("core" "dep:workflow-core"))))))

