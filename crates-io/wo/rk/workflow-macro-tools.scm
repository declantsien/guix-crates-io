(define-module (crates-io wo rk workflow-macro-tools) #:use-module (crates-io))

(define-public crate-workflow-macro-tools-0.1.0 (c (n "workflow-macro-tools") (v "0.1.0") (d (list (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.37") (d #t) (k 0)) (d (n "quote") (r "^1.0.8") (d #t) (k 0)) (d (n "syn") (r "^1.0.91") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1csddipgl3fgl2lir5mbm59ay1ham34bpr9yniq891ac9pnglfz3")))

(define-public crate-workflow-macro-tools-0.3.0 (c (n "workflow-macro-tools") (v "0.3.0") (d (list (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.43") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0iy7lw45y4pmnf9bsxrdsgdq45j6bcpx4ygik5q4zr3sg2yk584d")))

(define-public crate-workflow-macro-tools-0.3.1 (c (n "workflow-macro-tools") (v "0.3.1") (d (list (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.43") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "09bw7mg97bjc900k88jpqdzr9xa305nw4lkypbp8l9m0wcl67895")))

(define-public crate-workflow-macro-tools-0.3.2 (c (n "workflow-macro-tools") (v "0.3.2") (d (list (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.43") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "15c29whdx7qfpqhdizzskly2v950iv1wixbhgswf9lyf5kib0550")))

(define-public crate-workflow-macro-tools-0.3.6 (c (n "workflow-macro-tools") (v "0.3.6") (d (list (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.43") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0yngrqpn1x3wr39hwd829cmrw75mgcjgwdinkdwr1l1vbi6qpplz")))

(define-public crate-workflow-macro-tools-0.3.7 (c (n "workflow-macro-tools") (v "0.3.7") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0ii9m42x5jsdn4vlinwkpb3scya92gr42pdb3y5d2m66q64w5kr2")))

(define-public crate-workflow-macro-tools-0.3.10 (c (n "workflow-macro-tools") (v "0.3.10") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1rv337flf49v1c3sgr4gmxawzmii899ls4jdmyf71iw583v3ssi4")))

(define-public crate-workflow-macro-tools-0.3.12 (c (n "workflow-macro-tools") (v "0.3.12") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0z3qbhss6qdfqm50m56jxhc04f5js8cicgc34h0ngj9xkjjf635m")))

(define-public crate-workflow-macro-tools-0.3.14 (c (n "workflow-macro-tools") (v "0.3.14") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0hg0cfclvc8vds21892jgwxhql57s3qgm2hc3zgfj23xa9hn9kwg")))

(define-public crate-workflow-macro-tools-0.3.15 (c (n "workflow-macro-tools") (v "0.3.15") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0vpa6xa8wfxn7y0rg8bangk1dhsfjz0zffg7swzngfyl344d4j2x")))

(define-public crate-workflow-macro-tools-0.3.16 (c (n "workflow-macro-tools") (v "0.3.16") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0z801llshcc4wlmapbcfsbwrlxpyip6x1mgqjkcj9pnsvbyx8fxz")))

(define-public crate-workflow-macro-tools-0.3.17 (c (n "workflow-macro-tools") (v "0.3.17") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "05sif4bwb4mzczzszpd8xkb5f9prvdv2nvvcy7ilnj6nvx9d4ksp")))

(define-public crate-workflow-macro-tools-0.4.0 (c (n "workflow-macro-tools") (v "0.4.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0fpsllysgdc8fk00g0iygqgxpfnrd6klygnrmy0j03i24xz837di")))

(define-public crate-workflow-macro-tools-0.5.0 (c (n "workflow-macro-tools") (v "0.5.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0hmjigbrhaash7qxmjb1zj0265fdlwfhfcl9i4a8k4bhn2dd8s5b")))

(define-public crate-workflow-macro-tools-0.5.3 (c (n "workflow-macro-tools") (v "0.5.3") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1zgp5p8anmjj7ikz7676k2bwj54sp3rlmgs45b26qr7llqfkm9ss")))

(define-public crate-workflow-macro-tools-0.5.4 (c (n "workflow-macro-tools") (v "0.5.4") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "187p6r27rqwzcyk7xjckyigds4jnhngbvnq18bjyysa3kddm3y37")))

(define-public crate-workflow-macro-tools-0.6.0 (c (n "workflow-macro-tools") (v "0.6.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1vym8g5fdwqa8p47vw90rljagxmxfj3ggd40nilg1050sjxfmwa0")))

(define-public crate-workflow-macro-tools-0.7.0 (c (n "workflow-macro-tools") (v "0.7.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "00v47r942fqa3bpk79r4yf471vqphhy48akbvbp10rlngyab4sn5")))

(define-public crate-workflow-macro-tools-0.8.0 (c (n "workflow-macro-tools") (v "0.8.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1dc3pjhx7y0rbkpnm9hf1pdzzzsac5bnn4y177g32dh8n26wx6jy")))

(define-public crate-workflow-macro-tools-0.8.1 (c (n "workflow-macro-tools") (v "0.8.1") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0f64kzyqqxsccf4v948wm3vzc5q140f64yhkyfnh01lhw73clgsm")))

(define-public crate-workflow-macro-tools-0.10.0 (c (n "workflow-macro-tools") (v "0.10.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "0yxyxy5fs2rshib95pah7rmicqs4vxw3zfw4z8rfbdlxa81hxrm9")))

(define-public crate-workflow-macro-tools-0.10.1 (c (n "workflow-macro-tools") (v "0.10.1") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "08772xydar4f2mphvws7n7v2gr11gx9cqz901bmf95n7bpvag99g")))

(define-public crate-workflow-macro-tools-0.10.2 (c (n "workflow-macro-tools") (v "0.10.2") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1gff3lxyq4b6mar0v2q60sfridibbrnqizz4k7n5xzcznmw3anjb")))

(define-public crate-workflow-macro-tools-0.10.3 (c (n "workflow-macro-tools") (v "0.10.3") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "15y93l65r40s6qfbm1v5f47f16wlnc6m6hpjc87vkil8fm0cjrpj")))

(define-public crate-workflow-macro-tools-0.11.0 (c (n "workflow-macro-tools") (v "0.11.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1j7ffdsvs3sx42qwjn5gmrh7pfxxxcc5qb407pip65yh1d47nwf8")))

(define-public crate-workflow-macro-tools-0.11.1 (c (n "workflow-macro-tools") (v "0.11.1") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "15qbvdhp7cq7q7wpgpablg7k4ygflkzm03382j30h90i1yibqxlp")))

(define-public crate-workflow-macro-tools-0.12.0 (c (n "workflow-macro-tools") (v "0.12.0") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "1fy199fm8ccf98cg1gbp2ic1z3gmgbkmh1y20jrikkawmsm63gkq")))

(define-public crate-workflow-macro-tools-0.12.1 (c (n "workflow-macro-tools") (v "0.12.1") (d (list (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "parse-variants") (r "^1.0.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.50") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "fold" "extra-traits" "parsing" "proc-macro"))) (d #t) (k 0)))) (h "07r0p8rpyydp1lvrgnfk4njngq43yn67n1gl9pwhryjii65sza7m")))

