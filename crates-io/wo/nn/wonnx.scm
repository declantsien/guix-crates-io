(define-module (crates-io wo nn wonnx) #:use-module (crates-io))

(define-public crate-wonnx-0.1.0 (c (n "wonnx") (v "0.1.0") (h "1ikndj7avy31c9hbrsjfgn14804nal261wajh8xcdc5iwjwv6znn")))

(define-public crate-wonnx-0.2.0 (c (n "wonnx") (v "0.2.0") (d (list (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "pollster") (r "^0.2.4") (d #t) (k 0)) (d (n "protobuf") (r "^2") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10.2") (d #t) (k 0)))) (h "1c2asw04l1n71f64m12w4v42psc5kpsg9lyb6cb5i3rz73c0x48z")))

(define-public crate-wonnx-0.2.1 (c (n "wonnx") (v "0.2.1") (d (list (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "aquamarine") (r "^0.1.10") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "pollster") (r "^0.2.4") (d #t) (k 0)) (d (n "protobuf") (r "^2") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.68") (d #t) (k 0)) (d (n "tera") (r "^1.12.1") (d #t) (k 0)) (d (n "ureq") (r "^2.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.11.0") (d #t) (k 0)))) (h "14jqm0halkl01fryhg2fqkvd99wwvvdvpmrnjdlpsiq2hzp01gw9")))

(define-public crate-wonnx-0.2.3 (c (n "wonnx") (v "0.2.3") (d (list (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "image") (r "^0.23.14") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "pollster") (r "^0.2.4") (d #t) (k 0)) (d (n "protobuf") (r "^2") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (d #t) (k 0)) (d (n "ureq") (r "^2.3.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.55") (f (quote ("Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuBufferUsage" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuColorWrite" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyTexture" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "GpuMapMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPipelineStatisticName" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuShaderStage" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureUsage" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.11.1") (d #t) (k 0)))) (h "1w7q3lwdq4ygw55w9avvw3czphm1i915k90cspm4bp49gn1wi900")))

(define-public crate-wonnx-0.2.4 (c (n "wonnx") (v "0.2.4") (d (list (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "image") (r "^0.23.14") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "pollster") (r "^0.2.4") (d #t) (k 0)) (d (n "protobuf") (r "^2") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.133") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "ureq") (r "^2.3.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.55") (f (quote ("Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuBufferUsage" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuColorWrite" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyTexture" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "GpuMapMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPipelineStatisticName" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuShaderStage" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureUsage" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.12.0") (d #t) (k 0)))) (h "1ab4z5qmc4gxp964nmr6dk9i8njby89mdbcfqpbizczvnwh8vl5l")))

(define-public crate-wonnx-0.2.5 (c (n "wonnx") (v "0.2.5") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytemuck") (r "^1.9.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "protobuf") (r "^2.27.1") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wgpu") (r "^0.13.1") (d #t) (k 0)))) (h "0qjh6jp2nrqjxyy9r5bsznszhy4gml4n4j1crafdldha8y1z1qry") (y #t)))

(define-public crate-wonnx-0.3.0 (c (n "wonnx") (v "0.3.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytemuck") (r "^1.9.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "protobuf") (r "^2.27.1") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wgpu") (r "^0.13.1") (d #t) (k 0)))) (h "06mwljbb9rylcg3c94sb77kgzaiigdvjpbi6bcr9yxm8i12v57a2")))

(define-public crate-wonnx-0.4.0 (c (n "wonnx") (v "0.4.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytemuck") (r "^1.9.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "protobuf") (r "^2.27.1") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (d #t) (k 0)))) (h "0s339624y6jklbir5mgxwcwqr91v21cmxbg1mwvksw1dqj5xh87d")))

(define-public crate-wonnx-0.5.0 (c (n "wonnx") (v "0.5.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.27.1") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "1mkb1kc9ws7j166vf2z06mrcgizhfyljgf9mfq85s6dpcc4pkvx0")))

(define-public crate-wonnx-0.5.1 (c (n "wonnx") (v "0.5.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.27.1") (f (quote ("with-bytes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "tera") (r "^1.15.0") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "1qcyycr8hnlqyxw9drzix6k33gzzwwm8fpss7kkghinrnzwcygpp")))

