(define-module (crates-io wo lf wolfengine) #:use-module (crates-io))

(define-public crate-wolfengine-3.0.0 (c (n "wolfengine") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-raft") (r "^0.6.1") (k 0)) (d (n "async-trait") (r "^0.1.52") (k 0)) (d (n "futures") (r "^0.3.21") (k 0)) (d (n "hyper") (r "^0.14.18") (k 0)) (d (n "lazy_static") (r "^1.4.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (k 2)) (d (n "may") (r "^0.3.20") (k 0)) (d (n "memstore") (r "^0.2.0") (k 0)) (d (n "mimalloc") (r "^0.1.28") (f (quote ("secure"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("deadlock_detection"))) (k 0)) (d (n "prost") (r "^0.9.0") (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (k 0)) (d (n "scylla") (r "^0.4.3") (f (quote ("ssl"))) (k 0)) (d (n "serde") (r "^1.0.136") (k 2)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "sysinfo") (r "^0.23.5") (f (quote ("multithread"))) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (k 0)) (d (n "tokio-rustls") (r "^0.23.3") (f (quote ("logging" "tls12"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("connect" "rustls"))) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("codegen" "prost" "tls" "compression"))) (k 0)) (d (n "tracing") (r "^0.1.32") (f (quote ("std" "attributes"))) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v5"))) (k 0)) (d (n "webpki-roots") (r "^0.22.2") (k 0)))) (h "0j32bajxskcd58ldpy7zd5891bmh8gig6lzn36pp2n57p89m3n29") (f (quote (("system") ("stream") ("render") ("lua") ("default"))))))

(define-public crate-wolfengine-3.0.1 (c (n "wolfengine") (v "3.0.1") (d (list (d (n "anyhow") (r "^1.0.56") (f (quote ("std"))) (k 0)) (d (n "async-raft") (r "^0.6.1") (k 0)) (d (n "async-trait") (r "^0.1.52") (k 0)) (d (n "futures") (r "^0.3.21") (k 0)) (d (n "hyper") (r "^0.14.18") (k 0)) (d (n "lazy_static") (r "^1.4.0") (k 2)) (d (n "may") (r "^0.3.20") (k 0)) (d (n "memstore") (r "^0.2.0") (k 0)) (d (n "mimalloc") (r "^0.1.28") (f (quote ("secure"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("deadlock_detection"))) (k 0)) (d (n "prost") (r "^0.9.0") (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (k 0)) (d (n "sysinfo") (r "^0.23.5") (f (quote ("multithread"))) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (k 0)) (d (n "tokio-rustls") (r "^0.23.3") (f (quote ("logging" "tls12"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("connect" "rustls"))) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("codegen" "prost" "tls" "compression"))) (k 0)) (d (n "tonic-build") (r "^0.6.2") (f (quote ("transport" "prost" "compression"))) (k 1)) (d (n "tracing") (r "^0.1.32") (f (quote ("std" "attributes"))) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v5"))) (k 0)) (d (n "webpki-roots") (r "^0.22.2") (k 0)))) (h "0kr4b8a1npscrjgxlp3nr18d7iva68lw367hkjljv3f10zda00mj") (f (quote (("system") ("stream") ("render") ("lua") ("default" "system"))))))

(define-public crate-wolfengine-3.0.2 (c (n "wolfengine") (v "3.0.2") (d (list (d (n "anyhow") (r "^1.0.56") (k 0)) (d (n "async-raft") (r "^0.6.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.53") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.21") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (k 2)) (d (n "may") (r "^0.3.21") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "memstore") (r "^0.2.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mimalloc") (r "^0.1.28") (f (quote ("secure"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("deadlock_detection"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prost") (r "^0.10.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rhai") (r "^1.6.0") (f (quote ("sync" "internals"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rhai") (r "^1.6.0") (f (quote ("sync" "internals" "wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "signals2") (r "^0.3.2") (k 0)) (d (n "sysinfo") (r "^0.23.8") (f (quote ("multithread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23.3") (f (quote ("logging" "tls12"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.17.1") (f (quote ("connect" "rustls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.7.1") (f (quote ("codegen" "prost" "tls" "compression"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic-build") (r "^0.7.0") (f (quote ("transport" "prost" "compression"))) (k 1)) (d (n "tracing") (r "^0.1.32") (f (quote ("std" "attributes"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v5"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-mt") (r "^0.1.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.56") (f (quote ("console" "Document" "Window" "Element"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22.2") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.12.0") (f (quote ("webgl"))) (k 0)) (d (n "winit") (r "^0.26.1") (f (quote ("x11" "wayland" "wayland-dlopen"))) (k 0)))) (h "174khxh3s9pq6pnm7hx2l86xxssi900822g4yppp89xg401ycg4a") (f (quote (("wasm") ("system") ("stream") ("render") ("default" "system"))))))

