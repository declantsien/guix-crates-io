(define-module (crates-io mu lt multicast-socket) #:use-module (crates-io))

(define-public crate-multicast-socket-0.1.0 (c (n "multicast-socket") (v "0.1.0") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.18.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.12") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "16zbnfy52qkss2zw34b15a884l90vd50z5ws2q59h8xws1bw15m9")))

(define-public crate-multicast-socket-0.2.0 (c (n "multicast-socket") (v "0.2.0") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.18.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.12") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0w3rjq1f0mbiczzfs6jpbklngsw40j4hdxzhiyl65224y4ma8ra1")))

(define-public crate-multicast-socket-0.2.1 (c (n "multicast-socket") (v "0.2.1") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05aw4dm3s8waww0ybhv8p2c44hvd95zcf2jb53y1dxblvygwyzpm")))

(define-public crate-multicast-socket-0.2.2 (c (n "multicast-socket") (v "0.2.2") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1yqws8px41bm02l7ack2hrr3s84688abyf8l0mynhrl4k6hcpsjk")))

(define-public crate-multicast-socket-0.3.0 (c (n "multicast-socket") (v "0.3.0") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1kg2jq4fcw7zan8h7bj624cdh2mivxlg86m9724hba00hgnnykpz")))

(define-public crate-multicast-socket-0.3.1 (c (n "multicast-socket") (v "0.3.1") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06486wwfb58bdf5cnf86mv29s92h15f8z8midahrs07kaqafb97q")))

(define-public crate-multicast-socket-0.3.2 (c (n "multicast-socket") (v "0.3.2") (d (list (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0kmwn8cbys417sk3apnz1s26by2wg7jdrrsy6nw6hwnd9gmq25mw")))

(define-public crate-multicast-socket-0.3.3 (c (n "multicast-socket") (v "0.3.3") (d (list (d (n "if-addrs") (r "^0.11.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("mswsock" "iphlpapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0js5q1kggd607r306l7rjx84vclyx6fp4fshrzcljz0gjazf3riq")))

