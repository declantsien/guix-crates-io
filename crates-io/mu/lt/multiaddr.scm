(define-module (crates-io mu lt multiaddr) #:use-module (crates-io))

(define-public crate-multiaddr-0.1.0 (c (n "multiaddr") (v "0.1.0") (d (list (d (n "byteorder") (r "~0.4") (d #t) (k 0)) (d (n "nom") (r "~1.0.1") (d #t) (k 0)))) (h "12cgqi3xx6l6pa9gzpk0yfv4p2qcpmpfn7zzs2kq2yrffj2jlxh8")))

(define-public crate-multiaddr-0.2.0 (c (n "multiaddr") (v "0.2.0") (d (list (d (n "byteorder") (r "~0.4") (d #t) (k 0)) (d (n "cid") (r "~0.2") (d #t) (k 0)) (d (n "data-encoding") (r "~1.1.2") (d #t) (k 2)) (d (n "varmint") (r "^0.1.2") (d #t) (k 0)))) (h "1k9hvs2dd8bsivrisvanbdvb883a9818xiw3wirp33npmadzra5z")))

(define-public crate-multiaddr-0.3.0 (c (n "multiaddr") (v "0.3.0") (d (list (d (n "byteorder") (r "~0.4") (d #t) (k 0)) (d (n "cid") (r "~0.2") (d #t) (k 0)) (d (n "data-encoding") (r "~1.1.2") (d #t) (k 2)) (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)))) (h "0djfw2w3wqby677j7pj55hs3iqy1qq9h5w532wvakq7rvy440zdr")))

(define-public crate-multiaddr-0.3.1 (c (n "multiaddr") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cid") (r "~0.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 2)) (d (n "integer-encoding") (r "^1.0.3") (d #t) (k 0)))) (h "133fw15ixx05nlxagrx4g3sxagqrfyzsx4rkll6055kabvfpmi26")))

(define-public crate-multiaddr-0.12.0 (c (n "multiaddr") (v "0.12.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0jgm776npisj497lh2a3d1yyf67dikj1yqczkn3m6zixb0prhfbi") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.13.0 (c (n "multiaddr") (v "0.13.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.14") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "16b4lh45wdqsvpvgma5y28vx8xh8n9qlz5lz6z31m5a146l4xvj8") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.14.0 (c (n "multiaddr") (v "0.14.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0qa2rp7zv882770lmsmajj880bx2b6aj6z84kcqwwg40v3yhnn1w") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.15.0 (c (n "multiaddr") (v "0.15.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0wnp4zkknmds9ma84j9ql0lff5h9pgrhcq44kg0b4nk4wig2z3cb") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.16.0 (c (n "multiaddr") (v "0.16.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "07pkckxd61dkc15sjb1wjr9qx0r06c989p01xl9ivy4h3srbvbm4") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.17.0 (c (n "multiaddr") (v "0.17.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "135zqdfz3nyxna9jgxw9c9npvd4aprsbz135p8bc5987b76f0lrv") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.17.1 (c (n "multiaddr") (v "0.17.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1gfkcsvzsprs9rqk3kxspph9qhd2vm9bpfqjhvx13589qxkzadib") (f (quote (("default" "url"))))))

(define-public crate-multiaddr-0.18.0 (c (n "multiaddr") (v "0.18.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1df8lb2iyaxk4swvj7gdhidkjvrgp5mh2zf8r0dsvlryifc539lj") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-multiaddr-0.18.1 (c (n "multiaddr") (v "0.18.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0w108z42cfc15a9zmnsv19wr4jvps18gl56dd3nzx99d5b02p1cb") (f (quote (("default" "url")))) (r "1.59.0")))

