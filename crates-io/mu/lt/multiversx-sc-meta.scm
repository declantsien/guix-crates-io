(define-module (crates-io mu lt multiversx-sc-meta) #:use-module (crates-io))

(define-public crate-multiversx-sc-meta-0.39.0 (c (n "multiversx-sc-meta") (v "0.39.0") (d (list (d (n "multiversx-sc") (r "=0.39.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1pjamqnz5s7g0gx6s507dkx8rfddn99g6y4g05aihdzm3mz83b40")))

(define-public crate-multiversx-sc-meta-0.39.1 (c (n "multiversx-sc-meta") (v "0.39.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0cszfwpzvy390bc8j6cwr5dcjvsddvw2jvpjjl0xf2igrprdjbbl")))

(define-public crate-multiversx-sc-meta-0.39.2 (c (n "multiversx-sc-meta") (v "0.39.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1ajgmjf5brb8j7z1kn7v7iiddlhqaj0gzbfmr82idhxawryc3fdn")))

(define-public crate-multiversx-sc-meta-0.39.3 (c (n "multiversx-sc-meta") (v "0.39.3") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.3") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1ajkl93m63bkwrj3k2v810rr795kpjlrm6xw0217gcnbnkw5a5i9")))

(define-public crate-multiversx-sc-meta-0.39.4 (c (n "multiversx-sc-meta") (v "0.39.4") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.4") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0rx36nvf3qhcvd5xqxm0x85s3pd6qa51yhjbc8b8ch7jmfxkm9s0")))

(define-public crate-multiversx-sc-meta-0.39.5 (c (n "multiversx-sc-meta") (v "0.39.5") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.5") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "19mh9vrckhz983lphfpq9iimyn8g7nriwq8jgx6kzns94gqfh5fz")))

(define-public crate-multiversx-sc-meta-0.39.6 (c (n "multiversx-sc-meta") (v "0.39.6") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.6") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "12i51dyygmfdbj17x7bp3h5fgwdv80m36c0bss4xrqi5fh7f9v1m")))

(define-public crate-multiversx-sc-meta-0.39.7 (c (n "multiversx-sc-meta") (v "0.39.7") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.7") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1ppraxf46jz12liml835q07ma5655wspl5pm7sm4pkcc3skpiz78")))

(define-public crate-multiversx-sc-meta-0.39.8 (c (n "multiversx-sc-meta") (v "0.39.8") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.39.8") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0khn7im87yp0d4kyphl5yz6wrpnigqlzn6pf3j9xdxcx9hq49k2s")))

(define-public crate-multiversx-sc-meta-0.40.0 (c (n "multiversx-sc-meta") (v "0.40.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.40.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0qri3w5i5xh89qa1lafmjxfygd9pizijv9jfmb1mxsy9dml505rv")))

(define-public crate-multiversx-sc-meta-0.40.1 (c (n "multiversx-sc-meta") (v "0.40.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.40.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1yp77i4b0rj3msh875c5avgazib8w96g6x8kp6bkihc2f8f38f1l")))

(define-public crate-multiversx-sc-meta-0.41.0 (c (n "multiversx-sc-meta") (v "0.41.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.41.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0xxn8fq4wgi30h1lj12s4zd5m644ifn3l060r3lvmq5p42nfsybm")))

(define-public crate-multiversx-sc-meta-0.41.1 (c (n "multiversx-sc-meta") (v "0.41.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.41.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1bmmc0alwkn38a47hzhz79w5wknhadqlbafyg6ik5dwn91lym0fa")))

(define-public crate-multiversx-sc-meta-0.41.2 (c (n "multiversx-sc-meta") (v "0.41.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.41.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0lzsvfnasbng0vad25l3j1qrkixrqpvhcn3d342vbs2yfbdg0qhm")))

(define-public crate-multiversx-sc-meta-0.41.3 (c (n "multiversx-sc-meta") (v "0.41.3") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.41.3") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "183xwl3k9p5gnzcmjwzfdp97c5wx5az8rkwrjr17p22dz2xzw9x0")))

(define-public crate-multiversx-sc-meta-0.42.0 (c (n "multiversx-sc-meta") (v "0.42.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.42.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "18k0cpiqgjk88l9djq0ia764h0x10f36vf6qj1j68ayixvfph0wq")))

(define-public crate-multiversx-sc-meta-0.43.0 (c (n "multiversx-sc-meta") (v "0.43.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.0") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0ypvir6jzamb0rlrp5npyxfvnbxvi6p7qbzz5283w1jykn05dkck") (f (quote (("template-test"))))))

(define-public crate-multiversx-sc-meta-0.43.1 (c (n "multiversx-sc-meta") (v "0.43.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.1") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "1lmhiy9b92p4nc5qviwli1b20k9q250lh0lwcsinv8az5cn8laks") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.43.2 (c (n "multiversx-sc-meta") (v "0.43.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.2") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "1zwivipgk7p3v9q31kia8j33g8n017nb8l6xzjiadrx1x4g6f6dy") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.43.3 (c (n "multiversx-sc-meta") (v "0.43.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.3") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "123vv40w0x49vm3spd7jk6bcmsk7vbmvvzq5ag4k4chj081ir7gi") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.43.4 (c (n "multiversx-sc-meta") (v "0.43.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.4") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0kj25w4bwfn8ddgwc78ggkbsnrrw9s2s0rfqh047y42ma2a1lyj6") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.43.5 (c (n "multiversx-sc-meta") (v "0.43.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.43.5") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "1k8gcdzyd0b0gvs2kcbgwz4s4sfiqwp0sqv6n189pzd9p39y8y4m") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.44.0 (c (n "multiversx-sc-meta") (v "0.44.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.44.0") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "1hcljhm0952r3hmascyswypj93vqqfi49mn8l274h1s0pq9dix99") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-multiversx-sc-meta-0.45.0 (c (n "multiversx-sc-meta") (v "0.45.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.45.0") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0p45x9ac7yfbn43r21g5npjk7zs4ndzv7b8fyzx99sin088201kz") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path"))))))

(define-public crate-multiversx-sc-meta-0.45.1 (c (n "multiversx-sc-meta") (v "0.45.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.45.1") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0jr9v9v67ranqar17h2phibdqhqpwdmnjcg17zgnw76ij4jasgwv") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.45.2 (c (n "multiversx-sc-meta") (v "0.45.2") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.45.2") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "03010x056cma7v05lpc8prrii8v42i2lli95wjfnqqdvj46hi2yl") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.46.0 (c (n "multiversx-sc-meta") (v "0.46.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.46.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1hqdnv99vc353v59ypjc9z3szlrx419bq9xalyvz98wprwp4781z") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.46.1 (c (n "multiversx-sc-meta") (v "0.46.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.46.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "07jmczq1naybbmj0q99pr8j2bv1xxs50g29pzmvgz3dpfbym10ic") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.0 (c (n "multiversx-sc-meta") (v "0.47.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "10gn65cdj8rv0srwxdcy7ldywpw9zdrckb32xvzwms04iq8cf09q") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.1 (c (n "multiversx-sc-meta") (v "0.47.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "03anby3x8az3gm8hqyrsjsgarpbszwhwd3l157c7kl242sk5406r") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.2 (c (n "multiversx-sc-meta") (v "0.47.2") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.2") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1ykfkknmxrcbw1gylm92kcyb26psc3bxqb060x7b8ds4jf7r678q") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.3 (c (n "multiversx-sc-meta") (v "0.47.3") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.3") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "19qhjvdyj6h0si0skm0v8kk8k2pi7nxn6laps30ny1hnnw5shfgi") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.4 (c (n "multiversx-sc-meta") (v "0.47.4") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.4") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0gcp6k0hz12pq3gaf02z0l1l2s12kmy3c2r9rs7v9b1m0z6cdphj") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.5 (c (n "multiversx-sc-meta") (v "0.47.5") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.5") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "15jj5ji0jpdh546ak55iiqr8vzfgkb0y11jycfk1c5bvyi7g28im") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.6 (c (n "multiversx-sc-meta") (v "0.47.6") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.6") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "05166kicb7ya9qklcqi2p5hs5xl7lj93sk556ds91wligqdjj9sf") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.7 (c (n "multiversx-sc-meta") (v "0.47.7") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.7") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1bcmshm7f8cp456x7vvx8dzq5bphia3zrll5spp6v4ab5f2z1qzz") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.47.8 (c (n "multiversx-sc-meta") (v "0.47.8") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.47.8") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0qgyyxghh2y9qk0jijgx5v8ijfhamvr101bqv4ifidp2ccpi95v2") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.48.0-alpha.1 (c (n "multiversx-sc-meta") (v "0.48.0-alpha.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.48.0-alpha.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "180566zfmc3npxkihda5gmgah16p5ignd3kl0mfycsbq418rv1pf") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.48.0 (c (n "multiversx-sc-meta") (v "0.48.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.48.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1aznhpb9j8blhi87wsn0yy3nbbyp9qx27rcpc0jdp6ykbskvvldd") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.49.0-alpha.2 (c (n "multiversx-sc-meta") (v "0.49.0-alpha.2") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.49.0-alpha.2") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1hkgpldv333ah77whl1gxwkcxmcc472zhry6s498d516fy4iamdh") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.49.0-alpha.3 (c (n "multiversx-sc-meta") (v "0.49.0-alpha.3") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.49.0-alpha.3") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0kvc42am9dv7ljpisa7f8mlsl2z2pcf68dnfxis5954gmnkj76lf") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.49.0-alpha.4 (c (n "multiversx-sc-meta") (v "0.49.0-alpha.4") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.49.0-alpha.4") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "19mnsg8hbf35gj93vkg12p5axpafxb357q3yh53xz2gwkn8m4v12") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.48.1 (c (n "multiversx-sc-meta") (v "0.48.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.48.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0n6y59qd1gj2xwnz1iv9b84bi5045jhx8xikdmakpsllg1az9qac") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.49.0 (c (n "multiversx-sc-meta") (v "0.49.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.49.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "037qgn1514zsn8zgah3g0br3qsxmgkzl7v02ch85z697mdm9z0qn") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.50.0 (c (n "multiversx-sc-meta") (v "0.50.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.50.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.207") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.207") (d #t) (k 0)) (d (n "zip") (r "^1.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1iixvy6w89hgj6j82yc546bxzq4wl5ilzdkdhw7k2mpj7c9fr18n") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.50.1 (c (n "multiversx-sc-meta") (v "0.50.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.50.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.207") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.207") (d #t) (k 0)) (d (n "zip") (r "^1.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "13i1frdaak607qnq37yp932bcd0ds13czmx6bvmr16gwsj5hix8c") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.50.2 (c (n "multiversx-sc-meta") (v "0.50.2") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.50.2") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.207") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.207") (d #t) (k 0)) (d (n "zip") (r "^1.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "13pvmwyqg3brf78dx60x909f75zd52birvzbhzyrwnbwbmff50vs") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-multiversx-sc-meta-0.50.3 (c (n "multiversx-sc-meta") (v "0.50.3") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "multiversx-sc") (r "=0.50.3") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.208") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.208") (d #t) (k 0)) (d (n "zip") (r "^2.1") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1wq48mkd16n1kzs1wi4w90ypf12v97cjabp8fy66faa547dnxzh7") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

