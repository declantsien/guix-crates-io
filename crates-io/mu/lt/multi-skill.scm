(define-module (crates-io mu lt multi-skill) #:use-module (crates-io))

(define-public crate-multi-skill-0.1.0 (c (n "multi-skill") (v "0.1.0") (d (list (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "overload") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "select") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13") (d #t) (k 0)))) (h "1lxbahz7lfvy2f0sgbxn0fx02wcqcz2pzl1w11sqqlf88y7riccj")))

(define-public crate-multi-skill-0.1.1 (c (n "multi-skill") (v "0.1.1") (d (list (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "overload") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "select") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13") (d #t) (k 0)))) (h "0r3k2fiq3qn8wwjq5va0ysh5mcakkiwmkfafigciq80jlad7ss25")))

(define-public crate-multi-skill-0.1.2 (c (n "multi-skill") (v "0.1.2") (d (list (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "overload") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "select") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13") (d #t) (k 0)) (d (n "superslice") (r "^1.0") (d #t) (k 0)))) (h "1lmzy24pah4ksg7zla2884pn68mvhwlsi5ha039d6bxw8ay8vrzs")))

