(define-module (crates-io mu lt multihash) #:use-module (crates-io))

(define-public crate-multihash-0.1.0 (c (n "multihash") (v "0.1.0") (d (list (d (n "rustc-serialize") (r "*") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)))) (h "0x05zdhfdq350wf6yz4w1b1kfsdlka42y1k7z6iihpaacwv14fbr")))

(define-public crate-multihash-0.3.0 (c (n "multihash") (v "0.3.0") (d (list (d (n "ring") (r "~0.6.2") (d #t) (k 0)))) (h "0y3jyvhdnd5fvwyksq69ybrx9klf5q9si3rbmi6yq0f4rq7chsav")))

(define-public crate-multihash-0.4.0 (c (n "multihash") (v "0.4.0") (d (list (d (n "ring") (r "~0.6.3") (d #t) (k 0)))) (h "13gri1jlbbg4wf27y80fa3sarl9bx9441ihjidk5ibgq65xlfrpg")))

(define-public crate-multihash-0.4.1 (c (n "multihash") (v "0.4.1") (d (list (d (n "ring") (r "~0.6.3") (d #t) (k 0)))) (h "0nyjnhj01zh6dmckchlcajm4ajmjkdarz382i3yc9h0m35ir9h45")))

(define-public crate-multihash-0.4.2 (c (n "multihash") (v "0.4.2") (d (list (d (n "ring") (r "~0.6.2") (d #t) (k 0)))) (h "0zhqwcqxnsxgpqzr9dq21l4j9yxbjd7y7hffp6027ga28dsj7a8y")))

(define-public crate-multihash-0.5.0 (c (n "multihash") (v "0.5.0") (d (list (d (n "ring") (r "~0.6.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.0.5") (d #t) (k 0)))) (h "0d82c3jaj46aaqp1zbrg3ci90j9kmfz77s1pjijazyp3pqwmlpbm")))

(define-public crate-multihash-0.5.1 (c (n "multihash") (v "0.5.1") (d (list (d (n "ring") (r "~0.7.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.0.5") (d #t) (k 0)))) (h "01f56n8z7qmxrdbwix9zvk2mg4m392kx13xy81nc21zs08j0zxy9")))

(define-public crate-multihash-0.5.2 (c (n "multihash") (v "0.5.2") (d (list (d (n "ring") (r "~0.7.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "168v4dva4h24v1v4m49lhw611i83n6ikc68jwxwf4bfdaja67gkd")))

(define-public crate-multihash-0.6.0 (c (n "multihash") (v "0.6.0") (d (list (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "0n7zv8pc3c7sf2viz6rby09qp6x10vc3kqcgpgdmlbjyd73n6hyi")))

(define-public crate-multihash-0.7.0 (c (n "multihash") (v "0.7.0") (d (list (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "1wr45li7gr7gsv16bw8laga573x4himjizq19py8pc4yykassjbx")))

(define-public crate-multihash-0.8.0 (c (n "multihash") (v "0.8.0") (d (list (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "0x3bajj1fg4hglz9khcj6ycl7ic38rgq9z7r9r3f5pj5bw16j966")))

(define-public crate-multihash-0.9.0 (c (n "multihash") (v "0.9.0") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2") (d #t) (k 0)))) (h "1x7qr1hkkckw1rwxnik20q2rknns6k0v2bra1mc5vbmp6glppyac") (y #t)))

(define-public crate-multihash-0.9.1 (c (n "multihash") (v "0.9.1") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2") (d #t) (k 0)))) (h "1pr6dzkp559h1bxi3z109vg8qplp4n2km8n45p9vky03b8p2kaq5")))

(define-public crate-multihash-0.9.2 (c (n "multihash") (v "0.9.2") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2") (d #t) (k 0)))) (h "0kksa7hzmsa92qw8jx15y745w1qrfsd4aaps2nw3ynivbj04v8zv")))

(define-public crate-multihash-0.9.3 (c (n "multihash") (v "0.9.3") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2") (d #t) (k 0)))) (h "0jindcc75qc6jrj9fgdvlg423xx96bs192w3ajqfpssvhvn90zfn")))

(define-public crate-multihash-0.9.4 (c (n "multihash") (v "0.9.4") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "sha1") (r "^0.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "04687n51gdjwrlsckl5rmmpcjqah1k3mzrsg59503lx181bsibi6")))

(define-public crate-multihash-0.10.0 (c (n "multihash") (v "0.10.0") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.8") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "sha-1") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "08vr5gc8d7ka7xxlrzn87kmr0mqnb2ri7s5d1bgwhw8vl9mlxczl")))

(define-public crate-multihash-0.10.1 (c (n "multihash") (v "0.10.1") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.8") (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "0sb84cxhvk5krfkgfziwvnxqlrmjxiwlah4m3xqcpcg2ywkw5ys7") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.11.0 (c (n "multihash") (v "0.11.0") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.8") (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "087n59wkswlgj8sjx4k625bp0zfjm1rh3y7chbv1ir0cxvr6f5jz") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.11.1 (c (n "multihash") (v "0.11.1") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.8") (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "0pfg52y24mym4flir1fbbvlglmfxypkyx2yycghcdk04k6d1fcmf") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.11.2 (c (n "multihash") (v "0.11.2") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.8") (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "00wygazndz7lrpfw5789pbbhkrgjpjpssfl6i59sliw9fdfv0pgp") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.11.3 (c (n "multihash") (v "0.11.3") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "blake3") (r "^0.3.5") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "unsigned-varint") (r "^0.5") (d #t) (k 0)))) (h "0sbmy11p8d7lpgvii67bc48zvm5i5fvyybn2vdw88rc2m591bk2i") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.11.4 (c (n "multihash") (v "0.11.4") (d (list (d (n "blake2b_simd") (r "^0.5.9") (k 0)) (d (n "blake2s_simd") (r "^0.5.9") (k 0)) (d (n "blake3") (r "^0.3.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "unsigned-varint") (r "^0.5") (d #t) (k 0)))) (h "1xixkybkz7qzsh6dv5l132jdqr1yw4vcqkpivrcrpx4jcjmj4wan") (f (quote (("use_blake3" "blake3") ("test" "quickcheck" "rand"))))))

(define-public crate-multihash-0.12.0 (c (n "multihash") (v "0.12.0") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^0.3.7") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.6.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5.1") (d #t) (k 0)))) (h "0w3rvn2xs510rapnq80c1fw8v22bs2zixv4gcxgbaj2mfh3z3qb4") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive" "all") ("derive" "multihash-derive") ("default" "std" "all" "derive" "multihash-impl") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand") ("all" "blake2b" "blake2s" "blake3" "sha1" "sha2" "sha3" "strobe"))))))

(define-public crate-multihash-0.13.0 (c (n "multihash") (v "0.13.0") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^0.3.7") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.7.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5.1") (d #t) (k 0)))) (h "0p72pfzvv5z0j2mirlazj9mi06lwvygr55z34bx94h0yxwwp7yd6") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand"))))))

(define-public crate-multihash-0.13.1 (c (n "multihash") (v "0.13.1") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^0.3.7") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.7.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5.1") (d #t) (k 0)))) (h "1zhyzj01mrcs1asyim0f3xa3rx9x1i50yq17hwzxzm7wwng3hqzv") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand"))))))

(define-public crate-multihash-0.13.2 (c (n "multihash") (v "0.13.2") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^0.3.7") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.7.1") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5.1") (d #t) (k 0)))) (h "1avwzd4pz71gnbfl1b2glbw1yhv06yv4ish6jf92szc8idln7b2d") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand"))))))

(define-public crate-multihash-0.14.0 (c (n "multihash") (v "0.14.0") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^0.3.7") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.7.2") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^2.1.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.6.2") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1n3rm6sr8fx5hxb1qk8ycbanv1nm2qwd48ql86s93xhgi76n2akm") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand"))))))

(define-public crate-multihash-0.15.0 (c (n "multihash") (v "0.15.0") (d (list (d (n "blake2b_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.10") (o #t) (k 0)) (d (n "blake3") (r "^1.0.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.7.2") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^2.1.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.1") (o #t) (k 0)) (d (n "sha-2") (r "^0.9.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.9.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.6.2") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1h24xi7vhms4vb1afy0k13pnjlajwgcsfcmnwagn7p0kc8841ra9") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "generic-array/serde") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand"))))))

(define-public crate-multihash-0.16.0 (c (n "multihash") (v "0.16.0") (d (list (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^2.1.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "0655skr04a65k1qczapfznjpmgs30al0im4169qbw0z0csq2fp2m") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand") ("alloc" "core2/alloc"))))))

(define-public crate-multihash-0.16.1 (c (n "multihash") (v "0.16.1") (d (list (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "1kfxgbrck6gfiz5iljlw80kp22zqp5x7fsp3jy14y35wi3yvz4kk") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand") ("alloc" "core2/alloc"))))))

(define-public crate-multihash-0.16.2 (c (n "multihash") (v "0.16.2") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "12cny0y4mv3m2az3gxnkyi342p8a066mc7pwkmsmid8x817kbnz3") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand" "arbitrary") ("alloc" "core2/alloc"))))))

(define-public crate-multihash-0.16.3 (c (n "multihash") (v "0.16.3") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd-rs") (r "^0.1.1") (o #t) (d #t) (k 0) (p "ripemd")) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "1k6249spbcyh10ij01v0y63663mamr77r5wg5l01yqwwk7wnqd0w") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("ripemd" "ripemd-rs") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand" "arbitrary") ("alloc" "core2/alloc"))))))

(define-public crate-multihash-0.17.0 (c (n "multihash") (v "0.17.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd-rs") (r "^0.1.1") (o #t) (d #t) (k 0) (p "ripemd")) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "0h5fhgvnn7cl72c6habz7brhnl3y016nkq9xrvxpj0b13pq6ypc3") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("ripemd" "ripemd-rs") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand" "arbitrary") ("alloc" "core2/alloc"))))))

(define-public crate-multihash-0.18.0 (c (n "multihash") (v "0.18.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd-rs") (r "^0.1.1") (o #t) (d #t) (k 0) (p "ripemd")) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "1fiiqhkq6v1xnam044a0ckckzxvivpj17cqyw4fiwqrf848xkr8m") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("ripemd" "ripemd-rs") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand" "arbitrary") ("alloc" "core2/alloc")))) (r "1.59")))

(define-public crate-multihash-0.18.1 (c (n "multihash") (v "0.18.1") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake2s_simd") (r "^1.0.0") (o #t) (k 0)) (d (n "blake3") (r "^1.2.0") (o #t) (k 0)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.10.1") (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multihash-derive") (r "^0.8.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd-rs") (r "^0.1.1") (o #t) (d #t) (k 0) (p "ripemd")) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (o #t) (k 0)) (d (n "sha-2") (r "^0.10.0") (o #t) (k 0) (p "sha2")) (d (n "sha-3") (r "^0.10.0") (o #t) (k 0) (p "sha3")) (d (n "strobe-rs") (r "^0.7.0") (o #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "05dq1ghcwp8a0gk7k8adk5hd4ay70zbskc4dysj6sk39q69agn6g") (f (quote (("strobe" "strobe-rs") ("std" "unsigned-varint/std" "multihash-derive/std" "alloc") ("sha3" "digest" "sha-3") ("sha2" "digest" "sha-2") ("sha1" "digest" "sha-1") ("serde-codec" "serde" "serde-big-array") ("secure-hashes" "blake2b" "blake2s" "blake3" "sha2" "sha3") ("scale-codec" "parity-scale-codec") ("ripemd" "ripemd-rs") ("multihash-impl" "derive") ("identity") ("derive" "multihash-derive") ("default" "std" "derive" "multihash-impl" "secure-hashes") ("blake2s" "blake2s_simd") ("blake2b" "blake2b_simd") ("arb" "quickcheck" "rand" "arbitrary") ("alloc" "core2/alloc")))) (r "1.59")))

(define-public crate-multihash-0.19.0 (c (n "multihash") (v "0.19.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.160") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "1wirm58a65lz8fli3zrqdkzfwm9cwlmd4b65xamvlw5y5g69vm9g") (f (quote (("std" "unsigned-varint/std" "alloc") ("serde-codec" "serde") ("default" "std") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde") ("scale-codec" "dep:parity-scale-codec") ("arb" "dep:quickcheck" "dep:rand" "dep:arbitrary")))) (r "1.64")))

(define-public crate-multihash-0.19.1 (c (n "multihash") (v "0.19.1") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (d #t) (k 2)) (d (n "core2") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.160") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (k 0)))) (h "14n46nki4ynr6lh28wa4zinphxy56qf0n7a7mgaa1qm0fs6m8v87") (f (quote (("std" "unsigned-varint/std" "alloc") ("serde-codec" "serde") ("default" "std") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde") ("scale-codec" "dep:parity-scale-codec") ("arb" "dep:quickcheck" "dep:rand" "dep:arbitrary")))) (r "1.64")))

