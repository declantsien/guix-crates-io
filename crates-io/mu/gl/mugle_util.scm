(define-module (crates-io mu gl mugle_util) #:use-module (crates-io))

(define-public crate-mugle_util-5.2.0-alpha.1 (c (n "mugle_util") (v "5.2.0-alpha.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.10") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "122qn22k3m46sar71zmi5zwbr0d9r28wgyc6g36wlf0p3j9dkyqh") (y #t)))

(define-public crate-mugle_util-5.2.0-alpha.2 (c (n "mugle_util") (v "5.2.0-alpha.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.10") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "1w5izdl93ah34n8g6rm1nzs6j9s43kppd7xi2flmvd04b9ff4cr2") (y #t)))

(define-public crate-mugle_util-5.1.2 (c (n "mugle_util") (v "5.1.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.11") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "19vywrphzbzi1689y0b35m95bqhy4mrmfqnzlczf3s0dgbxscg6x") (y #t)))

(define-public crate-mugle_util-5.2.0-alpha.3 (c (n "mugle_util") (v "5.2.0-alpha.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.10") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "0mci6mf34y3vdb2d7ywss8fp72pf1lzdx6xd1v7ac4fwmzdq2vrm") (y #t)))

(define-public crate-mugle_util-5.1.2-alpha.1 (c (n "mugle_util") (v "5.1.2-alpha.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.11") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "1204izylx2fjsmmaimnjv1rbfxznzg964glmwxhjjkr0r2pcxvip") (y #t)))

(define-public crate-mugle_util-5.1.2-alpha.2 (c (n "mugle_util") (v "5.1.2-alpha.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.11") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "1ykpw32d3yy78daml4bh4bl0a5wcgp9pg2n6pxx7gdckmdw6xy5q")))

(define-public crate-mugle_util-5.2.0-alpha.5 (c (n "mugle_util") (v "5.2.0-alpha.5") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.12") (f (quote ("rolling_file_appender" "compound_policy" "size_trigger" "fixed_window_roller"))) (d #t) (k 0)) (d (n "mugle_secp256k1zkp") (r "^0.7.10") (f (quote ("bullet-proof-sizing"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (k 0)))) (h "1iphv8wvcm98r3xigs0aimvflkli5i28gib441f3birb7zx3yqha")))

