(define-module (crates-io mu sl musli-json) #:use-module (crates-io))

(define-public crate-musli-json-0.0.25 (c (n "musli-json") (v "0.0.25") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.25") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.25") (d #t) (k 0)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1f1p55kzixkh7zm966kvx86kwhdxa3m2f73pbx65z968rm9nkbvy") (f (quote (("test") ("std" "musli-common/std") ("default" "std"))))))

(define-public crate-musli-json-0.0.26 (c (n "musli-json") (v "0.0.26") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.26") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.26") (d #t) (k 0)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "0060p2qdia9hldi425dihb4zb90z4d2i1fw8c4pb93l7y2c6xyyq") (f (quote (("test") ("std" "musli-common/std") ("default" "std"))))))

(define-public crate-musli-json-0.0.27 (c (n "musli-json") (v "0.0.27") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.27") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.27") (d #t) (k 0)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1crb0ybzcw04m981afjbmlnzm4021gvkfzf6drcnxzy83ih3zv6a") (f (quote (("test") ("std" "musli-common/std") ("default" "std"))))))

(define-public crate-musli-json-0.0.28 (c (n "musli-json") (v "0.0.28") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.28") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.28") (d #t) (k 0)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1hmdxqwz348hvdlmpv85v3adgqrlv0yv4mwmnhi9q54jn018kqr1") (f (quote (("test") ("std" "musli-common/std") ("default" "std"))))))

(define-public crate-musli-json-0.0.29 (c (n "musli-json") (v "0.0.29") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.29") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.29") (d #t) (k 0)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "0vr1aj6x50g31xqia36cy0zna44yflj549844vqwn2phvya0a61b") (f (quote (("test") ("std" "musli/std" "musli-common/std") ("default" "std"))))))

(define-public crate-musli-json-0.0.31 (c (n "musli-json") (v "0.0.31") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.31") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.31") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.31") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1y4420w6rwcb0wxrs8hwggr6vhnlxpfmxkpdlp9h71lngg8qqyf5") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.32 (c (n "musli-json") (v "0.0.32") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.32") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.32") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.32") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1cqdmxcqxd7z5zmh5xfd038ci3v7z1y9r335yy02shd78hy4g9pm") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.33 (c (n "musli-json") (v "0.0.33") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.33") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.33") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.33") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1fx6728rxq80gk1ahkx08fzg28qr2xymz7m65hxyxjapy1spsdni") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.34 (c (n "musli-json") (v "0.0.34") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.34") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.34") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.34") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "1gi4f22prhlvzvcpnilcpx4vb8aqdd5vsyfh9fzs2465im1fjhkw") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.35 (c (n "musli-json") (v "0.0.35") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.35") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.35") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.35") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "0m8vx6gqb46nxj5pvqy7w6pvimpg3z659nq70lnyh5am64im1rak") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.36 (c (n "musli-json") (v "0.0.36") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.36") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.36") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "04vkarjpr4sr83hj5l8rmp6v9xqp2sjcr43a0j15airbvbkh0knb") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.37 (c (n "musli-json") (v "0.0.37") (d (list (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (d #t) (k 0)) (d (n "musli") (r "^0.0.37") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.37") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.9") (d #t) (k 0)))) (h "086752k9y3hvw002akmp3rwfyipa21p8zm7635nairiydrd2n2h6") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std"))))))

(define-public crate-musli-json-0.0.38 (c (n "musli-json") (v "0.0.38") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.38") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.38") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0ij5s1yq0s3g3paf71415g92i2g6xgiwvl7jnjjw1qjqw0mp7918") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std")))) (r "1.65")))

(define-public crate-musli-json-0.0.39 (c (n "musli-json") (v "0.0.39") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.39") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.39") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1g3cn4qimrba114yypi4gskbjjvnzqms9bfp5pxcs8ngdmcaf1zr") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std")))) (r "1.65")))

(define-public crate-musli-json-0.0.40 (c (n "musli-json") (v "0.0.40") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.40") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.40") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.40") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0jk56if3jr12fy7m10fhch6bgwm7kry9pf649b0arsnbh5ywgn77") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std")))) (r "1.65")))

(define-public crate-musli-json-0.0.41 (c (n "musli-json") (v "0.0.41") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.41") (d #t) (k 0)) (d (n "musli-common") (r "^0.0.41") (d #t) (k 0)) (d (n "musli-value") (r "^0.0.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "00pg3hyz5hbfd65vfkk9hwl6n27mb19vzy5gcdnn1scldg5zhi1q") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value") ("default" "std")))) (r "1.65")))

(define-public crate-musli-json-0.0.43 (c (n "musli-json") (v "0.0.43") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.43") (k 0)) (d (n "musli-common") (r "^0.0.43") (k 0)) (d (n "musli-value") (r "^0.0.43") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1d75lx6z21v3jsj3ljfgs23784mc0p02dppvnklmnh0brhf1dw4j") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.65")))

(define-public crate-musli-json-0.0.44 (c (n "musli-json") (v "0.0.44") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.44") (k 0)) (d (n "musli-common") (r "^0.0.44") (k 0)) (d (n "musli-value") (r "^0.0.44") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "10wd3c2a000bf6r9b8n92dsb5dbvwnwxyb7nwmp0r9p2nwlzw731") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.65")))

(define-public crate-musli-json-0.0.45 (c (n "musli-json") (v "0.0.45") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.45") (k 0)) (d (n "musli-common") (r "^0.0.45") (k 0)) (d (n "musli-value") (r "^0.0.45") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1762qpylqcj54vibymxwm3jy4vjin3wwvq0p6n5l8g6cj7n8h0q2") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.65")))

(define-public crate-musli-json-0.0.46 (c (n "musli-json") (v "0.0.46") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.46") (k 0)) (d (n "musli-common") (r "^0.0.46") (k 0)) (d (n "musli-value") (r "^0.0.46") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0lhkkfxq6rhpk6vkvqam4kyfyprvadz7qfwxjq9m16y446isiwq1") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.65")))

(define-public crate-musli-json-0.0.47 (c (n "musli-json") (v "0.0.47") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.47") (k 0)) (d (n "musli-common") (r "^0.0.47") (k 0)) (d (n "musli-value") (r "^0.0.47") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0gi0s9sg7wxghlsn0dz7q9cbxm5ggaph39918c08km6hn87i2h5v") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.66")))

(define-public crate-musli-json-0.0.48 (c (n "musli-json") (v "0.0.48") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.48") (k 0)) (d (n "musli-common") (r "^0.0.48") (k 0)) (d (n "musli-value") (r "^0.0.48") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0q80z99qfx71wi7i4ldjf2h9d7j603g37m9sjrpgz8y0qyra1q04") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.66")))

(define-public crate-musli-json-0.0.49 (c (n "musli-json") (v "0.0.49") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (k 0)) (d (n "musli-common") (r "^0.0.49") (k 0)) (d (n "musli-value") (r "^0.0.49") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0c83v4z8ndx4b12hb6c2400c7c1xynn3hsw87wif2720i6s2fdad") (f (quote (("test") ("std" "musli/std" "musli-common/std" "musli-value" "alloc") ("default" "std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value/alloc")))) (r "1.66")))

(define-public crate-musli-json-0.0.50 (c (n "musli-json") (v "0.0.50") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.50") (k 0)) (d (n "musli-common") (r "^0.0.50") (k 0)) (d (n "musli-value") (r "^0.0.50") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1xpxq6d8ixdh4w5987my82a7dxcr9lnin44g4jk9bjwpf62c0z7y") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.51 (c (n "musli-json") (v "0.0.51") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.51") (k 0)) (d (n "musli-common") (r "^0.0.51") (k 0)) (d (n "musli-value") (r "^0.0.51") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0hb7qmndzkv5jb80fc3r6l4glpirw8aadamd82cvgjhb5p89xhs1") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.52 (c (n "musli-json") (v "0.0.52") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.52") (k 0)) (d (n "musli-common") (r "^0.0.52") (k 0)) (d (n "musli-value") (r "^0.0.52") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1nr195dzgzn5h7vrz48p7rfc44lr8a1j46grd7vkqp8bky89ir8a") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.53 (c (n "musli-json") (v "0.0.53") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.53") (k 0)) (d (n "musli-common") (r "^0.0.53") (k 0)) (d (n "musli-value") (r "^0.0.53") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "05nfkf7514l3g425167wg6bfghmrgyr0mfwrvyzxrl1jqkb7gjzn") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.54 (c (n "musli-json") (v "0.0.54") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.54") (k 0)) (d (n "musli-common") (r "^0.0.54") (k 0)) (d (n "musli-value") (r "^0.0.54") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0736dvgandn9v4a6r49z38bh2h8pliwmzh959kn58bkvc4k0zmjy") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.55 (c (n "musli-json") (v "0.0.55") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.55") (k 0)) (d (n "musli-common") (r "^0.0.55") (k 0)) (d (n "musli-value") (r "^0.0.55") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1a1hninydk3mxqidvw9pbp3qd54g32djaz866ajzlwgrbhvrcr73") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.56 (c (n "musli-json") (v "0.0.56") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.56") (k 0)) (d (n "musli-common") (r "^0.0.56") (k 0)) (d (n "musli-value") (r "^0.0.56") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1a0qiyxnas5yll07fhx58vmacvbk9s04gh0h3bv0xjgds40fnna4") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.57 (c (n "musli-json") (v "0.0.57") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.57") (k 0)) (d (n "musli-common") (r "^0.0.57") (k 0)) (d (n "musli-value") (r "^0.0.57") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1jlwvdmd12yfxfqnv03vfh8pc55y8jw7irf8vmskx74iid4ablk1") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.58 (c (n "musli-json") (v "0.0.58") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.58") (k 0)) (d (n "musli-common") (r "^0.0.58") (k 0)) (d (n "musli-value") (r "^0.0.58") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "18afsnrdzpgj4p2sq5qv6div3a8zwfp1040lixbdfm0bdbpjfbfm") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.59 (c (n "musli-json") (v "0.0.59") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.59") (k 0)) (d (n "musli-common") (r "^0.0.59") (k 0)) (d (n "musli-value") (r "^0.0.59") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0sqkw2vzgc31vrikp4a2d0cwdazfnahm7mk1r4xdk2gw1ndx50dx") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.60 (c (n "musli-json") (v "0.0.60") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.60") (k 0)) (d (n "musli-common") (r "^0.0.60") (k 0)) (d (n "musli-value") (r "^0.0.60") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1ssgmrmhyx5hab2rrxxagnc8y3mwzg0y5clqhgg0p4qd3alnmqaj") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.61 (c (n "musli-json") (v "0.0.61") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.61") (k 0)) (d (n "musli-common") (r "^0.0.61") (k 0)) (d (n "musli-value") (r "^0.0.61") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "0h4rpwiywv86lrvny2y1gg17bi6xjck727w78xq2i8bynflqb6qj") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.62 (c (n "musli-json") (v "0.0.62") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.62") (k 0)) (d (n "musli-common") (r "^0.0.62") (k 0)) (d (n "musli-value") (r "^0.0.62") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1awsygg0n7mpyrbg2i9mwqmr21v5qdhzk1may848vyypf7va06v7") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.63 (c (n "musli-json") (v "0.0.63") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.63") (k 0)) (d (n "musli-common") (r "^0.0.63") (k 0)) (d (n "musli-value") (r "^0.0.63") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1yrdlamqzv6qaxfnvd5ndk0lzbbc8avggap7ncwmpb6s6cpfzli6") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.64 (c (n "musli-json") (v "0.0.64") (d (list (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.64") (k 0)) (d (n "musli-common") (r "^0.0.64") (k 0)) (d (n "musli-value") (r "^0.0.64") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)))) (h "1z2jrq0c9548gb6670v802vqwkll0ww042qi1dg9dwfspwjivzz3") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.65 (c (n "musli-json") (v "0.0.65") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.65") (k 0)) (d (n "musli-common") (r "^0.0.65") (k 0)) (d (n "musli-value") (r "^0.0.65") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1smwznf0r2vz2qwas8kwz3sw597fi5jl9h7i7hj4yivhk39cl924") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.66 (c (n "musli-json") (v "0.0.66") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.66") (k 0)) (d (n "musli-common") (r "^0.0.66") (k 0)) (d (n "musli-value") (r "^0.0.66") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "124y9pk2p1lpdgb6afslk0rrs27mprjl72sklb8p2vhgvir7qkq1") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.67 (c (n "musli-json") (v "0.0.67") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.67") (k 0)) (d (n "musli-common") (r "^0.0.67") (k 0)) (d (n "musli-value") (r "^0.0.67") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0mhwq0a3chiv8brh6lpniqjm6wjwmasgy70swpy2flag66fvfb06") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.68 (c (n "musli-json") (v "0.0.68") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.68") (k 0)) (d (n "musli-common") (r "^0.0.68") (k 0)) (d (n "musli-value") (r "^0.0.68") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "10mpvbk8ixp4x7qwwia6b6606djaisln710a9sjkkiqf58i1zdhx") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.69 (c (n "musli-json") (v "0.0.69") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.69") (k 0)) (d (n "musli-common") (r "^0.0.69") (k 0)) (d (n "musli-value") (r "^0.0.69") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "01dqgh1bfblfc9w494s7rgjpbm4j81smpk6kg8ldiz9baz14b2a8") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.70 (c (n "musli-json") (v "0.0.70") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.70") (k 0)) (d (n "musli-common") (r "^0.0.70") (k 0)) (d (n "musli-value") (r "^0.0.70") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1cghhz6fvbmh6x9vrmxppdgfaffd4ghgrfllihhbcxdb6gg87d44") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.71 (c (n "musli-json") (v "0.0.71") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.71") (k 0)) (d (n "musli-common") (r "^0.0.71") (k 0)) (d (n "musli-value") (r "^0.0.71") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "198dfbw0rwi6lhpypy01xp0569gvqfpda3dg3gwdkh9b2b2946hs") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.72 (c (n "musli-json") (v "0.0.72") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.72") (k 0)) (d (n "musli-common") (r "^0.0.72") (k 0)) (d (n "musli-value") (r "^0.0.72") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0aza4wg2b26rspmmbigdva4xibws3sw8pd7j4xj1xbvkdhkcf366") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.73 (c (n "musli-json") (v "0.0.73") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.73") (k 0)) (d (n "musli-common") (r "^0.0.73") (k 0)) (d (n "musli-value") (r "^0.0.73") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0yllxrqrfdn5n22xkcqf9bpwfamx56qzjh6hfw79phb4n8a271x6") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.74 (c (n "musli-json") (v "0.0.74") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.74") (k 0)) (d (n "musli-common") (r "^0.0.74") (k 0)) (d (n "musli-value") (r "^0.0.74") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0y1kndpgk256lm8ny4gbqi3cdmpp3w6rnnvylmr2pc4d992z9vxc") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.75 (c (n "musli-json") (v "0.0.75") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.75") (k 0)) (d (n "musli-common") (r "^0.0.75") (k 0)) (d (n "musli-value") (r "^0.0.75") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "17d1c09x3lcj7lxazjkc45a87a1caxcmmr4k8s2f0cippfkj9xsg") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.77 (c (n "musli-json") (v "0.0.77") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.77") (k 0)) (d (n "musli-common") (r "^0.0.77") (k 0)) (d (n "musli-value") (r "^0.0.77") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0p86n2k76brc29ind4qs5asvv7lcvbgblyybqs348nksgbbxdry7") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.78 (c (n "musli-json") (v "0.0.78") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.78") (k 0)) (d (n "musli-common") (r "^0.0.78") (k 0)) (d (n "musli-value") (r "^0.0.78") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "18ynk8s78x2vpiyl4gd44lsi950v7zrz1sg5gf889rkqx9w59kml") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.79 (c (n "musli-json") (v "0.0.79") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.79") (k 0)) (d (n "musli-common") (r "^0.0.79") (k 0)) (d (n "musli-value") (r "^0.0.79") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1giqmpvqyarqas5ss5agin4znhabaqnfz08v4hlhidid1p0ihpqq") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.80 (c (n "musli-json") (v "0.0.80") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.80") (k 0)) (d (n "musli-common") (r "^0.0.80") (k 0)) (d (n "musli-value") (r "^0.0.80") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "17xab8j5fvcswnzjp3nvfc915f62p0qmrwwbbgf77ddfv1dx3rnh") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.81 (c (n "musli-json") (v "0.0.81") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.81") (k 0)) (d (n "musli-common") (r "^0.0.81") (k 0)) (d (n "musli-value") (r "^0.0.81") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1df33qsnmbbryk1w6a17m9r8i8as7aafl8rjia44gs22285i095g") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.82 (c (n "musli-json") (v "0.0.82") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.82") (k 0)) (d (n "musli-common") (r "^0.0.82") (k 0)) (d (n "musli-value") (r "^0.0.82") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1b6zwh1why4cj4n1f5r7g2nvkcrpq80bfmns4hxzrk6pchdi5f9y") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.83 (c (n "musli-json") (v "0.0.83") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.83") (k 0)) (d (n "musli-common") (r "^0.0.83") (k 0)) (d (n "musli-value") (r "^0.0.83") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1ayjrx5c6c8dc42w97jyr2zaqpwq9zxgpi3j9bwipaplxaq4rmp9") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.84 (c (n "musli-json") (v "0.0.84") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.84") (k 0)) (d (n "musli-common") (r "^0.0.84") (k 0)) (d (n "musli-value") (r "^0.0.84") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1ndy6qgk316wpnwad3pfwm9728lyh8lfv071h7g3q47k6b15cclf") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.85 (c (n "musli-json") (v "0.0.85") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.85") (k 0)) (d (n "musli-common") (r "^0.0.85") (k 0)) (d (n "musli-value") (r "^0.0.85") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1mkdz0vijb4l1379r6cv5zldpck8bjz3rzi8ifm2ldbhf8lz1cmz") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.86 (c (n "musli-json") (v "0.0.86") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.86") (k 0)) (d (n "musli-common") (r "^0.0.86") (k 0)) (d (n "musli-value") (r "^0.0.86") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0whq1zp8xfwqb6skrzgbz1222pwbki2y5jb3dzwl9vv9ibfr8y4p") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.87 (c (n "musli-json") (v "0.0.87") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.87") (k 0)) (d (n "musli-common") (r "^0.0.87") (k 0)) (d (n "musli-value") (r "^0.0.87") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0jh0ibann4nz6hk7694wpy9haf5z566c36f6h28l58d677fd374k") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.88 (c (n "musli-json") (v "0.0.88") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.88") (k 0)) (d (n "musli-common") (r "^0.0.88") (k 0)) (d (n "musli-value") (r "^0.0.88") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0dbqk4q0bpmq17qf2dp5asbmzl58ffrbldm458zldiynqq91svy1") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.89 (c (n "musli-json") (v "0.0.89") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.89") (k 0)) (d (n "musli-common") (r "^0.0.89") (k 0)) (d (n "musli-value") (r "^0.0.89") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1ri08gi811c68n42q0m9vhffgcpsiblph14asxwnhcyan6qmq1r3") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.90 (c (n "musli-json") (v "0.0.90") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.90") (k 0)) (d (n "musli-common") (r "^0.0.90") (k 0)) (d (n "musli-value") (r "^0.0.90") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1dfyhdah81x60c5ww9833jz5a9mnsjygby6j5jzjzari8p65lcxr") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.91 (c (n "musli-json") (v "0.0.91") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.91") (k 0)) (d (n "musli-common") (r "^0.0.91") (k 0)) (d (n "musli-value") (r "^0.0.91") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0rqxb84245xpyd9vp8kfcap9vfgzwlfh5bd6vkyj26nnaaiidb4v") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.92 (c (n "musli-json") (v "0.0.92") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.92") (k 0)) (d (n "musli-common") (r "^0.0.92") (k 0)) (d (n "musli-value") (r "^0.0.92") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0ybjis75ylvv50ny6agyafk1jgndggqyq0asv560yiwka5p7xh9g") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.93 (c (n "musli-json") (v "0.0.93") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.93") (k 0)) (d (n "musli-common") (r "^0.0.93") (k 0)) (d (n "musli-value") (r "^0.0.93") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "11z8s1nnb45pkksgczkhyf0cx13sjwla704zp1nf8s862mr0jxhk") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.94 (c (n "musli-json") (v "0.0.94") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.94") (k 0)) (d (n "musli-common") (r "^0.0.94") (k 0)) (d (n "musli-value") (r "^0.0.94") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "04b63ymc07ayqfgyl0a2bzjqc5mqx4g4gm0p501k02nba0a6wbxf") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.73")))

(define-public crate-musli-json-0.0.95 (c (n "musli-json") (v "0.0.95") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.95") (k 0)) (d (n "musli-common") (r "^0.0.95") (k 0)) (d (n "musli-value") (r "^0.0.95") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1dhp3z905ibri49l7m6f0nqj7sirgn4b36mfxxn30n15f5f91y0p") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.67")))

(define-public crate-musli-json-0.0.96 (c (n "musli-json") (v "0.0.96") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.96") (k 0)) (d (n "musli-common") (r "^0.0.96") (k 0)) (d (n "musli-value") (r "^0.0.96") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1q16fhqvj6qb2i325lgz1hl0961yiha06yqw45czka4a71ai2bvk") (f (quote (("test") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.67")))

(define-public crate-musli-json-0.0.97 (c (n "musli-json") (v "0.0.97") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.97") (k 0)) (d (n "musli-common") (r "^0.0.97") (k 0)) (d (n "musli-value") (r "^0.0.97") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1dz46063xb8jb4pda6ihb21qfvsmvnv0scn4938y6h626jp48x48") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.98 (c (n "musli-json") (v "0.0.98") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.98") (k 0)) (d (n "musli-common") (r "^0.0.98") (k 0)) (d (n "musli-value") (r "^0.0.98") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0qcjl3j8jilsqafdvybdjz1v94rlw17r5qqg3nf60zr9m1f26q4n") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.99 (c (n "musli-json") (v "0.0.99") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.99") (k 0)) (d (n "musli-common") (r "^0.0.99") (k 0)) (d (n "musli-value") (r "^0.0.99") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0r5c85n7zvb3dmszaa15qxvzvmiyc5ysri2ahbq3c4lizbvqlqzb") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.100 (c (n "musli-json") (v "0.0.100") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.100") (k 0)) (d (n "musli-common") (r "^0.0.100") (k 0)) (d (n "musli-value") (r "^0.0.100") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "0prcadgiis020y69r0skxq1byws9qqcf89a0mgr26fnxdjlkn0hm") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.101 (c (n "musli-json") (v "0.0.101") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.101") (k 0)) (d (n "musli-common") (r "^0.0.101") (k 0)) (d (n "musli-value") (r "^0.0.101") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1qb9v36ynvx30ip57z6w6i42bvxr84phazyp4nx6686jjfnbldfp") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.102 (c (n "musli-json") (v "0.0.102") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.102") (k 0)) (d (n "musli-common") (r "^0.0.102") (k 0)) (d (n "musli-value") (r "^0.0.102") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "13hg772pk11jyzi4pjk93v00ggv0gjj4rw2c15lj011vz8innnrm") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.103 (c (n "musli-json") (v "0.0.103") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.103") (k 0)) (d (n "musli-common") (r "^0.0.103") (k 0)) (d (n "musli-value") (r "^0.0.103") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "07ii54zjaq6wfy3x027lanjjirhfi0wrwagxq7hwgpn3n5rh1vfv") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.104 (c (n "musli-json") (v "0.0.104") (d (list (d (n "itoa") (r "^1.0.9") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.104") (k 0)) (d (n "musli-common") (r "^0.0.104") (k 0)) (d (n "musli-value") (r "^0.0.104") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.15") (d #t) (k 0)))) (h "1bb68y7ni4ahgng01sxnbkv7irm67z1bp29rbay4mw77fq6hvwig") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.105 (c (n "musli-json") (v "0.0.105") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.105") (k 0)) (d (n "musli-common") (r "^0.0.105") (k 0)) (d (n "musli-value") (r "^0.0.105") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0i4my2lymccnkbf7yzczw9x59g0nk2slwm208f84ql8m30xj98xb") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.106 (c (n "musli-json") (v "0.0.106") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.106") (k 0)) (d (n "musli-common") (r "^0.0.106") (k 0)) (d (n "musli-value") (r "^0.0.106") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0crk305b6wg6ylmzlwpcan81hgrik0ghgnq0ddia1ng4srhnkyc9") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.107 (c (n "musli-json") (v "0.0.107") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.107") (k 0)) (d (n "musli-common") (r "^0.0.107") (k 0)) (d (n "musli-value") (r "^0.0.107") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0pllf40hy2khy6chadp5xna555iwjdkxwk7bg76pvbwc7rdddgxy") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.108 (c (n "musli-json") (v "0.0.108") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.108") (k 0)) (d (n "musli-common") (r "^0.0.108") (k 0)) (d (n "musli-value") (r "^0.0.108") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0czwv1znfri3w1n3z09ms0ndk1byndyqc7fd7pjqflk9shvw8100") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.109 (c (n "musli-json") (v "0.0.109") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.109") (k 0)) (d (n "musli-common") (r "^0.0.109") (k 0)) (d (n "musli-value") (r "^0.0.109") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0kgkpc5xan8pvllpqhsy2j1ksmp6jg2b29hfny8myk63zbkj93ip") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.110 (c (n "musli-json") (v "0.0.110") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.110") (k 0)) (d (n "musli-common") (r "^0.0.110") (k 0)) (d (n "musli-value") (r "^0.0.110") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)))) (h "0zs3pp3vdbz4n8ngr75alkm1d39rhdadzy8np4bmms1x941816mi") (f (quote (("test" "musli-value") ("simdutf8" "musli-common/simdutf8") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-common/std" "musli-value?/std" "alloc" "lexical/std") ("alloc" "musli/alloc" "musli-common/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.111 (c (n "musli-json") (v "0.0.111") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.111") (k 0)) (d (n "musli-utils") (r "^0.0.111") (k 0)) (d (n "musli-value") (r "^0.0.111") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "0i6i6qhr7a7p6cs7cy9fpyz4mcc0lj4jd5cz4zb73lxcci0vaga3") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.112 (c (n "musli-json") (v "0.0.112") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.112") (k 0)) (d (n "musli-utils") (r "^0.0.112") (k 0)) (d (n "musli-value") (r "^0.0.112") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "05pq31g4axlh8ivz3wvpxwp1wc72pdlggag313az6ffzbyssl70n") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.113 (c (n "musli-json") (v "0.0.113") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.113") (k 0)) (d (n "musli-utils") (r "^0.0.113") (k 0)) (d (n "musli-value") (r "^0.0.113") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "130m2mjkicbscmxyz3adhph42irwzzch68m75h0x55praz7kn14p") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.114 (c (n "musli-json") (v "0.0.114") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.114") (k 0)) (d (n "musli-utils") (r "^0.0.114") (k 0)) (d (n "musli-value") (r "^0.0.114") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "178d5sx30s7r957shqawy2xfdvqrg3z9wancyyqx70sjfank9sra") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.115 (c (n "musli-json") (v "0.0.115") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.115") (k 0)) (d (n "musli-utils") (r "^0.0.115") (k 0)) (d (n "musli-value") (r "^0.0.115") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "09597i4zr2hzfp80kgacqpzhzir7bc8x28ks0j3i5mdmd4ypc4gd") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.116 (c (n "musli-json") (v "0.0.116") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.116") (k 0)) (d (n "musli-utils") (r "^0.0.116") (k 0)) (d (n "musli-value") (r "^0.0.116") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "1pwa5v4c0icfg3bia8i8jsnja779l2z3mil8y6psh54nq9j3f50d") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

(define-public crate-musli-json-0.0.117 (c (n "musli-json") (v "0.0.117") (d (list (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "lexical") (r "^6.1.1") (f (quote ("parse-floats"))) (k 0)) (d (n "musli") (r "^0.0.117") (k 0)) (d (n "musli-utils") (r "^0.0.117") (k 0)) (d (n "musli-value") (r "^0.0.117") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ryu") (r "^1.0.17") (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (o #t) (k 0)))) (h "1f4q13v3ginhq7cm1f4x9j5cvacksb8zqzrs6plzid9r8a3z2cba") (f (quote (("test" "musli-value") ("parse-full") ("default" "std" "alloc" "simdutf8" "musli-value" "parse-full")))) (s 2) (e (quote (("std" "musli/std" "musli-utils/std" "musli-value?/std" "alloc" "lexical/std" "simdutf8?/std") ("simdutf8" "dep:simdutf8") ("alloc" "musli/alloc" "musli-utils/alloc" "musli-value?/alloc")))) (r "1.76")))

