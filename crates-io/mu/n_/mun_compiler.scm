(define-module (crates-io mu n_ mun_compiler) #:use-module (crates-io))

(define-public crate-mun_compiler-0.3.0 (c (n "mun_compiler") (v "0.3.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "hir") (r "=0.3.0") (d #t) (k 0) (p "mun_hir")) (d (n "insta") (r "^0.16") (d #t) (k 2)) (d (n "lockfile") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mun_codegen") (r "=0.3.0") (d #t) (k 0)) (d (n "mun_diagnostics") (r "=0.1.0") (d #t) (k 0)) (d (n "mun_project") (r "=0.1.0") (d #t) (k 0)) (d (n "mun_syntax") (r "=0.3.0") (d #t) (k 0)) (d (n "mun_target") (r "=0.3.0") (d #t) (k 0)) (d (n "paths") (r "=0.1.0") (d #t) (k 0) (p "mun_paths")) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi-term") (r "^0.1.2") (d #t) (k 0)))) (h "0v1p1wyy504hkls6rp6pphh3vx7ji21s5198mp4gvgkc6dwaxz2n")))

(define-public crate-mun_compiler-0.4.0 (c (n "mun_compiler") (v "0.4.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (k 0)) (d (n "anyhow") (r "^1.0.31") (k 0)) (d (n "insta") (r "^1.12.0") (k 2)) (d (n "lockfile") (r "^0.4.0") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mun_codegen") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_diagnostics") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_hir") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_paths") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_project") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "mun_target") (r "^0.4.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (k 0)) (d (n "yansi-term") (r "^0.1.2") (k 0)))) (h "1z3msyf0d151i8j57bxlj26nwbs03dw9yr72hdjbjqx1d9ayzn6v")))

