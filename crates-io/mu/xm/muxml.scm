(define-module (crates-io mu xm muxml) #:use-module (crates-io))

(define-public crate-muxml-0.1.0 (c (n "muxml") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fraction") (r "^0.14.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1llljxf48dni9gcnldmhr0ngd9pci96s90lqadxdgjdshyldpc0s") (y #t)))

(define-public crate-muxml-0.1.1 (c (n "muxml") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fraction") (r "^0.14.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "normalize-line-endings") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1kr2b2rgny5k266gncdwfbj5m350ibn9xpznafyknd22r0d0xkwg")))

(define-public crate-muxml-0.1.2 (c (n "muxml") (v "0.1.2") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fraction") (r "^0.14.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "normalize-line-endings") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "00m1x7wlwwbddhggvkk15c78a10ai30hnlfyjdcs7p1kyirbppd3")))

(define-public crate-muxml-0.1.3 (c (n "muxml") (v "0.1.3") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fraction") (r "^0.14.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "normalize-line-endings") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "02qvp66x6xxs9brx9y54zjkmlig2cw9pi2k55n929kmq4ys3kkvl")))

