(define-module (crates-io mu si musig2) #:use-module (crates-io))

(define-public crate-musig2-0.0.1 (c (n "musig2") (v "0.0.1") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.0.7") (k 0)) (d (n "secp") (r "^0.0.7") (f (quote ("serde" "rand"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "12xvlcsignsxr8n5fihfy2c5j0zjcn788a91psnd88jgcx1q15p1") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.2 (c (n "musig2") (v "0.0.2") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.0.7") (k 0)) (d (n "secp") (r "^0.0.7") (f (quote ("serde" "rand"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "05a9xbvxxnczwj861xbr2hkwbjazw8mv594asiqix0dqmbwf39j1") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.3 (c (n "musig2") (v "0.0.3") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.1.0") (k 0)) (d (n "secp") (r "^0.1.0") (f (quote ("serde" "rand"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "0ghmf7gzb6zdnqhfi2akihr9lkvg6n3a6z4qlr6nbdbdq5vl2aqn") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.4 (c (n "musig2") (v "0.0.4") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "0gy8zcz281x6lrfzi3gr4q4ffwcdhfmmirghrb4a4977qsmyfhqz") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.5 (c (n "musig2") (v "0.0.5") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "1pnn53fs9sr60jyg15f0f1pgss2qrkrh10gsisv4wsdj8mj8kcqk") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.6 (c (n "musig2") (v "0.0.6") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "1rcdixswc9g38kjyhxic8sfgldc0gywaa16mz52y31n2sips0hjf") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.7 (c (n "musig2") (v "0.0.7") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "0yllzjdwrqrr926yvkgx6w099g7h1mirwgryrlmp2qhyd1skqifp") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.8 (c (n "musig2") (v "0.0.8") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "013l523i9dqbg3by902hzlsq07qk3afvnlwvicxk9aldifl9y888") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.9 (c (n "musig2") (v "0.0.9") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "0abqsd6jmlsgkvwrh7v5jm6bxrfgv65ja2n2h5ipl5s5q4aabm6a") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.10 (c (n "musig2") (v "0.0.10") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "08qbpy4kfdgi24khxld82k9cia4mxpyksf31icjqwkz4vdg12lh8") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

(define-public crate-musig2-0.0.11 (c (n "musig2") (v "0.0.11") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "k256") (r "^0.13.1") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secp") (r "^0.2.0") (k 0)) (d (n "secp") (r "^0.2.0") (f (quote ("serde" "rand" "secp256k1-invert"))) (k 2)) (d (n "secp256k1") (r "^0.28.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "subtle") (r "^2.5.0") (k 0)))) (h "10vyasknah1gy6scr60c3p9br4449s66g1syr8qznny7mbpqpl5y") (f (quote (("default" "secp256k1")))) (s 2) (e (quote (("serde" "dep:serde" "secp/serde" "dep:serdect") ("secp256k1" "dep:secp256k1" "secp/secp256k1") ("rand" "dep:rand" "secp/rand") ("k256" "dep:k256" "secp/k256"))))))

