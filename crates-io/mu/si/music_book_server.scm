(define-module (crates-io mu si music_book_server) #:use-module (crates-io))

(define-public crate-music_book_server-0.1.0 (c (n "music_book_server") (v "0.1.0") (d (list (d (n "actix") (r "^0.13.0") (d #t) (k 0)) (d (n "actix-files") (r "^0.6.0") (d #t) (k 0)) (d (n "actix-multipart") (r "^0.4.0") (d #t) (k 0)) (d (n "actix-web") (r "^4.0.1") (d #t) (k 0)) (d (n "actix-web-actors") (r "^4.1.0") (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.0") (d #t) (k 0)) (d (n "mongodb") (r "^2.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "12sjmw8fzgga68ymywm08zvf3d5kn1z8savqk6s2v89a2yk52byq")))

(define-public crate-music_book_server-0.1.1 (c (n "music_book_server") (v "0.1.1") (d (list (d (n "actix") (r "^0.13.0") (d #t) (k 0)) (d (n "actix-cors") (r "^0.6.1") (d #t) (k 0)) (d (n "actix-files") (r "^0.6.0") (d #t) (k 0)) (d (n "actix-multipart") (r "^0.4.0") (d #t) (k 0)) (d (n "actix-web") (r "^4.0.1") (d #t) (k 0)) (d (n "actix-web-actors") (r "^4.1.0") (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.0") (d #t) (k 0)) (d (n "mongodb") (r "^2.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0krwcw8i74pfhll1qa7ryaxbg0hym4c5wkpdqw86x42x8c4690gy")))

