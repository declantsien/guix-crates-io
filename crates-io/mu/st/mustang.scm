(define-module (crates-io mu st mustang) #:use-module (crates-io))

(define-public crate-mustang-0.0.0 (c (n "mustang") (v "0.0.0") (d (list (d (n "c-scape") (r "^0.0.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "origin") (r "^0.0.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.1") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"riscv64\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1560advvdw772bj5sl3kmc9bjlg779mih5wwap9j480x8mp8y5bj") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.1.0 (c (n "mustang") (v "0.1.0") (d (list (d (n "c-scape") (r "^0.1.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "origin") (r "^0.1.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.1") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"riscv64\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1i1jyacximcylfb5mqbl1mys0jd8a9931h20biyncapj1z18vb5q") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.2.0 (c (n "mustang") (v "0.2.0") (d (list (d (n "c-scape") (r "^0.2.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "origin") (r "^0.2.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(target_arch = \"arm\"))") (k 0)))) (h "0vjj3a1jr1d3jz3gpgig69ihwgqjmjvd5lsywbrkzr1vrzbh1cl0") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default" "threads"))))))

(define-public crate-mustang-0.3.0 (c (n "mustang") (v "0.3.0") (d (list (d (n "c-scape") (r "^0.3.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "origin") (r "^0.3.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(target_arch = \"arm\"))") (k 0)))) (h "1krxr1gw6sx453bipbxybhfv94ipgq8gbb8pf1h2f6f2zavbn0am") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default" "threads"))))))

(define-public crate-mustang-0.4.0 (c (n "mustang") (v "0.4.0") (d (list (d (n "c-scape") (r "^0.4.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "origin") (r "^0.4.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(target_arch = \"arm\"))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1aiwfw8q8mc58s5d13s81zbra2fgnnqy4krld8ahkz7nip0gmc01") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.4.1 (c (n "mustang") (v "0.4.1") (d (list (d (n "c-scape") (r "^0.4.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "origin") (r "^0.4.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(not(target_arch = \"arm\"))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1p9b921jyc5zsk51fjbn32kf3gxhnxqf0cr4g8ygqdfriax38xar") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.5.0 (c (n "mustang") (v "0.5.0") (d (list (d (n "c-scape") (r "^0.5.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.5.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1jv1fs5nhl0n96pai6pf4pg48k9wljrajis3pyjg6iysvfwwvl3c") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.5.1 (c (n "mustang") (v "0.5.1") (d (list (d (n "c-scape") (r "^0.5.0") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.5.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "09an9x3mhggvlx1wbkhlpdhh4jy3z60n1hc2kcrwikh0k2a8hdp5") (f (quote (("threads" "origin/threads" "c-scape/threads") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.6.1 (c (n "mustang") (v "0.6.1") (d (list (d (n "c-gull") (r "^0.6.1") (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.6.1") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "01a9avy3wj98rb73pfgvxrq1frvxw246rgn63pzqsxchfsqvdjzp") (f (quote (("threads" "origin/threads" "c-gull/threads") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads"))))))

(define-public crate-mustang-0.7.0 (c (n "mustang") (v "0.7.0") (d (list (d (n "c-gull") (r "^0.7.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.7.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0x322cqh4g561c2kw9g84mibm5b3n8sj2fi50g4kf7lmzygjw2fh") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.0 (c (n "mustang") (v "0.8.0") (d (list (d (n "c-gull") (r "^0.8.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1lca08ahvzhawd5bs5bvh4wjv01k45l86975zwrxdfwhlpvalbhi") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.1 (c (n "mustang") (v "0.8.1") (d (list (d (n "c-gull") (r "^0.8.1") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.1") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0mgia8n1jr33mdcfwa2azkwnw8sgxiqrhvilb4g1fm8vgl424kmg") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.2 (c (n "mustang") (v "0.8.2") (d (list (d (n "c-gull") (r "^0.8.2") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.2") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0nn04xqpxbzcq1qnfd2z5hi04614v1kygrrs65asndblzh7xq15b") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.3 (c (n "mustang") (v "0.8.3") (d (list (d (n "c-gull") (r "^0.8.3") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.3") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1a1k68x53llz2q7cczx22xl3jrsi9nppfm4w78rz1dlxvxd6xznj") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.4 (c (n "mustang") (v "0.8.4") (d (list (d (n "c-gull") (r "^0.8.4") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.4") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0p3w68k69cwgn4biad07nh7dzyv3036239wvyqxd8n7ykcgffbaz") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.5 (c (n "mustang") (v "0.8.5") (d (list (d (n "c-gull") (r "^0.8.5") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.5") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1sybrpr1cyadaqy93ihr7wmq3lcnh0a0aikqwyhvkyy2brw6ycnb") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.6 (c (n "mustang") (v "0.8.6") (d (list (d (n "c-gull") (r "^0.8.6") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.6") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "16h6cmhhmax9k1yx9dfhdgy6gw71scqridg3bib8jsjx4jhpka97") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.7 (c (n "mustang") (v "0.8.7") (d (list (d (n "c-gull") (r "^0.8.7") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.7") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1pwh74vc9s2mmzvlrcnzpr2k3a4r85y2syxc5g6hm6fc007y4fi0") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.8 (c (n "mustang") (v "0.8.8") (d (list (d (n "c-gull") (r "^0.8.8") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.8") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1d3ficjynarn4asnsd4h87ximi9xf8a9m419rmfnhyv195h1xy68") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.9 (c (n "mustang") (v "0.8.9") (d (list (d (n "c-gull") (r "^0.8.9") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.9") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0c7gk7mcl0i9w7yzkmz4qdpi1f8g3xgjpp9sf3lx2zi2sxfdzxiw") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.10 (c (n "mustang") (v "0.8.10") (d (list (d (n "c-gull") (r "^0.8.10") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.10") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0lj6yisac7hrmf1194blahinzc433hrgmyjlnqmk8bzmdhl4kvij") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.11 (c (n "mustang") (v "0.8.11") (d (list (d (n "c-gull") (r "^0.8.11") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.11") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1q6f5raz0kgigsn1w57znlg8h8rasljbs979why8fgb1dk5cjfgj") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.12 (c (n "mustang") (v "0.8.12") (d (list (d (n "c-gull") (r "^0.8.12") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.12") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "16b3y5jxnjp2chcik7a3ppylmxss1hyialf4fmb0c2l8kf8283dm") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.8.13 (c (n "mustang") (v "0.8.13") (d (list (d (n "c-gull") (r "^0.8.13") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.8.13") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1xv0lvz1f2ab14qagcv6hnqblmn7jh0w01n8c9vnfvl3z26hxhg0") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.9.0 (c (n "mustang") (v "0.9.0") (d (list (d (n "c-gull") (r "^0.9.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "dlmalloc") (r "^0.2") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.9.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.1.3") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1c6gmwqdkfw7k2kv1dsmzvcv6c8bw5mnad4vs9zb0q1shlyjhjc7") (f (quote (("threads" "origin/threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.10.0 (c (n "mustang") (v "0.10.0") (d (list (d (n "c-gull") (r "^0.10.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "origin") (r "^0.12.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.2.0") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1hy55fwlin0qwycc1iczkbgzq7yhp13yvrbj2qnsbwnk88vqa6h2") (f (quote (("threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.11.0 (c (n "mustang") (v "0.11.0") (d (list (d (n "c-gull") (r "^0.11.0") (f (quote ("take-charge"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cc") (r "^1.0.68") (o #t) (d #t) (k 1)) (d (n "origin") (r "^0.13.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.2.0") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1xlwvp1nwgik5qhvz3pg295n7514y14kzn4rawkxf62d2jizy4c7") (f (quote (("threads" "c-gull/threads") ("std" "c-gull/default") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "threads" "std"))))))

(define-public crate-mustang-0.12.0 (c (n "mustang") (v "0.12.0") (d (list (d (n "c-gull") (r "^0.12.0") (f (quote ("take-charge"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.13.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.2.0") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0zvbw1jmxw7759bgqz6mvzl5s57q8f8f1cfsw8ny86m0lcmrnp81") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "thread" "std"))))))

(define-public crate-mustang-0.13.0 (c (n "mustang") (v "0.13.0") (d (list (d (n "c-gull") (r "^0.14.0") (f (quote ("take-charge" "call-main" "malloc-via-rust-global-alloc" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.13.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.2.0") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "0ykf1732c63wyjs39i2wi7a55vwyk64hfk5gamdhmwlayzlyss9n") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "thread" "std"))))))

(define-public crate-mustang-0.13.1 (c (n "mustang") (v "0.13.1") (d (list (d (n "c-gull") (r "^0.14.0") (f (quote ("take-charge" "call-main" "malloc-via-rust-global-alloc" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "origin") (r "^0.13.0") (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "unwinding") (r "^0.2.0") (f (quote ("unwinder" "dwarf-expr" "hide-trace" "fde-phdr-dl" "fde-registry" "libc"))) (t "cfg(all(target_vendor = \"mustang\", not(target_arch = \"arm\")))") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "1iq404fsf9spciff4kb4p16wf9m61l343gipmj5ck56c2136wwdg") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "origin/max_level_off") ("log" "origin/log") ("env_logger" "origin/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "thread" "std"))))))

(define-public crate-mustang-0.13.2 (c (n "mustang") (v "0.13.2") (d (list (d (n "c-gull") (r "^0.14.5") (f (quote ("take-charge" "call-main" "malloc-via-rust-global-alloc" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "rustix-dlmalloc") (r "^0.1.0") (f (quote ("global"))) (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_vendor = \"mustang\")") (k 0)))) (h "10sag0qypagrsnpwj7n27prprg8d4fri0pcc1sg8gw5kp7v1cns3") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default-alloc" "rustix-dlmalloc") ("default" "default-alloc" "thread" "std"))))))

(define-public crate-mustang-0.14.0 (c (n "mustang") (v "0.14.0") (d (list (d (n "c-gull") (r "^0.14.5") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 2)))) (h "064pyjx03k0zsfq0gpzz0hpfwvwn90qh7d5hy4xdwsvj3g8aybjl") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std"))))))

(define-public crate-mustang-0.14.1 (c (n "mustang") (v "0.14.1") (d (list (d (n "c-gull") (r "^0.15.0") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 2)))) (h "17zasrkn531jsyjafccphfv0wqi045yfaaxj47n1bi9iyg5r3kpg") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std"))))))

(define-public crate-mustang-0.14.2 (c (n "mustang") (v "0.14.2") (d (list (d (n "c-gull") (r "^0.15.0") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 2)))) (h "006z224q96d5yjn5i510asnidi9hcqrnxhycdh6cvdgmigqd1ams") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std"))))))

(define-public crate-mustang-0.14.3 (c (n "mustang") (v "0.14.3") (d (list (d (n "c-gull") (r "^0.15.0") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 2)))) (h "01krhkj2f2a8rk918r3fh1vq0k492qxn2gxh355yz16rkzw68sdy") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std"))))))

(define-public crate-mustang-0.14.4 (c (n "mustang") (v "0.14.4") (d (list (d (n "c-gull") (r "^0.15.0") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 2)))) (h "0l6qw1i9nmp010v1qgsddwffyf8n525fmd3021ckqw75czzi9kjl") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std") ("atomic-dbg-logger" "c-gull/atomic-dbg-logger"))))))

(define-public crate-mustang-0.14.5 (c (n "mustang") (v "0.14.5") (d (list (d (n "c-gull") (r "^0.15.41") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 2)))) (h "0x05k2m4k0zsvfysdn5s2211br4b6i3nfbic5ifi5pqdkdbfcn4y") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std") ("atomic-dbg-logger" "c-gull/atomic-dbg-logger"))))))

(define-public crate-mustang-0.14.6 (c (n "mustang") (v "0.14.6") (d (list (d (n "c-gull") (r "^0.16.0") (f (quote ("take-charge" "call-main" "malloc-via-crates" "define-mem-functions"))) (t "cfg(target_vendor = \"mustang\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "ctor") (r "^0.2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.138") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 2)))) (h "1vbq8p6gzgpcg29vjz4w5aa0rsxgz5ac7xwc3gl4xvzhryw13dsp") (f (quote (("thread" "c-gull/thread") ("std" "c-gull/std") ("max_level_off" "c-gull/max_level_off") ("log" "c-gull/log") ("experimental-relocate" "c-gull/experimental-relocate") ("env_logger" "c-gull/env_logger") ("default" "thread" "std") ("atomic-dbg-logger" "c-gull/atomic-dbg-logger"))))))

