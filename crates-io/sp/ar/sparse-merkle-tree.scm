(define-module (crates-io sp ar sparse-merkle-tree) #:use-module (crates-io))

(define-public crate-sparse-merkle-tree-0.1.0-alpha1 (c (n "sparse-merkle-tree") (v "0.1.0-alpha1") (d (list (d (n "blake2b-rs") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)))) (h "0gd90qd9hp1vas7sgalnrn523h8b2bpdrxssm2wz5zps2m4lskdp") (y #t)))

(define-public crate-sparse-merkle-tree-0.1.0-alpha2 (c (n "sparse-merkle-tree") (v "0.1.0-alpha2") (d (list (d (n "blake2b-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "064630wwfwjj8j2009shq5qzzcz7xw54hcac0f4b2nbkvibyvqy5") (y #t)))

(define-public crate-sparse-merkle-tree-0.1.0-alpha3 (c (n "sparse-merkle-tree") (v "0.1.0-alpha3") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0mv0gn3n6fwvh60lx5b5pq3dmwd9qk9m827ylbs2ypyzjkv21hxf") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.1.0 (c (n "sparse-merkle-tree") (v "0.1.0") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "19vfbasfs17pgvh9cplg7xnad1s7n9x9mwc46k60lkql20fyqx2s") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.1.1 (c (n "sparse-merkle-tree") (v "0.1.1") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "12f2k3ikhfji2f9v4vk9p6hcmhxc4ihi1c3w4nsr4hqx10s36khr") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.1.2 (c (n "sparse-merkle-tree") (v "0.1.2") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "08yihk6bgvf9kcnvhcql5ajvm01vhmy5d77bhk4v60fkg7vw59kb") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.1.3 (c (n "sparse-merkle-tree") (v "0.1.3") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0mpb0m6x9hp4fn2zqskl6h6drv7f4jj5hvr5nnzi1h70m6swjqqz") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.2.0 (c (n "sparse-merkle-tree") (v "0.2.0") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0v7v0479qxn4sn75fzphggqv5pawkim6my9853kfm8zl03a14m37") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.3.0 (c (n "sparse-merkle-tree") (v "0.3.0") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "01ldjqlsg86r8pp55310w0qd7a6jjmaw8nhjp1cll65gr90jwsx1") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.3.1-pre (c (n "sparse-merkle-tree") (v "0.3.1-pre") (d (list (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0d4sy5g7zy4dnbwmp3dfm66bygncgcz0407rkq4ihp2nkvvjg61i") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.4.0-rc1 (c (n "sparse-merkle-tree") (v "0.4.0-rc1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "046c4bzkn3wazmjwp5kpr50y6zirk2lbsiblajc17rrr1g00p1pc") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.0-rc1 (c (n "sparse-merkle-tree") (v "0.5.0-rc1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "070fvrl06s99warscj5d8x1wn16fxc5m6hm4x6ady2yqz8zqhzck") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.0-rc2 (c (n "sparse-merkle-tree") (v "0.5.0-rc2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1snvywqvw9kds4sqwan5h1a4cvw30if78v2yk2jild5b8gxa1psf") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.2-rc1 (c (n "sparse-merkle-tree") (v "0.5.2-rc1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1vs02n9gksinc3v228zn3ifknhic734q95r29lm8xwijb4x6gj3k") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.2 (c (n "sparse-merkle-tree") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1vv7idrl08b8plhkv61s99sh4v5l2cpjn0rpxnhfgdsyszvvqw6f") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.3 (c (n "sparse-merkle-tree") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "02hjjrl7ljd94223ix9ddcwvs98wjmka5islbm5k17fbi7n18hpq") (f (quote (("std") ("default" "std" "blake2b") ("blake2b" "blake2b-rs"))))))

(define-public crate-sparse-merkle-tree-0.5.4 (c (n "sparse-merkle-tree") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0f911yrsw7wpbj9as45fns3x576qsd5kg8d2dw1gq89mfzm24gh0") (f (quote (("std") ("smtc") ("default" "std"))))))

(define-public crate-sparse-merkle-tree-0.6.0 (c (n "sparse-merkle-tree") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0qija5pb9blfcs573syg1fxfgkqm16mzsrbnfvz5z9q69yv9lhx4") (f (quote (("trie") ("std") ("smtc") ("default" "std")))) (y #t)))

(define-public crate-sparse-merkle-tree-0.6.1 (c (n "sparse-merkle-tree") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "blake2b-rs") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "12vl933ps2k7z7wp8a8nn2g76nhpj9129hdbir9fbswi4k4zclc8") (f (quote (("trie") ("std") ("smtc") ("default" "std"))))))

