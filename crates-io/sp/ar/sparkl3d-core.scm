(define-module (crates-io sp ar sparkl3d-core) #:use-module (crates-io))

(define-public crate-sparkl3d-core-0.1.0 (c (n "sparkl3d-core") (v "0.1.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("macros" "libm" "bytemuck"))) (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0qs2d9h7cn0lqj9g6j1psqpdqzxiwq678kd0b6nnxwn6348chc73") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("f32") ("dim3") ("default" "dim3" "f32") ("cuda" "cust" "cust_core" "nalgebra/cuda"))))))

(define-public crate-sparkl3d-core-0.2.0 (c (n "sparkl3d-core") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm" "bytemuck"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)))) (h "10gwdv36lkrivx94srwk54lkmgx9k8y7113lh9zf5jmm4a4ivckg") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("f32") ("dim3") ("default" "dim3" "f32") ("cuda" "cust" "cust_core" "nalgebra/cuda"))))))

