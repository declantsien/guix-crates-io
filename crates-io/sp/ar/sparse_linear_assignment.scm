(define-module (crates-io sp ar sparse_linear_assignment) #:use-module (crates-io))

(define-public crate-sparse_linear_assignment-0.1.0 (c (n "sparse_linear_assignment") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "05zz1mn9l22g5mwjb7c6c5x4zmc2pxy8d2b0m2pbcbak044kfpzp") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward")))) (y #t)))

(define-public crate-sparse_linear_assignment-0.1.1 (c (n "sparse_linear_assignment") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "13jghxds8mmp2xlznnwi5jp1vaqb8fv6r1r2hhqig2ds61ybpgdh") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward")))) (y #t)))

(define-public crate-sparse_linear_assignment-0.1.2 (c (n "sparse_linear_assignment") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1qlvp4aqqixks2lxdj9hh2a6aax7n6g1x483yvndxf16q8vv0b1k") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward")))) (y #t)))

(define-public crate-sparse_linear_assignment-0.1.3 (c (n "sparse_linear_assignment") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "09c81m84l99a5wmz1xrkzdjf0m439062pxq545s1lln1f7wjja27") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward")))) (y #t)))

(define-public crate-sparse_linear_assignment-0.1.4 (c (n "sparse_linear_assignment") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "092imamlys2b8r310rlarc9cs99d3cmas0yxblf8wqra76avrx70") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward")))) (y #t)))

(define-public crate-sparse_linear_assignment-0.1.5 (c (n "sparse_linear_assignment") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "reservoir-sampling") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "11wl387fda416q8qrjcncia5bshia9zx3x5wy4vqnxya5cmvxw1a") (f (quote (("khosla" "num-integer") ("forward") ("default" "khosla" "forward"))))))

