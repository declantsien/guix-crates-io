(define-module (crates-io sp if spiffe) #:use-module (crates-io))

(define-public crate-spiffe-0.1.0 (c (n "spiffe") (v "0.1.0") (d (list (d (n "asn1") (r "^0.5.3") (d #t) (k 0) (p "simple_asn1")) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec"))) (k 0)) (d (n "grpcio-sys") (r "^0.9.0") (d #t) (k 1)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^7.2.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.6.1") (d #t) (k 0)) (d (n "protobuf") (r "^2.24.1") (d #t) (k 0)) (d (n "protoc-grpcio") (r "^3.0.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.9.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "131gxkq6chskgi4a6jw44n7mzc9yv0wixlpmy4jffcmq8shalvyn")))

(define-public crate-spiffe-0.1.1 (c (n "spiffe") (v "0.1.1") (d (list (d (n "asn1") (r "^0.5.3") (d #t) (k 0) (p "simple_asn1")) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec"))) (k 0)) (d (n "grpcio-sys") (r "^0.9.0") (d #t) (k 1)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^7.2.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.35") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.7.0") (d #t) (k 0)) (d (n "protobuf") (r "^2.24.1") (d #t) (k 0)) (d (n "protoc-grpcio") (r "^3.0.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.9.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1qx90b9p9y54k9c4mhximfl7abc7lqwgxx3qnphv70dvk93rr4ah")))

(define-public crate-spiffe-0.2.0 (c (n "spiffe") (v "0.2.0") (d (list (d (n "asn1") (r "^0.5.3") (d #t) (k 0) (p "simple_asn1")) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec" "use-bindgen"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3.2") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^7.2.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.35") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.7.0") (d #t) (k 0)) (d (n "protobuf") (r "^2.24.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.9.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "020hm7mrl6l6b85lhj5rbls1xvbx0wdk69a2wwr9fy55zhjci7r9")))

(define-public crate-spiffe-0.2.1 (c (n "spiffe") (v "0.2.1") (d (list (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "grpcio") (r "^0.9") (f (quote ("protobuf-codec" "use-bindgen"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.8") (d #t) (k 0)) (d (n "protobuf") (r "^2.27") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.13") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "049sx4vnb5shsb19zw9gw8vabcy4y6m51mv1xc3cr6jvnbn620gk")))

(define-public crate-spiffe-0.2.2 (c (n "spiffe") (v "0.2.2") (d (list (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "grpcio") (r "^0.12") (f (quote ("protobuf-codec"))) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.10") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.15") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "072kdgqqacganpq6ah30nsfiq14ccmj1a7xzxvrxbcpschc893lx")))

(define-public crate-spiffe-0.3.0 (c (n "spiffe") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 1)) (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.10") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-types") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "test-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("prost" "codegen" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.9") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.15") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "097y1ya9wqvlqx50yng29c8wbrfgb7vaws5xs9isn547giw7ph6y") (f (quote (("integration-tests"))))))

(define-public crate-spiffe-0.3.1 (c (n "spiffe") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 1)) (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.10") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-types") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "test-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("prost" "codegen" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.9") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.15") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "005ik5j0rz07xrpk5fd9cfqrlkzc34wr3m3bzd8hvxawi0g8q8n4") (f (quote (("integration-tests"))))))

(define-public crate-spiffe-0.4.0 (c (n "spiffe") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 1)) (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.10") (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "test-util"))) (o #t) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.15") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "05hy0czckdpcipw2ps6cy06x2dyxrh0zvl0czyspmh02aavzp03h") (f (quote (("workload-api" "prost" "prost-types" "tokio" "tokio-stream" "tower" "tokio-util" "log") ("spiffe-types") ("integration-tests") ("default" "spiffe-types" "workload-api"))))))

(define-public crate-spiffe-0.5.0 (c (n "spiffe") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "asn1") (r "^0.6") (d #t) (k 0) (p "simple_asn1")) (d (n "jsonwebkey") (r "^0.3") (f (quote ("jsonwebtoken" "jwt-convert"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3") (f (quote ("generate"))) (d #t) (k 2)) (d (n "jsonwebtoken") (r "^8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "pkcs8") (r "^0.10") (d #t) (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "x509-parser") (r "^0.16") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1y13yw8pcfsjqlaqjx6wqfplfp2r9xkzivskqwkxwqld295rddxc") (f (quote (("workload-api" "prost" "prost-types" "tokio" "tokio-stream" "tower" "tokio-util" "log") ("spiffe-types") ("integration-tests") ("default" "spiffe-types" "workload-api"))))))

