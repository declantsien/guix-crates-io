(define-module (crates-io sp l- spl-zk-token-sdk) #:use-module (crates-io))

(define-public crate-spl-zk-token-sdk-0.1.0 (c (n "spl-zk-token-sdk") (v "0.1.0") (d (list (d (n "aes-gcm-siv") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "cipher") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("dummy"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "merlin") (r "^2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "sha3") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-program") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-sdk") (r "=1.9.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 2)) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "10mx3qnc2ga8zbksikfrm833hjqm9jbfw9ljivi68f2pps067jvi") (y #t)))

