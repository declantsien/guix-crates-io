(define-module (crates-io sp ot spotify-lyrics) #:use-module (crates-io))

(define-public crate-spotify-lyrics-0.0.0 (c (n "spotify-lyrics") (v "0.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "07l0g0k8g7svb0qhaqkhmgv7japb4zmln4gn52ph3fs148czgi0p") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.1 (c (n "spotify-lyrics") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1npcyrx34g43f6al741dwpkmx6333zhp80xjjb78rz8gfxa5g44c") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.2 (c (n "spotify-lyrics") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1q185gs0ppq3nyjaar7lcp868jpcx0r1li20d6dcqpqglnickkiq") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.3 (c (n "spotify-lyrics") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0j4l97f4za5mkr6nk113l705m9hdxgbq9f4jpnnglksirx1jd665") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.4 (c (n "spotify-lyrics") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0jf7bf5ha34k0v9w16kijf6hq6krjpj02vaf17vnfyzxxapbkblb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.5 (c (n "spotify-lyrics") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "15zamagihpvyqrsnvc8gnmcqiyv70fbcy0syv4z0zpmcz16m2yyl") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.6 (c (n "spotify-lyrics") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0zvqfpvylrp1lypr6whhz5cgngnk5v81jc4hjx7zx469hxf992wc") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

(define-public crate-spotify-lyrics-0.0.7 (c (n "spotify-lyrics") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("cookies" "json"))) (k 0)) (d (n "rookie") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1iqm7lxmn9cw8rdcfy71pn5k0li7kab59v2759rdsxaicycsgzjb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("is_sync" "maybe-async/is_sync" "reqwest/blocking") ("default" "browser" "rustls-tls")))) (s 2) (e (quote (("browser" "dep:rookie"))))))

