(define-module (crates-io sp -c sp-consensus-beefy) #:use-module (crates-io))

(define-public crate-sp-consensus-beefy-0.0.0 (c (n "sp-consensus-beefy") (v "0.0.0") (h "1ps70gi8l2gi39s1xfk7kj8rxqgrj2n6xa2xiwyl43cl296m2rkw")))

(define-public crate-sp-consensus-beefy-4.0.0 (c (n "sp-consensus-beefy") (v "4.0.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^17.0.0") (k 0)) (d (n "sp-application-crypto") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-io") (r "^20.0.0") (k 0)) (d (n "sp-keystore") (r "^0.24.0") (d #t) (k 2)) (d (n "sp-mmr-primitives") (r "^17.0.0") (k 0)) (d (n "sp-runtime") (r "^21.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "12g5nyw87yqnnlma11m517r91zvgzz511cln614iicvn0k84bn14") (f (quote (("std" "codec/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-consensus-beefy-5.0.0 (c (n "sp-consensus-beefy") (v "5.0.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^18.0.0") (k 0)) (d (n "sp-application-crypto") (r "^21.0.0") (k 0)) (d (n "sp-core") (r "^19.0.0") (k 0)) (d (n "sp-io") (r "^21.0.0") (k 0)) (d (n "sp-keystore") (r "^0.25.0") (d #t) (k 2)) (d (n "sp-mmr-primitives") (r "^18.0.0") (k 0)) (d (n "sp-runtime") (r "^22.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "1qhmgsa1j7s9i61wid5cp4nvq9svwrw4y5z64cilykar711xxlgi") (f (quote (("std" "codec/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-consensus-beefy-6.0.0 (c (n "sp-consensus-beefy") (v "6.0.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^19.0.0") (k 0)) (d (n "sp-application-crypto") (r "^22.0.0") (k 0)) (d (n "sp-core") (r "^20.0.0") (k 0)) (d (n "sp-io") (r "^22.0.0") (k 0)) (d (n "sp-keystore") (r "^0.26.0") (d #t) (k 2)) (d (n "sp-mmr-primitives") (r "^19.0.0") (k 0)) (d (n "sp-runtime") (r "^23.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "09clphvhc288zvvyrdnxjkrj3jy1rnnf6ydzlsqxlx0aj8n1d3fj") (f (quote (("std" "codec/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-consensus-beefy-6.1.0-dev.2 (c (n "sp-consensus-beefy") (v "6.1.0-dev.2") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-core") (r "^21.1.0-dev.2") (k 0)) (d (n "sp-io") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-mmr-primitives") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "17mzybfhsfb1v0gyqqk9dvniflxaz26adys1vqjwamjzcjjlwg0v") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-6.1.0-dev.3 (c (n "sp-consensus-beefy") (v "6.1.0-dev.3") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-core") (r "^21.1.0-dev.3") (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-mmr-primitives") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "1f81qhr8fn7csmp0r5v791lircry3pm9zqqz7imi2vwvcjf3jr7k") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-6.1.0-dev.5 (c (n "sp-consensus-beefy") (v "6.1.0-dev.5") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-core") (r "=21.1.0-dev.5") (k 0)) (d (n "sp-io") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-mmr-primitives") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "170hb1drfg369xb3s4wdqn7zgyyry058v4avk6ca4y1v2mh3smsr") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-6.1.0-dev.6 (c (n "sp-consensus-beefy") (v "6.1.0-dev.6") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-mmr-primitives") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "09bzqmbgpr8ry1a5k2j04y7i09xvdk0193r0qbagbkhvhjlshd1j") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-7.0.0 (c (n "sp-consensus-beefy") (v "7.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^20.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)))) (h "01b1pkw6fgczqxf81ydmvvijqdsqxqc0r8s8xz3v4428dh1h5ym2") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-8.0.0 (c (n "sp-consensus-beefy") (v "8.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^21.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "0yqvn0vgac8z7hkkqw337ax6ilj2xqi41f0i5m894vc8rrbpgn2w") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-9.0.0-dev.1 (c (n "sp-consensus-beefy") (v "9.0.0-dev.1") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (k 0)) (d (n "sp-io") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-mmr-primitives") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "19y4cgm5h3clc0hgg1fq16a8dpihffcr734s5pjh1bij4mrbmxxj") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-9.0.0 (c (n "sp-consensus-beefy") (v "9.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^22.0.0") (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^22.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "056sgi5d2wa4zri16jp09gvqiqq3xy012ghch41p9g875igncs8r") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-10.0.0 (c (n "sp-consensus-beefy") (v "10.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^23.0.0") (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^23.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "1id0mpp0vgf3c39ahsnkpjrp3i2vjmm3vi25wqkmfx7ahklqzqch") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-11.0.0 (c (n "sp-consensus-beefy") (v "11.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^24.0.0") (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (k 0)) (d (n "sp-core") (r "^26.0.0") (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "00iddyrmsv25mx70rf2hqfl7gwh443k5vxjkm5q0bmc7rd9csgi5") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-12.0.0 (c (n "sp-consensus-beefy") (v "12.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^25.0.0") (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (k 0)) (d (n "sp-core") (r "^27.0.0") (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "1kx4c5d8r5xlhzyidy2si98iq6iwgiiv5kf4sd6j47xcd97jm6rv") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-13.0.0 (c (n "sp-consensus-beefy") (v "13.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^26.0.0") (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "0p0vmhs52ngs6p47pazcry8n8hfsjymy8ygynpkg0wx6jr0l56p0") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-14.0.0 (c (n "sp-consensus-beefy") (v "14.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-mmr-primitives") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "0gj05j87dhhmfaxfwk2yaxzzny1sbgby3w0d065n4mzghh58kzwh") (f (quote (("std" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-15.0.0 (c (n "sp-consensus-beefy") (v "15.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^28.0.0") (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-keystore") (r "^0.36.0") (k 0)) (d (n "sp-mmr-primitives") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "1snpd3zhaq8w2zs2lszrj7z5w84x9lrapndsajpjncz4pmal0w9m") (f (quote (("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("std" "codec/std" "dep:lazy_static" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-keystore/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-16.0.0 (c (n "sp-consensus-beefy") (v "16.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^29.0.0") (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-keystore") (r "^0.37.0") (k 0)) (d (n "sp-mmr-primitives") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "0071ncxmwbq1wf7jgb8lx1i3xjhk3dih3b9xzlhds0i7any06avy") (f (quote (("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("std" "codec/std" "dep:lazy_static" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-keystore/std" "sp-mmr-primitives/std" "sp-runtime/std" "sp-std/std" "strum/std") ("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-17.0.0 (c (n "sp-consensus-beefy") (v "17.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^30.0.0") (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-keystore") (r "^0.38.0") (k 0)) (d (n "sp-mmr-primitives") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (k 0)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "0r7izp89w4gfjipaqkqdmnjsr78bb9ysm2yd5bf5zda7na4xj2hn") (f (quote (("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("std" "codec/std" "dep:lazy_static" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-keystore/std" "sp-mmr-primitives/std" "sp-runtime/std" "strum/std") ("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-18.0.0 (c (n "sp-consensus-beefy") (v "18.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^31.0.0") (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-keystore") (r "^0.38.0") (k 0)) (d (n "sp-mmr-primitives") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "04jy4a0wgycqmp0bbbsmx4c1p74pbwy88b6r7gq1z3yxci00kszm") (f (quote (("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("std" "codec/std" "dep:lazy_static" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-keystore/std" "sp-mmr-primitives/std" "sp-runtime/std" "strum/std") ("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-beefy-19.0.0 (c (n "sp-consensus-beefy") (v "19.0.0") (d (list (d (n "array-bytes") (r "^6.2.2") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^32.0.0") (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (k 0)) (d (n "sp-core") (r "^33.0.0") (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-keystore") (r "^0.39.0") (k 0)) (d (n "sp-mmr-primitives") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (k 0)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (k 0)) (d (n "w3f-bls") (r "^0.1.3") (f (quote ("std"))) (d #t) (k 2)))) (h "15r7wmr2ic4ms3ssql3v0mxa89n79i1hi0bqs8xyl5qb81c0gxyq") (f (quote (("default" "std") ("bls-experimental" "sp-application-crypto/bls-experimental" "sp-core/bls-experimental")))) (s 2) (e (quote (("std" "codec/std" "dep:lazy_static" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-crypto-hashing/std" "sp-io/std" "sp-keystore/std" "sp-mmr-primitives/std" "sp-runtime/std" "strum/std") ("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-core/serde" "sp-runtime/serde"))))))

