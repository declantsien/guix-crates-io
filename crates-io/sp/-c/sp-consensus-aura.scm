(define-module (crates-io sp -c sp-consensus-aura) #:use-module (crates-io))

(define-public crate-sp-consensus-aura-0.8.0-alpha.2 (c (n "sp-consensus-aura") (v "0.8.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.2") (k 0)))) (h "1s8dlr3s9jfc2hnqznhziyicn9ddaj6nk1374q0v8j27p7vmijq5") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-alpha.3 (c (n "sp-consensus-aura") (v "0.8.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.2") (k 0)))) (h "0wjhp4rfjnd90jdlba18lnrgnh41ywqpzl4hr6qvhlhkcw48xk8z") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-alpha.5 (c (n "sp-consensus-aura") (v "0.8.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.5") (k 0)))) (h "0wksmbh0ndi0ng2y9gv7icsczd5fj0kw7panpdx2l6j7ikhn5rkf") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-alpha.6 (c (n "sp-consensus-aura") (v "0.8.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.6") (k 0)))) (h "0ykr4xdy3hb03l8fp3j1lvdi10km6ig486f4y2hfg7x2mk2gnpqa") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-alpha.7 (c (n "sp-consensus-aura") (v "0.8.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.7") (k 0)))) (h "19cbm3b0r1ynvx2sb2wyim9rp6r54b20x964z1xr3lwshpcvvi1x") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-alpha.8 (c (n "sp-consensus-aura") (v "0.8.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.8") (k 0)))) (h "0qxw6v4khmiyn1ashk56kzmibyrx5zyjn9bpv6s0as1ilv1cxzpb") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc1 (c (n "sp-consensus-aura") (v "0.8.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc1") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc1") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc1") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc1") (k 0)))) (h "1qagk9n23n08mgcnjg9v9q10xgvi5kzpcjzafwkzap51wx29dcg8") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc2 (c (n "sp-consensus-aura") (v "0.8.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc2") (k 0)))) (h "1mjay81gcra3pc0vkaglri12v4q7pfa2h0xil6s2y4d64vvdbs3l") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc3 (c (n "sp-consensus-aura") (v "0.8.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc3") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc3") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc3") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc3") (k 0)))) (h "0780vzwmgjqwdmkdihhnyrd1yhk0srp7b33659n4j9r1l571cgfc") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc4 (c (n "sp-consensus-aura") (v "0.8.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc4") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc4") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc4") (k 0)))) (h "0ad3q3487rb8jv4fb3sbxh8j27bv2xhspnffysrnsgl1lmf5y0q3") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc5 (c (n "sp-consensus-aura") (v "0.8.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc5") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc5") (k 0)))) (h "0wzirhc1xh7k6hdbq0bjrf0mv5vn2fk8nggy8nnz7f4h0cbhqd5k") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0-rc6 (c (n "sp-consensus-aura") (v "0.8.0-rc6") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-rc6") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc6") (k 0)))) (h "0505afw9nw7mvb163r2fjckpcjikx9ag5sxb9g7i2swq6wndbq0i") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.0 (c (n "sp-consensus-aura") (v "0.8.0") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "1q21ig745cl1sdbmma3g99mdyvl80hp3xzp49gs60jf7r7ap1hld") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.8.1 (c (n "sp-consensus-aura") (v "0.8.1") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "1zx0b84wrq65w02s9qxx4bby4b28hl8zw20j147qc9r2awqypdz0") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.9.0 (c (n "sp-consensus-aura") (v "0.9.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^3.0.0") (k 0)) (d (n "sp-application-crypto") (r "^3.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.9.0") (k 0)) (d (n "sp-inherents") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "sp-timestamp") (r "^3.0.0") (k 0)))) (h "060igjdr09r87q6yqbchbb63crskrikzp50kpqi3af96bg4hzl2b") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.10.0 (c (n "sp-consensus-aura") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^4.0.0") (k 0)) (d (n "sp-application-crypto") (r "^8.0.0") (k 0)) (d (n "sp-consensus") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.10.0") (k 0)) (d (n "sp-inherents") (r "^4.0.0") (k 0)) (d (n "sp-runtime") (r "^8.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^4.0.0") (k 0)))) (h "0y5zlqk71bxmfyzpllzcgi60n9iyiq9pnagrkkiaafrlnayp3n5x") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.11.0 (c (n "sp-consensus-aura") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^5.0.0") (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-consensus") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.11.0") (k 0)) (d (n "sp-inherents") (r "^5.0.0") (k 0)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^5.0.0") (k 0)))) (h "0a2r88fzmw8pjzsr1y5db5nfznmjyksgz6cv899g72gxwxzdkc62") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.12.0 (c (n "sp-consensus-aura") (v "0.12.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^6.0.0") (k 0)) (d (n "sp-application-crypto") (r "^10.0.0") (k 0)) (d (n "sp-consensus") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.12.0") (k 0)) (d (n "sp-inherents") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^10.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^6.0.0") (k 0)))) (h "0x72wr6b43bj0zsw3m75jl02njd6c9y13n2xqyq07xwsb58194fc") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.13.0 (c (n "sp-consensus-aura") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^7.0.0") (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-consensus") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.13.0") (k 0)) (d (n "sp-inherents") (r "^7.0.0") (k 0)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^7.0.0") (k 0)))) (h "1b8w8w8xad8w050w5h20k95dm5zvs2irxp54s292vb5lp9c58ra8") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.14.0 (c (n "sp-consensus-aura") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^8.0.0") (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-consensus") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.14.0") (k 0)) (d (n "sp-inherents") (r "^8.0.0") (k 0)) (d (n "sp-runtime") (r "^12.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^8.0.0") (k 0)))) (h "172falpxqzjnhnqf1h53gr9ydjfiwdwhyqfycx75vs2k8fmdbzjz") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.15.0 (c (n "sp-consensus-aura") (v "0.15.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^9.0.0") (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-consensus") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.15.0") (k 0)) (d (n "sp-inherents") (r "^9.0.0") (k 0)) (d (n "sp-runtime") (r "^13.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^9.0.0") (k 0)))) (h "1j04n8r0rns6jb6dlm5i8lix86ck4dx92mcwk82fgwx1r4d3n4k7") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.16.0 (c (n "sp-consensus-aura") (v "0.16.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^10.0.0") (k 0)) (d (n "sp-application-crypto") (r "^13.0.0") (k 0)) (d (n "sp-consensus") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.16.0") (k 0)) (d (n "sp-inherents") (r "^10.0.0") (k 0)) (d (n "sp-runtime") (r "^14.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^10.0.0") (k 0)))) (h "1lrzi7jpjv41bnkm8vd4v7hn456wx9kj9dp4q9vv8xlzxh4kgaz6") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.17.0 (c (n "sp-consensus-aura") (v "0.17.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^11.0.0") (k 0)) (d (n "sp-application-crypto") (r "^14.0.0") (k 0)) (d (n "sp-consensus") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.17.0") (k 0)) (d (n "sp-inherents") (r "^11.0.0") (k 0)) (d (n "sp-runtime") (r "^15.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^11.0.0") (k 0)))) (h "0x2cnq6h7j1ajagsi9ay0akvkj6918d6854gaqzyzissxwj448bz") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.18.0 (c (n "sp-consensus-aura") (v "0.18.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^12.0.0") (k 0)) (d (n "sp-application-crypto") (r "^15.0.0") (k 0)) (d (n "sp-consensus") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.18.0") (k 0)) (d (n "sp-inherents") (r "^12.0.0") (k 0)) (d (n "sp-runtime") (r "^16.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^12.0.0") (k 0)))) (h "0v414x2dvxrlnfs70ngdgijp4f7k36qyip9fzz91bbzwx2r2w5f8") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.19.0 (c (n "sp-consensus-aura") (v "0.19.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^13.0.0") (k 0)) (d (n "sp-application-crypto") (r "^16.0.0") (k 0)) (d (n "sp-consensus") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.19.0") (k 0)) (d (n "sp-inherents") (r "^13.0.0") (k 0)) (d (n "sp-runtime") (r "^17.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^13.0.0") (k 0)))) (h "0j17f7a2izl8py20i9vfigdj4bx9wby90l16qaljjvn61458733m") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.20.0 (c (n "sp-consensus-aura") (v "0.20.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^14.0.0") (k 0)) (d (n "sp-application-crypto") (r "^17.0.0") (k 0)) (d (n "sp-consensus") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.20.0") (k 0)) (d (n "sp-inherents") (r "^14.0.0") (k 0)) (d (n "sp-runtime") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^14.0.0") (k 0)))) (h "0694xg54ffg3m2xb8ncqry3abp9mm02ifkxd6l0w5bxf0ni42pjg") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.21.0 (c (n "sp-consensus-aura") (v "0.21.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^15.0.0") (k 0)) (d (n "sp-application-crypto") (r "^18.0.0") (k 0)) (d (n "sp-consensus") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.21.0") (k 0)) (d (n "sp-inherents") (r "^15.0.0") (k 0)) (d (n "sp-runtime") (r "^19.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^15.0.0") (k 0)))) (h "082157ix1sk0qwp10rb0pz11pg02fsx7sfn5afhlxjf6xxp8yv0x") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.22.0 (c (n "sp-consensus-aura") (v "0.22.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^16.0.0") (k 0)) (d (n "sp-application-crypto") (r "^19.0.0") (k 0)) (d (n "sp-consensus") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.22.0") (k 0)) (d (n "sp-inherents") (r "^16.0.0") (k 0)) (d (n "sp-runtime") (r "^20.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^16.0.0") (k 0)))) (h "0b8h5z03hpb3vizhw91l2wqjksiszax61zfk4y2yxf0wb0ap00ax") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.23.0 (c (n "sp-consensus-aura") (v "0.23.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^17.0.0") (k 0)) (d (n "sp-application-crypto") (r "^20.0.0") (k 0)) (d (n "sp-consensus") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.23.0") (k 0)) (d (n "sp-inherents") (r "^17.0.0") (k 0)) (d (n "sp-runtime") (r "^21.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^17.0.0") (k 0)))) (h "04nfydaikrj87vmqyhz8gqdxjbr4gnr76g3jv622kw4z7spmibak") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.24.0 (c (n "sp-consensus-aura") (v "0.24.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^18.0.0") (k 0)) (d (n "sp-application-crypto") (r "^21.0.0") (k 0)) (d (n "sp-consensus") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.24.0") (k 0)) (d (n "sp-inherents") (r "^18.0.0") (k 0)) (d (n "sp-runtime") (r "^22.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^18.0.0") (k 0)))) (h "0i41alc0f2jk6wgkr4680lh4172aggykv5mnymj5dc04hxj9rnrr") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.25.0 (c (n "sp-consensus-aura") (v "0.25.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^19.0.0") (k 0)) (d (n "sp-application-crypto") (r "^22.0.0") (k 0)) (d (n "sp-consensus") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.25.0") (k 0)) (d (n "sp-inherents") (r "^19.0.0") (k 0)) (d (n "sp-runtime") (r "^23.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^19.0.0") (k 0)))) (h "0i4pk1974k8x2nvcz92axy883x5wm90dig0bagjddb0bg24lmww0") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.26.0-dev.2 (c (n "sp-consensus-aura") (v "0.26.0-dev.2") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0-dev.2") (k 0)) (d (n "sp-inherents") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "sp-timestamp") (r "^19.1.0-dev.2") (k 0)))) (h "0kj3v0n1ikq2fj4g3b3qrlp6w1bpvs2mpclxs7x220fa2h74axxm") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.26.0-dev.3 (c (n "sp-consensus-aura") (v "0.26.0-dev.3") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0-dev.3") (k 0)) (d (n "sp-inherents") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "sp-timestamp") (r "^19.1.0-dev.3") (k 0)))) (h "1gwiz7mgwmqfrj9cyggf7n62syn2zz1mx5i681w0wilw28hkq23x") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.26.0-dev.5 (c (n "sp-consensus-aura") (v "0.26.0-dev.5") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-consensus-slots") (r "=0.26.0-dev.5") (k 0)) (d (n "sp-inherents") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "sp-timestamp") (r "=19.1.0-dev.5") (k 0)))) (h "0sdqh2ain2igdlrgng5ybzwccawz1qxizw68bflpad478mla24h1") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.26.0-dev.6 (c (n "sp-consensus-aura") (v "0.26.0-dev.6") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-consensus-slots") (r "=0.26.0-dev.6") (k 0)) (d (n "sp-inherents") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "sp-timestamp") (r "=19.1.0-dev.6") (k 0)))) (h "0xmfhaanack0gnxkyb4nv4yh7qxw2pp7i8r2i4dx90h5wayypbyd") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.26.0 (c (n "sp-consensus-aura") (v "0.26.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0") (k 0)) (d (n "sp-inherents") (r "^20.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "sp-timestamp") (r "^20.0.0") (k 0)))) (h "0g0xv8mansc3kf07r8xzqd5j4pyr0qabp9hjxfyds8iyqwama5fw") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.27.0 (c (n "sp-consensus-aura") (v "0.27.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.27.0") (k 0)) (d (n "sp-inherents") (r "^21.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "sp-timestamp") (r "^21.0.0") (k 0)))) (h "0irsy3y20x2ksvdmw4lbc01ha6jaz6sjpkhap91ga59klf5bjr4m") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.28.0-dev.1 (c (n "sp-consensus-aura") (v "0.28.0-dev.1") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-consensus-slots") (r "=0.28.0-dev.1") (k 0)) (d (n "sp-inherents") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "sp-timestamp") (r "=22.0.0-dev.1") (k 0)))) (h "0vnw2ixvcxbfs676b5i45dkcan85py0c60paacvr7iizjznr1apk") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.28.0 (c (n "sp-consensus-aura") (v "0.28.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^22.0.0") (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.28.0") (k 0)) (d (n "sp-inherents") (r "^22.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "sp-timestamp") (r "^22.0.0") (k 0)))) (h "10x80xiyk60k6fhvddxlgj8mngaqskcg5gg7s18md986l3vnvk0d") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.29.0 (c (n "sp-consensus-aura") (v "0.29.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^23.0.0") (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.29.0") (k 0)) (d (n "sp-inherents") (r "^23.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-timestamp") (r "^23.0.0") (k 0)))) (h "1r42l40fzhp5zpz158k4h40xbjhnlk4bq7wx466kjpv4d947qfk4") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.30.0 (c (n "sp-consensus-aura") (v "0.30.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^24.0.0") (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.30.0") (k 0)) (d (n "sp-inherents") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-timestamp") (r "^24.0.0") (k 0)))) (h "0bbi08ix2b4rghmfyx293qs9r87dap85xcrvndjn3swj4v2j6bqy") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.31.0 (c (n "sp-consensus-aura") (v "0.31.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^25.0.0") (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.31.0") (k 0)) (d (n "sp-inherents") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "sp-timestamp") (r "^25.0.0") (k 0)))) (h "1k5zhqm10raqh9jhkwdjx992cx97084i7r895caiw3qzc4izwzr3") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.32.0 (c (n "sp-consensus-aura") (v "0.32.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^26.0.0") (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.32.0") (k 0)) (d (n "sp-inherents") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^26.0.0") (k 0)))) (h "1k25svvr5l6zh30ahq6fzmrcndvpclsq41pxmrg8ic0nl5wfif1s") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.33.0 (c (n "sp-consensus-aura") (v "0.33.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.33.0") (k 0)) (d (n "sp-inherents") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^27.0.0") (k 0)))) (h "0gbb8vsxavi90d2rpqlgiqz5zwmmgxn2399gyx8rfcc56qlkrwab") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.34.0 (c (n "sp-consensus-aura") (v "0.34.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^28.0.0") (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.34.0") (k 0)) (d (n "sp-inherents") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^28.0.0") (k 0)))) (h "1wy2p9x6b8cq0i2sk62hskkxlqvj7cj6qw0ddag8w4nb3w28xp0l") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.35.0 (c (n "sp-consensus-aura") (v "0.35.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^29.0.0") (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.35.0") (k 0)) (d (n "sp-inherents") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^29.0.0") (k 0)))) (h "16rh5sr070kq4vx1jznammgv60aiip6kmsg7b16sjw6yny400k9k") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.36.0 (c (n "sp-consensus-aura") (v "0.36.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^30.0.0") (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.36.0") (k 0)) (d (n "sp-inherents") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (k 0)) (d (n "sp-timestamp") (r "^30.0.0") (k 0)))) (h "00wg91nqml7qdj8zx710m1amwj16d64hmwsndawzhirg9p27sr37") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.37.0 (c (n "sp-consensus-aura") (v "0.37.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^31.0.0") (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.37.0") (k 0)) (d (n "sp-inherents") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "sp-timestamp") (r "^31.0.0") (k 0)))) (h "113slbrhipz0ivh3brdwjh5v3xf4r90d3qbagch6zci00yklv468") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

(define-public crate-sp-consensus-aura-0.38.0 (c (n "sp-consensus-aura") (v "0.38.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^32.0.0") (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.38.0") (k 0)) (d (n "sp-inherents") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (k 0)) (d (n "sp-timestamp") (r "^32.0.0") (k 0)))) (h "04bg7l6ih8kbsx6343n3w1mnsxlmvgzyrj7piydp70ygzz0mwk26") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-runtime/serde") ("default" "std"))))))

