(define-module (crates-io sp -c sp-consensus-babe) #:use-module (crates-io))

(define-public crate-sp-consensus-babe-0.8.0-alpha.2 (c (n "sp-consensus-babe") (v "0.8.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "schnorrkel") (r "^0.8.5") (f (quote ("preaudit_deprecated"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.2") (k 0)))) (h "18q8yr2jq71w7sr4pxdssqln3bi1ac9isw794kpcnlg1b39acn6w") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "schnorrkel" "sp-api/std" "sp-consensus" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-alpha.3 (c (n "sp-consensus-babe") (v "0.8.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "schnorrkel") (r "^0.8.5") (f (quote ("preaudit_deprecated"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.2") (k 0)))) (h "1cpmvrydjf4j2gfld76xdn54c2s4z0xcw65zw461sq414c1f778j") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "schnorrkel" "sp-api/std" "sp-consensus" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-alpha.5 (c (n "sp-consensus-babe") (v "0.8.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.5") (k 0)))) (h "08m81riq805vk2jpyhld64yc55ff7sgbmd98vj3i9bnq3r5h0h9k") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-alpha.6 (c (n "sp-consensus-babe") (v "0.8.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "sp-api") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.6") (k 0)))) (h "1gbshasaia17dyclryzfrzfkw6wln3nfh28z2pl5rnfxxkxhhqdc") (f (quote (("std" "sp-application-crypto/std" "codec/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-alpha.7 (c (n "sp-consensus-babe") (v "0.8.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.7") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.7") (k 0)))) (h "1ypmbi403w81ww6171ih5m203v0d424bcrc359bj3j6rf2g7ia0n") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-alpha.8 (c (n "sp-consensus-babe") (v "0.8.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-consensus") (r "^0.8.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.8") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.8") (k 0)))) (h "1lnsi06s2iaa92anqmy2wr1p88vrhcy6a0x8vyh1ixwbc7zfrn1r") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc1 (c (n "sp-consensus-babe") (v "0.8.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc1") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc1") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc1") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc1") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc1") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc1") (k 0)))) (h "1wz3iqbcyk5lqc0nb3yfxa1ia74mscn2lrnsid02qrv38bkb0c8y") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc2 (c (n "sp-consensus-babe") (v "0.8.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc2") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc2") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc2") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc2") (k 0)))) (h "0mh2rhlzg8q2l50vqw4iism1c1j1370kl3a1fcdj56ar65wzfk5i") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc3 (c (n "sp-consensus-babe") (v "0.8.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc3") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc3") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc3") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc3") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc3") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc3") (k 0)))) (h "1a32jkccsq243z1x9x6rzsnw6faynvcvp4l2bc67xjvql0i7k2l3") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc4 (c (n "sp-consensus-babe") (v "0.8.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc4") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc4") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc4") (o #t) (d #t) (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc4") (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc4") (k 0)))) (h "16b7lmgwh1v1n37mdqh05ilxz0d4194gz7hbjw138x1baynvh9w8") (f (quote (("std" "sp-core/std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-vrf/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc5 (c (n "sp-consensus-babe") (v "0.8.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc5") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc5") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc5") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.8.0-rc5") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc5") (k 0)) (d (n "sp-core") (r "^2.0.0-rc5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc5") (k 0)))) (h "1lqkw90z2rh7nqhn89y23yh0q9fz0mv0dn2ina0s1pimyx6dz6br") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0-rc6 (c (n "sp-consensus-babe") (v "0.8.0-rc6") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0-rc6") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc6") (k 0)) (d (n "sp-consensus") (r "^0.8.0-rc6") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.8.0-rc6") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc6") (k 0)) (d (n "sp-core") (r "^2.0.0-rc6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc6") (k 0)))) (h "1snnjlfg4phnj3jcppx9lapkand781hd0nc4vfk7ps7imz5np1wg") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.0 (c (n "sp-consensus-babe") (v "0.8.0") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-consensus") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.8.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "0ff7dlkjg16zyfyjhxcamd1xzairxmlhwqgf1mfz8m7k08rsfl40") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.8.1 (c (n "sp-consensus-babe") (v "0.8.1") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^2.0.0") (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-consensus") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.8.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "1pi52jzw6hqq4f055hk5k5haw8ifb4w5dxxs31kc4g6l9ws381wl") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.9.0 (c (n "sp-consensus-babe") (v "0.9.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "sp-api") (r "^3.0.0") (k 0)) (d (n "sp-application-crypto") (r "^3.0.0") (k 0)) (d (n "sp-consensus") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.9.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.9.0") (k 0)) (d (n "sp-core") (r "^3.0.0") (k 0)) (d (n "sp-inherents") (r "^3.0.0") (k 0)) (d (n "sp-keystore") (r "^0.9.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "sp-timestamp") (r "^3.0.0") (k 0)))) (h "0irh67cxh0gv1wfnf1xpy5j4jqqsdp9kqhw66vicpda22mdhhlx1") (f (quote (("std" "sp-application-crypto/std" "codec/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-timestamp/std") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.10.0 (c (n "sp-consensus-babe") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^4.0.0") (k 0)) (d (n "sp-application-crypto") (r "^8.0.0") (k 0)) (d (n "sp-consensus") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.10.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.10.0") (k 0)) (d (n "sp-core") (r "^8.0.0") (k 0)) (d (n "sp-inherents") (r "^4.0.0") (k 0)) (d (n "sp-keystore") (r "^0.14.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^8.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^4.0.0") (o #t) (d #t) (k 0)))) (h "0wdmgzs3yhy2zz63k9migcjvx43a5fxdwnbyq84653vp728dk9j9") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.11.0 (c (n "sp-consensus-babe") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^5.0.0") (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-consensus") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.11.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.11.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (k 0)) (d (n "sp-inherents") (r "^5.0.0") (k 0)) (d (n "sp-keystore") (r "^0.15.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^5.0.0") (o #t) (d #t) (k 0)))) (h "1n3rklxpvdsl70yxzgbwy3cfq6rnjr18v1w6904max16maarz1ln") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.12.0 (c (n "sp-consensus-babe") (v "0.12.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^6.0.0") (k 0)) (d (n "sp-application-crypto") (r "^10.0.0") (k 0)) (d (n "sp-consensus") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.12.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.12.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (k 0)) (d (n "sp-inherents") (r "^6.0.0") (k 0)) (d (n "sp-keystore") (r "^0.16.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^10.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^6.0.0") (o #t) (d #t) (k 0)))) (h "1wgbjchv31r4sksg7a3y06j4wn7h9ba2n4z7v9vpl4ycg7f53l56") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.13.0 (c (n "sp-consensus-babe") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^7.0.0") (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-consensus") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.13.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.13.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (k 0)) (d (n "sp-inherents") (r "^7.0.0") (k 0)) (d (n "sp-keystore") (r "^0.16.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^7.0.0") (o #t) (d #t) (k 0)))) (h "12ymspmbk4j08vz8zs09lvh9z6zpb2kjjrarg3xvln0m917pnk1x") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.14.0 (c (n "sp-consensus-babe") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^8.0.0") (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-consensus") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.14.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.14.0") (k 0)) (d (n "sp-core") (r "^11.0.0") (k 0)) (d (n "sp-inherents") (r "^8.0.0") (k 0)) (d (n "sp-keystore") (r "^0.17.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^12.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^8.0.0") (o #t) (d #t) (k 0)))) (h "0lsfv3y1q8kbd4vl5qxvbgvwxs8335zlzwl5rfgn92rf6v0k4zhr") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.15.0 (c (n "sp-consensus-babe") (v "0.15.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^9.0.0") (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-consensus") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.15.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.15.0") (k 0)) (d (n "sp-core") (r "^11.0.0") (k 0)) (d (n "sp-inherents") (r "^9.0.0") (k 0)) (d (n "sp-keystore") (r "^0.17.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^13.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^9.0.0") (o #t) (d #t) (k 0)))) (h "0ia87lycwna9gxay0ak6rhj7f2wazpym1k0jb3ckix1x9bavn4wb") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.16.0 (c (n "sp-consensus-babe") (v "0.16.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^10.0.0") (k 0)) (d (n "sp-application-crypto") (r "^13.0.0") (k 0)) (d (n "sp-consensus") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.16.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.16.0") (k 0)) (d (n "sp-core") (r "^12.0.0") (k 0)) (d (n "sp-inherents") (r "^10.0.0") (k 0)) (d (n "sp-keystore") (r "^0.18.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^14.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^10.0.0") (o #t) (d #t) (k 0)))) (h "0h03j5p9yab9vf57vmysc2b9cnaz9w4z9ipdx1scchjdl0mh98cv") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.17.0 (c (n "sp-consensus-babe") (v "0.17.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^11.0.0") (k 0)) (d (n "sp-application-crypto") (r "^14.0.0") (k 0)) (d (n "sp-consensus") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.17.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.17.0") (k 0)) (d (n "sp-core") (r "^13.0.0") (k 0)) (d (n "sp-inherents") (r "^11.0.0") (k 0)) (d (n "sp-keystore") (r "^0.19.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^15.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^11.0.0") (o #t) (d #t) (k 0)))) (h "179ccd72x95i5a77vhdpnh53mwwq43vwp400hdv3i7y6c0xsqqpd") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.18.0 (c (n "sp-consensus-babe") (v "0.18.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^12.0.0") (k 0)) (d (n "sp-application-crypto") (r "^15.0.0") (k 0)) (d (n "sp-consensus") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.18.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.18.0") (k 0)) (d (n "sp-core") (r "^14.0.0") (k 0)) (d (n "sp-inherents") (r "^12.0.0") (k 0)) (d (n "sp-keystore") (r "^0.20.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^16.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^12.0.0") (o #t) (d #t) (k 0)))) (h "1z6wdpx41yakwrmq013irs6r6db6hjij7q9ds5a9f5mgz217g5dp") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.19.0 (c (n "sp-consensus-babe") (v "0.19.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^13.0.0") (k 0)) (d (n "sp-application-crypto") (r "^16.0.0") (k 0)) (d (n "sp-consensus") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.19.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.19.0") (k 0)) (d (n "sp-core") (r "^15.0.0") (k 0)) (d (n "sp-inherents") (r "^13.0.0") (k 0)) (d (n "sp-keystore") (r "^0.21.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^17.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^13.0.0") (o #t) (d #t) (k 0)))) (h "14ysrlnlgcxlyrw5v10yvxxqpi42bmgc6kqvg9qj2ss44hf8ais8") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.20.0 (c (n "sp-consensus-babe") (v "0.20.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^14.0.0") (k 0)) (d (n "sp-application-crypto") (r "^17.0.0") (k 0)) (d (n "sp-consensus") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.20.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^16.0.0") (k 0)) (d (n "sp-inherents") (r "^14.0.0") (k 0)) (d (n "sp-keystore") (r "^0.22.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^14.0.0") (o #t) (d #t) (k 0)))) (h "0rh5b43ds8nj8wplvlq05iqkj949iilknjc5a5l56kzvq5yvqm93") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.21.0 (c (n "sp-consensus-babe") (v "0.21.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^15.0.0") (k 0)) (d (n "sp-application-crypto") (r "^18.0.0") (k 0)) (d (n "sp-consensus") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.21.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.21.0") (k 0)) (d (n "sp-core") (r "^17.0.0") (k 0)) (d (n "sp-inherents") (r "^15.0.0") (k 0)) (d (n "sp-keystore") (r "^0.23.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^19.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-timestamp") (r "^15.0.0") (o #t) (d #t) (k 0)))) (h "1wf5qy4h0rki70mlgmi7ahvmgd49dbmjncaci3c7cvs610rrr2q3") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.22.0 (c (n "sp-consensus-babe") (v "0.22.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^16.0.0") (k 0)) (d (n "sp-application-crypto") (r "^19.0.0") (k 0)) (d (n "sp-consensus") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.22.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.22.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-inherents") (r "^16.0.0") (k 0)) (d (n "sp-keystore") (r "^0.24.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^20.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^16.0.0") (o #t) (d #t) (k 0)))) (h "12sn3w1xxp9i8pbs4c8xnjrgcylzz0kaqw8pgqgfgnna9hwrygpb") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.23.0 (c (n "sp-consensus-babe") (v "0.23.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^17.0.0") (k 0)) (d (n "sp-application-crypto") (r "^20.0.0") (k 0)) (d (n "sp-consensus") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.23.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.23.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-inherents") (r "^17.0.0") (k 0)) (d (n "sp-keystore") (r "^0.24.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^21.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^17.0.0") (o #t) (d #t) (k 0)))) (h "0gpjr0ghf4rgbnvvyyn3w5j7i2mnkwrr8nv0chrr7s2iw5szvc6d") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.24.0 (c (n "sp-consensus-babe") (v "0.24.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^18.0.0") (k 0)) (d (n "sp-application-crypto") (r "^21.0.0") (k 0)) (d (n "sp-consensus") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.24.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^19.0.0") (k 0)) (d (n "sp-inherents") (r "^18.0.0") (k 0)) (d (n "sp-keystore") (r "^0.25.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^22.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^18.0.0") (o #t) (d #t) (k 0)))) (h "0np9qxqqcp3hp7db99hj912bn7hif9ygdpfjbhnv2vl2yf37cnn7") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.25.0 (c (n "sp-consensus-babe") (v "0.25.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "merlin") (r "^2.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-api") (r "^19.0.0") (k 0)) (d (n "sp-application-crypto") (r "^22.0.0") (k 0)) (d (n "sp-consensus") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sp-consensus-slots") (r "^0.25.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.25.0") (k 0)) (d (n "sp-core") (r "^20.0.0") (k 0)) (d (n "sp-inherents") (r "^19.0.0") (k 0)) (d (n "sp-keystore") (r "^0.26.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^23.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-timestamp") (r "^19.0.0") (o #t) (d #t) (k 0)))) (h "01461is5i6xihak9zx5xj7mzkmpv7dk21pipi6fgbma6v51mg2q1") (f (quote (("std" "async-trait" "codec/std" "merlin/std" "scale-info/std" "serde" "sp-api/std" "sp-application-crypto/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std"))))))

(define-public crate-sp-consensus-babe-0.26.0-dev.2 (c (n "sp-consensus-babe") (v "0.26.0-dev.2") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0-dev.2") (k 0)) (d (n "sp-core") (r "^21.1.0-dev.2") (k 0)) (d (n "sp-inherents") (r "^19.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "sp-timestamp") (r "^19.1.0-dev.2") (o #t) (d #t) (k 0)))) (h "1vyrihjshjfyv8g5hin20s3p6vvrfsd1l8wikpdjs4s4vfjf344v") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.26.0-dev.3 (c (n "sp-consensus-babe") (v "0.26.0-dev.3") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0-dev.3") (k 0)) (d (n "sp-core") (r "^21.1.0-dev.3") (k 0)) (d (n "sp-inherents") (r "^19.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "sp-timestamp") (r "^19.1.0-dev.3") (o #t) (d #t) (k 0)))) (h "0hnfv0qr7bjdkrj9l625p5kasqgxnnyc761140x04z1h5vh989qc") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.26.0-dev.5 (c (n "sp-consensus-babe") (v "0.26.0-dev.5") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-consensus-slots") (r "=0.26.0-dev.5") (k 0)) (d (n "sp-core") (r "=21.1.0-dev.5") (k 0)) (d (n "sp-inherents") (r "=19.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "sp-timestamp") (r "=19.1.0-dev.5") (o #t) (d #t) (k 0)))) (h "15zmm9n3n280xh3mi9myi611vamkilznqdlnz1wr87g5dd8jiwrd") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.26.0-dev.6 (c (n "sp-consensus-babe") (v "0.26.0-dev.6") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-consensus-slots") (r "=0.26.0-dev.6") (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (k 0)) (d (n "sp-inherents") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "sp-timestamp") (r "=19.1.0-dev.6") (o #t) (d #t) (k 0)))) (h "1bwgc8crfq4am8mx47pgjgybqqy1zmwy0vj4c1qm0i3csm3a9rvr") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.26.0 (c (n "sp-consensus-babe") (v "0.26.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.26.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-inherents") (r "^20.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "sp-timestamp") (r "^20.0.0") (o #t) (d #t) (k 0)))) (h "13v7d0150ykswpvkkgcf4hzq8g5fwxz7x8r40204shbpx5hmdq56") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.27.0 (c (n "sp-consensus-babe") (v "0.27.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.27.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-inherents") (r "^21.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "sp-timestamp") (r "^21.0.0") (o #t) (d #t) (k 0)))) (h "1zip8hqvkyh263bcpxpvj6ci4nr55dqylbsc85zqxiksg94pkpjk") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.28.0-dev.1 (c (n "sp-consensus-babe") (v "0.28.0-dev.1") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-consensus-slots") (r "=0.28.0-dev.1") (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (k 0)) (d (n "sp-inherents") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "sp-timestamp") (r "=22.0.0-dev.1") (o #t) (d #t) (k 0)))) (h "0w6sj5hh3q2yj3vdrmay52z1gys9bcgqivfm08dhm6k1hlss867d") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.28.0 (c (n "sp-consensus-babe") (v "0.28.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^22.0.0") (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.28.0") (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-inherents") (r "^22.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "sp-timestamp") (r "^22.0.0") (o #t) (d #t) (k 0)))) (h "019v3dkcd5nfi59sc6pvg7risqb49a6cbjhw90cgm1q64shp88sp") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.29.0 (c (n "sp-consensus-babe") (v "0.29.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^23.0.0") (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.29.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-inherents") (r "^23.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-timestamp") (r "^23.0.0") (o #t) (d #t) (k 0)))) (h "0kx2jn7j9zzbxwzk6zwinm677zyprz6pcy6qkb03dqfl6qp9p3r6") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.30.0 (c (n "sp-consensus-babe") (v "0.30.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-api") (r "^24.0.0") (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.30.0") (k 0)) (d (n "sp-core") (r "^26.0.0") (k 0)) (d (n "sp-inherents") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-timestamp") (r "^24.0.0") (o #t) (d #t) (k 0)))) (h "1x7xajvjx0lhzgh8ilx95zclznvv03gq3fjzs4fxlfipdf2wpwc5") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.31.0 (c (n "sp-consensus-babe") (v "0.31.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^25.0.0") (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.31.0") (k 0)) (d (n "sp-core") (r "^27.0.0") (k 0)) (d (n "sp-inherents") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "sp-timestamp") (r "^25.0.0") (o #t) (d #t) (k 0)))) (h "0fwpmdqwmmpy1f3c9rgsdcw9y2xxlmvrbxxw2k4d4xl6527naj6j") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.32.0 (c (n "sp-consensus-babe") (v "0.32.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^26.0.0") (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.32.0") (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-inherents") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^26.0.0") (o #t) (d #t) (k 0)))) (h "1xb19ixkwaq91nzdb09i6y3i1gfw0cjyfr6nbiib6bxjlpgdzzpb") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.33.0 (c (n "sp-consensus-babe") (v "0.33.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.33.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-inherents") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^27.0.0") (o #t) (d #t) (k 0)))) (h "1pdrn7h49bfbjlcnjykzdbblyq17m93vbzjmniw2mkphla32zgmr") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.34.0 (c (n "sp-consensus-babe") (v "0.34.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^28.0.0") (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.34.0") (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-inherents") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^28.0.0") (o #t) (d #t) (k 0)))) (h "09k1k41cq6mzdhj1156ahp11nd4baw516lyxk0cb22932p50jd27") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.35.0 (c (n "sp-consensus-babe") (v "0.35.0") (d (list (d (n "async-trait") (r "^0.1.74") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^29.0.0") (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.35.0") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-inherents") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-timestamp") (r "^29.0.0") (o #t) (d #t) (k 0)))) (h "0v4z7h2s8icianahbg5aviwdpab4i5znnf65dwymhjk7xk43wngb") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-std/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.36.0 (c (n "sp-consensus-babe") (v "0.36.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^30.0.0") (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.36.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-inherents") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (k 0)) (d (n "sp-timestamp") (r "^30.0.0") (o #t) (d #t) (k 0)))) (h "0q0rdbn7xrgbj63kf1sya2vcnbzj8977rlwrygkab75rrv8hsl53") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.37.0 (c (n "sp-consensus-babe") (v "0.37.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^31.0.0") (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.37.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-inherents") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "sp-timestamp") (r "^31.0.0") (o #t) (k 0)))) (h "1lcbh4dxbzaapb2c0nv8zs16pz91ff4jr90d2r4zihw2qclr5ybm") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

(define-public crate-sp-consensus-babe-0.38.0 (c (n "sp-consensus-babe") (v "0.38.0") (d (list (d (n "async-trait") (r "^0.1.79") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-api") (r "^32.0.0") (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (k 0)) (d (n "sp-consensus-slots") (r "^0.38.0") (k 0)) (d (n "sp-core") (r "^33.0.0") (k 0)) (d (n "sp-inherents") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (k 0)) (d (n "sp-timestamp") (r "^32.0.0") (o #t) (k 0)))) (h "0gpbga7zdaakw2cgd3gja6qs50nkyc7zjzmm28fchqbbam4m3hzf") (f (quote (("std" "async-trait" "codec/std" "scale-info/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-consensus-slots/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-timestamp/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde" "sp-application-crypto/serde" "sp-consensus-slots/serde" "sp-core/serde" "sp-runtime/serde"))))))

