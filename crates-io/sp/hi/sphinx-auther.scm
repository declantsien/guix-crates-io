(define-module (crates-io sp hi sphinx-auther) #:use-module (crates-io))

(define-public crate-sphinx-auther-0.1.0 (c (n "sphinx-auther") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "0aczz435h9av02ib0vyrkhwxz8060a0m38ziadc6ln4r1q0cvgz2") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.1 (c (n "sphinx-auther") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "0pg3k7l2qhhmbzmypygmr7bplmaxv6fq824fd73d6gax3qrh1r4b") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.2 (c (n "sphinx-auther") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "084q0b04zwlnx2rzzyiz1qr910jwz6b5gl4c14i1das7vzi4cpnr") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.3 (c (n "sphinx-auther") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "00q7gk8l1kgbmn68xjhblzxxm81plvnh9vbrz0s20laq1fsx67pa") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.4 (c (n "sphinx-auther") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "1fxhk93y1634633kl5mm46xckhjk4nd6bc6rmbwwpp5j8h8y1ir0") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.5 (c (n "sphinx-auther") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "1bxqjdilxfpilvvwfyxwckg86g21qwj981lfz5kyxmmzs3w8mx6a") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.6 (c (n "sphinx-auther") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "1ws4x3mr61inknn8f62pnhzgwmrdis59g7l135dr6fa4h16jjhnn") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.7 (c (n "sphinx-auther") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "1wzmwhmw78ayzxmgivwpnrga4dq4ixv73r3l7s7ak42vp2l7lif2") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.8 (c (n "sphinx-auther") (v "0.1.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "1r2mvpq3gqj1hbz2qc363lyq5r9hvnjrxi87k4xwcig2mj9b4j9w") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.9 (c (n "sphinx-auther") (v "0.1.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "bitcoin_hashes"))) (k 0)))) (h "00cphjfjijw5jpnk946nr3mbyqik880hfcnn7s2sj006pp49bfh7") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.10 (c (n "sphinx-auther") (v "0.1.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "lowmemory" "bitcoin_hashes"))) (d #t) (k 0)))) (h "00h3y8da7qq0xqk6l05fyhm1an2h1wyqi08zl81x9s03dycc6aj5") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.11 (c (n "sphinx-auther") (v "0.1.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "lowmemory" "bitcoin_hashes"))) (d #t) (k 0)))) (h "1a99v4n9hk4pi60xc3qhmy9k6501kjz4ya14nq58pyaag02ajsk6") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

(define-public crate-sphinx-auther-0.1.12 (c (n "sphinx-auther") (v "0.1.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("std" "rand-std" "lowmemory" "bitcoin_hashes"))) (d #t) (k 0)))) (h "0qjk4n8dc6sw0ix64kid940gr8yga3ssqvijj704wvyykqa29g9k") (f (quote (("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "secp256k1/alloc") ("default" "no-std" "secp-recovery" "secp-lowmemory"))))))

