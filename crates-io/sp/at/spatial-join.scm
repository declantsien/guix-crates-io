(define-module (crates-io sp at spatial-join) #:use-module (crates-io))

(define-public crate-spatial-join-0.1.0 (c (n "spatial-join") (v "0.1.0") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (f (quote ("geo"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1gyfmrpadv07qcvhxyr1ncgr1ypys5h24fkr7r7xvqkrzk1a86qz") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

(define-public crate-spatial-join-0.1.1 (c (n "spatial-join") (v "0.1.1") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wkt") (r "^0.8.0") (d #t) (k 2)))) (h "0wjvzx1l3liwvw55prdr6fnkc2bnn0yna9f9vmn6l5c7s54jlbp3") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

(define-public crate-spatial-join-0.1.2 (c (n "spatial-join") (v "0.1.2") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wkt") (r "^0.8.0") (d #t) (k 2)))) (h "15m00sqjgzrp100581ahr7qcraadinnjlfj778jlflp53j31jpl5") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

(define-public crate-spatial-join-0.1.3 (c (n "spatial-join") (v "0.1.3") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wkt") (r "^0.8.0") (d #t) (k 2)))) (h "17bgwsbajc2gwm590hmxhnk42limlmqqvci81maza2si8al5jw1a") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

(define-public crate-spatial-join-0.1.4 (c (n "spatial-join") (v "0.1.4") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wkt") (r "^0.8.0") (d #t) (k 2)))) (h "09l1yj8pfmykjs1qyichri0rma4z47qy0vj9dby59vjaa10jv0j8") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

(define-public crate-spatial-join-0.1.5 (c (n "spatial-join") (v "0.1.5") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "geo") (r "^0.14.0") (d #t) (k 0)) (d (n "geos") (r "^5.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rstar") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wkt") (r "^0.8.0") (d #t) (k 2)))) (h "161afzc8jmqa1aqmklvls8i8g5snv6yrajb5f2ixs2b3k2hv9jd1") (f (quote (("parallel" "rayon" "num_cpus") ("default" "parallel"))))))

