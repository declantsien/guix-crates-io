(define-module (crates-io sp ri spring-batch-rs) #:use-module (crates-io))

(define-public crate-spring-batch-rs-0.1.0 (c (n "spring-batch-rs") (v "0.1.0") (d (list (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "007196b6ms2zkrhckpyjrf888dlac45csp2k730l16l2asrdwall") (f (quote (("cvs")))) (y #t)))

(define-public crate-spring-batch-rs-0.1.1 (c (n "spring-batch-rs") (v "0.1.1") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)))) (h "1sj8xviy8if2hyz4sk831lqvbk5ig4zmmfr8dwcg5nr4kax51lm7") (f (quote (("logger") ("full" "csv" "json" "logger" "fake") ("default")))) (y #t) (s 2) (e (quote (("json" "dep:serde_json") ("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.1.2 (c (n "spring-batch-rs") (v "0.1.2") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)))) (h "15f273a0nis327vkr6sp6vr2ivi9k533fvf0g2apkk59flj8lia7") (f (quote (("tests-cfg" "full") ("logger") ("full" "csv" "json" "logger" "fake") ("default")))) (y #t) (s 2) (e (quote (("time" "dep:time") ("json" "dep:serde_json") ("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.1.3 (c (n "spring-batch-rs") (v "0.1.3") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)))) (h "0k0f252yfd172zvs6qcgr26fp0939mka92xkldg18alasq1ia0s3") (f (quote (("tests-cfg" "full") ("logger") ("full" "csv" "json" "logger" "fake") ("default")))) (y #t) (s 2) (e (quote (("time" "dep:time") ("json" "dep:serde_json") ("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.1.4 (c (n "spring-batch-rs") (v "0.1.4") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)))) (h "1wfxhp0ijihshhfkpmp5d7x7bsc56fl2ykdbf5hbyfa7qjsi4hbb") (f (quote (("tests-cfg" "full") ("logger") ("full" "csv" "json" "logger" "fake") ("default")))) (y #t) (s 2) (e (quote (("time" "dep:time") ("json" "dep:serde_json") ("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.1.5 (c (n "spring-batch-rs") (v "0.1.5") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)))) (h "1q7dj7v54j8clwjlacqgsr2l5bmz2vih34p5f8xbzlkzzq2ijbhm") (f (quote (("tests-cfg" "full") ("logger") ("full" "csv" "json" "logger" "fake") ("default")))) (s 2) (e (quote (("time" "dep:time") ("json" "dep:serde_json") ("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.2.0 (c (n "spring-batch-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (o #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.0") (d #t) (k 2)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "mongodb") (r "^2.8.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "testcontainers-modules") (r "^0.3.2") (f (quote ("postgres" "mysql" "mongo"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)))) (h "0jir1255k951q1bvnpy94i2qpa96h1r8p89afj5p7rrlv60ca991") (f (quote (("tests-cfg" "full") ("rdbc-sqlite" "sqlx/sqlite" "rdbc") ("rdbc-postgres" "sqlx/postgres" "rdbc") ("rdbc-mysql" "sqlx/mysql" "rdbc") ("rdbc") ("mongodb" "mongodb/tokio-sync" "bson") ("logger") ("json") ("full" "csv" "json" "logger" "fake" "rdbc-postgres" "rdbc-mysql" "rdbc-sqlite" "mongodb") ("default")))) (s 2) (e (quote (("fake" "dep:fake" "dep:rand" "dep:time") ("csv" "dep:csv"))))))

(define-public crate-spring-batch-rs-0.2.1 (c (n "spring-batch-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (o #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 2)) (d (n "fake") (r "^2.9.2") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "mongodb") (r "^2.8.2") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "testcontainers-modules") (r "^0.3.5") (f (quote ("postgres" "mysql" "mongo"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "00s33p2k6z63d3bbmp23n58xp88v3vhk3l7nwclbq0k6ri2x4y08") (f (quote (("tests-cfg" "full") ("rdbc-sqlite" "sqlx/sqlite" "rdbc") ("rdbc-postgres" "sqlx/postgres" "rdbc") ("rdbc-mysql" "sqlx/mysql" "rdbc") ("rdbc") ("mongodb" "mongodb/tokio-sync" "bson") ("logger") ("json") ("full" "csv" "json" "logger" "fake" "rdbc-postgres" "rdbc-mysql" "rdbc-sqlite" "mongodb") ("default")))) (s 2) (e (quote (("fake" "dep:fake" "dep:time") ("csv" "dep:csv"))))))

