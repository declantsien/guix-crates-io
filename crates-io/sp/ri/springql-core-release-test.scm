(define-module (crates-io sp ri springql-core-release-test) #:use-module (crates-io))

(define-public crate-springql-core-release-test-1.0.0-a2 (c (n "springql-core-release-test") (v "1.0.0-a2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "config") (r "^0.13") (f (quote ("toml"))) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fastrand") (r "^1.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "socketcan") (r "^1.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)))) (h "0g9z4g79cj5vbnhbw8yx0dbq9660hq543g2bdgirm1lrisqjff1b") (f (quote (("stub_web_console")))) (y #t) (r "1.57.0")))

(define-public crate-springql-core-release-test-1.0.0-a6 (c (n "springql-core-release-test") (v "1.0.0-a6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "config") (r "^0.13") (f (quote ("toml"))) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fastrand") (r "^1.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "socketcan") (r "^1.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)))) (h "1d7c3safsi6wh620am07xkcf52v6i9s6ai2pxjs1zypfxy6fx9rv") (f (quote (("stub_web_console")))) (y #t) (r "1.57.0")))

