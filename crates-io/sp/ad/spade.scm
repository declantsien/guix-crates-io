(define-module (crates-io sp ad spade) #:use-module (crates-io))

(define-public crate-spade-0.1.0 (c (n "spade") (v "0.1.0") (d (list (d (n "cgmath") (r "0.11.*") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "glfw") (r "0.8.*") (d #t) (k 2)) (d (n "glium") (r "0.15.*") (d #t) (k 2)) (d (n "kiss3d") (r "0.7.*") (d #t) (k 2)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "noise") (r "0.2.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "0ycl8w9izfcz4y6v57710h9l158p9lcyci8h43r9kmmfy2wyfgf8")))

(define-public crate-spade-0.1.1 (c (n "spade") (v "0.1.1") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r "0.12.*") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "glfw") (r "0.8.*") (d #t) (k 2)) (d (n "glium") (r "0.15.*") (d #t) (k 2)) (d (n "kiss3d") (r "0.7.*") (d #t) (k 2)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "noise") (r "0.2.*") (d #t) (k 2)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "16hm9z5vy5ybzmmlh3x56kg10ykdg8606xks5xsgfw3nij2a4vm6")))

(define-public crate-spade-0.2.0 (c (n "spade") (v "0.2.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.11.0") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.9.0") (d #t) (k 0)) (d (n "noise") (r "0.2.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "0zdjhkqiwad0hyxs55gjpi7d1i98clzlzf6z5qwgfv4bcrddl0h0")))

(define-public crate-spade-0.2.1 (c (n "spade") (v "0.2.1") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.11.0") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.9.0") (d #t) (k 0)) (d (n "noise") (r "0.2.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "01gk04i9a0x72hc1i4xhygrvz230yvphnb6rf7724ch9xj9z5vbx")))

(define-public crate-spade-0.3.0 (c (n "spade") (v "0.3.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.11.0") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.9.0") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "1gbv2ywd2c3fzar6nzwcrr594cw7zpxzys8sgshyfdczdj5gw8rp")))

(define-public crate-spade-1.0.0 (c (n "spade") (v "1.0.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, <= 0.12.0") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.11.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "1p41ni08ndq7fzj34d0r0kn82hnzwgvirdgxav81g2fj3cdmpw3h")))

(define-public crate-spade-1.1.0 (c (n "spade") (v "1.1.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, <= 0.12.0") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.11.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "smallvec") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "0bn5m4mwpgfbr03f6qzknydagq45cjjd5i0kl5q0c3pdfw88cl8v")))

(define-public crate-spade-1.2.0 (c (n "spade") (v "1.2.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.14.*") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.12.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "smallvec") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 2)))) (h "0xlxnqf46k4r30wh6iy3imhmn0x48ixns56w1pln9jf0chim9g92")))

(define-public crate-spade-1.3.0 (c (n "spade") (v "1.3.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.16.*") (d #t) (k 0)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.13.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "smallvec") (r "0.3.*") (d #t) (k 0)))) (h "0zm7yjz24izm1zg55y0pc63d7fcncml7pzr2bs9kp7n7hws4y2hy")))

(define-public crate-spade-1.4.0 (c (n "spade") (v "1.4.0") (d (list (d (n "approx") (r "0.1.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.16.*") (d #t) (k 0)) (d (n "cgmath") (r "0.16.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.14.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.3.*") (d #t) (k 0)))) (h "0446a8v957la2v2xy1rilbv2jwwfals0wr26ahhsfnb2nljazb67") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.5.0 (c (n "spade") (v "1.5.0") (d (list (d (n "approx") (r "0.2.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.16.*") (d #t) (k 0)) (d (n "cgmath") (r "0.16.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.15.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.5.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.6.*") (d #t) (k 0)))) (h "1jzji200v05pwi6kl1q790fmkpl8nmwsbkqsdxqkx3fpx63l45vr") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.5.1 (c (n "spade") (v "1.5.1") (d (list (d (n "approx") (r "0.2.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.16.*") (d #t) (k 0)) (d (n "cgmath") (r "0.16.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.15.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.5.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.6.*") (d #t) (k 0)))) (h "004dxxq7rl1r22ii67vysj0j2vzw39l82sf4mj1g7ync9f5winmf") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.6.0 (c (n "spade") (v "1.6.0") (d (list (d (n "approx") (r "0.2.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.16.*") (d #t) (k 0)) (d (n "cgmath") (r "0.16.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.16.*") (d #t) (k 0)) (d (n "num") (r ">= 0.1.0, 0.2.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.5.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.6.*") (d #t) (k 0)))) (h "005njyy676qmzjy4ff882c2j8bszi679hdp2r5dz0kk398n7p5za") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.7.0 (c (n "spade") (v "1.7.0") (d (list (d (n "approx") (r "0.2.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.17.*") (d #t) (k 0)) (d (n "cgmath") (r "0.17.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.17.*") (d #t) (k 0)) (d (n "num") (r ">= 0.1.0, 0.2.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.5.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.6.*") (d #t) (k 0)))) (h "0znzrlnjznxj0kb5cd3hfx7wbq2bipz5nc9gz8ivpl8cwk102ps5") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.8.0 (c (n "spade") (v "1.8.0") (d (list (d (n "approx") (r "0.2.*") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.17.*") (d #t) (k 0)) (d (n "cgmath") (r "0.17.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "0.1.*") (d #t) (k 0)) (d (n "nalgebra") (r ">= 0.11.0, 0.18.*") (d #t) (k 0)) (d (n "num") (r ">= 0.1.0, 0.2.*") (d #t) (k 0)) (d (n "pdqselect") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.5.*") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "0.6.*") (d #t) (k 0)))) (h "1i3vvflfk0fh2bq1p37xng1sdqigcnndpwzb9aciwkyv97kv39ix") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.8.1 (c (n "spade") (v "1.8.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.17.*") (d #t) (k 0)) (d (n "cgmath") (r "0.17.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r ">= 0.11.0, 0.18.*") (d #t) (k 0)) (d (n "num") (r ">= 0.1.0, 0.2.*") (d #t) (k 0)) (d (n "pdqselect") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1s2ydf2kv3whay118fgwwirvn9hvhp6nld9n5kjviacjcb0r1x5g") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-1.8.2 (c (n "spade") (v "1.8.2") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "cgmath") (r ">= 0.10.0, 0.17.*") (d #t) (k 0)) (d (n "cgmath") (r "0.17.*") (f (quote ("serde"))) (d #t) (k 2)) (d (n "clamp") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r ">= 0.11.0, 0.18.*") (d #t) (k 0)) (d (n "num") (r ">= 0.1.0, 0.2.*") (d #t) (k 0)) (d (n "pdqselect") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)))) (h "1q7bklxsmyjzj8s37922f374qxnss48q2cis0100jjl5p201gp73") (f (quote (("serde_serialize" "num/serde" "serde"))))))

(define-public crate-spade-2.0.0 (c (n "spade") (v "2.0.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "optional") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^0.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 2)))) (h "0bc8i2dyqd4znsmy3s6pgn2188ja1hgplgazjmg5r96rxchqqfrk") (f (quote (("serde" "optional/serde" "serde_crate"))))))

(define-public crate-spade-2.1.0 (c (n "spade") (v "2.1.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "optional") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.13.0") (d #t) (k 2)))) (h "1ww0gdl2sc53cjgy7vfsqfm6mrbn4qaf281dpcyzq5zbyklf140i") (s 2) (e (quote (("serde" "optional/serde" "dep:serde"))))))

(define-public crate-spade-2.2.0 (c (n "spade") (v "2.2.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "optional") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.13.0") (d #t) (k 2)))) (h "1y84iwjxqa3pgazkdwm5dsikd6d8kg1hf82q5hvx4s38k01mirl8") (s 2) (e (quote (("serde" "optional/serde" "dep:serde"))))))

(define-public crate-spade-2.2.1 (c (n "spade") (v "2.2.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)))) (h "0744b4mn3iznlyjqpksbbdrgk0z24kad4jq3j2i3q2c6akz5q25b")))

(define-public crate-spade-2.3.0 (c (n "spade") (v "2.3.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)))) (h "0kzl2ry4p53bb6fn507b08g8sdd713gnfvi2ddc453k3v5ly6fbc") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.3.1 (c (n "spade") (v "2.3.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)))) (h "0i2vzp5d6l47lpr1wwcphpvs4blnz7dwq77kknihki50mh8p0jsl") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.4.0 (c (n "spade") (v "2.4.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)))) (h "1fnqbjlp6hap1k3s5nqs958cairl299351l7vwfxvmf2bqkbzly3") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.4.1 (c (n "spade") (v "2.4.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)))) (h "0w165h3iixm4gh5lh6nk652xfc7lvxzcw9qs3h2wj264zcpfz8w7") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.5.0 (c (n "spade") (v "2.5.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)) (d (n "tiny-skia") (r "^0.11.3") (d #t) (k 2)))) (h "190nvqgn19nlq2g01p3idyxvw3rl2n02wbn87q90piasb99rjiw7") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.5.1 (c (n "spade") (v "2.5.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)) (d (n "tiny-skia") (r "^0.11.3") (d #t) (k 2)))) (h "0bv8f6mpg7yl2vz7dnl9ml6wid2a7wyahvkff0v2007z7jr4wxxx") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.6.0 (c (n "spade") (v "2.6.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.14.0") (d #t) (k 2)) (d (n "tiny-skia") (r "^0.11.3") (d #t) (k 2)))) (h "007x4iq69gbinx20a25jsk95jpx25cj99zpn9ddiy7di2y8xzbb1") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.7.0 (c (n "spade") (v "2.7.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "image") (r "^0.25.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "shapefile") (r "^0.6.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.17.0") (d #t) (k 2)) (d (n "tiny-skia") (r "^0.11.3") (d #t) (k 2)))) (h "1906nvw2mgp6qsynqqyjgw01zflvs6g7ccm7w8il3km6xq90fcv8") (f (quote (("std") ("default" "std"))))))

(define-public crate-spade-2.8.0 (c (n "spade") (v "2.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "float_next_after") (r "^1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "image") (r "^0.25.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "robust") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "shapefile") (r "^0.6.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "svg") (r "^0.17.0") (d #t) (k 2)) (d (n "tiny-skia") (r "^0.11.3") (d #t) (k 2)))) (h "1h68d205s3cida0r1iba9shfxqhlbzy9gaa1gr4l5r4s2q4sh82v") (f (quote (("std") ("default" "std"))))))

