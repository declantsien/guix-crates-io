(define-module (crates-io sp ir spirit) #:use-module (crates-io))

(define-public crate-spirit-0.1.0 (c (n "spirit") (v "0.1.0") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "fern") (r "~0.5") (f (quote ("syslog-4"))) (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "log-panics") (r "~2") (d #t) (k 0)) (d (n "log-reroute") (r "~0.1") (d #t) (k 0)) (d (n "nix") (r "~0.11") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "syslog") (r "~4") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "1kixwa44kivqd2whllb4ajqyfiax5hl5jn1bpj7538zvxn8yqiyk")))

(define-public crate-spirit-0.1.1 (c (n "spirit") (v "0.1.1") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "fern") (r "~0.5") (f (quote ("syslog-4"))) (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "log-panics") (r "~2") (d #t) (k 0)) (d (n "log-reroute") (r "~0.1") (d #t) (k 0)) (d (n "nix") (r "~0.11") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "privdrop") (r "~0.2") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "syslog") (r "~4") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "0cf6p0paj9pikahl4dm66yns60rj6b2zzbq6qkixnii03rfqffbx")))

(define-public crate-spirit-0.2.0 (c (n "spirit") (v "0.2.0") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "1imi9gc5mwcpk2d53vzzv4cshc28gisxnkh3f4b1jxldgg1n7sql")))

(define-public crate-spirit-0.2.1 (c (n "spirit") (v "0.2.1") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "0mfjmav6alcncbkb1gyifvm9rfa05m1gfx03g5wjvyladk9im027")))

(define-public crate-spirit-0.2.2 (c (n "spirit") (v "0.2.2") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "1gp5nn40zb2isaglw6sn2vga5xk1p81yfql41xrywcq45cpnilpx")))

(define-public crate-spirit-0.2.3 (c (n "spirit") (v "0.2.3") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "0xdf0rib097sjxyqhm93fl32hdx8i5ifl45pkrn3wq74bkqy92by")))

(define-public crate-spirit-0.2.4 (c (n "spirit") (v "0.2.4") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "0pg3kgjvhn4wijhmgawv5lpxzyaiwmbaz8yn5cmsdg2cw16pzxld")))

(define-public crate-spirit-0.2.5 (c (n "spirit") (v "0.2.5") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "0wkxygxic6kjcx7fxm4n3wai2cc0m73vgck12x972933gx8dan3d")))

(define-public crate-spirit-0.2.6 (c (n "spirit") (v "0.2.6") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "08n47fhnc8y8ya0mj92d26z85p7n3ml2p3g3vvszx2bg6dcvz1s1")))

(define-public crate-spirit-0.2.7 (c (n "spirit") (v "0.2.7") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "1zi4srajs14lcr84vqy2qjlhlpsj81dgqfvmy46j8hkqm0b0ypcp") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson"))))))

(define-public crate-spirit-0.2.8 (c (n "spirit") (v "0.2.8") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.5") (d #t) (k 2)))) (h "02gz2hk3kg4q0k6408l5v2r6bvsvhkam2g3kqgd8zzv3yhal0b3x") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson"))))))

(define-public crate-spirit-0.2.9 (c (n "spirit") (v "0.2.9") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.6") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.6") (d #t) (k 2)))) (h "1544fdws7brw0w9zlj7dl2jg9fdz3y2q37yi3g0ysdvz30588ll6") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson"))))))

(define-public crate-spirit-0.2.10 (c (n "spirit") (v "0.2.10") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "itertools") (r "~0.7") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_derive") (r "~1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1") (d #t) (k 0)) (d (n "structdoc") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "version-sync") (r "~0.6") (d #t) (k 2)))) (h "0qvpwpsbgl0h5cyfcfwhc05y61faklhzrir5nm3lqdd3bs0f76iz") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.0 (c (n "spirit") (v "0.3.0") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.7") (d #t) (k 0)) (d (n "structdoc") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "0blr65m3c3sragfnpl6mn5718w8v60fc96p3za2vdww3mng12ls9") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.1 (c (n "spirit") (v "0.3.1") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "1gdgzhxhmhaagxlwaipsxy7nga6dcg4nrhjzhxsdk8b547ld8rbf") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.2 (c (n "spirit") (v "0.3.2") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "02dpl1hsx0f9z60bshgxllikkp367avf7v21ycjdrg7rcw9lrfl2") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.3 (c (n "spirit") (v "0.3.3") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "1lyk0pznlg11vyprf5z2v0rrhra166ln3r58r2j2yqcdrdymy546") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.4 (c (n "spirit") (v "0.3.4") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "1c2rw63gcnic4yw0lm153rh460hzc2ggfvbdva08fnbxvnq7r9a3") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.5 (c (n "spirit") (v "0.3.5") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "0158bjxxfk3pawv7qfyfqv5n3k61k6gm9s1542yj7hbyz99ny74s") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.6 (c (n "spirit") (v "0.3.6") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.1") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.4") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "1n0kyyinrwn091030lvpl9k5crqlsdikbnb45hjfk4r1jnjcph49") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.7 (c (n "spirit") (v "0.3.7") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "15hdix92lnnjfp70zgmn05v5iwlxc0blh35y9qbmjpkv8b2qnm2n") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.3.8 (c (n "spirit") (v "0.3.8") (d (list (d (n "arc-swap") (r "~0.3") (d #t) (k 0)) (d (n "config") (r "~0.9") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "itertools") (r "~0.8") (d #t) (k 0)) (d (n "lazy_static") (r "~1") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "parking_lot") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.2") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.2") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.5") (d #t) (k 2)) (d (n "spirit-log") (r "~0.2") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.5") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.2") (d #t) (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.7") (d #t) (k 2)))) (h "0wyf0gfnq2qkrygi00wykhcqn0sbf74rb6aj59jb7nf9jd1m8l1i") (f (quote (("yaml" "config/yaml") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "ini" "json" "hjson" "yaml" "cfg-help") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.0 (c (n "spirit") (v "0.4.0") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config-spirit-fork") (r "~0.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.8") (d #t) (k 2)))) (h "0gclbc6b67s0sdp54s7fbx6gxbzg4jkc01prmrfk9xzp6d1ndwyr") (f (quote (("yaml" "config-spirit-fork/yaml") ("suggestions" "structopt/suggestions") ("json" "config-spirit-fork/json") ("ini" "config-spirit-fork/ini") ("hjson" "config-spirit-fork/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.1 (c (n "spirit") (v "0.4.1") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.3") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.6") (d #t) (k 2)) (d (n "spirit-log") (r "~0.3") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.6") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.8") (d #t) (k 2)))) (h "102ygcy6hi0jlgli10yr9kapf7psbpajnzzr42dqbc0xakniva6r") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.2 (c (n "spirit") (v "0.4.2") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.3") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.6") (d #t) (k 2)) (d (n "spirit-log") (r "~0.3") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.6") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "= 0.3.12") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.8") (d #t) (k 2)))) (h "118x5dc91brcn3vl1icjxng7siav8ybpq8l2ifwnwmbq2cw869kk") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.3 (c (n "spirit") (v "0.4.3") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~1") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humantime") (r "~0.1") (d #t) (k 2)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.3") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.6") (d #t) (k 2)) (d (n "spirit-log") (r "~0.3") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.6") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "= 0.3.12") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.8") (d #t) (k 2)))) (h "1fw142is6sk1i696k615g6496w70crbsqjc442pp9hyk16wgijlf") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.4 (c (n "spirit") (v "0.4.4") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.3") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.6") (d #t) (k 2)) (d (n "spirit-log") (r "~0.3") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.6") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r ">=0.3.12, <=0.3.15") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "1dilkyvbp02qrqrp53cflqmlmnfi74v1pgy6lx2ajrzlpkwqivs7") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.5 (c (n "spirit") (v "0.4.5") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.12") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.3") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.6") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.6") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r ">=0.3.12, <=0.3.18") (k 0)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "0dhpm2fzwaym8zlrvrvqv4idzxxk4crw4jcgfvn5ipks4nmzdy7i") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.6 (c (n "spirit") (v "0.4.6") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "1a7ky44s08ijyzr653dpicincgwlhlc5rv1kiwjxh3cjpyg2175b") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.7 (c (n "spirit") (v "0.4.7") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.7") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.7") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "08cpa2vyq00axk4byvsn91c81rf8as60bmpnq2mdgkk0nqk66pjh") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.8 (c (n "spirit") (v "0.4.8") (d (list (d (n "arc-swap") (r "~0.4") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.3") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.7") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.7") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "0yhcmp5qhawyk1dhf8h0alfj66sjdxcqj98x24ff63dv6x59cim2") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.9 (c (n "spirit") (v "0.4.9") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.1.8") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.7") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.7") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)))) (h "1r9vy0wgxpapf040imr6dnvy1plsf350300pncvja7yjgs2fwkxx") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.10 (c (n "spirit") (v "0.4.10") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.2") (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.7") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.7") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "12yg94mrpy8a7f5rzygfzdg0cz8jrhkjnil38vl1pvjzvdsgdq8g") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.11 (c (n "spirit") (v "0.4.11") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.13") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.2.2") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.7") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.7") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "19lpcq0607kzv7w4i1ssr662kqkmna9y1b2mabqv3vrrlahw39w5") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.12 (c (n "spirit") (v "0.4.12") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "~0.2.2") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.8") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.8") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "0ddk8gyvh7jx1bycynxdlf529sq6qvjb9fb7fwwhs37n5rgvd014") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.13 (c (n "spirit") (v "0.4.13") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.4") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.8") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.8") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "0hkfyslaq7cmydnfnzcmkd61zsff5jkb81sanpnglfc35djmdxa5") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.14 (c (n "spirit") (v "0.4.14") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.8") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.8") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "1qy7qvkfws45rx0ciky4j344ymds1m46000m1g8vfp2jbi4hfzyw") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.15 (c (n "spirit") (v "0.4.15") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.8") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.8") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "1pjis3pgbvc9yyfpr72cbxl4iw78jgwb985iw3pbaxfp5y3wf41m") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.16 (c (n "spirit") (v "0.4.16") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.8") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.8") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "1bcfgxmr4g48jwynbq8h8r92yj60xsk2mpkmm8lrnm7nl5r0bn3p") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.17 (c (n "spirit") (v "0.4.17") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.9") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.9") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "0pkwg5v25ram055wmzlmirhg5vfqh3868m7aqlzc7z9a4va4lvk0") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.18 (c (n "spirit") (v "0.4.18") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.9") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.9") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "05rnmw9pfh64ngqr5f7ldnl4i7lwj0vgxfwpj157zl84vfbybjc9") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.19 (c (n "spirit") (v "0.4.19") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.9") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.9") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "052hyfhxkys2irmc936hcv59c3ysmxxh5n24iwdxr85wzlmyi12m") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.20 (c (n "spirit") (v "0.4.20") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.10.1") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.9") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.9") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "0bx3pwm7dhacybk4v84037m48s80m3w3kjmbyilcch1vq4dzkmd7") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

(define-public crate-spirit-0.4.21 (c (n "spirit") (v "0.4.21") (d (list (d (n "arc-swap") (r "~1") (d #t) (k 0)) (d (n "config") (r "~0.11") (f (quote ("toml"))) (k 0)) (d (n "either") (r "~1") (d #t) (k 0)) (d (n "err-context") (r "~0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "~0.2") (d #t) (k 0)) (d (n "humantime") (r "~2") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (d #t) (k 2)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "maplit") (r "~1") (d #t) (k 2)) (d (n "once_cell") (r "~1") (d #t) (k 2)) (d (n "serde") (r "~1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_ignored") (r "~0.1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "~0.1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.3") (f (quote ("extended-siginfo"))) (d #t) (k 0)) (d (n "spirit-cfg-helpers") (r "~0.4") (d #t) (k 2)) (d (n "spirit-daemonize") (r "~0.5") (d #t) (k 2)) (d (n "spirit-hyper") (r "~0.9") (d #t) (k 2)) (d (n "spirit-log") (r "~0.4") (f (quote ("background"))) (d #t) (k 2)) (d (n "spirit-tokio") (r "~0.9") (f (quote ("rt-from-cfg"))) (d #t) (k 2)) (d (n "structdoc") (r "~0.1.3") (o #t) (d #t) (k 0)) (d (n "structdoc") (r "~0.1.3") (d #t) (k 2)) (d (n "structopt") (r "~0.3.12") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "toml") (r "~0.5") (d #t) (k 0)))) (h "0pkqiw0h6z6p4v7f0x6l6m0yv62j9sncz7fxvxgbb0zmrsn16s2r") (f (quote (("yaml" "config/yaml") ("suggestions" "structopt/suggestions") ("json" "config/json") ("ini" "config/ini") ("hjson" "config/hjson") ("default" "cfg-help" "json" "yaml" "suggestions" "color") ("color" "structopt/color") ("cfg-help" "structdoc"))))))

