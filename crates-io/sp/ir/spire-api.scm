(define-module (crates-io sp ir spire-api) #:use-module (crates-io))

(define-public crate-spire-api-0.1.0 (c (n "spire-api") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 1)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-types") (r "^0.11") (d #t) (k 0)) (d (n "spiffe") (r "^0.4.0") (f (quote ("spiffe-types"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "test-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (f (quote ("prost" "codegen" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.9") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 0)))) (h "1brc5wq4s27073sm79y6y3lnfd8ym6jjs00zlscca3c041628m88") (f (quote (("integration-tests"))))))

(define-public crate-spire-api-0.2.0 (c (n "spire-api") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "spiffe") (r "^0.5.0") (f (quote ("spiffe-types"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 0)))) (h "0bscfgqv96q10jb1qa4ldjl5318q8ca9hcgcdq3sn5gxwvyv8j14") (f (quote (("integration-tests"))))))

