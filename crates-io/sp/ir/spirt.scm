(define-module (crates-io sp ir spirt) #:use-module (crates-io))

(define-public crate-spirt-0.0.0 (c (n "spirt") (v "0.0.0") (h "11qz6dp9qnnllfp708ffg5zf11n7kx56b9qnsjwx66vvxpvfhgir")))

(define-public crate-spirt-0.1.0-rc.0 (c (n "spirt") (v "0.1.0-rc.0") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "01zn15hfyi73wqdnk48c76girz30nfi99398ivqdzf62k3nhsmkq")))

(define-public crate-spirt-0.1.0-rc.1 (c (n "spirt") (v "0.1.0-rc.1") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "1hj00iiwi483c7m1xsmm9hw0wri71zpn7smjjdrcs67k4x6y3g04")))

(define-public crate-spirt-0.1.0-rc.2 (c (n "spirt") (v "0.1.0-rc.2") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "0bl68ppnrx2shd4xci0f12fxhncvcfj9gqjym5yniqqvbidyhbn2")))

(define-public crate-spirt-0.1.0 (c (n "spirt") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "0nd4x75d669ffn1qd0v6ilpzadhfr2xcrisxzm469y66pfxlx0q6")))

(define-public crate-spirt-0.2.0 (c (n "spirt") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "internal-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "longest-increasing-subsequence") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "1xyya8ksppw070yc9lhlb8lhm4dq4b19kanfzdz6cg1gy6bajkz2")))

(define-public crate-spirt-0.3.0 (c (n "spirt") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "elsa") (r "^1.6.0") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "internal-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "longest-increasing-subsequence") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (f (quote ("serde" "union"))) (d #t) (k 0)))) (h "1zy781ydsf8cs5zk36cs09x6wb08qkrfs958dn6q3zr06y8ggqb4")))

