(define-module (crates-io sp -s sp-state-machine) #:use-module (crates-io))

(define-public crate-sp-state-machine-0.8.0-alpha.2 (c (n "sp-state-machine") (v "0.8.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.2") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "11gh43wg5s23bhswrnjynkfrccwrma6jl71hi36yw8k81ahzxjyk") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-alpha.3 (c (n "sp-state-machine") (v "0.8.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.2") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1a2q6g4ckgqphv47qmwk93rrsy72jfr33psdxxpz06nb14255bnd") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-alpha.5 (c (n "sp-state-machine") (v "0.8.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.5") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "08cm2c7p7a74ajkq72l0dhdm7gmgzp3vzbn6i98pm3myjgi1fap5") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-alpha.6 (c (n "sp-state-machine") (v "0.8.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.6") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1jhi17w5ydilp51958kl9pz3s6368wr7n99jxm2jzrccn27f4pdx") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-alpha.7 (c (n "sp-state-machine") (v "0.8.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.7") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "119990c436c237mp9ymni44l41afvx8kcj1lkkka07l9hl5jsd5x") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-alpha.8 (c (n "sp-state-machine") (v "0.8.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-alpha.8") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1zg0bc22g083iwg98smni3x237css01sn6ywzpc87v8gz5lr6q17") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc1 (c (n "sp-state-machine") (v "0.8.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc1") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "0nj7kxca73r3sy29s452h3hphk51q4mk96462ml3fdf3xkaqhdzm") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc2 (c (n "sp-state-machine") (v "0.8.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc2") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1bhb0iw2f08plqj79b5pdq05ppwc9aycqzv2mgwarwxci15qx6xn") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc3 (c (n "sp-state-machine") (v "0.8.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc3") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "trie-db") (r "^0.20.1") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "0bmx96qcy4ahdm8aqanrnsp38cj7gvf9wy61fhwlpr1f0gwk2qj6") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc4 (c (n "sp-state-machine") (v "0.8.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc4") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "trie-db") (r "^0.21.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1ily90sm7di1q5rmlky7xlx88mdcx06003la6dqqkgrphxngjj8w") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc5 (c (n "sp-state-machine") (v "0.8.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc5") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "trie-db") (r "^0.22.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "03v714w64vf343wk81ay71cz0abbv7va8912cvd9zb6xshf6qvs3") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0-rc6 (c (n "sp-state-machine") (v "0.8.0-rc6") (d (list (d (n "codec") (r "^1.3.1") (d #t) (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "sp-externalities") (r "^0.8.0-rc6") (d #t) (k 0)) (d (n "sp-panic-handler") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "sp-trie") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "trie-db") (r "^0.22.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 0)))) (h "1d5j6rdjh6dbavz5gqxr3mlp4p6rxagfpvmbkknl9dh7qb47c7az") (f (quote (("default"))))))

(define-public crate-sp-state-machine-0.8.0 (c (n "sp-state-machine") (v "0.8.0") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-externalities") (r "^0.8.0") (k 0)) (d (n "sp-panic-handler") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-trie") (r "^2.0.0") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "08775vy8y4r466x5sw5wp1bv8hwab8cj5vx8hdk1kjlbx5fk6n2z") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "parking_lot" "rand" "sp-panic-handler") ("default" "std"))))))

(define-public crate-sp-state-machine-0.8.1 (c (n "sp-state-machine") (v "0.8.1") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-externalities") (r "^0.8.0") (k 0)) (d (n "sp-panic-handler") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-trie") (r "^2.0.0") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1spdxnr4zl301nz2ayl0i280bk0rmliwmnizqmhyal81ywrqqnh9") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "parking_lot" "rand" "sp-panic-handler") ("default" "std"))))))

(define-public crate-sp-state-machine-0.9.0 (c (n "sp-state-machine") (v "0.9.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "sp-core") (r "^3.0.0") (k 0)) (d (n "sp-externalities") (r "^0.9.0") (k 0)) (d (n "sp-panic-handler") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "sp-trie") (r "^3.0.0") (k 0)) (d (n "thiserror") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.22.2") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0kvdb95my85gykfdrvm236yshc1mdywaks6l4vvk14cfwm1l3yj6") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "thiserror" "parking_lot" "rand" "sp-panic-handler") ("default" "std"))))))

(define-public crate-sp-state-machine-0.10.0 (c (n "sp-state-machine") (v "0.10.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "sp-core") (r "^4.0.0") (k 0)) (d (n "sp-externalities") (r "^0.10.0") (k 0)) (d (n "sp-panic-handler") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "sp-trie") (r "^4.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.22.6") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0c133iqx78iyb7ca01csllvfbyq3jq10d6vpils9579z8kldkqzk") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "thiserror" "parking_lot" "rand" "sp-panic-handler" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.11.0 (c (n "sp-state-machine") (v "0.11.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "sp-core") (r "^5.0.0") (k 0)) (d (n "sp-externalities") (r "^0.11.0") (k 0)) (d (n "sp-panic-handler") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "sp-trie") (r "^5.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.23.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "1zbjh2m208arnpqnkmzb7xm7cc4g8pd6xpyxcrpwrk42s0gqarhy") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "thiserror" "parking_lot" "rand" "sp-panic-handler" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.12.0 (c (n "sp-state-machine") (v "0.12.0") (d (list (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-externalities") (r "^0.12.0") (k 0)) (d (n "sp-panic-handler") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "sp-trie") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.23.1") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "1hf6f5c3p9vn7v8xvkxyda4bcpf3pib1cmvacybrkjbqxcrkpvpc") (f (quote (("std" "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "thiserror" "parking_lot" "rand" "sp-panic-handler" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.13.0 (c (n "sp-state-machine") (v "0.13.0") (d (list (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^7.0.0") (k 0)) (d (n "sp-externalities") (r "^0.13.0") (k 0)) (d (n "sp-panic-handler") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "sp-trie") (r "^7.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "0vy6pq8s491bmsa5i7w87zarc05q68skiw2pl96d64chsrxdkhnm") (f (quote (("std" "codec/std" "hash-db/std" "log" "num-traits/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.14.0 (c (n "sp-state-machine") (v "0.14.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^8.0.0") (k 0)) (d (n "sp-externalities") (r "^0.14.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^8.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "0vai16ly5rl2p9s10jki4blzai8my4f27i1hs5l9z84kq7fyjmx6") (f (quote (("std" "codec/std" "hash-db/std" "log" "num-traits/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.15.0 (c (n "sp-state-machine") (v "0.15.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^9.0.0") (k 0)) (d (n "sp-externalities") (r "^0.15.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^9.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "18vmk64z07qmi8inbzpqv2z3431sccvz0q0bbzwzlndiay1pvgqf") (f (quote (("std" "codec/std" "hash-db/std" "log" "num-traits/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.16.0 (c (n "sp-state-machine") (v "0.16.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^10.0.0") (k 0)) (d (n "sp-externalities") (r "^0.15.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^10.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "1i5basbv3sp9al5zpkh601yzc3a03vc1rmdnp7c6cam5r9n9622l") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.17.0 (c (n "sp-state-machine") (v "0.17.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^11.0.0") (k 0)) (d (n "sp-externalities") (r "^0.15.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^11.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "1jnigi8f0aw7xzds62d7p31f0r4bj8fwddhrdkrapdgh1mh4rzgi") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.18.0 (c (n "sp-state-machine") (v "0.18.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^12.0.0") (k 0)) (d (n "sp-externalities") (r "^0.15.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^12.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "001n2zjv99bzwpxwqy6d2dary4lbbs2zma0ncbviyqm2hw7p4ifl") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.19.0 (c (n "sp-state-machine") (v "0.19.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^13.0.0") (k 0)) (d (n "sp-externalities") (r "^0.16.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^13.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "0rawricmjdy67b4acj5fkxgi8vain5x4wi47hywgxb63y3vjrr2i") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.20.0 (c (n "sp-state-machine") (v "0.20.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^14.0.0") (k 0)) (d (n "sp-externalities") (r "^0.17.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^14.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "1b05fq913f9kylairp7x7r8xv8yf0x4n500n4yp5ypd8yyvci6vx") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.21.0 (c (n "sp-state-machine") (v "0.21.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^15.0.0") (k 0)) (d (n "sp-externalities") (r "^0.17.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^15.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "0aixpml3mk2ddp5riw30j3652ha44nr21mxpnb9s0zl7pb89wnjv") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.22.0 (c (n "sp-state-machine") (v "0.22.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^16.0.0") (k 0)) (d (n "sp-externalities") (r "^0.17.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^16.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "0kqsg2gzii8y5y95dqhcfv8lzqy54ys8v53l4v0hf9959j5pp5ac") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.23.0 (c (n "sp-state-machine") (v "0.23.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^17.0.0") (k 0)) (d (n "sp-externalities") (r "^0.17.0") (k 0)) (d (n "sp-panic-handler") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-trie") (r "^17.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (d #t) (k 2)))) (h "0f91m3i3gsqp9nql2lx7sawpz51ll9fb7zm4z22cwscdp7gjxdql") (f (quote (("std" "codec/std" "hash-db/std" "log" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.24.0 (c (n "sp-state-machine") (v "0.24.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-externalities") (r "^0.18.0") (k 0)) (d (n "sp-panic-handler") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-trie") (r "^18.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.25.1") (d #t) (k 2)))) (h "1km4sy8n7zhg9zih8mmhrj34sqcmjrrcvap2jxdj0jfq89rp77vp") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.25.0 (c (n "sp-state-machine") (v "0.25.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-externalities") (r "^0.18.0") (k 0)) (d (n "sp-panic-handler") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-trie") (r "^19.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.26.0") (d #t) (k 2)))) (h "0snsss1f2kmwy2fs7k1ymf4zf83rkadaj53s4g4zz73nkar4vgi2") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.26.0 (c (n "sp-state-machine") (v "0.26.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^19.0.0") (k 0)) (d (n "sp-externalities") (r "^0.18.0") (k 0)) (d (n "sp-panic-handler") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-trie") (r "^20.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (d #t) (k 2)))) (h "0xzq8g1a8dxm52mbr5dw2rixjn2rlxyy3kw9zxjyxv07rmydhk5f") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.27.0 (c (n "sp-state-machine") (v "0.27.0") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^20.0.0") (k 0)) (d (n "sp-externalities") (r "^0.18.0") (k 0)) (d (n "sp-panic-handler") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-trie") (r "^21.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (d #t) (k 2)))) (h "06ah4wz7qssxc6wv1nfkqq40bihc32a83kaj8p1k5j68zhxrrr5i") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.28.0 (c (n "sp-state-machine") (v "0.28.0") (d (list (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (k 0)) (d (n "sp-externalities") (r "^0.19.0") (k 0)) (d (n "sp-panic-handler") (r "^8.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^8.0.0") (k 0)) (d (n "sp-trie") (r "^22.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)))) (h "1di54dch55vrdidzbgr8j14zh21ni81wv84ri27n9b77z4qmvx4y") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0-dev.2 (c (n "sp-state-machine") (v "0.29.0-dev.2") (d (list (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.2") (k 0)) (d (n "sp-externalities") (r "^0.20.0-dev.2") (k 0)) (d (n "sp-panic-handler") (r "^8.1.0-dev.2") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "sp-trie") (r "^22.1.0-dev.2") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "1bc8c8539gardxhkx46xl9v81i88rivfarz90b5rv76q3s6diwja") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0-dev.3 (c (n "sp-state-machine") (v "0.29.0-dev.3") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.3") (k 0)) (d (n "sp-externalities") (r "^0.20.0-dev.3") (k 0)) (d (n "sp-panic-handler") (r "^8.1.0-dev.3") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "sp-trie") (r "^22.1.0-dev.3") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "1gc0c18m9a4c2zwhapvifl7hpa632g5zd62bizwd2jr65apcf7bv") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0-dev.4 (c (n "sp-state-machine") (v "0.29.0-dev.4") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.4") (k 0)) (d (n "sp-externalities") (r "^0.20.0-dev.4") (k 0)) (d (n "sp-panic-handler") (r "^8.1.0-dev.4") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.4") (k 0)) (d (n "sp-trie") (r "^22.1.0-dev.4") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "1gavdlfxxpx7j1mgcrjic2nzg5gpwfxjwamw91h2aphx8mw780zj") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0-dev.5 (c (n "sp-state-machine") (v "0.29.0-dev.5") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.5") (k 0)) (d (n "sp-externalities") (r "=0.20.0-dev.5") (k 0)) (d (n "sp-panic-handler") (r "=8.1.0-dev.5") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "sp-trie") (r "=22.1.0-dev.5") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "0bqn4k493hgn4bhw8ll9vaqwc3hl6vk4vx0bb32ankf0b59ic24w") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0-dev.6 (c (n "sp-state-machine") (v "0.29.0-dev.6") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (k 0)) (d (n "sp-externalities") (r "=0.20.0-dev.6") (k 0)) (d (n "sp-panic-handler") (r "=8.1.0-dev.6") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "sp-trie") (r "=22.1.0-dev.6") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "0awrr75l6jyzgg3cvlf2dh6n50pj58yi5s3zwswf36hgf4zmpppp") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.29.0 (c (n "sp-state-machine") (v "0.29.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-externalities") (r "^0.20.0") (k 0)) (d (n "sp-panic-handler") (r "^9.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "sp-trie") (r "^23.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "13qpjfzf9hw2zsr8cq68k7ic36avzc0dbkymlgasximcsf74vs7j") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "trie-db/std" "thiserror" "tracing") ("default" "std"))))))

(define-public crate-sp-state-machine-0.30.0 (c (n "sp-state-machine") (v "0.30.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-externalities") (r "^0.21.0") (k 0)) (d (n "sp-panic-handler") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "sp-trie") (r "^24.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.1") (k 0)))) (h "1qiv6c8ycyb6304c7lcy0ivlfdqzpinlp63mhjmihmrkg1yww7bp") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.31.0-dev.1 (c (n "sp-state-machine") (v "0.31.0-dev.1") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (k 0)) (d (n "sp-externalities") (r "=0.22.0-dev.1") (k 0)) (d (n "sp-panic-handler") (r "=11.0.0-dev.1") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "sp-trie") (r "=25.0.0-dev.1") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "1ipzx7a4j1pcz3vnjdrih2pcxbbpr397qjir0rzn11in9vqa8cbp") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.31.0 (c (n "sp-state-machine") (v "0.31.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-externalities") (r "^0.22.0") (k 0)) (d (n "sp-panic-handler") (r "^11.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "sp-trie") (r "^25.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "18xlnbfwamfppwcqzr88afjahs6ky510zrxgg4p4m7hsx9mwgx1b") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.32.0 (c (n "sp-state-machine") (v "0.32.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-externalities") (r "^0.23.0") (k 0)) (d (n "sp-panic-handler") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-trie") (r "^26.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "1lzjcmwwv6kfdjs5hjwc83nym93gkln927dn8whgvgih8kx8gq4n") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.33.0 (c (n "sp-state-machine") (v "0.33.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^26.0.0") (k 0)) (d (n "sp-externalities") (r "^0.23.0") (k 0)) (d (n "sp-panic-handler") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "sp-trie") (r "^27.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "01vajb3dzy97as7vcrrykd1hx6rky3wynwl21p0j4b1lv606cz6z") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.34.0 (c (n "sp-state-machine") (v "0.34.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^27.0.0") (k 0)) (d (n "sp-externalities") (r "^0.24.0") (k 0)) (d (n "sp-panic-handler") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "sp-trie") (r "^28.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "0v64yg212d992w54a0afx1q9rxldi5mfx4q5yhc3qbx6xbf2fl0g") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.35.0 (c (n "sp-state-machine") (v "0.35.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-externalities") (r "^0.25.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-trie") (r "^29.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "1pwqzckmzfv3xwci6fjbj74bai7s6c5h7kn7cjzc1z6ns6d7g33i") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.36.0 (c (n "sp-state-machine") (v "0.36.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-externalities") (r "^0.26.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-trie") (r "^30.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "1ydanm92wkn6ydhlky72r4z6s3a258v3z036fxyh4cma0bkrfwm6") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.37.0 (c (n "sp-state-machine") (v "0.37.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-externalities") (r "^0.27.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-trie") (r "^31.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "08cr9dwgpi0c6hqxwnl7glvw3i7gf4m03gh77nsl5lqnb5v4gbi3") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.38.0 (c (n "sp-state-machine") (v "0.38.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-externalities") (r "^0.27.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-trie") (r "^32.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "1ib7bviv26kqpcyy278hdnj9i4spdwrnc8vpgr1i9filh2n0xbhy") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-std/std" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.39.0 (c (n "sp-state-machine") (v "0.39.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-trie") (r "^33.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.28.0") (k 0)))) (h "0fpxp7vss7hhdfayg9yr74fj6d7crvhm64g44hc6y1n30s1hgn91") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.40.0 (c (n "sp-state-machine") (v "0.40.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-trie") (r "^34.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.29.0") (k 0)))) (h "1fazv69x5ri3b4m8g5yz8058gxjaxflf0l47m2cmszf2jswlq20q") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

(define-public crate-sp-state-machine-0.41.0 (c (n "sp-state-machine") (v "0.41.0") (d (list (d (n "array-bytes") (r "^6.2.2") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "sp-core") (r "^33.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "sp-panic-handler") (r "^13.0.0") (o #t) (d #t) (k 0)) (d (n "sp-trie") (r "^35.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.29.0") (k 0)))) (h "0qyhpiyjr85blhj056bs20qgmnv50w2il7h77ihx1i4jxabc2skg") (f (quote (("std" "codec/std" "hash-db/std" "log/std" "parking_lot" "rand" "sp-core/std" "sp-externalities/std" "sp-panic-handler" "sp-trie/std" "thiserror" "tracing" "trie-db/std") ("default" "std"))))))

