(define-module (crates-io sp re spreet) #:use-module (crates-io))

(define-public crate-spreet-0.5.0 (c (n "spreet") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.7") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crunch") (r "^0.3.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "oxipng") (r "^6.0.0") (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "resvg") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0nq1lyjicm32l2kjnr108f2x9gvlgdysb1c1xncsz5qqhadlp0qs")))

(define-public crate-spreet-0.6.0 (c (n "spreet") (v "0.6.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.7") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crunch") (r "^0.3.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "oxipng") (r "^8") (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "resvg") (r "^0.28") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "197j2k72yjvrxcbfpn70b72yh36jyzq51wxw57gaskawbxr26gl3")))

(define-public crate-spreet-0.7.0 (c (n "spreet") (v "0.7.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.7") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crunch") (r "^0.3.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "oxipng") (r "^8") (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "resvg") (r "^0.29") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0zjkj6ldvv4zn6jm4l32zhqq37xvh2ia5cljwkxgyfd7lp2kxjqb") (r "1.61")))

(define-public crate-spreet-0.8.0 (c (n "spreet") (v "0.8.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crunch") (r "^0.5.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (d #t) (k 0)) (d (n "multimap") (r "^0.9") (d #t) (k 0)) (d (n "oxipng") (r "^8.0") (f (quote ("parallel" "zopfli" "filetime"))) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "resvg") (r "^0.34") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0pd0bipp0c3z66w42k69qwmd2hk45nfzbhfvd055gbr3d9kqcz1m") (r "1.61")))

(define-public crate-spreet-0.9.0 (c (n "spreet") (v "0.9.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crunch") (r "^0.5.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "multimap") (r "^0.9") (d #t) (k 0)) (d (n "oxipng") (r "^8.0") (f (quote ("parallel" "zopfli" "filetime"))) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "resvg") (r "^0.35") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0b2ha5xly8jwz57slr6pa93xqbz3ya8xrxaa2h41qa5ily82yg67") (f (quote (("default" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:exitcode")))) (r "1.63")))

(define-public crate-spreet-0.10.0 (c (n "spreet") (v "0.10.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crunch") (r "^0.5.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "multimap") (r "^0.9") (d #t) (k 0)) (d (n "oxipng") (r "^9.0") (f (quote ("parallel" "zopfli" "filetime"))) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "resvg") (r "^0.36") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0jr1b25jvqhxgfd377cjn5xmxvyk97s9ww6p9bymar0j58m0jskl") (f (quote (("default" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:exitcode")))) (r "1.63")))

(define-public crate-spreet-0.11.0 (c (n "spreet") (v "0.11.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crunch") (r "^0.5.3") (d #t) (k 0)) (d (n "exitcode") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "multimap") (r "^0.9") (d #t) (k 0)) (d (n "oxipng") (r "^9.0") (f (quote ("parallel" "zopfli" "filetime"))) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "resvg") (r "^0.36") (d #t) (k 0)) (d (n "sdf_glyph_renderer") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0lr5w4i0whdll994d2k61dsygrcw3fygfzb18rj5q5j85z7q6jx4") (f (quote (("default" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:exitcode")))) (r "1.63")))

