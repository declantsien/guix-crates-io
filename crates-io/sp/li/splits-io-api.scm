(define-module (crates-io sp li splits-io-api) #:use-module (crates-io))

(define-public crate-splits-io-api-0.1.0 (c (n "splits-io-api") (v "0.1.0") (d (list (d (n "bytes") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "snafu") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hchfpacs13z2jnvh8g0i9gkw47qsw52wzmi4pnpxkrdv4my1dl0")))

(define-public crate-splits-io-api-0.1.1 (c (n "splits-io-api") (v "0.1.1") (d (list (d (n "bytes") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-rustls") (r "^0.19.0") (d #t) (t "cfg(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "snafu") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0w91299nv1iqg36sk8vxjl27z92jjaww7lsngkcsgbwkji9lcysa")))

(define-public crate-splits-io-api-0.1.2 (c (n "splits-io-api") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "bytes") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-rustls") (r "^0.19.0") (d #t) (t "cfg(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "snafu") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1w1awr83kn34q4sf3l2f90z5hqm8cx1jrb6vg5hy9rqc93hwiqkv")))

(define-public crate-splits-io-api-0.2.0 (c (n "splits-io-api") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.1") (f (quote ("tcp" "client" "http1" "http2"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-rustls") (r "^0.22.0") (d #t) (t "cfg(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "snafu") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jw7ipwpqznfp1blckijl07qhqdbqj9v4six7isfrcicha4g5llv")))

(define-public crate-splits-io-api-0.3.0 (c (n "splits-io-api") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.1") (f (quote ("tcp" "client" "http2"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("native-tokio" "http2" "tls12"))) (t "cfg(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"arm\", target_arch = \"aarch64\")))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "snafu") (r "^0.7.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02cj9fcv9lcld83g25p1jcgimwp54wzws9i0b85ffzhdm4qbrl1r")))

(define-public crate-splits-io-api-0.3.1 (c (n "splits-io-api") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.1") (f (quote ("tcp" "client" "http2"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("native-tokio" "http2" "tls12"))) (t "cfg(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"loongarch64\", all(target_arch = \"mips\", target_endian = \"little\"), all(target_arch = \"mips64\", target_endian = \"little\"), all(target_arch = \"powerpc\", target_endian = \"big\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"s390x\")))") (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (t "cfg(all(not(target_family = \"wasm\"), not(all(any(target_os = \"linux\", target_family = \"windows\", target_os = \"macos\"), any(target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"loongarch64\", all(target_arch = \"mips\", target_endian = \"little\"), all(target_arch = \"mips64\", target_endian = \"little\"), all(target_arch = \"powerpc\", target_endian = \"big\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"s390x\")))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde") (r "^1.0.189") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.189") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "snafu") (r "^0.7.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "10qls0208dxsmnw5b89d6xa82a0yckyw6alg7i05xig4jkgk3978")))

(define-public crate-splits-io-api-0.3.2 (c (n "splits-io-api") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.1") (f (quote ("tcp" "client" "http2"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("native-tokio" "http2" "tls12"))) (t "cfg(any(target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"loongarch64\", all(target_arch = \"mips\", target_endian = \"little\"), all(target_arch = \"mips64\", target_endian = \"little\"), all(target_arch = \"powerpc\", target_endian = \"big\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"s390x\"))") (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (t "cfg(all(not(target_family = \"wasm\"), not(any(target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"loongarch64\", all(target_arch = \"mips\", target_endian = \"little\"), all(target_arch = \"mips64\", target_endian = \"little\"), all(target_arch = \"powerpc\", target_endian = \"big\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"s390x\"))))") (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde") (r "^1.0.189") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.189") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "snafu") (r "^0.7.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.4") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "web-sys") (r "^0.3.32") (f (quote ("Response" "Window" "RequestInit" "AbortSignal" "ObserverCallback" "ReferrerPolicy" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Headers"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0pgcbvghwrzygrbqdaj9qv52h6vz96i2d68jzkyfl2jnshq7rijd")))

(define-public crate-splits-io-api-0.4.0 (c (n "splits-io-api") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (k 0)) (d (n "serde") (r "^1.0.189") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.189") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-std" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde"))) (k 0)))) (h "1b6wawayj375gjfdsrd0yzpvk2vr6n3j6ml8zs1sg8b1qn3iknwh") (f (quote (("rustls" "reqwest/rustls-tls-webpki-roots") ("default" "rustls"))))))

