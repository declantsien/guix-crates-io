(define-module (crates-io sp -a sp-ark-bls12-381) #:use-module (crates-io))

(define-public crate-sp-ark-bls12-381-0.4.0-alpha (c (n "sp-ark-bls12-381") (v "0.4.0-alpha") (d (list (d (n "ark-algebra-test-templates") (r "^0.4.0") (k 2)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-ec") (r "^0.4.0") (k 2)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-scale") (r "^0.0.2") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hex") (r "^0.4.0") (k 2)) (d (n "sp-ark-models") (r "^0.4.0-alpha") (k 0)) (d (n "sp-io") (r "^7.0.0") (k 0)))) (h "0bgslahzn4whi6fnarn9gpsw9p8f5bfbrr4hbmcgrnl7ss30jzmj") (f (quote (("std" "ark-ff/std" "ark-std/std" "ark-bls12-381/std" "sp-ark-models/std" "codec/std" "ark-scale/std" "ark-serialize/std" "sp-io/std") ("scalar_field") ("default" "std") ("curve" "scalar_field")))) (y #t)))

(define-public crate-sp-ark-bls12-381-0.4.0-beta (c (n "sp-ark-bls12-381") (v "0.4.0-beta") (d (list (d (n "ark-algebra-test-templates") (r "^0.4.2") (k 2)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-ec") (r "^0.4.2") (k 2)) (d (n "ark-ff") (r "^0.4.2") (k 0)) (d (n "ark-scale") (r "^0.0.3") (f (quote ("hazmat"))) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hex") (r "^0.4.0") (k 2)) (d (n "sp-ark-models") (r "^0.4.0-beta") (k 0)) (d (n "sp-io") (r "^7.0.0") (k 2)))) (h "0c51fy1zk6hs39w38nry18l3va48dalck836lwph4d4wdkpzwlik") (f (quote (("std" "ark-ff/std" "ark-std/std" "ark-bls12-381/std" "sp-ark-models/std" "codec/std" "ark-scale/std" "ark-serialize/std" "sp-io/std") ("scalar_field") ("default" "std") ("curve" "scalar_field")))) (y #t)))

(define-public crate-sp-ark-bls12-381-0.4.1-beta (c (n "sp-ark-bls12-381") (v "0.4.1-beta") (d (list (d (n "ark-algebra-test-templates") (r "^0.4.2") (k 2)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-ec") (r "^0.4.2") (k 2)) (d (n "ark-ff") (r "^0.4.2") (k 0)) (d (n "ark-scale") (r "^0.0.10") (f (quote ("hazmat"))) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hex") (r "^0.4.0") (k 2)) (d (n "sp-ark-models") (r "^0.4.1-beta") (k 0)) (d (n "sp-crypto-ec-utils") (r "^0.4.0") (k 2)))) (h "0asmw29n5s1z459p230icfi4d1vgyb9hlcmjw6j8isfjf48i1kf2") (f (quote (("std" "ark-ff/std" "ark-std/std" "ark-bls12-381/std" "sp-ark-models/std" "codec/std" "ark-scale/std" "ark-serialize/std" "sp-crypto-ec-utils/std") ("scalar_field") ("default" "std") ("curve" "scalar_field")))) (y #t)))

(define-public crate-sp-ark-bls12-381-0.4.1 (c (n "sp-ark-bls12-381") (v "0.4.1") (d (list (d (n "ark-algebra-test-templates") (r "^0.4.2") (k 2)) (d (n "ark-bls12-381-ext") (r "^0.4.1") (k 0)) (d (n "ark-ec") (r "^0.4.2") (k 0)) (d (n "ark-ff") (r "^0.4.2") (k 2)) (d (n "ark-scale") (r "^0.0.11") (f (quote ("hazmat"))) (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "sp-crypto-ec-utils") (r "^0.4.0") (k 0)))) (h "1xn0igd2rxyf6nlh9aihbv1f5q1ig6x7lwbk6dqj0ar2ian980c4") (f (quote (("std" "ark-bls12-381-ext/std" "ark-std/std" "sp-crypto-ec-utils/std" "ark-scale/std" "ark-ec/std" "ark-ff/std") ("default" "std"))))))

