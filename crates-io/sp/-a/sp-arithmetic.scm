(define-module (crates-io sp -a sp-arithmetic) #:use-module (crates-io))

(define-public crate-sp-arithmetic-2.0.0-alpha.2 (c (n "sp-arithmetic") (v "2.0.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)))) (h "1wvd1l1bdysba4w8bz92dmaxmpbf0zahli4mwn6capkrjxl5iqir") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-alpha.3 (c (n "sp-arithmetic") (v "2.0.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)))) (h "0xximdpy208zzfbk01lp13w9yiyi702yaf9hylax9gsffmhvfqd4") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-alpha.5 (c (n "sp-arithmetic") (v "2.0.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)))) (h "15vg3rckns7zsrdfz831f71ah89jhx57v3g4srlp1j6lzhny7lgh") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-alpha.6 (c (n "sp-arithmetic") (v "2.0.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.7.0") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)))) (h "1lwv01b4qj4h50q373r02xdz8l59xyp9vhnxbmrgib8saimrc4xl") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-alpha.7 (c (n "sp-arithmetic") (v "2.0.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.7.0") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)))) (h "0bk117170q5m78bxbys8q830mdlkllnglvbhp1pkssnllq30xvim") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-alpha.8 (c (n "sp-arithmetic") (v "2.0.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.7.0") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)))) (h "0xffr74df2vk28qx9zyk6yq8fyaqwrd2mz13v0iyp9cx35m1xz71") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc1 (c (n "sp-arithmetic") (v "2.0.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)))) (h "1jb9kbz3lb15aw556b3mvdszvn683hd702h7q2ldqlsiw7dc5wcc") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc2 (c (n "sp-arithmetic") (v "2.0.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)))) (h "1g260n9xdz8g73szbxxi68n33am3k0lsa1pdhhfaasxm2wrdp5vh") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc3 (c (n "sp-arithmetic") (v "2.0.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)))) (h "0wq5g02y7zwwkvc7c8xqp9h7q2dbv4hf989lhmp6aascnm7a5hn8") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc4 (c (n "sp-arithmetic") (v "2.0.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)))) (h "1myjr2fq5cpj3f68dvfxkpw4qmc5ccqqlp45yxy11rh8nfkhlkgr") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc5 (c (n "sp-arithmetic") (v "2.0.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)))) (h "12fy3ws8iplx46rzpqbr8jr6ix1nw5sqq56fp6xq8gb5lqb2liwb") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0-rc6 (c (n "sp-arithmetic") (v "2.0.0-rc6") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)))) (h "11chx190297l0f15x8mgcsmn00c90256dzsmv19dyrfyn9w1x1kg") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.0 (c (n "sp-arithmetic") (v "2.0.0") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "159rlyqhv4yxnh722zcdqwnpxk3sqm72xj8qvwjl48gba2y7axv6") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-2.0.1 (c (n "sp-arithmetic") (v "2.0.1") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "12gafy4w36zhh52zliihxs2z6k9cvlpbvzq4d21d9qgq3i5j0kcw") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-3.0.0 (c (n "sp-arithmetic") (v "3.0.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "0i8nfqs54aafm40xhi4vgfq4vcg2xhlhn7sjx3gd34n1cscwdwfh") (f (quote (("std" "codec/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-4.0.0 (c (n "sp-arithmetic") (v "4.0.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^4.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1bm7acspyzn43pb209j4nbxydfsyciqcqpwqrdxq1apxg9qbk4ma") (f (quote (("std" "codec/std" "scale-info/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-5.0.0 (c (n "sp-arithmetic") (v "5.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-info") (r "^2.0.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^4.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0nykpyp0s5f7apnql6wzwmvfx0400kwf4rbb0knpa3y15kw23vri") (f (quote (("std" "codec/std" "scale-info/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-6.0.0 (c (n "sp-arithmetic") (v "6.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0mq1d6c4c01cscw6araci5p4fxif7kyvahhn5wrs39zh2blv6miq") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-debug-derive/std" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-7.0.0 (c (n "sp-arithmetic") (v "7.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-debug-derive") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1hf690q826df6fsg18nkfgwp7d6bw2k5raask46x8rnihani6r5x") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-debug-derive/std" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-8.0.0 (c (n "sp-arithmetic") (v "8.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1jc31nyj1d9f60x2ay3jplzfy85r900lvpwqx93wcqwahsh9nsjk") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-9.0.0 (c (n "sp-arithmetic") (v "9.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "079cbxwv3avjw6lq118jcgd9pyhpkrbdngmxvishgm8lfl7h2f10") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-10.0.0 (c (n "sp-arithmetic") (v "10.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "19fyhfwz5a8lk1krnshn45yfqfixh3c7vplb2p5wxf1icgynzcab") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-11.0.0 (c (n "sp-arithmetic") (v "11.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0vfapssvj54d6dai6xifmzjvk21dc6psif3p1nsns014j20rndzm") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-12.0.0 (c (n "sp-arithmetic") (v "12.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "04ilpnc0ggnk5mvzlmvg6v6ki05pcch7m88f86ws6s1v5sgr75kp") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-13.0.0 (c (n "sp-arithmetic") (v "13.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1lll42y76bp604yb28jagvymdvaz1a1rapa8r4nycvd85jh5dpd3") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-14.0.0 (c (n "sp-arithmetic") (v "14.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0vkp6l0zrl43sd2ggmdz13alvs7vcm6mac7dzbm9fyg74vsxgxnk") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-15.0.0 (c (n "sp-arithmetic") (v "15.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0mh40h9c8bv48ikq6ayf6r21vdd72lqfv4525wrvrs03m03kag9c") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde" "sp-std/std") ("default" "std"))))))

(define-public crate-sp-arithmetic-16.0.0 (c (n "sp-arithmetic") (v "16.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^8.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1vcx36jq3fv8k309l74zsmybcslfvz41nr8xllj6hk2ldrbj0q5v") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev1 (c (n "sp-arithmetic") (v "16.1.0-dev1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev1") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1flc3npq7qbm6frzyplpsihrrd7z922y6zqpifwkn70mmrd933i9") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev.2 (c (n "sp-arithmetic") (v "16.1.0-dev.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1gyg96s7gx5wzs4bzy38zsxxjsprkfay3jjxw7h2i0qb9qffl3di") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev.3 (c (n "sp-arithmetic") (v "16.1.0-dev.3") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "118i1fw2wj1hlzaimahxjm694x7kllzv1yz67iv84mfbqjrqm8kg") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev.4 (c (n "sp-arithmetic") (v "16.1.0-dev.4") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.4") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0ka4mgx795lp06zf9rs1g11h27mywmlfm7bj9pwh9agmfna6ixvc") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev.5 (c (n "sp-arithmetic") (v "16.1.0-dev.5") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1ygigv5cp9zj3q3x87ipy6p2sm5jzccm6jh39flaa4ip1dmlkn47") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-16.1.0-dev.6 (c (n "sp-arithmetic") (v "16.1.0-dev.6") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "03ca8zp3xr490isf6cbkw7xxn935l9fzjgim9n81hwiqnc2w7chc") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-17.0.0 (c (n "sp-arithmetic") (v "17.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0i86vlpln3p542cy2dxa3lr4w8lrbz9ly499rhzsr3380ms34h82") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-18.0.0 (c (n "sp-arithmetic") (v "18.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0pip8hlq7y8wjslv3n5ks39fncwdjmzf9sar6rbdf5ypsvv3yg9d") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-19.0.0-dev.1 (c (n "sp-arithmetic") (v "19.0.0-dev.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0h71nld11m96srmji7k40rb8dfz60lis0fndrvfnd70m66nqns6q") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-19.0.0 (c (n "sp-arithmetic") (v "19.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0vbrsh8pv3j82x0xwk4hy188wr6fkmq65y40kcfbvpp9fw5727z4") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-20.0.0 (c (n "sp-arithmetic") (v "20.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1mdac6fvl093pq5faab40d068s6cmmqdasd46w8dw7dnmwb5q2zq") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-21.0.0 (c (n "sp-arithmetic") (v "21.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0yy30n526v566bv716jh2llihh1ddlqza2m1lkipnbkw1if6xkxr") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-22.0.0 (c (n "sp-arithmetic") (v "22.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0r3lr9316q90rzj21s9jrk4n0wpyh97rggks8na9kv341llw7pjn") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-23.0.0 (c (n "sp-arithmetic") (v "23.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0qxddc24gg3783i9y34g88kvq3rw7cmgbs3jl29g48dlfbq229zl") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-24.0.0 (c (n "sp-arithmetic") (v "24.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "070kizs7i0w6fpi1sd5x2yimgg42sjddchfbvi3hsjfwbb527a5g") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-25.0.0 (c (n "sp-arithmetic") (v "25.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0571wx13a8l00wp5jw22q7ddy5rjbp5svm7xf5rby81v4vx0f34i") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

(define-public crate-sp-arithmetic-26.0.0 (c (n "sp-arithmetic") (v "26.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "docify") (r "^0.2.8") (d #t) (k 0)) (d (n "integer-sqrt") (r "^0.1.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (k 0)) (d (n "primitive-types") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "08vwx779zxx145fl8lbd8lj8qq98v0kmxp8x4g9j3i4iqnjd1l26") (f (quote (("std" "codec/std" "num-traits/std" "scale-info/std" "serde/std" "sp-std/std") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "scale-info/serde"))))))

