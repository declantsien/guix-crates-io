(define-module (crates-io sp -t sp-trie) #:use-module (crates-io))

(define-public crate-sp-trie-2.0.0-alpha.2 (c (n "sp-trie") (v "2.0.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.19.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "trie-db") (r "^0.20.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1cxv3w3ws0qkm52f0pk6630amksjg7sh3apcmy9085fvq28ww3rn") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-alpha.3 (c (n "sp-trie") (v "2.0.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.19.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "trie-db") (r "^0.20.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "122rq8jl9wr6b9hp9qvlc02jg9wnp609py5nqsmiasx7mgd8mh47") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-alpha.5 (c (n "sp-trie") (v "2.0.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)) (d (n "trie-db") (r "^0.20.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "08c735qwhgy7b8ryqi6gn2013ckkzkgz9vixff92y8nis1h7lhcg") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-alpha.6 (c (n "sp-trie") (v "2.0.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1qvbc8mfpj2lhrjgf1xpfh6k82fpc08nbv3rj9g554pb4xq83521") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-alpha.7 (c (n "sp-trie") (v "2.0.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "18rsvkn3lblzmj4md1swl4rbqh1wc94c6ialxrx4xr0vfwwg880n") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-alpha.8 (c (n "sp-trie") (v "2.0.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1sap77avb60mjwc5mz9k9k14s9x7adzhyy3w4zsz2714m6prs90j") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc1 (c (n "sp-trie") (v "2.0.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "07kfi9bn6f73lzswgd2vqkf2bv7kl20hny7dnbxk92s90filhb0d") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc2 (c (n "sp-trie") (v "2.0.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0rc1wiskp3bl459nnx4r4wqr12ani3f3g6i46yg0iq9y15qr6f1v") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc3 (c (n "sp-trie") (v "2.0.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)) (d (n "trie-db") (r "^0.20.1") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "086shdqk77c017ga57lbvv98rw4q04r4kwf0ynbidrsrnz8h0f46") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc4 (c (n "sp-trie") (v "2.0.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.21.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "trie-db") (r "^0.21.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0fy92a9xjs3nwdnz775blrqknvlkbhzylfzjf46ykqji4md2zz35") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc5 (c (n "sp-trie") (v "2.0.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1v17nwdfa1srlsgrvrnkrk1zy3hndswdmjl8z5rd2qix17qj831l") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0-rc6 (c (n "sp-trie") (v "2.0.0-rc6") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1axgmk33dz6a2wdy92ij34hi88k66azsincyvxl8s8zjrac79cin") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-2.0.0 (c (n "sp-trie") (v "2.0.0") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0mgxif6x2kkbv70dx46x4ns3x5nj4p3ahdria1waj6z8i9yfbapk") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-2.0.1 (c (n "sp-trie") (v "2.0.1") (d (list (d (n "codec") (r "^1.3.1") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "trie-db") (r "^0.22.0") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "0imap97ix148whyxr09gzvcr613s7ls9sldgchb9cv8x387347ri") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-3.0.0 (c (n "sp-trie") (v "3.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.26.0") (k 0)) (d (n "sp-core") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "trie-db") (r "^0.22.2") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "160jxl5cvyvhpgglm254jkgh6yw9vhgkzfgpqqjzh7m4bms7ynxq") (f (quote (("std" "sp-std/std" "codec/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-4.0.0 (c (n "sp-trie") (v "4.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.27.0") (k 0)) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^4.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "trie-db") (r "^0.22.6") (k 0)) (d (n "trie-root") (r "^0.16.0") (k 0)))) (h "1h3c428cdybgi24x4x0p0rjxbvdcc0c6kjzw81s8fmg7knb49czy") (f (quote (("std" "sp-std/std" "codec/std" "scale-info/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-5.0.0 (c (n "sp-trie") (v "5.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.28.0") (k 0)) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "trie-db") (r "^0.23.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "0kl3qs96qz7dg8vlbhk04dylz2026v0rx1m99vwrmywkpd5x8yla") (f (quote (("std" "sp-std/std" "codec/std" "scale-info/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-6.0.0 (c (n "sp-trie") (v "6.0.0") (d (list (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "memory-db") (r "^0.29.0") (k 0)) (d (n "scale-info") (r "^2.0.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "trie-db") (r "^0.23.1") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "02qbckbs6mcazakpqylddcz9z0ldf1i3n21yfca6k24iybs39z6n") (f (quote (("std" "sp-std/std" "codec/std" "scale-info/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-7.0.0 (c (n "sp-trie") (v "7.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.30.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)))) (h "19jv5l6anb5lh146xr0gxkmqf9z8ds5jv79rgr9m0079hz44hkrg") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("memory-tracker") ("default" "std"))))))

(define-public crate-sp-trie-8.0.0 (c (n "sp-trie") (v "8.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^8.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0lfl5nbmqf8kz132zffr485w5g69q8s9qmxs28m0lyhqwgmajxa6") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-9.0.0 (c (n "sp-trie") (v "9.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^9.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0ixxx86g4vy0vq2v59xj9rf68jgwh6273d7nf0vw73nvfyd18v3m") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-10.0.0 (c (n "sp-trie") (v "10.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^10.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "10xi6bi6dm2qf0w3kap0n7bj30pxzqk2widgz7rnx6rq81jzzjzz") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-11.0.0 (c (n "sp-trie") (v "11.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^11.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "191dcd18jmkgvmw3sq9jfmk1ggc45k8l5939llnfai5l9h9my26v") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-12.0.0 (c (n "sp-trie") (v "12.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.0.0") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^12.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1ivwb4a01xlxa5np04rbayzrk412zb9gwzngfrail1rvx5llhh6b") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-13.0.0 (c (n "sp-trie") (v "13.0.0") (d (list (d (n "ahash") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^13.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.33.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1g9sb2xcb6lc581nnkfydn0yx3mwr57q0riivcs5pn5phd08rgjh") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "lru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-14.0.0 (c (n "sp-trie") (v "14.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^14.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.34.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "071vm057p12whn5bnmigjlmjzf621xk1icgj35fi1ghqcvvcg29h") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-15.0.0 (c (n "sp-trie") (v "15.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^15.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.34.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0lb7dd4540p8qwniaf9r59hnfby1vkp2amm469099lp1s1cfl0x0") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-16.0.0 (c (n "sp-trie") (v "16.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^16.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.34.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0x58df34k8s0bc8dadfk655qcbsz2fc00bpmqakzw64ssavfbywf") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-17.0.0 (c (n "sp-trie") (v "17.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^17.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.34.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.24.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0x91s03v8yrkiv0q8cchgdfbvsykc0ax7x8hrp9v45hf8p89i8fb") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-18.0.0 (c (n "sp-trie") (v "18.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.35.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.25.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1y9b83q7775qrydc25gqg8gicfgccnh9qsknk7b26sfj63kz7d9i") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-19.0.0 (c (n "sp-trie") (v "19.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.31.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.36.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.26.0") (k 0)) (d (n "trie-root") (r "^0.17.0") (k 0)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1b5rrqvwyr6l2in4cry7m8ll649jnm4n3aasfw23qqpa8nnd9glz") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-20.0.0 (c (n "sp-trie") (v "20.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^19.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1c5hjpfwizpap0yq932qndwnpjwvsdgi87zlp6kpih1x19i671x0") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-21.0.0 (c (n "sp-trie") (v "21.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^20.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "0mhcn18hxiqabrl2c7p8fgxb7g4b9i9i8znd7bcclvlbq19iqh2q") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.0.0 (c (n "sp-trie") (v "22.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (k 0) (p "parity-scale-codec")) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (k 0)) (d (n "sp-std") (r "^8.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)))) (h "0x6sgwbmyjvv730a71qz9ycjy97gkkppknq9hsx9xxr3xyvyxr28") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.1.0-dev.2 (c (n "sp-trie") (v "22.1.0-dev.2") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^4.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.2") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "19z8qxr74a17jxk5qyxss32nbwam0476slyympzr4p3hn8d7wkgl") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.1.0-dev.3 (c (n "sp-trie") (v "22.1.0-dev.3") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.3") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "0n45dfia6bzc76zsdljlyvvc2hgin2vzw8qmxdah2ayzk2ds0383") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.1.0-dev.4 (c (n "sp-trie") (v "22.1.0-dev.4") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.4") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.4") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1z737jk5rmlxwlp3jbz4pxalf1rxzdnyz4si465h1lj90awbks24") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.1.0-dev.5 (c (n "sp-trie") (v "22.1.0-dev.5") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.5") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "05jp2awsj5s6wsvklf5ihg3hjy7j2jsp51xsf7ip27qfp19rj7ns") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-22.1.0-dev.6 (c (n "sp-trie") (v "22.1.0-dev.6") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "19qv9kri1ikxpbkipc7rlvxbgvj2a1bgdfd5afqmw5c2f52hwjxi") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-23.0.0 (c (n "sp-trie") (v "23.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1ry36qngvw0mwq9yjf97zjcc3nhlj5kaqbzvv1411mmmzy8flqxz") (f (quote (("std" "ahash" "codec/std" "hashbrown" "hash-db/std" "lazy_static" "schnellru" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-24.0.0 (c (n "sp-trie") (v "24.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.37.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.27.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "0lcziglvilwfbkv9ygbp9snlcan2hvahxh5qiqgcgl829nl8b1g7") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "schnellru" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-25.0.0-dev.1 (c (n "sp-trie") (v "25.0.0-dev.1") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "0ysa736ch4vdx80vy6mnzxzfh31q4h01nchrb9y97sibqyzczb42") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "schnellru" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-25.0.0 (c (n "sp-trie") (v "25.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "19420dh00nk3y706cym3zzirahzh9gkl9yq9175jsichxf9d5cjb") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "scale-info/std" "schnellru" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-26.0.0 (c (n "sp-trie") (v "26.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "11bg9ksvbggw9lvs3krxhpcj35ji78m2g3377wn35k33h8srnd8y") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-27.0.0 (c (n "sp-trie") (v "27.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1zlc172bwzhd9c6wgwyip85bvrmbnqxxh8qzrnbgcx5xln4vzi59") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-28.0.0 (c (n "sp-trie") (v "28.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^27.0.0") (k 0)) (d (n "sp-externalities") (r "^0.24.0") (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1b0381aifkljivsi27li7jz3k333pzx8pgmgg95xrbf94gbkmg2w") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "hashbrown" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-29.0.0 (c (n "sp-trie") (v "29.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-externalities") (r "^0.25.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "16s7rn1s4dh1f5330zrcfbxzgvg1h0cv9hfa3nkl9sqb9bc28k9f") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-30.0.0 (c (n "sp-trie") (v "30.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-externalities") (r "^0.26.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "1fyxj2ccibhwwwgs29r2jni3bhc6nr7cw40vfhv8n7h80pyqvm7f") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-31.0.0 (c (n "sp-trie") (v "31.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-externalities") (r "^0.27.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "14z5miq232k4yc87ajib31dxj2cskhyzyq2zppnsp26g23iy54ap") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-32.0.0 (c (n "sp-trie") (v "32.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-externalities") (r "^0.27.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "197sss41ka26i0s9jr88mm5rqi84pmzcxyb57vbr6ay64snr3api") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "sp-std/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-33.0.0 (c (n "sp-trie") (v "33.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.38.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.28.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "03phhv817qxgcqwmjxvzrxxc8q3bki8xg19xm1jw51qw19ib7xfi") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-34.0.0 (c (n "sp-trie") (v "34.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.39.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.29.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "0rlbkmzqpgsyxaxc17bfgzl9v2p3h1m1i9g3g47lvwcpv777wwl7") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

(define-public crate-sp-trie-35.0.0 (c (n "sp-trie") (v "35.0.0") (d (list (d (n "ahash") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "array-bytes") (r "^6.2.2") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "memory-db") (r "^0.32.0") (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "schnellru") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^33.0.0") (k 0)) (d (n "sp-externalities") (r "^0.28.0") (k 0)) (d (n "thiserror") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "trie-bench") (r "^0.39.0") (d #t) (k 2)) (d (n "trie-db") (r "^0.29.0") (k 0)) (d (n "trie-root") (r "^0.18.0") (k 0)) (d (n "trie-standardmap") (r "^0.16.0") (d #t) (k 2)))) (h "19d599z23cah8sjasgslh0ipd7pyllx7br026wh5gx03w31v06m6") (f (quote (("std" "ahash" "codec/std" "hash-db/std" "lazy_static" "memory-db/std" "nohash-hasher" "parking_lot" "rand" "scale-info/std" "schnellru" "sp-core/std" "sp-externalities/std" "thiserror" "tracing" "trie-db/std" "trie-root/std") ("default" "std"))))))

