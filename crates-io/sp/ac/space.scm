(define-module (crates-io sp ac space) #:use-module (crates-io))

(define-public crate-space-0.1.0 (c (n "space") (v "0.1.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derive_more") (r "^0.12.0") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.5") (d #t) (k 0)))) (h "1yrwq42vccaljvlypig0pyqwglg2m4x5a87avpky6jph0ggd47rf")))

(define-public crate-space-0.1.1 (c (n "space") (v "0.1.1") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derive_more") (r "^0.12.0") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.5") (d #t) (k 0)))) (h "1lrkiisbksy6ll5bfr91g90grvndw6q2miw88hs0dd88yxll0w0x")))

(define-public crate-space-0.2.0 (c (n "space") (v "0.2.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.5") (d #t) (k 0)))) (h "04rkja5dy3nxnrf4y1yihmjnrr5r94lsd4bx1990868gd9a68yip")))

(define-public crate-space-0.3.0 (c (n "space") (v "0.3.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0y86g3sx9ji1rdbj64f8mxf12x4vxh0dx66d8gi6i414dmi89a2z")))

(define-public crate-space-0.4.0 (c (n "space") (v "0.4.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0six71hd9150r0dbxa9nlflkhxkm2cppp5k743r013acf1b8fszj")))

(define-public crate-space-0.5.0 (c (n "space") (v "0.5.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "079qi66cns04794gxyc75svylnlj3pql3jmyp4jbjppvjs17ps0f")))

(define-public crate-space-0.5.1 (c (n "space") (v "0.5.1") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0im0k1rq1r5g4638860qv7hwf6rwiihx0s4904ah5rcy0y2ycsbq")))

(define-public crate-space-0.6.0 (c (n "space") (v "0.6.0") (d (list (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "1081bymadfvf4mg280k3ys8mj5y81ky0n9irfd0ws83dndqifvax")))

(define-public crate-space-0.7.0 (c (n "space") (v "0.7.0") (d (list (d (n "bitintr") (r "^0.2.0") (d #t) (k 0)) (d (n "bitwise") (r "^0.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "glium") (r "^0.23.0") (d #t) (k 2)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.3") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)))) (h "0gdv3gxhc9jydkzsky01zmjl8z6wf2sqa0lv3z06lmwap202snwa")))

(define-public crate-space-0.7.1 (c (n "space") (v "0.7.1") (d (list (d (n "bitintr") (r "^0.2.0") (k 0)) (d (n "criterion") (r "^0.2") (k 2)) (d (n "either") (r "^1.5.0") (k 0)) (d (n "glium") (r "^0.23.0") (d #t) (k 2)) (d (n "itertools") (r "^0.7.8") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (k 0)) (d (n "nalgebra") (r "^0.16.3") (k 0)) (d (n "num-traits") (r "^0.2.6") (k 0)) (d (n "rand") (r "^0.5.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (k 0)))) (h "0yqaafj6br17dcnhbnsgrz4f5ycy40sslr54qp8kgi1rn98x2j28")))

(define-public crate-space-0.7.2 (c (n "space") (v "0.7.2") (d (list (d (n "bitintr") (r "^0.2.0") (k 0)) (d (n "criterion") (r "^0.2") (k 2)) (d (n "either") (r "^1.5.0") (k 0)) (d (n "glium") (r "^0.23.0") (d #t) (k 2)) (d (n "itertools") (r "^0.7.8") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (k 0)) (d (n "nalgebra") (r "^0.16.3") (k 0)) (d (n "num-traits") (r "^0.2.6") (k 0)) (d (n "rand") (r "^0.5.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (k 0)))) (h "1j1b79iwdr3rhy66rjs1d38g9856r811l5bqiw07jyx47icchc95")))

(define-public crate-space-0.7.3 (c (n "space") (v "0.7.3") (d (list (d (n "alga") (r "^0.9.1") (d #t) (k 0)) (d (n "bitintr") (r "^0.2.0") (k 0)) (d (n "criterion") (r "^0.2") (k 2)) (d (n "either") (r "^1.5.0") (k 0)) (d (n "glium") (r "^0.23.0") (d #t) (k 2)) (d (n "itertools") (r "^0.7.8") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (k 0)) (d (n "nalgebra") (r "^0.16.3") (k 0)) (d (n "num-traits") (r "^0.2.6") (k 0)) (d (n "rand") (r "^0.5.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (k 0)))) (h "0bibnvp951kl3wizcqcr92qw6yh6yis1mifpdabywsk346g5kk7v")))

(define-public crate-space-0.8.0 (c (n "space") (v "0.8.0") (h "1gvagkbnv5qxw0d70sajqpfqha9qkmhwdqsiis6dccmwvczsky1g")))

(define-public crate-space-0.8.1 (c (n "space") (v "0.8.1") (h "1bnrckyb2psvbrwhac5g7x139yricip3nwhbi6bzids05zn6yfkd") (f (quote (("simd"))))))

(define-public crate-space-0.8.2 (c (n "space") (v "0.8.2") (d (list (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0lbpsna0cjx8xyr000wbrim7w0802vdl3lzldp85qijmc27ysdr6") (f (quote (("simd"))))))

(define-public crate-space-0.8.3 (c (n "space") (v "0.8.3") (d (list (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0h7r1xm78x4xingr67y1ncg8n7j910p4c7x2vzfk06dn3kzsxrkr") (f (quote (("simd"))))))

(define-public crate-space-0.8.4 (c (n "space") (v "0.8.4") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "095p98snx7bh5dyc0r0b1ilva4qs1r6rsjj9kxwq8li5mhrr3l42") (f (quote (("simd" "packed_simd"))))))

(define-public crate-space-0.8.5 (c (n "space") (v "0.8.5") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1vnhf1r2x2d991l3yiaql2lrxqb64fyfhhbmwdnizkm7pyw6s2df") (f (quote (("simd" "packed_simd") ("hamming-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.9.0 (c (n "space") (v "0.9.0") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1jb1dvdrqzff396bma1c870s8wps751zl66j6j3a63x0plznd5zm") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.9.1 (c (n "space") (v "0.9.1") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "02ghi1cl18gpwz2jgyfpwamsh5bp9yg8dzpw0si17kzsxp5zzhi0") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.10.0 (c (n "space") (v "0.10.0") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "05nk7ypbjaywb0g16747r8baph0vj2b5i0j8s0jxf33bpc5v5m14") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.10.1 (c (n "space") (v "0.10.1") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1pd0ni8y3ijzbphilm2c7sm1pk6vzi8gvf3badhk3fjw8zq61g8k") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.10.2 (c (n "space") (v "0.10.2") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08b1srxvl27bmnkiyd0zn0siassqq5xv99iciyqlry9cmcxylvfv") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.10.3 (c (n "space") (v "0.10.3") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1p4ipmw0frs2b2g2fwynm6r1hcm7wlm6z0g6nqh8l0jxawraldin") (f (quote (("simd-hamming" "packed_simd") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.11.0 (c (n "space") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "packed_simd_2") (r "^0.3.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "02n6cw2qpwlvbv260baki3bvs4svqx9b22pm0dkh3jkw1z75ar32") (f (quote (("simd-hamming" "packed_simd_2") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.12.0 (c (n "space") (v "0.12.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "packed_simd_2") (r "^0.3.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "033d2z3i9jqmqxf2rfccpj9l0m63cjrb69lzp0rn5xxfnrgkv1sb") (f (quote (("simd-hamming" "packed_simd_2") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.12.1 (c (n "space") (v "0.12.1") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "packed_simd_2") (r "^0.3.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "13s253dvchpib0z65gdfpwmsfj6fvc8pik92ww7xg0lsp1ncr479") (f (quote (("simd-hamming" "packed_simd_2") ("simd" "simd-hamming") ("hamming-vec" "alloc") ("candidates-vec" "alloc") ("alloc"))))))

(define-public crate-space-0.13.0 (c (n "space") (v "0.13.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "packed_simd_2") (r "^0.3.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0f2svr5grc2vz6fi0cl7d58zmfklxxhhbh9wb5nz0f08255x4cks") (f (quote (("simd-hamming" "packed_simd_2") ("simd" "simd-hamming") ("default" "alloc") ("alloc"))))))

(define-public crate-space-0.13.1 (c (n "space") (v "0.13.1") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "packed_simd_2") (r "^0.3.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0ykw9fc43mz73wkc5zh65q1ik434sqyna4whn6dg5dg8zwvabzjk") (f (quote (("simd-hamming" "packed_simd_2") ("simd" "simd-hamming") ("default" "alloc") ("alloc"))))))

(define-public crate-space-0.14.0 (c (n "space") (v "0.14.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1vjj1sbz4g1rkij9w83l65vprxk3br2w2dcd0wdj67q56fl5vjvz") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-space-0.14.1 (c (n "space") (v "0.14.1") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "18n3ycy5ds75abm7cwzj1yk5xl2icgsmvy4wwdn31ha8gxbmqwkm") (f (quote (("default" "alloc") ("alloc")))) (y #t)))

(define-public crate-space-0.14.2 (c (n "space") (v "0.14.2") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0niyr068gx2d20j63hhb6vw79gz216m2vb021mdwqp1rhxisvcn5") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-space-0.15.0 (c (n "space") (v "0.15.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1s8qf5r0kfb9x6v9an3qv1gs8baxz6nn3vq72d7sc07p69pziirk") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-space-0.16.0 (c (n "space") (v "0.16.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "02547km14mfp7a00z696wgsv67va9qwskb87w662i4r5d9siszpx") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-space-0.17.0 (c (n "space") (v "0.17.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08yiq7jlrfvkc5mv84wv23vyz7cq27san8mn7p8qclw9mq0rgay5") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-space-0.18.0 (c (n "space") (v "0.18.0") (d (list (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0s0sqk7i9b512kblyxghyr71wbz6d6xm20j3bz3gmp3h81a9m4c3") (f (quote (("default" "alloc") ("alloc"))))))

