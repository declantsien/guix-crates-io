(define-module (crates-io #{3}# z zod) #:use-module (crates-io))

(define-public crate-zod-0.1.0 (c (n "zod") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.64") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6.7") (f (quote ("ws" "headers"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.92") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "zod-core") (r "^0.1.0") (d #t) (k 0)) (d (n "zod-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.77") (f (quote ("diff"))) (d #t) (k 2)) (d (n "zod-core") (r "^0.1.0") (d #t) (k 1)) (d (n "zod-derive") (r "^0.1.0") (d #t) (k 1)))) (h "1wj0226z4wx1qdl3wkhgyg2mpwcnqz2x9yndi16dw5x1h3f4jy5s") (f (quote (("rpc" "async-trait" "axum" "futures" "inventory" "pin-project-lite" "serde" "serde_json" "thiserror" "tokio" "tracing") ("default" "rpc"))))))

