(define-module (crates-io #{3}# z zvt) #:use-module (crates-io))

(define-public crate-zvt-0.1.0 (c (n "zvt") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "yore") (r "^1.0.2") (d #t) (k 0)) (d (n "zvt_builder") (r "^0.1.0") (d #t) (k 0)) (d (n "zvt_derive") (r "^0.1.0") (d #t) (k 0)))) (h "0c2nhk1sbaf6dbgx0c6l6lcxmf06hqc6klkcr9r7cykzv19156pm")))

