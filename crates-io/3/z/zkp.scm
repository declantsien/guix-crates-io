(define-module (crates-io #{3}# z zkp) #:use-module (crates-io))

(define-public crate-zkp-0.1.0 (c (n "zkp") (v "0.1.0") (d (list (d (n "curve25519-dalek") (r "^0.9") (f (quote ("yolocrypto" "serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.6") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "1n8dhwzc8p2qhbp0sv598lix0cwkn5nhk1cna8yhgjc4dz2k48j3") (y #t)))

(define-public crate-zkp-0.2.0 (c (n "zkp") (v "0.2.0") (d (list (d (n "curve25519-dalek") (r "^0.9") (f (quote ("yolocrypto" "serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.6") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "1fjicqhxbshrr2pfrhhv6ljq9cvwgzfrzm40w6qrc2p1xdv3f0wh") (y #t)))

(define-public crate-zkp-0.3.0 (c (n "zkp") (v "0.3.0") (d (list (d (n "curve25519-dalek") (r "^0.10") (f (quote ("yolocrypto" "serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.6") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)))) (h "0bgjrc8xiz2mvflvg71sr8j2ykkb7n5cxds2iywsk0g2kjllx69d") (y #t)))

(define-public crate-zkp-0.4.0 (c (n "zkp") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.16") (f (quote ("serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)))) (h "1yb2nhcrfzwvlmqv9wk85cvshdg2iawb2w6308f687yi0prk4c0j") (y #t)))

(define-public crate-zkp-0.4.1 (c (n "zkp") (v "0.4.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.17") (f (quote ("serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)))) (h "06b01gzin6xb1l7ci9jy1iyiwz7diblh82d9hxjl0q65g6vy6y64") (y #t)))

(define-public crate-zkp-0.4.2 (c (n "zkp") (v "0.4.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.18") (f (quote ("serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)))) (h "0v0jrpyvzhw9pgd39gcg1x4xm0nsv0iksbs6v25dzjm31wi3y5zf") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("default" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend")))) (y #t)))

(define-public crate-zkp-0.4.3 (c (n "zkp") (v "0.4.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.19") (f (quote ("serde" "nightly"))) (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)))) (h "0yfh45sfnb3dhdmi416xac85zzfk4iyqqy0cffk2g71y429ca9fx") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("default" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend")))) (y #t)))

(define-public crate-zkp-0.5.0 (c (n "zkp") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (f (quote ("serde" "nightly" "alloc"))) (k 0)) (d (n "merlin") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)))) (h "1jhk6j90qr5ayb3h123qaqwqpfdww9prfd5bs66fgcpdcsl6k0fn") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("bench") ("avx2_backend" "curve25519-dalek/avx2_backend")))) (y #t)))

(define-public crate-zkp-0.6.0 (c (n "zkp") (v "0.6.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (f (quote ("serde" "nightly" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "merlin") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "12614srz04zb06vrbw5a0fmr2hh3bqy2fh3wqx1d3k83i40am3x7") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("debug-transcript" "merlin/debug-transcript") ("bench")))) (y #t)))

(define-public crate-zkp-0.6.1 (c (n "zkp") (v "0.6.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (f (quote ("serde" "nightly" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "merlin") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "1jp1nzsqi3cvf55f0sqzzfm5awxqs2hcc4vaww3kwhiq2k43z5hj") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("debug-transcript" "merlin/debug-transcript") ("bench")))) (y #t)))

(define-public crate-zkp-0.6.2 (c (n "zkp") (v "0.6.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0.3") (f (quote ("serde" "nightly" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "merlin") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "05kxr2qq67cshan6f51miky1vl37rnnp47vh5i3q2bh8w96gazr2") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("debug-transcript" "merlin/debug-transcript") ("bench")))) (y #t)))

(define-public crate-zkp-0.7.0 (c (n "zkp") (v "0.7.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2") (f (quote ("serde" "std"))) (k 0)) (d (n "merlin") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ny1306zxbqx7zczwmy2s8yqyqk673bq8l61j2hq7f1l0wh50s4q") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("debug-transcript" "merlin/debug-transcript") ("bench"))))))

(define-public crate-zkp-0.8.0 (c (n "zkp") (v "0.8.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (f (quote ("serde" "std"))) (k 0) (p "curve25519-dalek-ng")) (d (n "merlin") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "07rkgw1h5wcm1q3nmkg2vj5bi03yfk5c2s5ybbg0lb2jm3pdrxjw") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly") ("default" "u64_backend") ("debug-transcript" "merlin/debug-transcript") ("bench"))))))

