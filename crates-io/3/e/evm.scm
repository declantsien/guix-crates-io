(define-module (crates-io #{3}# e evm) #:use-module (crates-io))

(define-public crate-evm-0.6.2 (c (n "evm") (v "0.6.2") (d (list (d (n "digest") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "etcommon-bigint") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-block") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-rlp") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "12pqdwz2iwaag3jx53qmprzd57l0gv65j40ywg7idanpp317vk8x")))

(define-public crate-evm-0.7.0 (c (n "evm") (v "0.7.0") (d (list (d (n "digest") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "etcommon-bigint") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-block") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-rlp") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "0grgbps6m5fay7fxv6skarkvbssvyg9qff581h0mcs5qq19bv22l")))

(define-public crate-evm-0.7.1 (c (n "evm") (v "0.7.1") (d (list (d (n "digest") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "etcommon-bigint") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-block") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 0)) (d (n "etcommon-rlp") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "1yzbd7wgwzxhva2h5yz4bwl4z1l7j9cb5xbdm0bnnak9gzp2p98r")))

(define-public crate-evm-0.9.2 (c (n "evm") (v "0.9.2") (d (list (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "etcommon-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "etcommon-block") (r "^0.3") (o #t) (k 0)) (d (n "etcommon-block-core") (r "^0.1") (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "etcommon-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "025k4qf4wp66zn8y2parwlyh04zc9zn58683zkqr9km15hlnhhpk") (f (quote (("std" "etcommon-block-core/std" "etcommon-rlp/std" "etcommon-bigint/std" "etcommon-block") ("rust-secp256k1" "libsecp256k1" "etcommon-block/rust-secp256k1") ("default" "std" "c-secp256k1") ("c-secp256k1" "secp256k1-plus" "etcommon-block/c-secp256k1"))))))

(define-public crate-evm-0.9.3 (c (n "evm") (v "0.9.3") (d (list (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.3") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.1") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "02fx6zhkhi68gvr7f8811xmg3ymwsqkp56cw5yw41rxdzpvw2v9n") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "c-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.9.4 (c (n "evm") (v "0.9.4") (d (list (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.3") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.1") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "1mh25wxi9d55vly5hfn54rhqw8lck7i4if84xrs8pvxr5avmrhjp") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "rust-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.11.0-beta.0 (c (n "evm") (v "0.11.0-beta.0") (d (list (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "etcommon-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "etcommon-block") (r "^0.5") (o #t) (k 0)) (d (n "etcommon-block-core") (r "^0.3") (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "etcommon-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)))) (h "1pr94q4c0qa0x70nd6nx5a8jib9hqaa7d2zzqx41s3pfpgcqbh34") (f (quote (("std" "etcommon-block-core/std" "etcommon-rlp/std" "etcommon-bigint/std" "etcommon-block") ("rust-secp256k1" "libsecp256k1" "etcommon-block/rust-secp256k1") ("default" "std" "c-secp256k1") ("c-secp256k1" "secp256k1-plus" "etcommon-block/c-secp256k1"))))))

(define-public crate-evm-0.11.0-beta.2 (c (n "evm") (v "0.11.0-beta.2") (d (list (d (n "delegate") (r "^0.1.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.4") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.2.0") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.8") (k 0)))) (h "0f1jd4av2mkl220n90aw2l3a8wriiwidpcsmjk90xd1fbqmsnbay") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "smallvec/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "rust-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.11.0-beta.3 (c (n "evm") (v "0.11.0-beta.3") (d (list (d (n "delegate") (r "^0.1.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.4") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.2.0") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.8") (k 0)))) (h "1hyl31qqk0700ldkh747w0zbkvgy0n2hi4n1jidymbaxarw1y740") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "smallvec/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "rust-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.11.0 (c (n "evm") (v "0.11.0") (d (list (d (n "delegate") (r "^0.1.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.4") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.2.0") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.8") (k 0)))) (h "1zxzsrb1w2prwf344prxyl2pfjyf4i99fihcm9729yjqps0wiqh7") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "smallvec/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "rust-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.11.1 (c (n "evm") (v "0.11.1") (d (list (d (n "delegate") (r "^0.1.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-bigint") (r "^0.2") (f (quote ("rlp"))) (k 0)) (d (n "ethereum-block") (r "^0.4") (o #t) (k 0)) (d (n "ethereum-block-core") (r "^0.2.0") (k 0)) (d (n "ethereum-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "ethereum-rlp") (r "^0.2") (k 0)) (d (n "libsecp256k1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.6") (d #t) (k 0)) (d (n "secp256k1-plus") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "sha3") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.8") (k 0)))) (h "0hn6yvylp8qn4n1m52ls48g8jxnqpk2sj0167fr92ll0v4kd81m5") (f (quote (("std" "ethereum-block-core/std" "ethereum-rlp/std" "ethereum-bigint/std" "smallvec/std" "ethereum-block") ("rust-secp256k1" "libsecp256k1" "ethereum-block/rust-secp256k1") ("default" "std" "rust-secp256k1") ("c-secp256k1" "secp256k1-plus" "ethereum-block/c-secp256k1"))))))

(define-public crate-evm-0.13.0 (c (n "evm") (v "0.13.0") (d (list (d (n "evm-core") (r "^0.13") (k 0)) (d (n "evm-gasometer") (r "^0.13") (k 0)) (d (n "evm-runtime") (r "^0.13") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("impl-rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0mir8k1bl8dald5d2g3h6y2spv0yk8jjqrnnwgjyy3bh0w2g4bqr") (f (quote (("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-0.13.1 (c (n "evm") (v "0.13.1") (d (list (d (n "evm-core") (r "^0.13") (k 0)) (d (n "evm-gasometer") (r "^0.13") (k 0)) (d (n "evm-runtime") (r "^0.13") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("impl-rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "16fydvnzm6z8msgi7sv8sizjkjgdxfw16csi1zqm2hg7whn2mijk") (f (quote (("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-0.14.0 (c (n "evm") (v "0.14.0") (d (list (d (n "evm-core") (r "^0.14") (k 0)) (d (n "evm-gasometer") (r "^0.14") (k 0)) (d (n "evm-runtime") (r "^0.14") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0vy9rlm15sizpnbz5fljaq1pss6jzrx8l6xvr8grv6kzkdm82f0i") (f (quote (("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-0.14.1 (c (n "evm") (v "0.14.1") (d (list (d (n "evm-core") (r "^0.14") (k 0)) (d (n "evm-gasometer") (r "^0.14") (k 0)) (d (n "evm-runtime") (r "^0.14") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1pdqhs4kp6ksd8pqddnzm5w07nd90dpl3w653wvm56fw3ybcd8ij") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.14.2 (c (n "evm") (v "0.14.2") (d (list (d (n "evm-core") (r "^0.14") (k 0)) (d (n "evm-gasometer") (r "^0.14") (k 0)) (d (n "evm-runtime") (r "^0.14") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1la2r8gpdsza7hsc0gz9c6p0hi3x3rvwpcf5rj19d6grf6rqgy3k") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.15.0 (c (n "evm") (v "0.15.0") (d (list (d (n "evm-core") (r "^0.15") (k 0)) (d (n "evm-gasometer") (r "^0.15") (k 0)) (d (n "evm-runtime") (r "^0.15") (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "19b4qyzqnm1pn87rrn4q72wv0gf6rk1zdkdzhav4jr1bibhnabr7") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.16.0 (c (n "evm") (v "0.16.0") (d (list (d (n "evm-core") (r "^0.16") (k 0)) (d (n "evm-gasometer") (r "^0.16") (k 0)) (d (n "evm-runtime") (r "^0.16") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0ync4509kfwfgqshcrp4jhgz8as4lmnhn0fjyn1f77nnilyq1zg3") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.16.1 (c (n "evm") (v "0.16.1") (d (list (d (n "evm-core") (r "^0.16") (k 0)) (d (n "evm-gasometer") (r "^0.16") (k 0)) (d (n "evm-runtime") (r "^0.16") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0naswcm1i4qydw9zsdyz721q4sdvw21850z1pmwbichrybmw1993") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.17.0 (c (n "evm") (v "0.17.0") (d (list (d (n "evm-core") (r "^0.17") (k 0)) (d (n "evm-gasometer") (r "^0.17") (k 0)) (d (n "evm-runtime") (r "^0.17") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1qhpssgdpw78pqiajsgh7pbiw0ia86j30c52r3q0wwl8lw54n8k8") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std") ("default" "std"))))))

(define-public crate-evm-0.17.1 (c (n "evm") (v "0.17.1") (d (list (d (n "evm-core") (r "^0.17") (k 0)) (d (n "evm-gasometer") (r "^0.17") (k 0)) (d (n "evm-runtime") (r "^0.17") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1snj3k2g2myqhznpdryz9f4h6n3bscy7kp55rk1g0rfpcf2h4pp1") (f (quote (("with-serde" "serde" "primitive-types/serde") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "log/std") ("default" "std"))))))

(define-public crate-evm-0.17.2 (c (n "evm") (v "0.17.2") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "evm-core") (r "^0.17") (k 0)) (d (n "evm-gasometer") (r "^0.17") (k 0)) (d (n "evm-runtime") (r "^0.17") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0kzn6xkwgsdgv8q6jbrmysbxb7xi5nmcavgdcb403v5h91ql2cxz") (f (quote (("with-serde" "serde" "primitive-types/serde") ("with-codec" "codec" "primitive-types/codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-evm-0.17.3 (c (n "evm") (v "0.17.3") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.4") (k 0)) (d (n "evm-core") (r "^0.17") (k 0)) (d (n "evm-gasometer") (r "^0.17") (k 0)) (d (n "evm-runtime") (r "^0.17") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "021w1qa3s2vjvmz468x5s39a28a3x5psx71xn1hs7vy31v5dxj0n") (f (quote (("with-serde" "serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.18.0 (c (n "evm") (v "0.18.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.4") (k 0)) (d (n "evm-core") (r "^0.18") (k 0)) (d (n "evm-gasometer") (r "^0.18") (k 0)) (d (n "evm-runtime") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "18mpfz90bkimgkk6x37g7h7jbsbfhkh9xkbdz0kaamfnjck3kbkk") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.18.3 (c (n "evm") (v "0.18.3") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.4") (k 0)) (d (n "evm-core") (r "^0.18") (k 0)) (d (n "evm-gasometer") (r "^0.18") (k 0)) (d (n "evm-runtime") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1h4ra8b062hrsww60f6mwgsalvzppiwrr4csgja3xzg6g3min358") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.18.4 (c (n "evm") (v "0.18.4") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.4") (k 0)) (d (n "evm-core") (r "^0.18") (k 0)) (d (n "evm-gasometer") (r "^0.18") (k 0)) (d (n "evm-runtime") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "17pmgyhz5s3nim9kjsjr2xwmarq5nx397sj74ri8kv6mddrp1z7i") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.18.5 (c (n "evm") (v "0.18.5") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r ">=0.4, <0.6") (k 0)) (d (n "evm-core") (r "^0.18") (k 0)) (d (n "evm-gasometer") (r "^0.18") (k 0)) (d (n "evm-runtime") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1sb2xj0czfyaq07bcyx82gch3kgc9rkjxmli6h1yfy5hfwidm1jj") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.19.0 (c (n "evm") (v "0.19.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r ">=0.4, <0.6") (k 0)) (d (n "evm-core") (r "^0.19") (k 0)) (d (n "evm-gasometer") (r "^0.19") (k 0)) (d (n "evm-runtime") (r "^0.19") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1qpms606a8fnhbj5s961zn556mf20k5wbizymz5bhqkj81dsh3ga") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.20.0 (c (n "evm") (v "0.20.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r ">=0.4, <0.6") (k 0)) (d (n "evm-core") (r "^0.20") (k 0)) (d (n "evm-gasometer") (r "^0.20") (k 0)) (d (n "evm-runtime") (r "^0.20") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0lh917y2rigbsilrp1bcilv3q6ircahnh0qgy43sqdqyymv42jaj") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.21.0 (c (n "evm") (v "0.21.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.6") (k 0)) (d (n "evm-core") (r "^0.21") (k 0)) (d (n "evm-gasometer") (r "^0.21") (k 0)) (d (n "evm-runtime") (r "^0.21") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.8") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0566wycpb9w5cpqj5rgh7lmw64j1bmwdyp17988y16mzb576d3dk") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.22.0 (c (n "evm") (v "0.22.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.6") (k 0)) (d (n "evm-core") (r "^0.22") (k 0)) (d (n "evm-gasometer") (r "^0.22") (k 0)) (d (n "evm-runtime") (r "^0.22") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.8") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "15l5pcwrcf2pgwc4vn6by275rlkia78w1vk4cpn2fv00dqdi6949") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.22.1 (c (n "evm") (v "0.22.1") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.6") (k 0)) (d (n "evm-core") (r "^0.22") (k 0)) (d (n "evm-gasometer") (r "^0.22") (k 0)) (d (n "evm-runtime") (r "^0.22") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.8") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1w0dg0zkih1kxpbmwhkwvyrrrmi28kff7555fh6g5f2cyl9h2m7x") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.23.0 (c (n "evm") (v "0.23.0") (d (list (d (n "codec") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ethereum") (r "^0.6") (k 0)) (d (n "evm-core") (r "^0.23") (k 0)) (d (n "evm-gasometer") (r "^0.23") (k 0)) (d (n "evm-runtime") (r "^0.23") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.8") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "009hlrxjmsm24w3dkq0lx6x35s6pyrl83961zwmfm2slsx2zjiiv") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.24.0 (c (n "evm") (v "0.24.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ethereum") (r "^0.7") (k 0)) (d (n "evm-core") (r "^0.24") (k 0)) (d (n "evm-gasometer") (r "^0.24") (k 0)) (d (n "evm-runtime") (r "^0.24") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0yvycl3syy3bvqpd9xkkmdqvjf2yczl067plnbbll55v2852arq4") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.25.0 (c (n "evm") (v "0.25.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ethereum") (r "^0.7") (k 0)) (d (n "evm-core") (r "^0.25") (k 0)) (d (n "evm-gasometer") (r "^0.25") (k 0)) (d (n "evm-runtime") (r "^0.25") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1k8s7d9br807mlrjdcxcg7x3yjdjm7c8bqlb7hj2m5m40vxx2jqv") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.26.0 (c (n "evm") (v "0.26.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ethereum") (r "^0.7") (k 0)) (d (n "evm-core") (r "^0.26") (k 0)) (d (n "evm-gasometer") (r "^0.26") (k 0)) (d (n "evm-runtime") (r "^0.26") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1ppg2cr6bm1vavdw3c6558pcnq4xakry4jrw03p77sjvlkgyh0hj") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std") ("default" "std"))))))

(define-public crate-evm-0.27.0 (c (n "evm") (v "0.27.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.7") (k 0)) (d (n "evm-core") (r "^0.27") (k 0)) (d (n "evm-gasometer") (r "^0.27") (k 0)) (d (n "evm-runtime") (r "^0.27") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "15nmbshfcds6935vjjbrqw805rcmdb6dc2phh1mjij5y8bkb0czq") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.28.0 (c (n "evm") (v "0.28.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.7") (k 0)) (d (n "evm-core") (r "^0.28") (k 0)) (d (n "evm-gasometer") (r "^0.28") (k 0)) (d (n "evm-runtime") (r "^0.28") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "075az2rbgkdk3kn3ii4isb03qvgyq8yxgg9irhlrw55jn6nbnl7z") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.29.0 (c (n "evm") (v "0.29.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.8") (k 0)) (d (n "evm-core") (r "^0.29") (k 0)) (d (n "evm-gasometer") (r "^0.29") (k 0)) (d (n "evm-runtime") (r "^0.29") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0vvfyw98sncgiahygp6yv8psz9d6cyvy267jxr1kh6dr37cpxd5l") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.30.0 (c (n "evm") (v "0.30.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.8") (k 0)) (d (n "evm-core") (r "^0.30") (k 0)) (d (n "evm-gasometer") (r "^0.30") (k 0)) (d (n "evm-runtime") (r "^0.30") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0298ww7kv2qbcayfw5n6w5v867znz3hm808yd7c3p03r7qm01hx5") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.30.1 (c (n "evm") (v "0.30.1") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r ">=0.8, <=0.9") (k 0)) (d (n "evm-core") (r "^0.30") (k 0)) (d (n "evm-gasometer") (r "^0.30") (k 0)) (d (n "evm-runtime") (r "^0.30") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0iv31r7kwrlz86m5875xydh81rjq3fvcmism600024d8awf30i1i") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.31.0 (c (n "evm") (v "0.31.0") (d (list (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "~0.8") (k 0)) (d (n "evm-core") (r "^0.31") (k 0)) (d (n "evm-gasometer") (r "^0.31") (k 0)) (d (n "evm-runtime") (r "^0.31") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "05and2pd1mnvdzpizyyjw4vmshs1jw07jji376fkaqqhla0w956b") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.31.1 (c (n "evm") (v "0.31.1") (d (list (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r ">=0.8, <0.11") (k 0)) (d (n "evm-core") (r "^0.31") (k 0)) (d (n "evm-gasometer") (r "^0.31") (k 0)) (d (n "evm-runtime") (r "^0.31") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "1j98lrn1wmyymw9fbsck999w498lkd6cbgig770ikblj0n27vvyx") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "evm-core/with-codec" "primitive-types/codec" "ethereum/with-codec") ("tracing" "environmental") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std") ("default" "std"))))))

(define-public crate-evm-0.32.0 (c (n "evm") (v "0.32.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.10") (k 0)) (d (n "evm-core") (r "^0.32") (k 0)) (d (n "evm-gasometer") (r "^0.32") (k 0)) (d (n "evm-runtime") (r "^0.32") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0x1p0ah1852cgds4nkfpvr8z64pqpfvz98gnyivdm98h9c6h6mi2") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.33.0 (c (n "evm") (v "0.33.0") (d (list (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.10") (k 0)) (d (n "evm-core") (r "^0.33") (k 0)) (d (n "evm-gasometer") (r "^0.33") (k 0)) (d (n "evm-runtime") (r "^0.33") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0mv35j1mx4c2a4az00md5da2vsf71s0p6730gdipcnrihbzbns10") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.33.1 (c (n "evm") (v "0.33.1") (d (list (d (n "auto_impl") (r "^0.5.0") (d #t) (k 0)) (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r ">=0.10, <=0.11") (k 0)) (d (n "evm-core") (r "^0.33") (k 0)) (d (n "evm-gasometer") (r "^0.33") (k 0)) (d (n "evm-runtime") (r "^0.33") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "0x2masapxpakpb94bm193xh8cq4gfhrm67xmm5gf2vg117azv3s0") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.34.0 (c (n "evm") (v "0.34.0") (d (list (d (n "auto_impl") (r "^0.5.0") (d #t) (k 0)) (d (n "codec") (r "^2.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r ">=0.10, <=0.12") (k 0)) (d (n "evm-core") (r "^0.34") (k 0)) (d (n "evm-gasometer") (r "^0.34") (k 0)) (d (n "evm-runtime") (r "^0.34") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r ">=0.10, <=0.11") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^1.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)))) (h "179cnm8r4a1b2mw8g7y09si831ahx9wrxzd80mpivywzxkyv3yk5") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.35.0 (c (n "evm") (v "0.35.0") (d (list (d (n "auto_impl") (r "^0.5.0") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.12") (k 0)) (d (n "evm-core") (r "^0.35") (k 0)) (d (n "evm-gasometer") (r "^0.35") (k 0)) (d (n "evm-runtime") (r "^0.35") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.11") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^2.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0hvzfixh5vgjqq0dkhv7rk99614vzmpz2n38cxnpypp2q4hg73xy") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.36.0 (c (n "evm") (v "0.36.0") (d (list (d (n "auto_impl") (r "^0.5.0") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.12") (k 0)) (d (n "evm-core") (r "^0.36") (k 0)) (d (n "evm-gasometer") (r "^0.36") (k 0)) (d (n "evm-runtime") (r "^0.36") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.11") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-info") (r "^2.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0f7pxajwz01hc2vshv6m79lpha8yjx1hdfn4djcknqjhh38vp26k") (f (quote (("with-serde" "serde" "evm-core/with-serde" "primitive-types/serde" "ethereum/with-serde") ("with-codec" "codec" "scale-info" "evm-core/with-codec" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std" "sha3/std" "primitive-types/std" "serde/std" "codec/std" "log/std" "ethereum/std" "environmental/std" "scale-info/std") ("default" "std"))))))

(define-public crate-evm-0.37.0 (c (n "evm") (v "0.37.0") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-core") (r "^0.37") (k 0)) (d (n "evm-gasometer") (r "^0.37") (k 0)) (d (n "evm-runtime") (r "^0.37") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1zy8zrc7xgvdppk9811jnb6amvj5j3888b9332bjp3hynxjqqi7l") (f (quote (("with-serde" "serde" "primitive-types/serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("default" "std"))))))

(define-public crate-evm-0.38.0 (c (n "evm") (v "0.38.0") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-core") (r "^0.38") (k 0)) (d (n "evm-gasometer") (r "^0.38") (k 0)) (d (n "evm-runtime") (r "^0.38") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1qnl54k93jl7m8v73x4n30bpkxhpfqhmn8gpry1d1rsqvdzhxwi3") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("default" "std"))))))

(define-public crate-evm-0.39.0 (c (n "evm") (v "0.39.0") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-core") (r "^0.39") (k 0)) (d (n "evm-gasometer") (r "^0.39") (k 0)) (d (n "evm-runtime") (r "^0.39") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "12k0avb62as6ljz6bkhj7v6jmx0z1zp9ibajch9jmwqnmhfxz68h") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("default" "std"))))))

(define-public crate-evm-0.39.1 (c (n "evm") (v "0.39.1") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-core") (r "^0.39") (k 0)) (d (n "evm-gasometer") (r "^0.39") (k 0)) (d (n "evm-runtime") (r "^0.39") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0rck9ss1scrk8mdhlk46lsghgxbpr1f1mglxm0524lbwk08lx6m4") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("default" "std"))))))

(define-public crate-evm-0.40.0 (c (n "evm") (v "0.40.0") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-core") (r "^0.40") (k 0)) (d (n "evm-gasometer") (r "^0.40") (k 0)) (d (n "evm-runtime") (r "^0.40") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "16zjz03dg84r7w7x79ysww664vxxrfpjbi4h8ckhd996qj8rganr") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("force-debug" "evm-core/force-debug" "evm-gasometer/force-debug") ("default" "std"))))))

(define-public crate-evm-0.41.0 (c (n "evm") (v "0.41.0") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.15") (k 0)) (d (n "evm-core") (r "^0.41") (k 0)) (d (n "evm-gasometer") (r "^0.41") (k 0)) (d (n "evm-runtime") (r "^0.41") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1lbja9116rmr9brc04bnc476ywmxa4b9xgig0wd8whb5k6ixw0ds") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("force-debug" "evm-core/force-debug" "evm-gasometer/force-debug") ("default" "std"))))))

(define-public crate-evm-1.0.0-alpha.1 (c (n "evm") (v "1.0.0-alpha.1") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.14") (k 0)) (d (n "evm-interpreter") (r "^1.0.0-alpha.1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0x13scdbs36a6aizi18wyd3z20pgd3ix4hy7ak6gbcsf31lhq8cx") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-interpreter/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-interpreter/with-codec") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-interpreter/std") ("default" "std"))))))

(define-public crate-evm-1.0.0-alpha.2 (c (n "evm") (v "1.0.0-alpha.2") (d (list (d (n "evm-interpreter") (r "^1.0.0-alpha.2") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0pj5b0axs7dqpml4vrc5d9h4qy1hym8bl7mpi604sx9fdr0d13x6") (f (quote (("with-serde" "primitive-types/impl-serde" "evm-interpreter/with-serde") ("with-codec" "primitive-types/codec" "primitive-types/scale-info" "evm-interpreter/with-codec") ("std" "primitive-types/std" "sha3/std" "evm-interpreter/std") ("default" "std"))))))

(define-public crate-evm-0.41.1 (c (n "evm") (v "0.41.1") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "environmental") (r "^1.1.2") (o #t) (k 0)) (d (n "ethereum") (r "^0.15") (k 0)) (d (n "evm-core") (r "^0.41") (k 0)) (d (n "evm-gasometer") (r "^0.41") (k 0)) (d (n "evm-runtime") (r "^0.41") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1sg7s3q0h63anh9smsnn3w6my18v2aqcnxr7zzw6rhqccgll6zvn") (f (quote (("with-serde" "serde" "primitive-types/impl-serde" "evm-core/with-serde" "ethereum/with-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/codec" "primitive-types/scale-info" "ethereum/with-codec" "evm-core/with-codec") ("tracing" "environmental" "evm-gasometer/tracing" "evm-runtime/tracing") ("std" "ethereum/std" "log/std" "primitive-types/std" "rlp/std" "sha3/std" "environmental/std" "scale-codec/std" "scale-info/std" "serde/std" "evm-core/std" "evm-gasometer/std" "evm-runtime/std") ("force-debug" "evm-core/force-debug" "evm-gasometer/force-debug") ("default" "std"))))))

