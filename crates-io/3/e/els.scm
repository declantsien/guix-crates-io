(define-module (crates-io #{3}# e els) #:use-module (crates-io))

(define-public crate-els-0.0.1 (c (n "els") (v "0.0.1") (d (list (d (n "erg_compiler") (r "^0.2.6") (d #t) (k 0)))) (h "0spzycpx5xfrlhy433lpk7pyghd68gh7x9jhaf4i4xd8blblvlgm")))

(define-public crate-els-0.1.0 (c (n "els") (v "0.1.0") (d (list (d (n "erg_common") (r "^0.5.2") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.2") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.2") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1j5qfgjl3had03zs70pf410xa9am8c6x9fnkzha7dzcfs3zw3xa2")))

(define-public crate-els-0.1.1 (c (n "els") (v "0.1.1") (d (list (d (n "erg_common") (r "^0.5.3") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.3") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.3") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0jc74adabb8ks0950slmzm5jk81vdy1d3jd6w7v5i3h1znyj47vf")))

(define-public crate-els-0.1.2-nightly.0 (c (n "els") (v "0.1.2-nightly.0") (d (list (d (n "erg_common") (r "^0.5.4-nightly.1") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.4-nightly.1") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.4-nightly.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0l06pmwfn15vcf54587d7kzwdyv172wwdqcbs5jcrcbikwgj189a")))

(define-public crate-els-0.1.2 (c (n "els") (v "0.1.2") (d (list (d (n "erg_common") (r "^0.5.4") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.4") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "15i9vm5r36560z94q06ywnkfq6mmha34nyrhdaqpg9qc33lpskvj")))

(define-public crate-els-0.1.3-nightly.0 (c (n "els") (v "0.1.3-nightly.0") (d (list (d (n "erg_common") (r "^0.5.5-nightly.2") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.5-nightly.2") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.5-nightly.2") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0a1pi03fznvy3ka7mvrmn7smn0n7ixv6kzciq82vk9i75s8qpji7")))

(define-public crate-els-0.1.3 (c (n "els") (v "0.1.3") (d (list (d (n "erg_common") (r "^0.5.5") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.5") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.5") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1cj9ik9qgph4w9d8kwsv9akz64xd285dzf1slv5rl8jidcxm0dr6")))

(define-public crate-els-0.1.4-nightly.0 (c (n "els") (v "0.1.4-nightly.0") (d (list (d (n "erg_common") (r "^0.5.6-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.6-nightly.0") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.6-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1sk2prg18s593plvj0cpxadazvs6cxfjkl0ky77y1mcvq2vd2q77")))

(define-public crate-els-0.1.4 (c (n "els") (v "0.1.4") (d (list (d (n "erg_common") (r "^0.5.6") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.6") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0cq8ih87cjc17xzm9j9fnwnprysksy2039ifnx2m5xl6znsaf676")))

(define-public crate-els-0.1.5-nightly.0 (c (n "els") (v "0.1.5-nightly.0") (d (list (d (n "erg_common") (r "^0.5.7-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.7-nightly.0") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.7-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0qmlyhc4rqcnvdxqjf55xsbf7yd9f5a7gxwc28xmvzgizl6b15pc")))

(define-public crate-els-0.1.5-nightly.1 (c (n "els") (v "0.1.5-nightly.1") (d (list (d (n "erg_common") (r "^0.5.7-nightly.1") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.7-nightly.1") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.7-nightly.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "01aab1fbd6ddxybprqwgrrc9c9dn0yr4217kjqaz8fcmyd2x1dw6")))

(define-public crate-els-0.1.5 (c (n "els") (v "0.1.5") (d (list (d (n "erg_common") (r "^0.5.7") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.7") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.7") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0y6cdx3hs3v5c6sdicb5dj09a8sf494dahmcyjb3hprp1y06l6lk")))

(define-public crate-els-0.1.6-nightly.0 (c (n "els") (v "0.1.6-nightly.0") (d (list (d (n "erg_common") (r "^0.5.9-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.9-nightly.0") (d #t) (k 0)) (d (n "erg_type") (r "^0.5.9-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1i5mdrx3jjlvpma0fldgz6xw62936g3ssbxn3al8x22fvr2h4y5x")))

(define-public crate-els-0.1.6 (c (n "els") (v "0.1.6") (d (list (d (n "erg_common") (r "^0.5.9") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.9") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "014ssbfb895m3y1sl6gybmbynpkhcm2qf3g1qzii4j872fw53w8n")))

(define-public crate-els-0.1.7-nightly.0 (c (n "els") (v "0.1.7-nightly.0") (d (list (d (n "erg_common") (r "^0.5.10-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.10-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1x92x5hq62aravg5wa351qy1mgy1lwb8kzr837mg4arq25r49ql9")))

(define-public crate-els-0.1.7 (c (n "els") (v "0.1.7") (d (list (d (n "erg_common") (r "^0.5.10") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.10") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1lx10210dqhgkm1670133w5q934lzszdyyccqdz71z4ddl0z672p")))

(define-public crate-els-0.1.8-nightly.0 (c (n "els") (v "0.1.8-nightly.0") (d (list (d (n "erg_common") (r "^0.5.11-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.11-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0z08wvga4aw5ki2y1v5sbcyp2vj8mn1zjdjykyn01jw1f6zh5mwg")))

(define-public crate-els-0.1.8-nightly.1 (c (n "els") (v "0.1.8-nightly.1") (d (list (d (n "erg_common") (r "^0.5.11-nightly.2") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.11-nightly.2") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "121yg8fj7hf62ldz32v0ym6yrca3r8hbq3kkkcsx9p4bc8w7rrn4")))

(define-public crate-els-0.1.8-nightly.2 (c (n "els") (v "0.1.8-nightly.2") (d (list (d (n "erg_common") (r "^0.5.11-nightly.3") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.11-nightly.3") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0snmwpfwsrf8f5s8pdcg3xg2yj2zv2rygd04ncl0x3cxf5fh4m9d")))

(define-public crate-els-0.1.8-nightly.3 (c (n "els") (v "0.1.8-nightly.3") (d (list (d (n "erg_common") (r "^0.5.11-nightly.7") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.11-nightly.7") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1qvrmn8d8rdqy4lza2hxipfxr3vg3wg7s8837b2ck88fnizgaqy0")))

(define-public crate-els-0.1.8 (c (n "els") (v "0.1.8") (d (list (d (n "erg_common") (r "^0.5.11") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.11") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "07ycy5pnb2h10fk8id7wvhcz539wywbza812m2rf3426dmqr5cxk")))

(define-public crate-els-0.1.9 (c (n "els") (v "0.1.9") (d (list (d (n "erg_common") (r "^0.5.12") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.12") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "03dadwv66rw17sj8yhav5sxsr05rdxja347c1v1qilw1v63x9z19")))

(define-public crate-els-0.1.10 (c (n "els") (v "0.1.10") (d (list (d (n "erg_common") (r "^0.5.13") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.13") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "166p7bdqb31mr19wh334jqkwq08w1xaq3cfbvpbps31rm1xrawqd")))

(define-public crate-els-0.1.11-nightly.0 (c (n "els") (v "0.1.11-nightly.0") (d (list (d (n "erg_common") (r "^0.5.13") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.5.13") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1ha4wbwj52xqdiqay98f6h47clv0y4h6f4ymynzancw2jn1kzgf1")))

(define-public crate-els-0.1.11-nightly.1 (c (n "els") (v "0.1.11-nightly.1") (d (list (d (n "erg_common") (r "^0.6.0-beta.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.0-beta.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0bdqcr4nbvzish1p0m56pdn5h9ahb92jldc425l6h05flj30dlip")))

(define-public crate-els-0.1.11 (c (n "els") (v "0.1.11") (d (list (d (n "erg_common") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0g4gpfwn1mk3smzm5nircpxylhz0lv7y5w5yrc3r46p0i3yy06pc")))

(define-public crate-els-0.1.12 (c (n "els") (v "0.1.12") (d (list (d (n "erg_common") (r "^0.6.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "14xwp8warq3yhr8y5z6lppvqmg3xb6ybzr0ciy3mahjgkg0l7vjv")))

(define-public crate-els-0.1.13-nightly.0 (c (n "els") (v "0.1.13-nightly.0") (d (list (d (n "erg_common") (r "^0.6.1-nightly.0") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.1-nightly.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1syqjfq9nx3gn3qkyjn2y0fy8k6n2588ff3qqhpxwfrr50apidj9")))

(define-public crate-els-0.1.13-nightly.1 (c (n "els") (v "0.1.13-nightly.1") (d (list (d (n "erg_common") (r "^0.6.1-nightly.1") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.1-nightly.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0q5yivxj2c02ncsx99ij6gzfl4zxkpa887milxg1n927vncagl88")))

(define-public crate-els-0.1.13 (c (n "els") (v "0.1.13") (d (list (d (n "erg_common") (r "^0.6.1") (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "194xn6g3bc4x5859h32pyx1w3lmwns6w19rzymsz0s7jw3xl4x8w") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.14-nightly.0 (c (n "els") (v "0.1.14-nightly.0") (d (list (d (n "erg_common") (r "^0.6.2-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.2-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "08kg7klmph4gaa0vwb780sblfiwiq1wbxj8bvbl0s164ljsy5v7q") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.14-nightly.1 (c (n "els") (v "0.1.14-nightly.1") (d (list (d (n "erg_common") (r "^0.6.2-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.2-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1c28k1iv6najxf1apvbyrfri2cg70w4rrdm37hqgsd8yxnqys7pk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.14 (c (n "els") (v "0.1.14") (d (list (d (n "erg_common") (r "^0.6.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0mls7z3bk4yjky0b9pz39267w0hjq1ywi8fjc1kv1iwl6kwxxck9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.15 (c (n "els") (v "0.1.15") (d (list (d (n "erg_common") (r "^0.6.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1xmjn7z907bgjw7y3a5wzrh99fyaq5ncbhclsz3k9lwp8b1mm6pi") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.16-nightly.0 (c (n "els") (v "0.1.16-nightly.0") (d (list (d (n "erg_common") (r "^0.6.4-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.4-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1wii4ybax6rsgx29dbm12y6mzd3mv1nk59cnppklmjinagr6d40s") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.16-nightly.1 (c (n "els") (v "0.1.16-nightly.1") (d (list (d (n "erg_common") (r "^0.6.4-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.4-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1raa610z1givk4la41xn80zb3dnllw08n8dczc55346xnli8v0j6") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.16-nightly.2 (c (n "els") (v "0.1.16-nightly.2") (d (list (d (n "erg_common") (r "^0.6.4-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.4-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1p9nfs2rq890fnl47sm6229padkkj5qx6q46f0h1n5d2hqrvrr8q") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.16 (c (n "els") (v "0.1.16") (d (list (d (n "erg_common") (r "^0.6.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0pzk6dpb32x5xhgv7i3xniarm4pzsymhg9bc2k34janm6nf1ay2c") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.17-nightly.0 (c (n "els") (v "0.1.17-nightly.0") (d (list (d (n "erg_common") (r "^0.6.5-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.5-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1m44v46nb48j4396v7dk7wh0vb408mna5ki51ij8dcv1w9p1y4mz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.17-nightly.1 (c (n "els") (v "0.1.17-nightly.1") (d (list (d (n "erg_common") (r "^0.6.5-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.5-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1laq5xni0905x7nms0cdsjzgsdx6ajiyknrmssyj0ahjhjpknrzi") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.17 (c (n "els") (v "0.1.17") (d (list (d (n "erg_common") (r "^0.6.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "06gmfzf4gw9kxww09dqzy0q4ylszglqxi57cwijkb4h67wa8jcwx") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.18-nightly.0 (c (n "els") (v "0.1.18-nightly.0") (d (list (d (n "erg_common") (r "^0.6.6-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.6-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1m3471lm0k0w2bpvg2fba86ga6jkyxwkw9y0ka2sbb76npg38psv") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.18 (c (n "els") (v "0.1.18") (d (list (d (n "erg_common") (r "^0.6.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0k07cxky6gjbrxbacvr04gvv98bdrjmmh0vjqhagsy4viypv40sw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.19-nightly.0 (c (n "els") (v "0.1.19-nightly.0") (d (list (d (n "erg_common") (r "^0.6.7-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.7-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1n67vdbxybf4rvif1d511yqw87amypcnnqgxxdnssh2ph6ky28gw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.19-nightly.1 (c (n "els") (v "0.1.19-nightly.1") (d (list (d (n "erg_common") (r "^0.6.7-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.7-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0vskyfyq36kd0yv8qc8s7cpxdcxbbv7x40fliz71ml9z58inphbw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.19-nightly.2 (c (n "els") (v "0.1.19-nightly.2") (d (list (d (n "erg_common") (r "^0.6.7-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.7-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "02cchmbimk156dsmj91j95l2wyn10knj21vix6afl1vxzq236fnq") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.19 (c (n "els") (v "0.1.19") (d (list (d (n "erg_common") (r "^0.6.7") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.7") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1xkjdh9v194ax4fwg42p92br8xgvp5c33xvzn9zj04kfnp7lsscl") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.20-nightly.0 (c (n "els") (v "0.1.20-nightly.0") (d (list (d (n "erg_common") (r "^0.6.8-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.8-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1wdxxp3xg46c7l6nzyma25il0n054iq2sk8aavzayhjzprm4zg8f") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.20-nightly.1 (c (n "els") (v "0.1.20-nightly.1") (d (list (d (n "erg_common") (r "^0.6.8-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.8-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1s84kf1fmls0cf6ldfvm8lk0bk4qgrmq9ikya03dich5wza450cb") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.20-nightly.2 (c (n "els") (v "0.1.20-nightly.2") (d (list (d (n "erg_common") (r "^0.6.8-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.8-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "02k4p1ls6vymsa3m7yrnz4bic5mqwbl6av7c5769560i4rk5xn2s") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.20-nightly.3 (c (n "els") (v "0.1.20-nightly.3") (d (list (d (n "erg_common") (r "^0.6.8-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.8-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0jf17dx2m84r28ja84l3l890m63zp9ha7mw2i621430karkgqp0a") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.20 (c (n "els") (v "0.1.20") (d (list (d (n "erg_common") (r "^0.6.8") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.8") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "09gvywyrvvm76vdpg3jh3i8wxlm2mhz4liycyn42mj350kh81ddc") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.21-nightly.0 (c (n "els") (v "0.1.21-nightly.0") (d (list (d (n "erg_common") (r "^0.6.9-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.9-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0qxqbdjr0syiqmzx3a6m7jxc5b2dr0xphv2xh63jqj50cfj1dyzg") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.21-nightly.1 (c (n "els") (v "0.1.21-nightly.1") (d (list (d (n "erg_common") (r "^0.6.9-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.9-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "115irijfm1r7y8pml9492ph2yycjh73r1zb6hj1b80bhzm03vhqv") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compatible" "erg_compiler/py_compatible") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.21-nightly.2 (c (n "els") (v "0.1.21-nightly.2") (d (list (d (n "erg_common") (r "^0.6.9-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.9-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1i38pdsm1kbf66wlm6n1jii1wc36pls125i56gd4asxywds5kvik") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.21 (c (n "els") (v "0.1.21") (d (list (d (n "erg_common") (r "^0.6.9") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.9") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1is2bwi08zb98qpx2liqh53n9xgk2w3az0hil87fp04yzf0fv05b") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.22-nightly.0 (c (n "els") (v "0.1.22-nightly.0") (d (list (d (n "erg_common") (r "^0.6.10-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.10-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1d43wcp8b87q98vgyzw1h6akfd0jl96qrmll0b0svc4lxbqljlwf") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.22-nightly.1 (c (n "els") (v "0.1.22-nightly.1") (d (list (d (n "erg_common") (r "^0.6.10-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.10-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "18riy5942isvs30dkdk5izsxsvxyipfpjmd457ma22bbl82d0ndg") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.22-nightly.2 (c (n "els") (v "0.1.22-nightly.2") (d (list (d (n "erg_common") (r "^0.6.10-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.10-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "17a575vgjcwnlnmhy6fccppbpmf4zmx48krk7c0kgnfmmrw0ld2c") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.22-nightly.3 (c (n "els") (v "0.1.22-nightly.3") (d (list (d (n "erg_common") (r "^0.6.10-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.10-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "19bxnjnjnvxfafk7mhykvz80izkzpm0n9nxbd5a8l8s2s2k9lr9q") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.22 (c (n "els") (v "0.1.22") (d (list (d (n "erg_common") (r "^0.6.10") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.10") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0mjbx4wvq0c36xf05a2bqrj96nfinlhm5bagj7752fzg477igqi7") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.23-nightly.0 (c (n "els") (v "0.1.23-nightly.0") (d (list (d (n "erg_common") (r "^0.6.11-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.11-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "13x5pbrc8n65gyh1dhw90d7szy07dnf4pmy8362iwy87m52q4cfh") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.23-nightly.1 (c (n "els") (v "0.1.23-nightly.1") (d (list (d (n "erg_common") (r "^0.6.11-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.11-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0mkfl20055h5xzi4mm154xajs17xrngknpwlcvg596bghayrh351") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.23-nightly.2 (c (n "els") (v "0.1.23-nightly.2") (d (list (d (n "erg_common") (r "^0.6.11-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.11-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0z15ijidysfwgjrrwnvii02cj710fm8x5wa0njabibkjcakp419v") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.23-nightly.3 (c (n "els") (v "0.1.23-nightly.3") (d (list (d (n "erg_common") (r "^0.6.11-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.11-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1mgv7jnvyghw62s48l3mblln35j1ymq0hkd7xci11mkqw91p735a") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.23 (c (n "els") (v "0.1.23") (d (list (d (n "erg_common") (r "^0.6.11") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.11") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1qd7z25ys1nscjq9fk241hpyhhxa70iigfhjzb2vxa53bx5rp7wd") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.0 (c (n "els") (v "0.1.24-nightly.0") (d (list (d (n "erg_common") (r "^0.6.12-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0p0z4kjwk84djphlg9q8c8i06ys5cd16lwhxjyizykss0f75phf9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.1 (c (n "els") (v "0.1.24-nightly.1") (d (list (d (n "erg_common") (r "^0.6.12-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1v5yms1r4cdj08gqamdmkwc5m77jgf41mdfhn5fhnaga731h66pz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.2 (c (n "els") (v "0.1.24-nightly.2") (d (list (d (n "erg_common") (r "^0.6.12-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1phack6maqrhvyd15914wq701f8m4j7vf9fdcns7g4h2ja7fh32w") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.3 (c (n "els") (v "0.1.24-nightly.3") (d (list (d (n "erg_common") (r "^0.6.12-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1dh6ngs2wxkadr10qn849ijbrf6crhlk9ms6qgvy67aq4r67dwv1") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.4 (c (n "els") (v "0.1.24-nightly.4") (d (list (d (n "erg_common") (r "^0.6.12-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1ma79kxx9r3g6klqd1zdyn06iarh9bir5j0c16kb9y2xs3ldqk7p") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.5 (c (n "els") (v "0.1.24-nightly.5") (d (list (d (n "erg_common") (r "^0.6.12-nightly.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1q7kjv1g9f2l0b471cg0d4s0dmivaivnk1a9hh27zlazbgcj93zl") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24-nightly.6 (c (n "els") (v "0.1.24-nightly.6") (d (list (d (n "erg_common") (r "^0.6.12-nightly.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12-nightly.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0lwkhhxwg2yw0yygfjqgydimk8dadwjjy8x3a4fl1mqji0qz1crx") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.24 (c (n "els") (v "0.1.24") (d (list (d (n "erg_common") (r "^0.6.12") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.12") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1gx297b51b5d4rxmji6rk858fvm38659kqmsl0bflwcspmy0ydv9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25-nightly.0 (c (n "els") (v "0.1.25-nightly.0") (d (list (d (n "erg_common") (r "^0.6.13-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "036lryvj9kprphlwx18ch78j7h70zcx14jhy7cfw4n9jark6iaha") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25-nightly.1 (c (n "els") (v "0.1.25-nightly.1") (d (list (d (n "erg_common") (r "^0.6.13-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1hfi3v90zhrx6pcdw384clxznsjzqnx84yxhhvkdylnr0ipj9zxa") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25-nightly.2 (c (n "els") (v "0.1.25-nightly.2") (d (list (d (n "erg_common") (r "^0.6.13-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1amlln8in85vp1c2mhj48gkhw680q7ry6qhjz7cdrys0axbqswdj") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25-nightly.3 (c (n "els") (v "0.1.25-nightly.3") (d (list (d (n "erg_common") (r "^0.6.13-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "09cs318yiss714hnbn12dw0sf3m395qqn94p2w4b9w5n0dfsmhck") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25-nightly.4 (c (n "els") (v "0.1.25-nightly.4") (d (list (d (n "erg_common") (r "^0.6.13-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1hwdnw1457xr3zjfxzxqi8cbjx15w0lcd4ahw4ava5br3690z8m0") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.25 (c (n "els") (v "0.1.25") (d (list (d (n "erg_common") (r "^0.6.13") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.13") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "068c778g8sppa0j2ni7cw9v0a50qiks3bx8ks2s8s8zhxpa35kcx") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26-nightly.0 (c (n "els") (v "0.1.26-nightly.0") (d (list (d (n "erg_common") (r "^0.6.14-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0brz00m10dpilzqiakr6n7p6k5iji7279c77z153hxl3g9w0zxcw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26-nightly.1 (c (n "els") (v "0.1.26-nightly.1") (d (list (d (n "erg_common") (r "^0.6.14-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "15fac1d1f1yg49xm3076f4k18qmh3j71xvakhzx2ili22315w5k5") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26-nightly.2 (c (n "els") (v "0.1.26-nightly.2") (d (list (d (n "erg_common") (r "^0.6.14-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0wa81xwb6fqz9xr3lhjh1n5b6fb0yzqbxd2w2s1yw9gms2wdcisi") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26-nightly.3 (c (n "els") (v "0.1.26-nightly.3") (d (list (d (n "erg_common") (r "^0.6.14-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0q7jm1vz3pyzjjc459gdw22574ihsfv0zr98whbzhkc5r9179d4s") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26-nightly.4 (c (n "els") (v "0.1.26-nightly.4") (d (list (d (n "erg_common") (r "^0.6.14-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "03j6hwhfhbg77pn3qv088syzrsvci6nn6sm1y2k082gikljhwnlw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.26 (c (n "els") (v "0.1.26") (d (list (d (n "erg_common") (r "^0.6.14") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.14") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0i6hyknkjpshv564a8lsiiqf0pxh72qk4gcb4wbl7xfqhfvvssdd") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.27-nightly.0 (c (n "els") (v "0.1.27-nightly.0") (d (list (d (n "erg_common") (r "^0.6.15-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.15-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0hd1pj7b2cahpw9s5pkl9f6g7c2980nhr3pk8wvhkijmx0r5mmjj") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.27-nightly.1 (c (n "els") (v "0.1.27-nightly.1") (d (list (d (n "erg_common") (r "^0.6.15-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.15-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1h9nz3cqyh7zd6mjk0jf367g42zk84wgkjjpc5dggx7cvaqzdn97") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.27-nightly.2 (c (n "els") (v "0.1.27-nightly.2") (d (list (d (n "erg_common") (r "^0.6.15-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.15-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "04683d0c11jb34fp2yhkkqa56mi050pphki02pkyvq1cb49dhdj6") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.27 (c (n "els") (v "0.1.27") (d (list (d (n "erg_common") (r "^0.6.15") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.15") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "192q883i1z9hxqmvqjhbmfx8ibmcg2ji2kh88n5d7lnm6rs6jn6w") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.0 (c (n "els") (v "0.1.28-nightly.0") (d (list (d (n "erg_common") (r "^0.6.16-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0mdyl1mk1far9abng8f40dshhmjfppn16z6pp1zqfyfvyvqc2m6x") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.1 (c (n "els") (v "0.1.28-nightly.1") (d (list (d (n "erg_common") (r "^0.6.16-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0gm33wmjbpjnghyq963c3p8glsrj23ivf801c6nmh3kaxl4pninn") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.2 (c (n "els") (v "0.1.28-nightly.2") (d (list (d (n "erg_common") (r "^0.6.16-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "137wyfh1yrll66kw6f0abxijwnyjlvgcl5lcjydilxvmn17axd8n") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.3 (c (n "els") (v "0.1.28-nightly.3") (d (list (d (n "erg_common") (r "^0.6.16-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.3") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0qb8b9lbmzb78n8vflzy3k70hbha29sffrqk819kqffn7sa7v4d4") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.4 (c (n "els") (v "0.1.28-nightly.4") (d (list (d (n "erg_common") (r "^0.6.16-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1ml0xjkw1d4wrbz3k17pdwfiksx8a8rvpq7qn0k5q7qh5sb084l9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.5 (c (n "els") (v "0.1.28-nightly.5") (d (list (d (n "erg_common") (r "^0.6.16-nightly.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.5") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0kpynb4dd5hamwnzskdbigvs8kdkq4q7f7wd2x3d498bdva8d678") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.6 (c (n "els") (v "0.1.28-nightly.6") (d (list (d (n "erg_common") (r "^0.6.16-nightly.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.6") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0w1ib07hgwwa3cwdaqlxxgqwd07as7p554pdpbmlwv0zfazgkmc9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28-nightly.7 (c (n "els") (v "0.1.28-nightly.7") (d (list (d (n "erg_common") (r "^0.6.16-nightly.7") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16-nightly.7") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "19w6fkxspp8fw71w4ky1crlvx3czxmz4wbvp2ccf1ap44xalprar") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.28 (c (n "els") (v "0.1.28") (d (list (d (n "erg_common") (r "^0.6.16") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.16") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1dzkc7fm82gv86rb9j3xh393x69dhbsyi76s7m06l3afxnlgq9d9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.29 (c (n "els") (v "0.1.29") (d (list (d (n "erg_common") (r "^0.6.17") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.17") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "198k3wlklvgnb0vyij1y2f7bg4ilyhlkd6fhpkpxn2b7p8mdj3b3") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.30-nightly.0 (c (n "els") (v "0.1.30-nightly.0") (d (list (d (n "erg_common") (r "^0.6.18-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.18-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "023pnrvrdp7xvxpjn8hv739r37f59irldwd0v5vr562yd357yglb") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.30-nightly.1 (c (n "els") (v "0.1.30-nightly.1") (d (list (d (n "erg_common") (r "^0.6.18-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.18-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0bl95nj23566p0cwl4ppxrz4zavbpqxak5vgdzqjc587hycb960v") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.30-nightly.2 (c (n "els") (v "0.1.30-nightly.2") (d (list (d (n "erg_common") (r "^0.6.18-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.18-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0n3asrmvs4dniaqmp4fvmlwjigj1rrg0lj2cwj6gx7z3sczd948m") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.30 (c (n "els") (v "0.1.30") (d (list (d (n "erg_common") (r "^0.6.18") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.18") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "177wn2b1mxpwqnzmh91mxsiki38yh5qgwp634axvrjzr5iq5p2ww") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.31 (c (n "els") (v "0.1.31") (d (list (d (n "erg_common") (r "^0.6.19") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.19") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "19vnnnc36kd9vk05i2p0s52c3rcqdsnm2ii55fswddz9kdb9qxhp") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.32-nightly.0 (c (n "els") (v "0.1.32-nightly.0") (d (list (d (n "erg_common") (r "^0.6.20-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.20-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "gag") (r "^1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1bq7f0da7pypgdhf07l5i6652afgblal3r0asxff3r4rd2fcj1rk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.32-nightly.1 (c (n "els") (v "0.1.32-nightly.1") (d (list (d (n "erg_common") (r "^0.6.20-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.20-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "gag") (r "^1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "14ryjcill8vccks1rrq49fwmbyjf4iy369y9qbbg7jv9pjrc2nv4") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.32-nightly.2 (c (n "els") (v "0.1.32-nightly.2") (d (list (d (n "erg_common") (r "^0.6.20-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.20-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "gag") (r "^1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1nacvbcblkl6i5aphhvaj80h9ajyyr4pdcawjp64x8kgasmgfkyn") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.32 (c (n "els") (v "0.1.32") (d (list (d (n "erg_common") (r "^0.6.20") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.20") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "14l1nkjzlkw9ks5d1m36y2kmr86c4j7v7qd5p284j3gjpmhn9kq0") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.33-nightly.0 (c (n "els") (v "0.1.33-nightly.0") (d (list (d (n "erg_common") (r "^0.6.21-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.21-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1wpd898wkckjgmw4p4svz83f477kgg64lq9ypjycf7prqfch9wv4") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.33-nightly.1 (c (n "els") (v "0.1.33-nightly.1") (d (list (d (n "erg_common") (r "^0.6.21-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.21-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1cjcg2ly6699q4kqhj4z5bikj2rl60brz7gmxqpk8dhqp03cx44d") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.33-nightly.2 (c (n "els") (v "0.1.33-nightly.2") (d (list (d (n "erg_common") (r "^0.6.21-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.21-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.21-nightly.2") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "15jr9mb6csrg487ys5pz409cyv7dv3sj0kw3r9nfcf3m1n57gksc") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug"))))))

(define-public crate-els-0.1.33-nightly.4 (c (n "els") (v "0.1.33-nightly.4") (d (list (d (n "erg_common") (r "^0.6.21-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.21-nightly.4") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.21-nightly.4") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1d679zsmq35lc9qp3qghldryqh55qq7af7s7n5vsn7mkxlywaw90") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.33 (c (n "els") (v "0.1.33") (d (list (d (n "erg_common") (r "^0.6.21") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.21") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.21") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "101bz55rfwhg1scl24857yasla9i3wcqighpaivbfi0nfymb4iqk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.34-nightly.0 (c (n "els") (v "0.1.34-nightly.0") (d (list (d (n "erg_common") (r "^0.6.22-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.22-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.22-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1q59wrmla53yfsggkas7mi75pqhqaran4gfccpidk7m1rf2zybdp") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.34-nightly.1 (c (n "els") (v "0.1.34-nightly.1") (d (list (d (n "erg_common") (r "^0.6.22-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.22-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.22-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "117l4gia20wiic88qc45mn430ha78k2walv2i9nz2ajfgl490vwk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.34 (c (n "els") (v "0.1.34") (d (list (d (n "erg_common") (r "^0.6.22") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.22") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.22") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0hvprmdgffan3pdp3rqabv6ivvp33zm25z24yssdyhsi44wz9179") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.35 (c (n "els") (v "0.1.35") (d (list (d (n "erg_common") (r "^0.6.23") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.23") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.23") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "18rcsqy2rgv7if8nr4z8i756s7j1ihrp0ckc57b2vpcz29rmxd40") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.36 (c (n "els") (v "0.1.36") (d (list (d (n "erg_common") (r "^0.6.24") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.24") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.24") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0acf52xj33zcga6hydwm90ndz92582viy0khsxby1gh8dlg0iym7") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.37-nightly.0 (c (n "els") (v "0.1.37-nightly.0") (d (list (d (n "erg_common") (r "^0.6.25-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.25-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.25-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "10pqv3cppscihxk81x8mppz8kz6x22fmcz28g23b859zgskhf4qh") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.37-nightly.1 (c (n "els") (v "0.1.37-nightly.1") (d (list (d (n "erg_common") (r "^0.6.25-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.25-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.25-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "06l3pgj05xqpf6qapz4809i5vrphym4r31bsjihh1r7185kdsvgf") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.37 (c (n "els") (v "0.1.37") (d (list (d (n "erg_common") (r "^0.6.25") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.25") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.25") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0gjr9mnm1rajfbs14ls1yj8d4zpzdplb8jjyn1yc2jpmw4z6556b") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.38-nightly.0 (c (n "els") (v "0.1.38-nightly.0") (d (list (d (n "erg_common") (r "^0.6.26-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.26-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.26-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0hxy18f812s832qwl5kc85yf4w2mmpxmj6gp1yq0c44yz7pfrcxb") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.38 (c (n "els") (v "0.1.38") (d (list (d (n "erg_common") (r "^0.6.26") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.26") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.26") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0kdp2bqnd2wrj7za813hzg70n911rrsc78zg82nkms84dcr9j8vb") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.39-nightly.0 (c (n "els") (v "0.1.39-nightly.0") (d (list (d (n "erg_common") (r "^0.6.27-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.27-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.27-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1y2zhij8b2y5bx7vh6r3s1n5k5n3pxymi6ffgw3akys2z9f6fpp3") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.39-nightly.1 (c (n "els") (v "0.1.39-nightly.1") (d (list (d (n "erg_common") (r "^0.6.27-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.27-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.27-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0sl8mh7s40xfwxdxz99w7h0i45n1qpwky1al6crfp1xwpsxg6mhh") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.39 (c (n "els") (v "0.1.39") (d (list (d (n "erg_common") (r "^0.6.27") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.27") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.27") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0ijssh2n44irv2a4cwbw4m6k5xxp3nb2bzm52bqdb15ig24jxm7z") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.40-nightly.0 (c (n "els") (v "0.1.40-nightly.0") (d (list (d (n "erg_common") (r "^0.6.28-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.28-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.28-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1aawacbmvslp1f99nx0a7sxl0ccyl8svpcw1qd5qg6cbsf5lm0fr") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.40 (c (n "els") (v "0.1.40") (d (list (d (n "erg_common") (r "^0.6.28") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.28") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.28") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "08rp1mfpkf8f5x4y201c3ws4rinqf521nkzi8ys2c7xxcww6xw16") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.41 (c (n "els") (v "0.1.41") (d (list (d (n "erg_common") (r "^0.6.29") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.29") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.29") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0gmkhgsq8k7kz518y7xb7pd544rbbjscq2nljcff7fh92yp5v6bi") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.42-nightly.0 (c (n "els") (v "0.1.42-nightly.0") (d (list (d (n "erg_common") (r "^0.6.30-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.30-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.30-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "028z1p5bk5aya1f3w9kbgrhnja6vpbl1gbn1fvdhs2k83d8s0py3") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.42 (c (n "els") (v "0.1.42") (d (list (d (n "erg_common") (r "^0.6.30") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.30") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.30") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "076apsgbrsym9y310qhpi645yn4vqhhp43mc0748cwl82fq55zbz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.43-nightly.0 (c (n "els") (v "0.1.43-nightly.0") (d (list (d (n "erg_common") (r "^0.6.31-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.31-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.31-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "06kq61ynpiy66x0xd8ky7pc9asqbgcm09lhja8ayqlz7vx3lvbc4") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug") ("backtrace" "erg_common/backtrace"))))))

(define-public crate-els-0.1.44-nightly.0 (c (n "els") (v "0.1.44-nightly.0") (d (list (d (n "erg_common") (r "^0.6.32-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.32-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.32-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "10dw8isv2fdxrds1jncwr4k35xlgpkbqc46q4qamx3c9gcm6w7lk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.44-nightly.1 (c (n "els") (v "0.1.44-nightly.1") (d (list (d (n "erg_common") (r "^0.6.32-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.32-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.32-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0d88i29l4bwkawklr0sbx0p1dban58giqhfa0svyqjsjca6nb6sk") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.43 (c (n "els") (v "0.1.43") (d (list (d (n "erg_common") (r "^0.6.31") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.31") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.31") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "153ffd1gn30lisc73kppncvxzvi96b1ywcd3n3fm3p0m5rrwllyw") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.44-nightly.2 (c (n "els") (v "0.1.44-nightly.2") (d (list (d (n "erg_common") (r "^0.6.32-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.32-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.32-nightly.2") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "07h0vc4cigipnp25iijcsznsqw7wkdgk3fsi44qf6vaf2gwlzrrz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.44 (c (n "els") (v "0.1.44") (d (list (d (n "erg_common") (r "^0.6.32") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.32") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.32") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0gqvmqw3xd1dilwfrc5i012zaxya8fa9a3ra2naj4g3mfw78i2pz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.45-nightly.0 (c (n "els") (v "0.1.45-nightly.0") (d (list (d (n "erg_common") (r "^0.6.33-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.33-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.33-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "056wbij728cjm3jf0r3kxg5ikfy5nfq8gxa6ysx0krgwzq1ka9nj") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.45-nightly.1 (c (n "els") (v "0.1.45-nightly.1") (d (list (d (n "erg_common") (r "^0.6.33-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.33-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.33-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "01brknkjbpcqy30cdwki3r6qgp9l8r0x8d1185ipkh2gnhnfp7g5") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.45-nightly.2 (c (n "els") (v "0.1.45-nightly.2") (d (list (d (n "erg_common") (r "^0.6.33-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.33-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.33-nightly.2") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1qymwfsiz4k66yx5g4si9pkspk2z5br4ln0mia5nw342gw1lnh29") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.45 (c (n "els") (v "0.1.45") (d (list (d (n "erg_common") (r "^0.6.33") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.33") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.33") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "063wrbi78q13wcdmwfd6d2zx47gac7qdzd9w0grr07nl02blr5i9") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.46 (c (n "els") (v "0.1.46") (d (list (d (n "erg_common") (r "^0.6.34") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.34") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.34") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0hcjdmf75m3pwz0vw2l1s5rmkwys5xfzqqwphza6v7h3v25cl5sl") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.47-nightly.0 (c (n "els") (v "0.1.47-nightly.0") (d (list (d (n "erg_common") (r "^0.6.35-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.35-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.35-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1s18c9fkwdj55iw5wwsr14x0pjv2npdsqv1p15bv50avca6l340v") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug"))))))

(define-public crate-els-0.1.47 (c (n "els") (v "0.1.47") (d (list (d (n "erg_common") (r "^0.6.35") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.35") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.35") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.35") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "14ba22avvsv3r7mp8zr0z5kyk4537d0fz8r1kl4ajspd5s6hhpsq") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

(define-public crate-els-0.1.48-nightly.0 (c (n "els") (v "0.1.48-nightly.0") (d (list (d (n "erg_common") (r "^0.6.36-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.36-nightly.0") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.36-nightly.0") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.36-nightly.0") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0cms1h3r3bdx4nghxypcqx4mmwn102jb9z73n93nilsxx2vxkiwz") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

(define-public crate-els-0.1.48-nightly.1 (c (n "els") (v "0.1.48-nightly.1") (d (list (d (n "erg_common") (r "^0.6.36-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.36-nightly.1") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.36-nightly.1") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.36-nightly.1") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1qzlpnzwbwvqklalrh8z94mqfw7gj7qk53hdgip202abrlqbkma6") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

(define-public crate-els-0.1.48-nightly.2 (c (n "els") (v "0.1.48-nightly.2") (d (list (d (n "erg_common") (r "^0.6.36-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.36-nightly.2") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.36-nightly.2") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.36-nightly.2") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "0pnmwr6zq2pyakqywc9rbqjbg2p4c38b5rg8y7qa75l9qkyhq5ni") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

(define-public crate-els-0.1.48 (c (n "els") (v "0.1.48") (d (list (d (n "erg_common") (r "^0.6.36") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.36") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.36") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.36") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "1x8d7ha2ybid9z7vdkbrpdpjn8j23b0a11h0nvx6a3irn6gps08j") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

(define-public crate-els-0.1.49 (c (n "els") (v "0.1.49") (d (list (d (n "erg_common") (r "^0.6.37") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_compiler") (r "^0.6.37") (f (quote ("els"))) (d #t) (k 0)) (d (n "erg_linter") (r "^0.6.37") (o #t) (d #t) (k 0)) (d (n "erg_proc_macros") (r "^0.6.37") (d #t) (k 2)) (d (n "lsp-types") (r "^0.93.2") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "molc") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)))) (h "09w47vqd59n2dpc89xr4kbyfix5fxmxd53wxx47avnjdjgsxzq10") (f (quote (("unicode" "erg_common/unicode" "erg_compiler/unicode") ("traditional_chinese" "erg_common/traditional_chinese" "erg_compiler/traditional_chinese") ("simplified_chinese" "erg_common/simplified_chinese" "erg_compiler/simplified_chinese") ("py_compat" "erg_compiler/py_compat") ("pretty" "erg_common/pretty" "erg_compiler/pretty") ("large_thread" "erg_common/large_thread" "erg_compiler/large_thread") ("japanese" "erg_common/japanese" "erg_compiler/japanese") ("experimental" "erg_common/experimental" "erg_compiler/experimental") ("debug" "erg_common/debug" "erg_compiler/debug" "molc/debug") ("backtrace" "erg_common/backtrace" "molc/debug")))) (s 2) (e (quote (("lint" "dep:erg_linter"))))))

