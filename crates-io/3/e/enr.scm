(define-module (crates-io #{3}# e enr) #:use-module (crates-io))

(define-public crate-enr-0.1.0-alpha (c (n "enr") (v "0.1.0-alpha") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)))) (h "0dh9xxfnl1fgifdlfayr5pc6vscrcbbysn7jva7nnk0a8701xrhb") (f (quote (("libp2p" "libp2p-core"))))))

(define-public crate-enr-0.1.0-alpha-1 (c (n "enr") (v "0.1.0-alpha-1") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)))) (h "1bj8kszxr2d2wmf9dxwhgkhg5g2m70c858f5is5rxyrl1c1lw623") (f (quote (("libp2p" "libp2p-core")))) (y #t)))

(define-public crate-enr-0.1.0-alpha.2 (c (n "enr") (v "0.1.0-alpha.2") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rlp") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0ylv0ixwmjcx2xs180vrrja9r7x9vq25g53xhzsv5k3bz9skcqjy") (f (quote (("libp2p" "libp2p-core") ("ed25519" "ed25519-dalek") ("default" "serde"))))))

(define-public crate-enr-0.1.0-alpha.3 (c (n "enr") (v "0.1.0-alpha.3") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1h47wa01j45bicxzpxqim9kcsavsc4r51l62xj0y926yc01214sq") (f (quote (("libp2p" "libp2p-core") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.0-alpha.4 (c (n "enr") (v "0.1.0-alpha.4") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1a2yny0yw5fa5zy52jb838bl7lgvjafickxc507hhh3fxb15l35g") (f (quote (("rust-secp256k1" "c-secp256k1") ("libp2p" "libp2p-core") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.0-alpha.5 (c (n "enr") (v "0.1.0-alpha.5") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1rslzdv2n267zl4vpjqql8kv8qmh9j2vmdfp63rkmihkryclcsj8") (f (quote (("rust-secp256k1" "c-secp256k1") ("libp2p" "libp2p-core") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.0-alpha.6 (c (n "enr") (v "0.1.0-alpha.6") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "13m5ar093ww39kkfs83pr0b17p4ci0bhd3h4spzy6h8wkbiwim55") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.0-alpha.7 (c (n "enr") (v "0.1.0-alpha.7") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0d0kmwq67p8xv3916h89gkmfwm8kp4xq3nsd4y3pgw66xvs2cv16") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.0 (c (n "enr") (v "0.1.0") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "04qyg19z7aq1zk09jayvac0v8200ns0hz76q8kp8xmqvryyd2g6a") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.1 (c (n "enr") (v "0.1.1") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "05qydnkfrpbkq9rcp6c4djfhxjq21xwxs02307bx5l2bs2acrq8x") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.2 (c (n "enr") (v "0.1.2") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1vhmnv0mv1h2pi6wlqz7smimkcda24ngnpy0f800hp462i5dcy0w") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.1.3 (c (n "enr") (v "0.1.3") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ecdsa") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256-crate") (r "^0.4") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0) (p "k256")) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "11m5c17vvjls9p7ak2rj98wj0fg5dw66fl876pm76ijkai47n4x3") (f (quote (("rust-secp256k1" "c-secp256k1") ("k256" "k256-crate" "ecdsa" "sha3") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.2.0 (c (n "enr") (v "0.2.0") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ecdsa") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256-crate") (r "^0.4") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0) (p "k256")) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1l434yp0n9a211vg2xzzjwh2p1kpj3w94b2f1w2y2qw9484rf9h7") (f (quote (("rust-secp256k1" "c-secp256k1") ("k256" "k256-crate" "ecdsa" "sha3") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.2.1 (c (n "enr") (v "0.2.1") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.17.2") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.17.2") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ecdsa") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256-crate") (r "^0.5") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0) (p "k256")) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0c2rlbfwhr5zbnqn3ivfqcgi39bd47h59xdpvili8i4f7cpjxiyc") (f (quote (("rust-secp256k1" "c-secp256k1") ("k256" "k256-crate" "ecdsa" "sha3") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.3.0 (c (n "enr") (v "0.3.0") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.19") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.19") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256-crate") (r "^0.5") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0) (p "k256")) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "08af2nlm2g55jqs73c3bzrjg5nl4az20579rv5v7bbq9grix8rvq") (f (quote (("rust-secp256k1" "c-secp256k1") ("k256" "k256-crate") ("ed25519" "ed25519-dalek") ("default" "serde" "libsecp256k1"))))))

(define-public crate-enr-0.4.0 (c (n "enr") (v "0.4.0") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.19") (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.19") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1i74401pf51ayy3698nid4chhws1qx55y1ymp6pc46nbwqbr9jh8") (f (quote (("rust-secp256k1" "c-secp256k1") ("libsecp256" "libsecp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.5.0 (c (n "enr") (v "0.5.0") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.20") (f (quote ("global-context"))) (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.20") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "06vsdp88knridryl88fb4la3f1cagn1m9fbqxxm4cf2n52y3fhi6") (f (quote (("rust-secp256k1" "c-secp256k1") ("libsecp256" "libsecp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.5.1 (c (n "enr") (v "0.5.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.20") (f (quote ("global-context"))) (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.20") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.8") (f (quote ("ecdsa" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_07") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1k8vzk58fjh7crpv1g4579wl2z64c5vzih6991mmiywb6ahnk640") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.6.0 (c (n "enr") (v "0.6.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "c-secp256k1") (r "^0.20") (f (quote ("global-context"))) (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "c-secp256k1") (r "^0.20") (f (quote ("rand-std"))) (d #t) (k 2) (p "secp256k1")) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.8") (f (quote ("ecdsa" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_07") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "07la2qgw42pmpb1xmcz9qf21ni6796yhpp5sj7j13640ipjh9m3q") (f (quote (("rust-secp256k1" "c-secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.6.1 (c (n "enr") (v "0.6.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_07") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.23") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.23") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0ga85gfz5pga4ms0awsd28qwdz0fjn2ggyq1vlsgcia1pgv0mcqx") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.6.2 (c (n "enr") (v "0.6.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_07") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0mpa61zsma9dpl9g5hljmj75lhs7zr8ynnapdmi90mwix05hmyi6") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.7.0 (c (n "enr") (v "0.7.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_07") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1bgb18zd836sksk6gb1w525sci5jcgid6971x3f5ykahq9gpwaj9") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.8.0 (c (n "enr") (v "0.8.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.26") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.26") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1m1r5wrcc7khiis8q9ih5a5004p498pfp22riz9yrb2ndyzmykgb") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.8.1 (c (n "enr") (v "0.8.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "05lixjlavqnxd5ax6zwwlqbxxl54mpjyks3awqj2hbdj5gbsqmng") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.9.0 (c (n "enr") (v "0.9.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-hex") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "03f28bkbkvhhbsvms4vcw3c50r39y1md20jw4kz9j7vc2jnb5rqb") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-hex"))))))

(define-public crate-enr-0.9.1 (c (n "enr") (v "0.9.1") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "0nyh07vnfd3ahd3cj5larc82mdjkbwi6y8a5v0fwgnygdv0bb0gy") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.10.0 (c (n "enr") (v "0.10.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)))) (h "1r7p8zb4y95n5d0nfky3dws77i2jqmr9fj7br3559y82dv2qsg9a") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.10.1 (c (n "enr") (v "0.10.1") (d (list (d (n "alloy-rlp") (r "^0.3.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "1h04gxjf1aizx97pmzqw7drakfy5mgj64l6ibvm3kp2rraxfmhrd") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256")))) (y #t)))

(define-public crate-enr-0.11.0 (c (n "enr") (v "0.11.0") (d (list (d (n "alloy-rlp") (r "^0.3.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "1nfz54x2s6padng6rsijm0jbk9zbh2fzlr3p0wgw0xsflj4jsj72") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.11.1 (c (n "enr") (v "0.11.1") (d (list (d (n "alloy-rlp") (r "^0.3.4") (d #t) (k 0)) (d (n "alloy-rlp") (r "^0.3.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "02528zcx4rir565qn3v470sdcg3ygdzr0szp509x66hy0yl963j0") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

(define-public crate-enr-0.12.0 (c (n "enr") (v "0.12.0") (d (list (d (n "alloy-rlp") (r "^0.3.4") (d #t) (k 0)) (d (n "alloy-rlp") (r "^0.3.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("global-context"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.28") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "03yfa6jxyy6lhry1flcyxwadw21m2241i4yhj8fha5fxkjw5ddja") (f (quote (("rust-secp256k1" "secp256k1") ("ed25519" "ed25519-dalek") ("default" "serde" "k256"))))))

