(define-module (crates-io #{3}# a ara) #:use-module (crates-io))

(define-public crate-ara-0.1.0 (c (n "ara") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "^0.10.0") (d #t) (k 0)) (d (n "oorandom") (r "^11.1.2") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.18") (d #t) (k 0)) (d (n "tracing-error") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "04ahwmvg2a0h2rxhh18pmrpih8rrpk0vzxn8gvzvza22q5h2c1qs")))

(define-public crate-ara-0.1.1 (c (n "ara") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "^0.10.0") (d #t) (k 0)) (d (n "oorandom") (r "^11.1.2") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.18") (d #t) (k 0)) (d (n "tracing-error") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "0dnwh67gq0zlcdbkygrnxcm5lqlqwczm96pkr1dnbbcnsfrn5349")))

