(define-module (crates-io #{3}# a ata) #:use-module (crates-io))

(define-public crate-ata-3.1.0 (c (n "ata") (v "3.1.0") (d (list (d (n "ansi-colors") (r "^0.3.0") (d #t) (k 0)) (d (n "async-openai") (r "^0.16.2") (f (quote ("native-tls-vendored"))) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.9.1") (d #t) (k 0)) (d (n "bevy_utils") (r "^0.9.1") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("io"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.6") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rustyline") (r "^10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "full"))) (d #t) (k 0)) (d (n "toml") (r "^0.6") (d #t) (k 0)))) (h "0gp20iwjdrw9vadxr1w5ri6d1bd72nx2rz09xwly20hiqh0gpqiz")))

