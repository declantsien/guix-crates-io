(define-module (crates-io #{3}# a akd) #:use-module (crates-io))

(define-public crate-akd-0.1.0 (c (n "akd") (v "0.1.0") (d (list (d (n "actix-rt") (r "^2") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "evmap") (r "^10") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mysql") (r "^21") (d #t) (k 0)) (d (n "mysql_async") (r "^0.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "0r18pkz919v1f6y57gvsi8frq4bsbdaj778cbb9gl2xb9nhpf9jr") (f (quote (("bench"))))))

(define-public crate-akd-0.2.0 (c (n "akd") (v "0.2.0") (d (list (d (n "actix-rt") (r "^2") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "evmap") (r "^10") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mysql_async") (r "^0.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "0ad4sa7v89qgnpshdxav69xdxnlr3hs41j5760qbvjxsw6vay04x") (f (quote (("bench"))))))

(define-public crate-akd-0.3.0 (c (n "akd") (v "0.3.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "1v5i5x1lgjpk6z7wp2ck24iwpcip78h37nvfqrfi8rxmgb3si3q0") (f (quote (("bench"))))))

(define-public crate-akd-0.3.1 (c (n "akd") (v "0.3.1") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "0r31xdanpfkla3kgm8zkmqgsfjm0cs55zq8p80xp81m76x05d0hs") (f (quote (("bench"))))))

(define-public crate-akd-0.3.2 (c (n "akd") (v "0.3.2") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "0vc10s25fvvv7ki943n40c34nrnx04hpqs32b0pglrfj8gf4dnm0") (f (quote (("bench"))))))

(define-public crate-akd-0.3.3 (c (n "akd") (v "0.3.3") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.1") (d #t) (k 0)) (d (n "winter-math") (r "^0.1") (d #t) (k 0)) (d (n "winter-utils") (r "^0.1") (d #t) (k 0)))) (h "1f3pg4kn0giyfyc9psi2b2cwvi29pfpvd5c791idw6j068z2m34b") (f (quote (("bench"))))))

(define-public crate-akd-0.3.4 (c (n "akd") (v "0.3.4") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1jcbgyhissqkqah16wq1lnfm27hwrp945z7v1i70c3ghlkyhm96k") (f (quote (("bench"))))))

(define-public crate-akd-0.3.5 (c (n "akd") (v "0.3.5") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "08digdgbcs19gbw3p15zlq3m4ymxdsz7mksvwbl83wrfmbpnlz2p") (f (quote (("bench"))))))

(define-public crate-akd-0.3.6 (c (n "akd") (v "0.3.6") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0nzrhwszwmfv8djhyfdxf3v0j2h0kj50bngd39xax9whdbjs9x8z") (f (quote (("bench"))))))

(define-public crate-akd-0.3.7 (c (n "akd") (v "0.3.7") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "17y3q774yd64haff81rq9s3vl432gwca40i962h542v1y0k6m5z3") (f (quote (("bench"))))))

(define-public crate-akd-0.3.7-beta.0 (c (n "akd") (v "0.3.7-beta.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1ngvnzxnvwhcf7v3pwvc0k9j281iac06ppb9lbqjbhcx7mlja7mx") (f (quote (("bench"))))))

(define-public crate-akd-0.3.7-beta.1 (c (n "akd") (v "0.3.7-beta.1") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "008pasq4blgiqmfmffc1a1hg13bkd9x1dscyfq54jxwzwri0bsfk") (f (quote (("bench"))))))

(define-public crate-akd-0.3.8 (c (n "akd") (v "0.3.8") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0fmh6gvwmvrdqmy530m5acikfhpg798z0ibjr7cifrl9awll099b") (f (quote (("bench"))))))

(define-public crate-akd-0.4.0 (c (n "akd") (v "0.4.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0sh05lcmc8p53ns4k84wg13prkdyjsin9zzfsmkbw3wa20n22kmr") (f (quote (("bench"))))))

(define-public crate-akd-0.5.0 (c (n "akd") (v "0.5.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "17k9darqy33caxflhmw1qilqzlkq6zqjghsxqakwkmq1j0myzlv4") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("public-tests" "rand" "bincode" "serde" "colored" "once_cell" "ed25519-dalek/serde") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.5.2 (c (n "akd") (v "0.5.2") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0n01qjsrc5qndbaadcq0r9hymr1c8b1wqni3izzzkvq3vlhfd1qv") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("public-tests" "rand" "bincode" "serde" "colored" "once_cell" "ed25519-dalek/serde") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.5.4 (c (n "akd") (v "0.5.4") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0bix1qyk1nf736sz9k95n5gmdlcvh4q6qkp0bsnx7g3pwgwnd0fk") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.5.5 (c (n "akd") (v "0.5.5") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1mq28nakas9cl1p3djf0d2k721f8vvb9f298fj55ldly8iqb6jir") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.6.1 (c (n "akd") (v "0.6.1") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1276b0fbr4v92v869q35sp4xgm7g02rqja1lmmsclz5fcnvcj3rf") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.6.2 (c (n "akd") (v "0.6.2") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "10j100mflb29lrdsaq8vg2rvf48k07m815blcaryi1198478vk9r") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.1 (c (n "akd") (v "0.7.1") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=2.8.1") (o #t) (d #t) (k 0)) (d (n "protoc") (r "=2.8.1") (d #t) (k 1)) (d (n "protoc-rust") (r "=2.8.1") (d #t) (k 1)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0n4zn6s6vqrshgr2q5185dsvnzqsw9wzq7yh62nqwrfh7i4p3660") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.3 (c (n "akd") (v "0.7.3") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1lc0vd4mag8lc0avh8f7qgmicnvzafxzv4mgfksmsq9l3q6xa9z1") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.4 (c (n "akd") (v "0.7.4") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0v14z1zrc35x2mnz3vapns6g6nlpx0a9m83nvhq15ywchisng1pf") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.5 (c (n "akd") (v "0.7.5") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1xwm9dka3w91882igvfshxsfsm0pvpsaga1g9z3qwibh6bl3iijn") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.6 (c (n "akd") (v "0.7.6") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "0djv7w7qx32gnd877rpjqrb5qhaxgwqhzq18cxidx3dlsmyv8vs8") (f (quote (("vrf" "curve25519-dalek" "ed25519-dalek") ("serde_serialization" "serde" "ed25519-dalek/serde") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default" "vrf") ("bench" "public-tests"))))))

(define-public crate-akd-0.7.7 (c (n "akd") (v "0.7.7") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "winter-crypto") (r "^0.2") (d #t) (k 0)) (d (n "winter-math") (r "^0.2") (d #t) (k 0)) (d (n "winter-utils") (r "^0.2") (d #t) (k 0)))) (h "1ibww7qxkvhcb0xwqvn1vlv25sa7ygbcyjfcq23rzka8a155gjv3") (f (quote (("serde_serialization" "serde" "ed25519-dalek/serde") ("runtime_metrics") ("public_auditing" "protobuf" "thiserror") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization") ("default") ("bench" "public-tests"))))))

(define-public crate-akd-0.8.0 (c (n "akd") (v "0.8.0") (d (list (d (n "akd_core") (r "^0.8.0") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1m41ipgcj7s2p72i67dcs1zfa8kyadf1viyg7xc6w2jv1s352fhy") (f (quote (("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("default" "blake3" "public_auditing") ("blake3" "akd_core/blake3") ("bench" "public-tests"))))))

(define-public crate-akd-0.8.2 (c (n "akd") (v "0.8.2") (d (list (d (n "akd") (r "^0.8.0") (f (quote ("public-tests"))) (d #t) (k 2)) (d (n "akd_core") (r "^0.8.0") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1wwhs28dpf8znx836905rpqhpr8v9195c2kg6m75dv5ibm3abgsc") (f (quote (("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("default" "blake3" "public_auditing") ("blake3" "akd_core/blake3") ("bench" "public-tests"))))))

(define-public crate-akd-0.8.4 (c (n "akd") (v "0.8.4") (d (list (d (n "akd_core") (r "^0.8.4") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "065bh5b7ri1034rjxdz4bk8wx6qmym5x8ldlwn7rir34c2mfwy1b") (f (quote (("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.8.5 (c (n "akd") (v "0.8.5") (d (list (d (n "akd_core") (r "^0.8.5") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0yrn7qpijcdws2lhvzrh699mxrjah6ba75b9qwbv553ac4k4q6ny") (f (quote (("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.8.6 (c (n "akd") (v "0.8.6") (d (list (d (n "akd_core") (r "^0.8.5") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "061ysg34izfb4jxm69n4majv7bj4596kh4lb8ad91zakqbc5lldq") (f (quote (("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.8.7 (c (n "akd") (v "0.8.7") (d (list (d (n "akd_core") (r "^0.8.7") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1y3md2s9k53z6i7b3j7liw2lbspp2y00qcs2jvsh3f68zjc90l8m") (f (quote (("slow_internal_db") ("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.8.8 (c (n "akd") (v "0.8.8") (d (list (d (n "akd_core") (r "^0.8.7") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1i88ckqxh7d03s7qrqha66q619v6dqyhwi5y9izpk22k5nipvlx7") (f (quote (("slow_internal_db") ("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.8.9 (c (n "akd") (v "0.8.9") (d (list (d (n "akd_core") (r "^0.8.9") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "11p9grc6ivfzs6ml5hnj3xak9ga5a9674dfvbkq6hry466rg44kq") (f (quote (("slow_internal_db") ("sha512_256" "akd_core/sha512_256") ("sha512" "akd_core/sha512") ("sha3_512" "akd_core/sha3_512") ("sha3_256" "akd_core/sha3_256") ("sha256" "akd_core/sha256") ("serde_serialization" "serde" "ed25519-dalek/serde" "akd_core/serde_serialization") ("runtime_metrics") ("public_auditing" "protobuf" "akd_core/protobuf") ("public-tests" "rand" "bincode" "colored" "once_cell" "serde_serialization" "akd_core/rand") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("default" "blake3" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload") ("blake3" "akd_core/blake3") ("bench" "blake3" "public-tests" "tokio/rt-multi-thread"))))))

(define-public crate-akd-0.9.0 (c (n "akd") (v "0.9.0") (d (list (d (n "akd_core") (r "^0.9.0") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "196m7ij3swkl6bhyryz8jzp7cdiiiq1lcaxv7q666plkavykqgcj") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

(define-public crate-akd-0.10.0 (c (n "akd") (v "0.10.0") (d (list (d (n "akd_core") (r "^0.10.0") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "15sxpczjlir3was3363sv2jqkfb4xaifrwbk6i905givwmba73bi") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

(define-public crate-akd-0.11.0 (c (n "akd") (v "0.11.0") (d (list (d (n "akd_core") (r "^0.11.0") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1djk5yq5kslv3x0b1n5x66mmi24ghsfcqz6r6gjds437sqq3cvb3") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

(define-public crate-akd-0.12.0-pre.2 (c (n "akd") (v "0.12.0-pre.2") (d (list (d (n "akd_core") (r "^0.12.0-pre.2") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "07p9aqk32maz0ypsp5ss9z38hpfynqpfhv51wnybf10jq6l3az48") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

(define-public crate-akd-0.12.0-pre.3 (c (n "akd") (v "0.12.0-pre.3") (d (list (d (n "akd_core") (r "^0.12.0-pre.3") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1ddjzaymivzwkybzhvrg89livmq41d918alf8kq3nwqh5qh1rkpz") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

(define-public crate-akd-0.12.0-pre.4 (c (n "akd") (v "0.12.0-pre.4") (d (list (d (n "akd_core") (r "^0.12.0-pre.4") (f (quote ("vrf"))) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "protobuf") (r "^3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0npn3yi5sm6cn2j4qxw47naidmhws2708z5hvsbqmizhgzprcdy7") (f (quote (("whatsapp_v1" "akd_core/whatsapp_v1") ("slow_internal_db") ("runtime_metrics") ("preload_history") ("parallel_vrf" "akd_core/parallel_vrf") ("parallel_insert") ("greedy_lookup_preload") ("experimental" "akd_core/experimental") ("default" "public_auditing" "parallel_vrf" "parallel_insert" "preload_history" "greedy_lookup_preload" "experimental") ("bench" "experimental" "public_tests" "tokio/rt-multi-thread")))) (s 2) (e (quote (("serde_serialization" "dep:serde" "akd_core/serde_serialization") ("public_tests" "dep:rand" "dep:colored" "dep:once_cell" "serde_serialization" "akd_core/public_tests" "akd_core/rand" "dep:paste") ("public_auditing" "dep:protobuf" "akd_core/protobuf"))))))

