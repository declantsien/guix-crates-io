(define-module (crates-io #{3}# a acl) #:use-module (crates-io))

(define-public crate-acl-0.0.0 (c (n "acl") (v "0.0.0") (h "1qnpb92x8rmgckbjs75lrk38iw9xfkxfbklvyjl743rxh11cl814") (y #t)))

(define-public crate-acl-0.0.1 (c (n "acl") (v "0.0.1") (d (list (d (n "chacl") (r "^0.0.1") (o #t) (d #t) (k 0) (p "uu_chacl")) (d (n "clap") (r "^4.4") (f (quote ("wrap_help" "cargo"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.20") (d #t) (k 0)) (d (n "getfacl") (r "^0.0.1") (o #t) (d #t) (k 0) (p "uu_getfacl")) (d (n "libc") (r "^0.2.153") (d #t) (k 2)) (d (n "phf") (r "^0.11.2") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11.2") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "procfs") (r "^0.16") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 2)) (d (n "rlimit") (r "^0.10.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 2)) (d (n "setfacl") (r "^0.0.1") (o #t) (d #t) (k 0) (p "uu_setfacl")) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.1") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "uucore") (r "^0.0.24") (d #t) (k 0)) (d (n "uucore") (r "^0.0.24") (f (quote ("entries" "process" "signals"))) (d #t) (k 2)) (d (n "xattr") (r "^1.3.1") (d #t) (k 0)) (d (n "xattr") (r "^1.3.1") (d #t) (t "cfg(unix)") (k 2)))) (h "0zdnzzf2zjasiqkcx98jxly6czibfz2hz759z94mdz62p26vlqaq") (f (quote (("uudoc") ("feat_common_core" "chacl" "getfacl" "setfacl") ("default" "feat_common_core")))) (y #t) (r "1.70.0")))

