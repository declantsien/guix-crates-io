(define-module (crates-io #{3}# m mif) #:use-module (crates-io))

(define-public crate-mif-0.1.0 (c (n "mif") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1zxlwy74lpv02d8gv2asxvm58zzapzkvz577mdxxkjfzzrzcfzhd") (f (quote (("default" "bin") ("bin" "clap" "toml"))))))

(define-public crate-mif-0.1.1 (c (n "mif") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0a7w6kxkydyrpp87y4skv17n32afvx5cadgrdvqbb1642fbfn0cq") (f (quote (("default" "cli") ("cli" "clap" "toml"))))))

(define-public crate-mif-0.2.0 (c (n "mif") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "15sjqa3sdglld79yyfaid6iymjvslglcp9yk7vqix4zcy61ny0wz") (f (quote (("default" "bin") ("cli" "indexmap" "serde" "toml") ("bin" "cli" "clap"))))))

(define-public crate-mif-0.2.1 (c (n "mif") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0m1rq7i26ypsnbic3qgplapd9xw2rb13bi5230l1wxn5x391k0zw") (f (quote (("default" "bin") ("cli" "indexmap" "serde" "toml") ("bin" "cli" "clap"))))))

(define-public crate-mif-0.3.0 (c (n "mif") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0pis07hbgc30ddcfb0rvvm0k04j8zpr1v3c7hlm48divzsdyfngb") (f (quote (("default" "bin") ("cli" "anyhow" "indexmap" "serde" "toml") ("bin" "cli" "clap"))))))

