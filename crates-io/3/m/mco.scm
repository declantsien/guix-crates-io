(define-module (crates-io #{3}# m mco) #:use-module (crates-io))

(define-public crate-mco-0.1.37 (c (n "mco") (v "0.1.37") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0zb02br7siclryirfkjabgylqlkrfqz90gsjw2aswvrpc8cchh8x") (y #t)))

(define-public crate-mco-0.1.38 (c (n "mco") (v "0.1.38") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "089vpi7xspnh7qf1s6g33iv3ibh7z5b5dz9p2f56idibsmgpk6j9") (y #t)))

(define-public crate-mco-0.1.39 (c (n "mco") (v "0.1.39") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19b1jp58vqzf4v1gbkddavs7flrvhx8g97yhvmymjjxypfchqb15") (y #t)))

(define-public crate-mco-0.1.40 (c (n "mco") (v "0.1.40") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ns6qcg27ljcyx0w5nq574pwf6372ahxwy8a2x6b8r2n6ms80nc8") (y #t)))

(define-public crate-mco-0.1.41 (c (n "mco") (v "0.1.41") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "181i35ndpr3wgxf0ccmpph8vki1i46glj7sr4i2kvqs00c6g2i1j")))

(define-public crate-mco-0.1.42 (c (n "mco") (v "0.1.42") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0qx28zw666v8l0lhfmgsh74x1jb9f0ik1xpzzp1hxg6absw0l9dn")))

(define-public crate-mco-0.1.43 (c (n "mco") (v "0.1.43") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1kszl9x09rkmbhqnqb4gzifiyr7sd8jgs9cm2n9xs3qv321bq19p")))

(define-public crate-mco-0.1.44 (c (n "mco") (v "0.1.44") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mco-gen") (r "^0.1") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1m9985dnnwcmnjvpd6rbpnrj7qz0gfi9izkg4kylhscsafr3qn4s")))

(define-public crate-mco-0.1.45 (c (n "mco") (v "0.1.45") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "13qz0n5b97ji3dkiql20h8pl9v1vs9j4hk22fgyxmjx2109jrcjn")))

(define-public crate-mco-0.1.46 (c (n "mco") (v "0.1.46") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miow") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "09cvzml5mhw8n6nk1xwms0f4bmkcs744p2r8bjnnxx7q3p1ci1vg")))

(define-public crate-mco-0.1.47 (c (n "mco") (v "0.1.47") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miow") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.27") (f (quote ("event"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_NetworkManagement_IpHelper" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Pipes" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_Time"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ffyb4k9zyv0hlzjnc9qkcmargbr5g285w94sljqv2zqfinazvrk")))

(define-public crate-mco-0.1.48 (c (n "mco") (v "0.1.48") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "generator") (r "^0.7") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miow") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.27") (f (quote ("event"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "parsing" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_NetworkManagement_IpHelper" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Pipes" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_Time"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1q3i90svjdps3qbrqgfh4k2ipcag7k4sqyvd8fz0wlkpa0dbsbi5")))

