(define-module (crates-io #{3}# j jaq) #:use-module (crates-io))

(define-public crate-jaq-0.1.0 (c (n "jaq") (v "0.1.0") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1aas9x4h25gqa9rphna1l0hnqmym13dh15cb5pi17a182xd0qpaw")))

(define-public crate-jaq-0.5.0 (c (n "jaq") (v "0.5.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.5") (d #t) (k 0)) (d (n "jaq-std") (r "^0.5") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.28") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)))) (h "1h9dks9cizn6xxacyysfwvl7c78i3y9s4dwc0n90wqvdmq4ydh8c")))

(define-public crate-jaq-0.6.0 (c (n "jaq") (v "0.6.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.6") (d #t) (k 0)) (d (n "jaq-std") (r "^0.6") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.28") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)))) (h "11w9cskpn2pbb5q5i2qzgd5794na2x5453321rjvsw8mvnnapgmf")))

(define-public crate-jaq-0.7.0 (c (n "jaq") (v "0.7.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.7.0") (d #t) (k 0)) (d (n "jaq-std") (r "^0.7.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0gr3rwpi1x8i60dymvabpsf5r3bbzqrghs2xyz1ldvczr6yvmbmh") (r "1.61")))

(define-public crate-jaq-0.8.0 (c (n "jaq") (v "0.8.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.8.0") (d #t) (k 0)) (d (n "jaq-std") (r "^0.8.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "066vrp9a3s62rabj644c551jivd6f49l88h6bxmhlq6r02vy30i7") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-0.8.1 (c (n "jaq") (v "0.8.1") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (k 0)) (d (n "jaq-core") (r "^0.8.1") (d #t) (k 0)) (d (n "jaq-std") (r "^0.8.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "04qp6i4z515zn5f810c019p0h9cg2wr0c3fb2w1x83iwms3dk9m1") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-0.8.2 (c (n "jaq") (v "0.8.2") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (k 0)) (d (n "jaq-core") (r "^0.8.2") (d #t) (k 0)) (d (n "jaq-std") (r "^0.8.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1nl217bm2a7bz06p2mnswfkqwa9ylz7xlr3mgmkzimbc33xwjqii") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-0.9.0 (c (n "jaq") (v "0.9.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^2.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (k 0)) (d (n "jaq-core") (r "^0.9.0") (d #t) (k 0)) (d (n "jaq-std") (r "^0.9.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1lpc6ln9kssby4vwawxbpglq1y46lac58vpq2a9mqb3ydic4qahq") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-0.10.0 (c (n "jaq") (v "0.10.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.10.0") (d #t) (k 0)) (d (n "jaq-std") (r "^0.10.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0nln34c2lwv59xzpg6axpx8a8a0p6ad9hr280qmbrmaavr1nxag0") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.0.0-alpha (c (n "jaq") (v "1.0.0-alpha") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0-alpha") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0-alpha") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1zxkrxpw2ihclbk4p51m9a63h7aif47a9mbzchjskkp93jg9pkvc") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-0.10.1 (c (n "jaq") (v "0.10.1") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^0.10.1") (d #t) (k 0)) (d (n "jaq-std") (r "^0.10.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0sgd865l9ygbycxkfywf5w2768kgcxdwr3ym9199b55fl9l52xjh") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.0.0-beta (c (n "jaq") (v "1.0.0-beta") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1ykv3pc2kjqwcfi8xxhjzyy646scycyf9x3c01aczy3faiqxa58x") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.0.0 (c (n "jaq") (v "1.0.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.0.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1z2imbnf27sswhsfb4bs0vdbz3na8gkb48pyvmjz4z44pijf3zhm") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.1.0 (c (n "jaq") (v "1.1.0") (d (list (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.1.1") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1ghmnaf471nmkbacdmn4wmzxcackfgbab4ljszvl0g6w7ng91cr1") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.1.1 (c (n "jaq") (v "1.1.1") (d (list (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.1.1") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0dl2fh0cfqq1cs8f7n9fl6qaz2q3m39i5rivl1j6z3aszg0j5spq") (f (quote (("default" "mimalloc"))))))

(define-public crate-jaq-1.1.2 (c (n "jaq") (v "1.1.2") (d (list (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.1.1") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0m16p4achdl6bgl6wmxp7rm4hcshq6nfi9csdaa05986np700xic") (f (quote (("default" "mimalloc")))) (r "1.64")))

(define-public crate-jaq-1.2.0 (c (n "jaq") (v "1.2.0") (d (list (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "16fx7219rnp8s7lzgnhfh3mdwmvx26y8lj4mll60pya2r33s6zrx") (f (quote (("default" "mimalloc")))) (r "1.64")))

(define-public crate-jaq-1.3.0 (c (n "jaq") (v "1.3.0") (d (list (d (n "ariadne") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "0pc2wcd0nq8am7vm4pph0pkphia621zlnq2574sag9l91my4zsrp") (f (quote (("default" "mimalloc")))) (r "1.64")))

(define-public crate-jaq-1.4.0 (c (n "jaq") (v "1.4.0") (d (list (d (n "ariadne") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chumsky") (r "^0.9.0") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored_json") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "hifijson") (r "^0.2.0") (d #t) (k 0)) (d (n "jaq-core") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0") (d #t) (k 0)) (d (n "jaq-std") (r "^1.2.0") (d #t) (k 0)) (d (n "jaq-syn") (r "^1.1.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)))) (h "1fskh2sccjvzcx9z756i7h145bjicy5kzgh4lmag7g4firlhjh2f") (f (quote (("default" "mimalloc")))) (r "1.64")))

