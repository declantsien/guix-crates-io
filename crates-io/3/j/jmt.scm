(define-module (crates-io #{3}# j jmt) #:use-module (crates-io))

(define-public crate-jmt-0.0.0 (c (n "jmt") (v "0.0.0") (h "0kmjxb0k3vqdqwqas8di5d451xzx1aasjccwliykzgrfyjh35y4y")))

(define-public crate-jmt-0.2.0 (c (n "jmt") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ics23") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "19s1rzbaqbldpi1sl5fbbjdg9l2f1h3idpb7gj2390vf7m5izqxs") (f (quote (("default" "ics23"))))))

(define-public crate-jmt-0.3.0 (c (n "jmt") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ics23") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1fi71sj6lsrpakjgfiqh3rba8z8kqhy6nischk632d6y9z6c5vrv") (f (quote (("default" "ics23"))))))

(define-public crate-jmt-0.4.0 (c (n "jmt") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ics23") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "03fa5s920l5r1nfkhxkw8irzywbbmxdrq9qn1l90asaq90nayj7y") (f (quote (("default" "ics23"))))))

(define-public crate-jmt-0.4.2 (c (n "jmt") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "14wfbci604bp0q88czr5jrlkgbp50vc12nv4c1q8fy4x3x3kc5vx") (f (quote (("default" "ics23" "std" "metrics")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("metrics" "std" "dep:prometheus" "dep:once_cell"))))))

(define-public crate-jmt-0.5.0 (c (n "jmt") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "131ivsadg1na8k30vh2ma2j1hf376skvy3ndbdgrn493waz89fad") (f (quote (("default" "ics23" "std" "metrics")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("metrics" "std" "dep:prometheus" "dep:once_cell"))))))

(define-public crate-jmt-0.6.0 (c (n "jmt") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0n3j2rcfzlpfxf7bzmshiw95cc8cnh5c4j4q7j1kncpxvvq058z1") (f (quote (("default" "ics23" "std")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot"))))))

(define-public crate-jmt-0.7.0 (c (n "jmt") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "blake3") (r "^1.4.0") (f (quote ("traits-preview"))) (o #t) (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1pnbm5bwp1r6swsj048pn98n1d12r0yxzqyf49zzf59yq79cajcy") (f (quote (("default" "ics23" "std" "sha2")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("blake3_tests" "dep:blake3"))))))

(define-public crate-jmt-0.8.0 (c (n "jmt") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "blake3") (r "^1.4.0") (f (quote ("traits-preview"))) (o #t) (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1dxkkr3pbw87nav1hvnkrs1afcxdyyzcrh356rh8hlkxkwrwpw93") (f (quote (("default" "ics23" "std" "sha2")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("blake3_tests" "dep:blake3"))))))

(define-public crate-jmt-0.9.0 (c (n "jmt") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "blake3") (r "^1.4.0") (f (quote ("traits-preview"))) (o #t) (d #t) (k 0)) (d (n "borsh") (r "^0.10.0") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0jbqxqmdmbzg447i980af46ms4r7c43ngzih5r4q5zsxlqhhg5f2") (f (quote (("default" "ics23" "std" "sha2")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("blake3_tests" "dep:blake3"))))))

(define-public crate-jmt-0.10.0 (c (n "jmt") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "blake3") (r "^1.4.0") (f (quote ("traits-preview"))) (o #t) (d #t) (k 0)) (d (n "borsh") (r "^1.3.0") (f (quote ("derive" "de_strict_order"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "ics23") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1y4qbg5rzvkaxm4kq0k1jc7p781h6xb3mg9kapvwcd1r60dbz8x9") (f (quote (("migration") ("default" "ics23" "std" "sha2")))) (s 2) (e (quote (("std" "dep:thiserror") ("mocks" "dep:parking_lot") ("blake3_tests" "dep:blake3"))))))

