(define-module (crates-io #{3}# r rmk) #:use-module (crates-io))

(define-public crate-rmk-0.0.0 (c (n "rmk") (v "0.0.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 0)) (d (n "rtt-target") (r "^0.4.0") (d #t) (k 0)) (d (n "stm32h7xx-hal") (r "^0.14.0") (f (quote ("stm32h7b0" "rt" "log-rtt"))) (d #t) (k 0)))) (h "0b4gllg6x69fmpdin3vc7k16y7ypmnzm4wgk4bd3p0xksy269rqj")))

(define-public crate-rmk-0.0.1 (c (n "rmk") (v "0.0.1") (d (list (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "panic-rtt-target") (r "^0.1.2") (f (quote ("cortex-m"))) (d #t) (k 0)) (d (n "rtic") (r "^2.0.1") (f (quote ("thumbv7-backend"))) (d #t) (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick"))) (d #t) (k 0)) (d (n "rtt-target") (r "^0.4.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "18s2y2yjs3hxbyr1ijnz0svc2a4qlmx3i6mql65zlch123clma77")))

(define-public crate-rmk-0.0.2 (c (n "rmk") (v "0.0.2") (d (list (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "0rn5i9qlasxnwrrncyy9370fxfxjdzlkvybzmkci9h660ci0aw9v")))

(define-public crate-rmk-0.0.3 (c (n "rmk") (v "0.0.3") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "packed_struct") (r "^0.10.1") (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "15gxmyn9bixk9ygw0xa7s2mci265bwb7h4dsjnn215kqdi9ylhy6") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.0.4 (c (n "rmk") (v "0.0.4") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "packed_struct") (r "^0.10.1") (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "1ccg5da7r2x61w3ip2i7268v77gdij1sm2lz4sg0h5r8gjg7s57b") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.0.5 (c (n "rmk") (v "0.0.5") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "packed_struct") (r "^0.10.1") (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "0lhfg8hncsygabivj8fw42sxvzif1xvphi5qbzwb2p5cr9p3h7w7") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.0.6 (c (n "rmk") (v "0.0.6") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "embedded-alloc") (r "^0.5.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)) (d (n "packed_struct") (r "^0.10.1") (k 0)) (d (n "rtic-monotonics") (r "^1.0.0") (f (quote ("cortex-m-systick" "systick-10khz"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "1x945hxk3384imz13x4y05ldxccr9bmnbxkdw7m3mpib99b1xaw3") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.0 (c (n "rmk") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1.0") (f (quote ("usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "1yqgn41m7c8xas7m4v1yz3pbxqrv4hkbj4z7c7445gmq1ww8spy9") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.1 (c (n "rmk") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1.0") (f (quote ("usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "1r15brkz0acyjbjnaw6w427j7z3hxag9j1q96cliryipcd3lwq91") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.2 (c (n "rmk") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "embassy-futures") (r "^0.1.0") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1.0") (f (quote ("usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (d #t) (k 0)))) (h "0rkv8v2f4fykvgvsgzaivm4pmdi9bjzr8zzl0dcwi9b1yc9xf9p7") (f (quote (("eeprom") ("default" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.3 (c (n "rmk") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1sy0wgp917vikg8dinmlc0jv5g1c72ziw85vk8br9byipq8zpq81") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.4 (c (n "rmk") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "0vd75pbqcs8ppjc45j86x5dfajqicjk9l60j294wcpzhprs2dxla") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row"))))))

(define-public crate-rmk-0.1.5 (c (n "rmk") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-alloc") (r "^0.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "nrf52840" "s140" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1pb6nanxyyvb8ghrzzynqvvi4hx20bgzqxr0ixjgm7wddwf0q149") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (s 2) (e (quote (("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.6 (c (n "rmk") (v "0.1.6") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "0csn0qj3vywcl1628vjl0v2nfwdvia9qkdf6kdi8i9a5mm6kgjxg") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (y #t) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.7 (c (n "rmk") (v "0.1.7") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1pxqkmn41zdbcppv5wfqzkjz8qr1pjlcd440ylxis9md29ighpwj") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (y #t) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.8 (c (n "rmk") (v "0.1.8") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1vxmcjd5fqplpxj30fr6wlvappfpiq2dxbfwsy169hk6vzkwd3mn") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (y #t) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.9 (c (n "rmk") (v "0.1.9") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1ch7ghxgr78r9kf4xafh6nfyxdgzwnfd86iigrhhmqih1vf0iyhi") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (y #t) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.10 (c (n "rmk") (v "0.1.10") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1cadyb07q1jv77i4ggyj79m2l4jswifayvig7xq0pgnih65qpyj0") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (y #t) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.11 (c (n "rmk") (v "0.1.11") (d (list (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "packed_struct") (r "^0.10") (k 0)) (d (n "sequential-storage") (r "^1.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "107xcqg03gsfxkha3fs27md8ydhg26ym9fldgidr8cr4bl5b38s8") (f (quote (("eeprom") ("default" "eeprom" "col2row") ("col2row")))) (s 2) (e (quote (("nrf52840_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("ble" "dep:nrf-softdevice"))))))

(define-public crate-rmk-0.1.13 (c (n "rmk") (v "0.1.13") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "0wgix1s6gy2n58xvfb8q8h1j6ghrk3l2hxhiqqpbz1myrhglhv02") (f (quote (("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.14 (c (n "rmk") (v "0.1.14") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.1") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.6.1") (f (quote ("defmt"))) (d #t) (k 0)))) (h "14flfihjv7xk1xya25p38szgk8dchw1mchs9wz1cic47xvxrxjh2") (f (quote (("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.15 (c (n "rmk") (v "0.1.15") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.2") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "ble-central" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.7.0") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1bjqspiyp6x7b8vs6wcz1qpb8y5ffrcbh9yvn6ygwqw4xyppp4qq") (f (quote (("rapid_debouncer") ("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row" "rapid_debouncer") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.16 (c (n "rmk") (v "0.1.16") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.6") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.2") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1.2") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.7.0") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1hh2p970f0xam9ffv45n9gr8mvy6rwnnjnrba62z4wq6qrlm3iap") (f (quote (("rapid_debouncer") ("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row" "rapid_debouncer") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.17 (c (n "rmk") (v "0.1.17") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.6") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.2") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1.2") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.7.0") (f (quote ("defmt"))) (d #t) (k 0)))) (h "1rm3pml3wypm8k3qvax4s0qgiswx3192dbw8czsy2lcrid57l9ka") (f (quote (("rapid_debouncer") ("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row" "rapid_debouncer") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.18 (c (n "rmk") (v "0.1.18") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.6") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.2") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1.2") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.7.0") (f (quote ("defmt"))) (d #t) (k 0)))) (h "0gg94xjnxlmp708bcgrh1g6sybsfj0sfh2s8y5dm3q43mkar74m5") (f (quote (("rapid_debouncer") ("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row" "rapid_debouncer") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

(define-public crate-rmk-0.1.20 (c (n "rmk") (v "0.1.20") (d (list (d (n "bitfield-struct") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "embassy-embedded-hal") (r "^0.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.5") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-nrf") (r "^0.1.0") (f (quote ("defmt" "unstable-pac" "time"))) (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.6") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "embassy-usb") (r "^0.2") (f (quote ("defmt" "usbd-hid" "max-interface-count-8" "max-handler-count-8"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4") (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48") (o #t) (k 0)) (d (n "esp32-nimble") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8.0") (d #t) (k 0)) (d (n "nrf-softdevice") (r "^0.1.0") (f (quote ("defmt" "ble-peripheral" "critical-section-impl" "ble-gatt-server" "ble-sec"))) (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "once_cell") (r "^1.19") (f (quote ("atomic-polyfill"))) (o #t) (k 0)) (d (n "rmk-config") (r "^0.1.3") (d #t) (k 0)) (d (n "rmk-macro") (r "^0.1.4") (d #t) (k 0)) (d (n "sequential-storage") (r "^2.0") (f (quote ("defmt-03"))) (d #t) (k 0)) (d (n "ssmarshal") (r "^1.0") (k 0)) (d (n "static_cell") (r "^2") (d #t) (k 0)) (d (n "usbd-hid") (r "^0.7.0") (f (quote ("defmt"))) (d #t) (k 0)))) (h "0wbk2y81fzw59pbmi7wkbkaav9yyhwgvqxkix7v8x9q0rg87r1m1") (f (quote (("rapid_debouncer") ("esp32s3_ble" "_esp_ble") ("esp32c3_ble" "_esp_ble") ("default" "col2row" "rapid_debouncer") ("col2row") ("_ble")))) (s 2) (e (quote (("nrf52840_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52840" "nrf-softdevice/s140") ("nrf52832_ble" "_nrf_ble" "dep:embassy-nrf" "dep:once_cell" "nrf-softdevice/nrf52832" "nrf-softdevice/s132") ("_nrf_ble" "_ble" "rmk-config/_nrf_ble" "dep:nrf-softdevice") ("_esp_ble" "_ble" "rmk-config/_esp_ble" "ssmarshal/std" "dep:esp32-nimble" "dep:esp-idf-svc"))))))

