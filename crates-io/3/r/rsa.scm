(define-module (crates-io #{3}# r rsa) #:use-module (crates-io))

(define-public crate-rsa-0.0.0 (c (n "rsa") (v "0.0.0") (h "12fns4p0ldz3wl68fgdv4l981zxfxbphhpg90x6ml7hlh5myfaim")))

(define-public crate-rsa-0.1.0 (c (n "rsa") (v "0.1.0") (d (list (d (n "base64") (r "^0.10.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.2") (f (quote ("rand" "i128" "u64_digit"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^1.0.0") (d #t) (k 0)))) (h "01w6rxsnl0rblwl7qipm4bvmjvnp94n70h3vibfk2ap61fb14d6g")))

(define-public crate-rsa-0.1.1 (c (n "rsa") (v "0.1.1") (d (list (d (n "base64") (r "^0.10.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (f (quote ("rand" "i128" "u64_digit" "prime"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("std" "derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.88") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)))) (h "0pqhhjbx9nizjdmhlbd8qlssk15qwif1hkdk9hdh0bcgxavrh4h4") (f (quote (("serde1" "num-bigint/serde" "serde") ("nightly" "subtle/nightly" "clear_on_drop/nightly") ("default"))))))

(define-public crate-rsa-0.1.2 (c (n "rsa") (v "0.1.2") (d (list (d (n "base64") (r "^0.10.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (f (quote ("rand" "i128" "u64_digit" "prime"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("std" "derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.88") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)))) (h "07dfqblj12s40aqqn4gq6lxwbmr5b3likfgxij5xjx2h86fmqp0w") (f (quote (("serde1" "num-bigint/serde" "serde") ("nightly" "subtle/nightly" "clear_on_drop/nightly") ("default"))))))

(define-public crate-rsa-0.1.3 (c (n "rsa") (v "0.1.3") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("rand" "i128" "u64_digit" "prime" "zeroize"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("std" "derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)) (d (n "zeroize") (r "^0.6") (f (quote ("std" "alloc"))) (d #t) (k 0)))) (h "1q6i3qq3jmr3lcp9sy44wg2kfm818jmf4dw63ikvnib75xix7n3a") (f (quote (("serde1" "num-bigint/serde" "serde") ("nightly" "subtle/nightly" "num-bigint/nightly" "zeroize/nightly") ("expose-internals") ("default"))))))

(define-public crate-rsa-0.1.4 (c (n "rsa") (v "0.1.4") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.5") (f (quote ("rand" "i128" "u64_digit" "prime" "zeroize"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("std" "derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)) (d (n "zeroize") (r "^0.10.1") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "05dv10lg2iqa7niyakawzsfiikax4n4mlzfp57c7gzl4zfxsh22i") (f (quote (("serde1" "num-bigint/serde" "serde") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default"))))))

(define-public crate-rsa-0.2.0 (c (n "rsa") (v "0.2.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.6") (f (quote ("rand" "i128" "u64_digit" "prime" "zeroize"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("std" "derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "1yad1zkn9wydxzyxkmpwhlgnyv1sq77jxwzh0fpbm8qfiqnnkn3f") (f (quote (("serde1" "num-bigint/serde" "serde") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default"))))))

(define-public crate-rsa-0.3.0 (c (n "rsa") (v "0.3.0") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.6") (f (quote ("rand" "i128" "u64_digit" "prime" "zeroize"))) (d #t) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pem") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "sha3") (r "^0.9.0") (d #t) (k 2)) (d (n "simple_asn1") (r "^0.4") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "1kgrnb57mcgr4x653qqbkdk3m5bv98l5w41cjwcapzhan5lvcj1n") (f (quote (("serde1" "serde") ("serde" "num-bigint/serde" "serde_crate") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default" "pem"))))))

(define-public crate-rsa-0.4.0 (c (n "rsa") (v "0.4.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.9.0") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.7.0") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pem") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.0") (k 2)) (d (n "sha2") (r "^0.9.0") (k 2)) (d (n "sha3") (r "^0.9.0") (k 2)) (d (n "simple_asn1") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "0a4ddxdm93i1y36i3pw94ks53s2flv3cc5q4xl608pgw4qd89vv8") (f (quote (("std" "alloc" "simple_asn1" "digest/std" "rand/std") ("serde" "num-bigint/serde" "serde_crate") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default" "std" "pem") ("alloc" "digest/alloc"))))))

(define-public crate-rsa-0.4.1 (c (n "rsa") (v "0.4.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.9.0") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.7.0") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pem") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.0") (k 2)) (d (n "sha2") (r "^0.9.0") (k 2)) (d (n "sha3") (r "^0.9.0") (k 2)) (d (n "simple_asn1") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "=1.3") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "1ziqpvza3l0rdrvyzspnm9kb083qzljvyhzbdqm130hhrbffs2kv") (f (quote (("std" "alloc" "simple_asn1" "digest/std" "rand/std") ("serde" "num-bigint/serde" "serde_crate") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default" "std" "pem") ("alloc" "digest/alloc"))))))

(define-public crate-rsa-0.5.0 (c (n "rsa") (v "0.5.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.9.0") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.7.0") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.2.3") (k 0)) (d (n "pkcs8") (r "^0.7.5") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.0") (k 2)) (d (n "sha2") (r "^0.9.0") (k 2)) (d (n "sha3") (r "^0.9.0") (k 2)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "039676a4mj0875phdi7vc0bd37hv84dh0dql6fmk8dl2w81jcp70") (f (quote (("std" "alloc" "digest/std" "pkcs1/std" "pkcs8/std" "rand/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "alloc" "pkcs1/pem" "pkcs8/pem") ("nightly" "subtle/nightly" "num-bigint/nightly") ("expose-internals") ("default" "std" "pem") ("alloc" "digest/alloc" "pkcs1/alloc" "pkcs8/alloc" "pkcs8/pkcs1"))))))

(define-public crate-rsa-0.6.0-pre (c (n "rsa") (v "0.6.0-pre") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.0") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.3.3") (f (quote ("pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.8") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (k 2)) (d (n "sha2") (r "^0.10.0") (k 2)) (d (n "sha3") (r "^0.10.0") (k 2)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1w78rfb4p2s4siajs46kg0c9lfd6mjmrl4cpj1myipi468x16v1f") (f (quote (("std" "alloc" "digest/std" "pkcs1/std" "pkcs8/std" "rand/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "alloc" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("expose-internals") ("default" "std" "pem") ("alloc" "digest/alloc" "pkcs1/alloc" "pkcs8/alloc")))) (r "1.56")))

(define-public crate-rsa-0.6.0 (c (n "rsa") (v "0.6.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.0") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.3.3") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.1") (k 2)) (d (n "sha2") (r "^0.10.2") (k 2)) (d (n "sha3") (r "^0.10.1") (k 2)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0342xnwlp6dgzv1z5ncy344izml7bmbkx72y7lw1lg6a5dga6isr") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.56")))

(define-public crate-rsa-0.6.1 (c (n "rsa") (v "0.6.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.0") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.3.3") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.1") (k 2)) (d (n "sha2") (r "^0.10.2") (k 2)) (d (n "sha3") (r "^0.10.1") (k 2)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "02viiiylxpk2hx5h5qrpm4lcd8ildvafbw0rn6rx44wnqia2gwjc") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.56")))

(define-public crate-rsa-0.7.0-pre (c (n "rsa") (v "0.7.0-pre") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.0") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.1") (k 2)) (d (n "sha2") (r "^0.10.2") (k 2)) (d (n "sha3") (r "^0.10.1") (k 2)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0gym2rhviq47hs6zwyrv3285bz1pixnss2f11nwpsj4fyfhbjs31") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.7.0-rc.0 (c (n "rsa") (v "0.7.0-rc.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r ">=1.5, <1.7") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "020bslbjhmhz346g52wavn3kgi2dfnmyhligb4gm1nwzgichqyi3") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.7.0-rc.1 (c (n "rsa") (v "0.7.0-rc.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^1.6.2") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "142pqvqz2p64q3bjcgwgwsbd15yfzr08ma490bwp5df9df0vy6wq") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat" "signature/hazmat-preview") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.7.0 (c (n "rsa") (v "0.7.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^1.6.4") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1mxz5p67rjwlf9cr25g4q8arnp647p61qka0dj2c392gzsp4l54n") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat" "signature/hazmat-preview") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (y #t) (r "1.57")))

(define-public crate-rsa-0.7.1 (c (n "rsa") (v "0.7.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^1.6.4") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0666jljg0bxp8ja9bkfmm0vrmyxcbdaray2pfhsznsz6gcqc7v5h") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat" "signature/hazmat-preview") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.7.2 (c (n "rsa") (v "0.7.2") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.1") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^1.6.4") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "smallvec") (r "^1.6.1") (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1709a7gcb2h4r95qyrkdz8nz3jb8k4hafj5q3ibfzg0c8zam4h09") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat" "signature/hazmat-preview") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.8.0-pre.0 (c (n "rsa") (v "0.8.0-pre.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2.0.0-pre.3") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0bzhgmby3qi0aivhabjiyl5r5s49mg884h02bx2xldliwv1aiaha") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.8.0-rc.0 (c (n "rsa") (v "0.8.0-rc.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2.0.0-rc.1") (f (quote ("digest-preview" "rand-preview"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0l4ss18iiwvclp1sw5y7f4i03gp20w4jgr4n3z6fd3dsbgxrdr9w") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.8.0 (c (n "rsa") (v "0.8.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0ndzav9wxlgp13fy2wnyh99lbp89x011r3zwhr5x7lkfqph0mw5m") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.8.1 (c (n "rsa") (v "0.8.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1f1asgnp0q6aw35rd751j84j0571987a6553k85bg43pkdn8kcw9") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.8.2 (c (n "rsa") (v "0.8.2") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.4") (f (quote ("pkcs8" "alloc"))) (k 0)) (d (n "pkcs8") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1d6spc9r966jkak8rily1071rnapfh7fbdwmmmaybzm1klc7v9sm") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("serde" "num-bigint/serde" "serde_crate") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (r "1.57")))

(define-public crate-rsa-0.9.0-pre.0 (c (n "rsa") (v "0.9.0-pre.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.1") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0wbibgxhk31g7jqbi83gvd2jz5dvnnd4x5499mmm6qwx2ls1vg57") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.0-pre.1 (c (n "rsa") (v "0.9.0-pre.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.2") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "12ca4341v6511kgqkw1pjm566xifnvhwgw19qxg2lkdh67608rgi") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.0-pre.2 (c (n "rsa") (v "0.9.0-pre.2") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.3") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1rb3788kw86sk6w6zzl3qxnf33h85scmhwwb975cmb9mmnc0knv5") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("expose-internals") ("default" "std" "pem")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.0-rc.0 (c (n "rsa") (v "0.9.0-rc.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "u64_digit" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1pmr6jll189lzk33yc6yr4n5qz1ksd9q2wklcsjsyz9bshr3qaz9") (f (quote (("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "pem")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.0 (c (n "rsa") (v "0.9.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0whang909ss5v0j1d9ihcibzqyjnykxhd2qz617khrvd7ryh3lix") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.1 (c (n "rsa") (v "0.9.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("digest" "rand_core"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0pwj2n3hi5r6mhci957ykv5qqa950q2gg3hf0m2xxrabpcflgwbj") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.2 (c (n "rsa") (v "0.9.2") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (k 0)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-iter") (r "^0.1.37") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "^0.7.2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1a762gzj9xl14n8gmclsz8kcwp958nd1k05nnhqsdh93gns3pd3a") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.3 (c (n "rsa") (v "0.9.3") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "^2") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "^0.7.2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0vfrpb2c8yxw4r0j5nxh7sqylw92wjcaj25bqi9mmqbz7szkbvw6") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.4 (c (n "rsa") (v "0.9.4") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r ">2.0, <2.3") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "^0.7.2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0zqmb913wwm2ad8nm1ll71518rcxwdqfz7nshw3di0za3sq12cka") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.5 (c (n "rsa") (v "0.9.5") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r ">2.0, <2.3") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "^0.7.2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0x74hyq50wxir47cf74mzyd81sgq1qki3nllh50a31cnv4ilnv5g") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.9.6 (c (n "rsa") (v "0.9.6") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "^0.9") (k 0)) (d (n "digest") (r "^0.10.5") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "^0.7.5") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "^0.10.5") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "^0.10.7") (f (quote ("oid"))) (k 2)) (d (n "signature") (r ">2.0, <2.3") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "^0.7.3") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1z0d1aavfm0v4pv8jqmqhhvvhvblla1ydzlvwykpc3mkzhj523jx") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.65")))

(define-public crate-rsa-0.10.0-pre.0 (c (n "rsa") (v "0.10.0-pre.0") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "=0.10.0-pre.2") (k 0)) (d (n "digest") (r "=0.11.0-pre.7") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "=0.8.0-pre.0") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "=0.11.0-pre.2") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "=0.11.0-pre.2") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "=0.11.0-pre.2") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.2") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "=0.11.0-pre.2") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "=2.3.0-pre.2") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "=0.8.0-pre.0") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "081c1jx0kzwrxjirp83fqbcarwnwz8qqp6s6h8y0v13b8ds3mcsy") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.72")))

(define-public crate-rsa-0.10.0-pre.1 (c (n "rsa") (v "0.10.0-pre.1") (d (list (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "const-oid") (r "=0.10.0-pre.2") (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (f (quote ("alloc" "oid"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8.2") (f (quote ("i128" "prime" "zeroize"))) (k 0) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1.39") (k 0)) (d (n "num-traits") (r "^0.2.9") (f (quote ("libm"))) (k 0)) (d (n "pkcs1") (r "=0.8.0-pre.0") (f (quote ("alloc" "pkcs8"))) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha1") (r "=0.11.0-pre.3") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha1") (r "=0.11.0-pre.3") (f (quote ("oid"))) (k 2)) (d (n "sha2") (r "=0.11.0-pre.3") (f (quote ("oid"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.3") (f (quote ("oid"))) (k 2)) (d (n "sha3") (r "=0.11.0-pre.3") (f (quote ("oid"))) (k 2)) (d (n "signature") (r "=2.3.0-pre.3") (f (quote ("alloc" "digest" "rand_core"))) (k 0)) (d (n "spki") (r "=0.8.0-pre.0") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2.1.1") (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1s9kavw1jrjxcjvxy8fhpnxfyx431xyw3bg1jxy524752aghiq23") (f (quote (("u64_digit" "num-bigint/u64_digit") ("std" "digest/std" "pkcs1/std" "pkcs8/std" "rand_core/std" "signature/std") ("pkcs5" "pkcs8/encryption") ("pem" "pkcs1/pem" "pkcs8/pem") ("nightly" "num-bigint/nightly") ("hazmat") ("getrandom" "rand_core/getrandom") ("default" "std" "pem" "u64_digit")))) (s 2) (e (quote (("serde" "dep:serde" "num-bigint/serde")))) (r "1.72")))

