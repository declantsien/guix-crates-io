(define-module (crates-io #{3}# r rlz) #:use-module (crates-io))

(define-public crate-rlz-0.1.0 (c (n "rlz") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cdivsufsort") (r "^2.0.0") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "zstd") (r "^0.11.2") (d #t) (k 0)))) (h "00p5k42qwdpygcz2mk3mc5dhqmpjchnq9ld3bbrd5xallnd7cs2s")))

(define-public crate-rlz-0.2.0 (c (n "rlz") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cdivsufsort") (r "^2.0.0") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "zstd") (r "^0.11.2") (d #t) (k 0)))) (h "06fqr7p8vx29q6s7lac8dbgxz2znnjzn7icxw52sgg8xaih9g46d")))

