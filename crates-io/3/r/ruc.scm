(define-module (crates-io #{3}# r ruc) #:use-module (crates-io))

(define-public crate-ruc-0.4.0 (c (n "ruc") (v "0.4.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "0qyaccqqsyl41m68fppghxhn6277zpy822203xlqq2754sdc1pkm") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.4.1 (c (n "ruc") (v "0.4.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "1pq6m9a036axjggxwxkjh92r0ggdigfwgni8a7sqw52093g7sx0j") (f (quote (("default" "ansi") ("ansi"))))))

(define-public crate-ruc-0.5.1 (c (n "ruc") (v "0.5.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "1k6m7pr25xawvihji4qi7h5jp6xn5dzpcaad8f8hp71a4hlvibs8") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.5.2 (c (n "ruc") (v "0.5.2") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "0wcy2z7fgrc9c337ypwvqja383dn783ydh0h12ljhnfsmanz8wj7") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.5.3 (c (n "ruc") (v "0.5.3") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "1hnrfhzw6a7aanaix9qypvr3mxid1hxfhfp41x10cqhnzrb91dqc") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.5.4 (c (n "ruc") (v "0.5.4") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "1a58rjbnsjlay7g0714aca69g80js72dd5qya8g0hc7skw0l5fn0") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.5.5 (c (n "ruc") (v "0.5.5") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "1w29gmvfqmx5c8swgyb3bsspy0sal0bbsbk2ywy69ablmkb8n8ic") (f (quote (("default" "ansi") ("ansi"))))))

(define-public crate-ruc-0.6.1 (c (n "ruc") (v "0.6.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (k 0)))) (h "08n0fvkzngf3r75qy2a69l97ysgzmd4jsrj6vy5hvjvy47x46hc1") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.2 (c (n "ruc") (v "0.6.2") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "15bsdfqm4a6dciii2jc7czriygyw8fmjh18c9rl6m5a9p0f0v9zp") (f (quote (("default" "ansi") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.3 (c (n "ruc") (v "0.6.3") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ir7d8bx0bqrl9v3dcldbnzrj1q9nys6jddbwl2syggvdakx9id7") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.4 (c (n "ruc") (v "0.6.4") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0linyv1yz4mkwfvpvlxvpis8wqlqkd6m0xc7cwzv9lcb93hmby5a") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.5 (c (n "ruc") (v "0.6.5") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0mc563a8kqrv3k1w2q2rs7ihnxhmnacgf9il342b9vwbiqn9n2fx") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.6 (c (n "ruc") (v "0.6.6") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "16zdd5hcsi8qrjrsdnwv25v9h4nqzm39kizjfr05bs90m6abfz7q") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.7 (c (n "ruc") (v "0.6.7") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0brvkm5xf2mx6qwjxfilzjwh15dgxfhyaavfy5nvbhbid76fnksk") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-0.6.8 (c (n "ruc") (v "0.6.8") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "09lgd06j494g6grpkk01s4fk684nimild5fnmbgg2sr6yji818l0") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi"))))))

(define-public crate-ruc-0.7.0 (c (n "ruc") (v "0.7.0") (d (list (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "02y37hngwrqiyi5f39b43p2d0grc1id5pc3j33r5dqg78bdbymc9") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi"))))))

(define-public crate-ruc-1.0.0 (c (n "ruc") (v "1.0.0") (d (list (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ilgp60zkj43n3b7pqdiicisd96gi73xxy9g1y3kc9pbsqyi65nz") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.1 (c (n "ruc") (v "1.0.1") (d (list (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0p0ay2s4rgab30q81fjmsbjl1fw1bkl7ccsz5hd0r0srkbwr01d1") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi" "compact") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.2 (c (n "ruc") (v "1.0.2") (d (list (d (n "nix") (r "^0.22.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.2.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rj39lhab5w8d87klifxr04dm3al31x3nday0rw5vzjsad7ydlln") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.3 (c (n "ruc") (v "1.0.3") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "14k0qnhrv90p81y24g9mr438vfmp6xn0bknll7gdi1vhs14qsy5j") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.4 (c (n "ruc") (v "1.0.4") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "111n2xf2j0q9ipkd81iczqzlddi7nb2sixp3zhmhan8272i0z2bl") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.5 (c (n "ruc") (v "1.0.5") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "18hy2577d6406lgi54fdb0rf72dx30d5bd6r52jwcflg1nk618qn") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.6 (c (n "ruc") (v "1.0.6") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1jwl54waz4hsisbvg3hdswww576j7pwisaji9718vvv7jr53vhvq") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.0.7 (c (n "ruc") (v "1.0.7") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0a89chbx9q8ghfpjzfnni4hgjfiqll8whxg3br7zpnhbzwklhnia") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-1.0.8 (c (n "ruc") (v "1.0.8") (d (list (d (n "nix") (r "^0.23.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1w72hxa6cpfdilsz6n9gacs8kp5yn4mi5l6af7jflsf8krmdqb11") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-1.0.9 (c (n "ruc") (v "1.0.9") (d (list (d (n "nix") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1hv88ih98fq8j072dn8q2wp77v7skz0g253l3w5i7bmq7dvspbd3") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-1.1.0 (c (n "ruc") (v "1.1.0") (d (list (d (n "nix") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1slj8f9glm28g61a9z9iar6qsb8sqxix4p0ijrflwhyh7yhpnk8z") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-2.0.0 (c (n "ruc") (v "2.0.0") (d (list (d (n "nix") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "075xc9wh00gxfmd65i6xq3yhi17bwqmaifz3h7h56c5w66cqfa5m") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-2.0.1 (c (n "ruc") (v "2.0.1") (d (list (d (n "nix") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "12g8w2nv9g9wms1chkjh9acnddph09vx3y208nvmn0h91nybfhqy") (f (quote (("uau" "nix" "rand") ("rich" "uau" "cmd") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-3.0.0 (c (n "ruc") (v "3.0.0") (d (list (d (n "nix") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jwnp07wflp27dqmnyrsjbf38m03r5k03v10ab61lj5ll92j39qd") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-3.0.1 (c (n "ruc") (v "3.0.1") (d (list (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0s2gf7in3fzyk7if1q9z97rdfd0pcv0si02mi06cch8h3pzzgmxs") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-3.0.2 (c (n "ruc") (v "3.0.2") (d (list (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0m5q64l71y8ppqy9nsd0k1pd6b7xbah8n2mwpj6fdmfyny01xffz") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-3.0.3 (c (n "ruc") (v "3.0.3") (d (list (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "17hdcyqx49cmgb5f11c7pg0zhww5l67gx269w4s90wsi84l1cas5") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-3.0.4 (c (n "ruc") (v "3.0.4") (d (list (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0r7dj4qnf5nhjbrdzd1z1pawwh6n6d0z0i1zcc2m10vhydykb654") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.0.0 (c (n "ruc") (v "4.0.0") (d (list (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19a3nkzmssibhmd570s9s7z4s98r86015mkn3zaji9wvayqfdfj9") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh") ("default" "ansi") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.0.1 (c (n "ruc") (v "4.0.1") (d (list (d (n "blake3") (r "^1.3.1") (o #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1sc3jyjahshkqxqv0adrnm6rpybx06lcm36qnwsv9h3x4nspj3fd") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "blake3") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.1.0 (c (n "ruc") (v "4.1.0") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0xljfj8hlkp6lcd6a0yhxkp4m1hy3k1l5my2g078qq54356zgmr0") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.1.1 (c (n "ruc") (v "4.1.1") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1g8k9j2i5pwm4mnc62rw74jxh9bgickw0b32kdzk4c2wn4lslrqd") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.1.2 (c (n "ruc") (v "4.1.2") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4-p1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ssh2-patched")) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1xq77zzac70qpmjs8qshz69xgicg4hmayka3pvwqchw6ncra3jiz") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.1.3 (c (n "ruc") (v "4.1.3") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ykwy7wf15x1aahjzjgm95kx4vl1f1cfhsdlvaiqhd6cldlklqq2") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-4.2.0 (c (n "ruc") (v "4.2.0") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0h0ybqqr02dbhx8nc49fpj08md7qpn9ak6gg6a1gzyxp3w9dn54y") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-4.2.1 (c (n "ruc") (v "4.2.1") (d (list (d (n "hash-db") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libc-print") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1046pfnblgswhlapkzqksiclhvh9g8p721xswqm4mlc24ldybl42") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("no_std" "libc-print") ("full" "uau" "cmd" "ssh" "crypto") ("default" "ansi") ("crypto" "reference-trie" "keccak-hasher" "hash-db") ("compact") ("cmd") ("ansi"))))))

(define-public crate-ruc-5.0.0 (c (n "ruc") (v "5.0.0") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1w83vi3msbj3af1vgpq1ch1f2wfylvlb2ih35ar826zfxcgl0my2") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto") ("default" "crypto" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-5.0.1 (c (n "ruc") (v "5.0.1") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0jb25cp1i9j5b7ks7cc1pj73vc1jw2y3wvnfcxgw6g0miaxblkq9") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto") ("default" "crypto" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-5.0.2 (c (n "ruc") (v "5.0.2") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0dcm0i6xziinx9pmqs3rj7i0smiw84k684w72f5akmrwbf5w6y8s") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto") ("default" "crypto" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-5.0.3 (c (n "ruc") (v "5.0.3") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1gxmywc4zykw9205l3igka2d4mjbls9fkzz4vd9q87pjpn04zn9f") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto") ("default" "crypto" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi")))) (y #t)))

(define-public crate-ruc-5.0.4 (c (n "ruc") (v "5.0.4") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0w3a2a3kigc6w9dwiiwj2jr0vm5yaxcyskbfjjblyy6ri6v4f0rz") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.5 (c (n "ruc") (v "5.0.5") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0k1j0hrypf679vyvi6swbngg8ychrm9rmp41kk8wj86akq0r2xjw") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.6 (c (n "ruc") (v "5.0.6") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0bdjfqid0phzr4nyf10qhfcxfxjf0gz52r51ysl9l4yr786chmd2") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.7 (c (n "ruc") (v "5.0.7") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0rr1y3qgv62amx68ylh6h80qhxixnr8zaq87386b3j9085sivfp4") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.8 (c (n "ruc") (v "5.0.8") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "15rbvakws54srbcabqrp3s4xiii7ngjyg6jmaw30wi8qgkrjfx2h") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.9 (c (n "ruc") (v "5.0.9") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1sbsimx2c2yn0y20j06cvx9l5aikjxxyiwfq5cqlbysd2dah2ysc") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.10 (c (n "ruc") (v "5.0.10") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0kalrxabz73cbdmpcs8xp2w0rfq31v11mkg99pj9nbhrqa6kng3l") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.11 (c (n "ruc") (v "5.0.11") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0pidks9czc3lq76caqqk2ay7n52afgin05mlx0mak7b95x36n8m3") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.0.12 (c (n "ruc") (v "5.0.12") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0kqvyym6cnba7kmhr5ra475z09slhvriyrz0h25cwyh2vgc3jxd9") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.0.13 (c (n "ruc") (v "5.0.13") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1d8yxv0a02rvvkndwfpkhc2zg6j5262jimx0jfnaxw7g36bmjpqr") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.0 (c (n "ruc") (v "5.1.0") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "07a9gbfybcrnxz60bb4s9i94x1xn62nq54yjzv77x29jss8az8f1") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.1 (c (n "ruc") (v "5.1.1") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0q1r6mn95m12mr52jpykly3b2286bgsqjjk0vyq05jc80ncxlg1r") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.2 (c (n "ruc") (v "5.1.2") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "platforms") (r "=3.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "11qp6c1vvywyilciiv60rj6wxmn2x9rpim564bn7q90v7jar6pfr") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.3 (c (n "ruc") (v "5.1.3") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "platforms") (r "=3.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "12pwls18sn04yq8nirxng5mryrqi7mdcsrgbi61ab1q1x8sbkfgr") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.4 (c (n "ruc") (v "5.1.4") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "platforms") (r "=3.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0byr20wvm9abbnlg58y81mx58ka2rzzqlvbgnddigdc9w3iqis7n") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

(define-public crate-ruc-5.1.5 (c (n "ruc") (v "5.1.5") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0wxswdm28pgklk4pqwg8g70b6jyb2j3a0ppprfxwm32c889s1z27") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.1.6 (c (n "ruc") (v "5.1.6") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "156x1yqlkbfkglfnv84bzapk2sjzv5ihi9vdqjsydsjyzn4iahz8") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.1.7 (c (n "ruc") (v "5.1.7") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("socket"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1wplhn66z1mz56x4rgvirfs2984gpki008bksd9qvrimzwwnmkh5") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde")))) (y #t)))

(define-public crate-ruc-5.1.8 (c (n "ruc") (v "5.1.8") (d (list (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("socket"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reference-trie") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "ssh2") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1prxh8564a6jpl0qq5vq6nac1cv34h8cfs6ipcvl5yl12vvlzjbs") (f (quote (("uau" "nix" "rand") ("ssh" "ssh2") ("full" "uau" "cmd" "ssh" "crypto" "SerDe") ("default" "ansi") ("crypto" "reference-trie" "sha3" "ed25519-zebra" "rand" "base64" "hex") ("compact") ("cmd") ("ansi") ("SerDe" "serde"))))))

