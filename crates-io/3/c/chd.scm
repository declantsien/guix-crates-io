(define-module (crates-io #{3}# c chd) #:use-module (crates-io))

(define-public crate-chd-0.0.1 (c (n "chd") (v "0.0.1") (h "1zyhz1b4sa7cdwnqda5624jpm80gkdhl2d9k8kam1l0nfpwjcpv4") (y #t)))

(define-public crate-chd-0.0.2 (c (n "chd") (v "0.0.2") (d (list (d (n "bitreader") (r "^0.3.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "10x0g6pc691pcmmavjsi78bnh1fn3s1kdkknrr32c8n69zp7maln") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc") ("default" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.0.3 (c (n "chd") (v "0.0.3") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "03npcp11lgjiiy5r910k7cl6i0zrkz4k4lfzy6a9p1qdliya00ak") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc") ("default" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.0.4 (c (n "chd") (v "0.0.4") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0175cy7df90xpbbr8kbi3qzl3xgc0nhrgkaijdppjdwlzphbadgw") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc") ("default" "want_subcode" "want_raw_data_sector") ("avhuff"))))))

(define-public crate-chd-0.0.5 (c (n "chd") (v "0.0.5") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0nfsm6cxlm28xsgfr75ddiamf6lsai2wajl8s84bqx2p5v3qii2w") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api") ("avhuff"))))))

(define-public crate-chd-0.0.6 (c (n "chd") (v "0.0.6") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1z5z8qsn2xag1w51f8y4szdvg6jqlylymy7qqdxfwaali8k5famp") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("owning_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector" "owning_iterators") ("codec_api") ("avhuff")))) (y #t)))

(define-public crate-chd-0.0.7 (c (n "chd") (v "0.0.7") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1wnqhlv2ha6icfmd8i6fr3w81qpzzjy9jprgkk711ww8qq51m03r") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector" "verify_block_crc") ("codec_api"))))))

(define-public crate-chd-0.0.8 (c (n "chd") (v "0.0.8") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1bfgf0b83m53g77q7zkcnvx4i6gliy4kjfjfh725f97dd4y3brmc") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector" "verify_block_crc") ("codec_api"))))))

(define-public crate-chd-0.0.9 (c (n "chd") (v "0.0.9") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "00ml28bhr88ww7p4wkd3ghfyjvh2zd5i3hz3zjlxiv98aqkh9s81") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector" "verify_block_crc") ("codec_api"))))))

(define-public crate-chd-0.0.10 (c (n "chd") (v "0.0.10") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.2.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0miz5hg4g7a2jkpmkjya98zfccdzq5z1gcb0031ixwdz5vm3lyfd") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector" "verify_block_crc") ("codec_api"))))))

(define-public crate-chd-0.0.11 (c (n "chd") (v "0.0.11") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1bbqk851n0y78ba0kkv7n3nm11wywnd4vg16dv71ixxzd2d7l1s9") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.0.12 (c (n "chd") (v "0.0.12") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0m20rl6afjnxk5zc49wsh4ikqppk4jax868bp0xydxrn413l4079") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.1.0 (c (n "chd") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lzma-rs-headerless") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0g3wnxhs54xbqidv564km34a34r4c449mnbidl1dlf96s1jf48l3") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.1.1 (c (n "chd") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1f9rc218dj1pvrlgf9al6pr7l2m4miab0vp07ng4hdvcv1ck2z9g") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.1.2 (c (n "chd") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "1jm8m0ni0s18g3k61dwvwvrflcaqmglbyvhql7pzz0p0jh3w0ps4") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.1.3 (c (n "chd") (v "0.1.3") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "0v3n4ly3xg1xk593hy0z9syqfn3ix3c4dbp0kdcdmsqjqawlk53j") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.1.4 (c (n "chd") (v "0.1.4") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.3") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (d #t) (k 0)))) (h "14sqd6s14rqsbrsw913s0f3xhw6sv7lvm4zd896wdf2g8lv2ryif") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("docsrs") ("default" "want_subcode" "want_raw_data_sector") ("codec_api"))))))

(define-public crate-chd-0.1.5 (c (n "chd") (v "0.1.5") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.3") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (k 0)))) (h "067vkk1n5j3vf02kq64lx7birckfk3n543hb6pc5gzblklbxl9is") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("fast_zlib" "flate2/zlib-ng") ("default" "want_subcode" "want_raw_data_sector") ("codec_api"))))))

(define-public crate-chd-0.1.6 (c (n "chd") (v "0.1.6") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.3") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (k 0)))) (h "113az3nr73a1abvr5jimjhqwc4yjkr9cqkvl049nznmk0ndpwzs9") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("fast_zlib" "flate2/zlib-ng") ("default" "want_subcode" "want_raw_data_sector") ("codec_api"))))))

(define-public crate-chd-0.1.7 (c (n "chd") (v "0.1.7") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.3") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "perf"))) (k 0)))) (h "0c3lhk3v9qd5i7bkiq4n06fpqy22c2mvrv26kky2nicm979xaj0r") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("fast_zlib" "flate2/zlib-ng") ("default" "want_subcode" "want_raw_data_sector") ("codec_api"))))))

(define-public crate-chd-0.1.8 (c (n "chd") (v "0.1.8") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.5.3") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-headerless")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "1qms5v2bvw3839yqp20gpl0cym5wl322pqcyyjq0vz5ahigh30d1") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("fast_zlib" "flate2/zlib-ng") ("default" "want_subcode" "want_raw_data_sector") ("codec_api"))))))

(define-public crate-chd-0.1.9 (c (n "chd") (v "0.1.9") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "1d187fv8mxk6r5gisc862cd2n9j1p06jxkz0g3cwi0mr43x5r3k9") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("huffman_api") ("fast_zlib" "flate2/zlib-ng") ("default" "want_subcode" "want_raw_data_sector") ("codec_api")))) (y #t)))

(define-public crate-chd-0.2.0 (c (n "chd") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "0wb1fkxskyjm4lrf6i9c0a4palmmg7g1wz1ddb7qhvnkka02x2rp") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma") ("huffman_api") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.2.1 (c (n "chd") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "066k5la8s4n92all9y89yn6w2ffrk6za5gwq7054q5bfsn6i2xv7") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma") ("huffman_api") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.2.2 (c (n "chd") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "03k89zaf176979ja2zrpd49lqk497gmdv4arcsj8kg3vjz73xx8p") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma") ("huffman_api") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.2.3 (c (n "chd") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)))) (h "0c1ckb4yyrb980qfvgrdkqixwm8szfgm857n9vikvgk0c3r4sz6s") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma") ("huffman_api") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.3.0 (c (n "chd") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ruzstd") (r "^0.5") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "1rpn1jjh2qlvsxabxpw72p64ax2p203hfvc3xza63gmswfdwlisz") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma" "fast_zstd") ("huffman_api") ("fast_zstd" "std" "zstd") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.3.1 (c (n "chd") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ruzstd") (r "^0.6") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (o #t) (d #t) (k 0)))) (h "1wdchyvfj8h3sn6p0zibgh4bhabwzqn9qcs2q81znc2gj8q3qiq8") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma" "fast_zstd") ("huffman_api") ("fast_zstd" "std" "zstd-safe") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

(define-public crate-chd-0.3.2-beta.0 (c (n "chd") (v "0.3.2-beta.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bitreader") (r "^0.3.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "claxon") (r "^0.4") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 0)) (d (n "lending-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lzma-rs") (r "^0.2") (f (quote ("raw_decoder"))) (d #t) (k 0) (p "lzma-rs-perf-exp")) (d (n "nougat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ruzstd") (r "^0.6") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "text_io") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.1.0") (o #t) (d #t) (k 0)))) (h "0gdc92kz9dw21cfppiq2ndmk9d6b2avb612lk16jprbaxb6kx0bp") (f (quote (("want_subcode") ("want_raw_data_sector") ("verify_block_crc" "want_subcode" "want_raw_data_sector") ("unstable_lending_iterators" "lending-iterator" "nougat") ("std") ("max_perf" "fast_zlib" "fast_lzma" "fast_zstd") ("huffman_api") ("fast_zstd" "std" "zstd-safe") ("fast_zlib" "std" "flate2/zlib-ng") ("fast_lzma" "std") ("default" "std" "cd_full") ("codec_api") ("cd_full" "want_subcode" "want_raw_data_sector"))))))

