(define-module (crates-io #{3}# c cnf) #:use-module (crates-io))

(define-public crate-cnf-0.1.0 (c (n "cnf") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 0)) (d (n "confy") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "which") (r "^4.2") (d #t) (k 0)))) (h "1kv2mbirxs9qf7zdsrin0dsv4vd5g92506vfmvx2c45gi36sng0s")))

(define-public crate-cnf-0.1.2 (c (n "cnf") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "confy") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "which") (r "^4.2") (d #t) (k 0)))) (h "0cvq04ki676w01v5c4rwyxwdwxz3f6v3z3kvzmv3mx1zgkikcwa4")))

(define-public crate-cnf-0.2.0 (c (n "cnf") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "confy") (r "^0.5") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1shryzd5i0xwy55ydw0j4bplvmx8zqp02y7nr42wrvc1sk91x05j")))

(define-public crate-cnf-0.3.0 (c (n "cnf") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "confy") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "023sqlpfjg9iili7rh2prnb9qhpqzgqk8hwwq41syspi2qaygx7x")))

(define-public crate-cnf-0.4.0 (c (n "cnf") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cnf-lib") (r "^0.4.0") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)))) (h "0l8zdkpbl6ih9s69f9g4px9akhz99qrm3i53ibf5ymq5bvxy30p9")))

(define-public crate-cnf-0.4.1 (c (n "cnf") (v "0.4.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cnf-lib") (r "^0.4.1") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)))) (h "0fzhlrn7vy4y03wqb3kvdscacjp0j2kjvk4sq2wldy9l0q8glwv5")))

(define-public crate-cnf-0.4.2 (c (n "cnf") (v "0.4.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cnf-lib") (r "^0.4.2") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)))) (h "19ygypizcbvvl2dr5ns10wqmp6lvy2wcsqrfvvvkykrxm23ygmbw")))

(define-public crate-cnf-0.5.0 (c (n "cnf") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cnf-lib") (r "^0.5.0") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "env-filter"))) (d #t) (k 0)))) (h "0q6iidgqfv5qzw8243mc0nnscrsskf81issn7prfygx2bfx67s8q") (f (quote (("default")))) (s 2) (e (quote (("debug-flame" "dep:tracing-flame"))))))

(define-public crate-cnf-0.5.1 (c (n "cnf") (v "0.5.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cnf-lib") (r "^0.5.1") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "ratatui") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "env-filter"))) (d #t) (k 0)))) (h "1bsnsxvpa155sgjdhakqlrh50narssxpszprn8zvb4gkpp2iv927") (f (quote (("default")))) (s 2) (e (quote (("debug-flame" "dep:tracing-flame"))))))

