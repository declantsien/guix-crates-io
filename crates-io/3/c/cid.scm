(define-module (crates-io #{3}# c cid) #:use-module (crates-io))

(define-public crate-cid-0.1.0 (c (n "cid") (v "0.1.0") (d (list (d (n "multibase") (r "~0.4.0") (d #t) (k 0)) (d (n "multihash") (r "~0.4.0") (d #t) (k 0)) (d (n "try_from") (r "~0.2.1") (d #t) (k 0)) (d (n "varmint") (r "~0.1.2") (d #t) (k 0)))) (h "1knn2z9ckjfic6bk17y9sisad66mh3w9ddqa22lv383hkaqs70rd")))

(define-public crate-cid-0.1.1 (c (n "cid") (v "0.1.1") (d (list (d (n "multibase") (r "~0.4.0") (d #t) (k 0)) (d (n "multihash") (r "~0.4.2") (d #t) (k 0)) (d (n "try_from") (r "~0.2.1") (d #t) (k 0)) (d (n "varmint") (r "~0.1.2") (d #t) (k 0)))) (h "12lzr9wvx3zkxjcsrkcx45sjsa4k42k5ihwb4pqxiy9mq3q82rir")))

(define-public crate-cid-0.1.2 (c (n "cid") (v "0.1.2") (d (list (d (n "multibase") (r "~0.4.0") (d #t) (k 0)) (d (n "multihash") (r "~0.5.0") (d #t) (k 0)) (d (n "try_from") (r "~0.2.1") (d #t) (k 0)) (d (n "varmint") (r "~0.1.2") (d #t) (k 0)))) (h "0051bfj36xri0lb8y5bzqr6j3jdly4mlpzzrv24kq7j4f6hir843")))

(define-public crate-cid-0.2.0 (c (n "cid") (v "0.2.0") (d (list (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.5.0") (d #t) (k 0)) (d (n "varmint") (r "~0.1.2") (d #t) (k 0)))) (h "1027dg2nl90dfqm4qviga9vs7lziywcxshgr1jd7iypxzgf0zbf0")))

(define-public crate-cid-0.2.1 (c (n "cid") (v "0.2.1") (d (list (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.5.0") (d #t) (k 0)))) (h "0sla4vm2fv2vwyh4f7cpr11a9h2dvdy2m8y8x1ilhafalpgnqgp5")))

(define-public crate-cid-0.2.2 (c (n "cid") (v "0.2.2") (d (list (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.6.0") (d #t) (k 0)))) (h "1iq0789zi70l1y237yyjlmh3184gmb6ij1w5lsy1ym0hdyh7vail")))

(define-public crate-cid-0.2.3 (c (n "cid") (v "0.2.3") (d (list (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.7.0") (d #t) (k 0)))) (h "1dl56ph6qwk53q1bwwwvwsjh7jsjz3cjxfqc88y0cscf6qjy0pnq")))

(define-public crate-cid-0.3.0 (c (n "cid") (v "0.3.0") (d (list (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.8.0") (d #t) (k 0)))) (h "127rhijlxzslq6h9gh0c8hzby6jiviapm0k9wbsg7nc702x7zqy0")))

(define-public crate-cid-0.3.1 (c (n "cid") (v "0.3.1") (d (list (d (n "integer-encoding") (r "~1.0.3") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "multihash") (r "~0.8.0") (d #t) (k 0)))) (h "1vqx8h63bh1ma2dpn8q5m0h86dfwkijpyivs8r82a7sn6a098239")))

(define-public crate-cid-0.3.2 (c (n "cid") (v "0.3.2") (d (list (d (n "integer-encoding") (r "^1.0.3") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.10") (d #t) (k 0)))) (h "0nwsn86lazsicshcynckl3msr3xkzma26q7scfvv8ii61v1ar5k1")))

(define-public crate-cid-0.4.0 (c (n "cid") (v "0.4.0") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.10.1") (d #t) (k 0)) (d (n "multihash") (r "^0.10.1") (f (quote ("test"))) (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "0mjrlps0c0ancqc2hvhndn1cfqaf8my0475p5kri095kqyddb2xh") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-cid-0.5.0 (c (n "cid") (v "0.5.0") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.11") (d #t) (k 0)) (d (n "multihash") (r "^0.11") (f (quote ("test"))) (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "0ydkhk6xz7zw1lh4dal39gxxxvwkbx7pw6xqnr8rwpffjnyhywjh") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-cid-0.5.1 (c (n "cid") (v "0.5.1") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.11.2") (d #t) (k 0)) (d (n "multihash") (r "^0.11") (f (quote ("test"))) (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.3") (d #t) (k 0)))) (h "0pjrxpxaw7vm5fy1hb05f44mm888vpxb9d516j7q1fbqzf0x82c7") (f (quote (("test" "quickcheck" "rand"))))))

(define-public crate-cid-0.6.0 (c (n "cid") (v "0.6.0") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.13.1") (k 0)) (d (n "multihash") (r "^0.13.1") (f (quote ("arb"))) (k 2)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.1") (k 0)))) (h "13pi2xvzgp8csx1241k2bmrsjx3fxvrrc53iylyhdrvl3q5z723x") (f (quote (("std" "multibase" "multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "multihash/serde-codec") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb"))))))

(define-public crate-cid-0.6.1 (c (n "cid") (v "0.6.1") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.13.1") (k 0)) (d (n "multihash") (r "^0.13.1") (f (quote ("arb"))) (k 2)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.1") (k 0)))) (h "0s4pmfc72cxyfy0d2ay93fmaxi86xykap9n1cfb3yss4nv03n3pz") (f (quote (("std" "multibase" "multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "multihash/serde-codec") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb"))))))

(define-public crate-cid-0.7.0 (c (n "cid") (v "0.7.0") (d (list (d (n "multibase") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (k 0)) (d (n "parity-scale-codec") (r "^2.1.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1al1rlrgsn6v2gayid503wq0vzsq7nrnxymad7lkd0b46dmrgf7n") (f (quote (("std" "multibase" "multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "multihash/serde-codec") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb"))))))

(define-public crate-cid-0.8.0 (c (n "cid") (v "0.8.0") (d (list (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.0") (k 0)) (d (n "parity-scale-codec") (r "^2.1.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "0nx3vv0h1hwsxkpgr9q5slbcpxqzw3wcsi4ag077w20bna0jidss") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb") ("alloc" "multibase" "multihash/alloc"))))))

(define-public crate-cid-0.8.1 (c (n "cid") (v "0.8.1") (d (list (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "0cwkz9vaqlvb8qwy823pmqbhkf7ih22qq7zigy5fz2x4vi8d0d39") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb") ("alloc" "multibase" "multihash/alloc"))))))

(define-public crate-cid-0.8.2 (c (n "cid") (v "0.8.2") (d (list (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1lld9k9nl7hc0jfjdk3ipn9hss1hx4r84km0l4n5arm2bgjs83hx") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb") ("alloc" "multibase" "multihash/alloc"))))))

(define-public crate-cid-0.8.3 (c (n "cid") (v "0.8.3") (d (list (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "04ss0d7agnjkwg753pvrz1q761rnd3z1sd6lgn3bfay53n490pfx") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb") ("alloc" "multibase" "multihash/alloc"))))))

(define-public crate-cid-0.8.4 (c (n "cid") (v "0.8.4") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.2") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1i6zciqy2872qgipnwjfn0qzj16wf3wnsb9vmj8g8p6fj6kzyb55") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc"))))))

(define-public crate-cid-0.8.5 (c (n "cid") (v "0.8.5") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.2") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "175nxpnsqw3lln1cnkrsryzhgarj822s8hjc0sphz204czzrp57w") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "multihash/sha2" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc"))))))

(define-public crate-cid-0.8.6 (c (n "cid") (v "0.8.6") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.2") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1wlv4k89rd6j1kdicjj7w52xg5m6yidxmwa61h8vib0p5n5rrvgn") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "multihash/sha2" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc"))))))

(define-public crate-cid-0.9.0 (c (n "cid") (v "0.9.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.17.0") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "0hz13lr926wirglmhy0mmzw4rbbilargs6nphx0xab4qjcqqxdmr") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "multihash/sha2" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc"))))))

(define-public crate-cid-0.10.0 (c (n "cid") (v "0.10.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.18.0") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "0i6c9pj5f7kybp6bgwx0mjyglmvv7hrxzdsipv95knna29bvy7vm") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std" "serde/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "multihash/sha2" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc")))) (r "1.60")))

(define-public crate-cid-0.10.1 (c (n "cid") (v "0.10.1") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.18.0") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (k 0)))) (h "1hyjpj7r7xzx55r59r6n0my0xyysgrbkyxazwxylwvp3c4ang57x") (f (quote (("std" "multihash/std" "unsigned-varint/std" "alloc" "multibase/std" "serde/std") ("serde-codec" "alloc" "serde" "multihash/serde-codec" "serde_bytes") ("scale-codec" "parity-scale-codec" "multihash/scale-codec") ("default" "std" "multihash/default") ("arb" "quickcheck" "rand" "multihash/arb" "multihash/multihash-impl" "multihash/sha2" "arbitrary") ("alloc" "multibase" "multihash/alloc" "core2/alloc" "serde/alloc")))) (r "1.60")))

(define-public crate-cid-0.11.0 (c (n "cid") (v "0.11.0") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.19.0") (k 0)) (d (n "multihash-codetable") (r "^0.1.0") (f (quote ("digest" "sha2"))) (k 2)) (d (n "multihash-derive") (r "^0.9.0") (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 2)) (d (n "unsigned-varint") (r "^0.8.0") (k 0)))) (h "0akn6h0kg5d4pjw55srrz8ifs8l468x73mc8y54gv3gkja2wjaj7") (f (quote (("std" "alloc" "core2/alloc" "multihash/std" "unsigned-varint/std") ("serde-codec" "serde") ("default" "std")))) (s 2) (e (quote (("serde" "alloc" "dep:serde" "dep:serde_bytes" "multihash/serde") ("scale-codec" "dep:parity-scale-codec" "multihash/scale-codec") ("arb" "dep:arbitrary" "dep:quickcheck" "dep:rand" "multihash/arb") ("alloc" "dep:multibase" "core2/alloc" "multihash/alloc")))) (r "1.60")))

(define-public crate-cid-0.11.1 (c (n "cid") (v "0.11.1") (d (list (d (n "arbitrary") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.4") (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.19.0") (k 0)) (d (n "multihash-codetable") (r "^0.1.0") (f (quote ("digest" "sha2"))) (k 2)) (d (n "multihash-derive") (r "^0.9.0") (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 2)) (d (n "unsigned-varint") (r "^0.8.0") (k 0)))) (h "0fngi9wm3rw4k10f7a8v36wdz7gpk3fr84g5kk9cr84g5qkxhiri") (f (quote (("std" "alloc" "core2/alloc" "multihash/std" "unsigned-varint/std") ("serde-codec" "serde") ("default" "std")))) (s 2) (e (quote (("serde" "alloc" "dep:serde" "dep:serde_bytes" "multihash/serde") ("scale-codec" "dep:parity-scale-codec" "multihash/scale-codec") ("arb" "dep:arbitrary" "dep:quickcheck" "dep:rand" "multihash/arb") ("alloc" "dep:multibase" "core2/alloc" "multihash/alloc")))) (r "1.60")))

