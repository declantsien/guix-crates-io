(define-module (crates-io #{3}# c cfr) #:use-module (crates-io))

(define-public crate-cfr-0.0.1 (c (n "cfr") (v "0.0.1") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1ynavcdvz5f8g7nbbmyfskbwirs5g9awhcv8cfln266fjif6bfyr") (f (quote (("binary" "serde" "serde_json" "clap"))))))

(define-public crate-cfr-0.0.2 (c (n "cfr") (v "0.0.2") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1jhkf2ryy369s98292lzmd4dk4zallafmivsbnz5ar6l3k8c5977") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap"))))))

(define-public crate-cfr-0.1.0 (c (n "cfr") (v "0.1.0") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1mm86702wkvzrd6xff4i1kj82wvd01vq1rglx6n6wjjb2jc5d8cx") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser" "num"))))))

(define-public crate-cfr-0.2.0 (c (n "cfr") (v "0.2.0") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "portable-atomic") (r "^0.3") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0lljxayw46grlaj1bbhpxjfixya1yv7p3wwgcrhykfk1hw0v72nj") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser" "num"))))))

(define-public crate-cfr-0.3.0 (c (n "cfr") (v "0.3.0") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^0.3") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0h26pfl5ppphvknh7ijw4r5kzdnq7qw4vqwg6l6vmhfiviv4y490") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

(define-public crate-cfr-0.3.1 (c (n "cfr") (v "0.3.1") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "logaddexp") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^0.3") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1534ji2lb1840wfz6psdarw4nc38c6259jjhwyasqz0is3flvk0y") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

(define-public crate-cfr-0.3.2 (c (n "cfr") (v "0.3.2") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "logaddexp") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^0.3") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0v48csh5ymx1flzqlrj4afzrkmrqrldxi50hw9y04dmxdp7bzbcr") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

(define-public crate-cfr-0.4.0 (c (n "cfr") (v "0.4.0") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "logaddexp") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^0.3") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1r8clim5jjjxdhrvhvzcwkfzqjp4j65q9ix27syipy8gl8dagkpg") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

(define-public crate-cfr-0.4.1 (c (n "cfr") (v "0.4.1") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "logaddexp") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.4") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "06mfzx5hq8g01v0sf0zi1k4088k2iyaf8d3ar12k2k9hcpmqbyjf") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

(define-public crate-cfr-0.4.2 (c (n "cfr") (v "0.4.2") (d (list (d (n "by_address") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "gambit-parser") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "logaddexp") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.4") (f (quote ("float"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1nbc495gjkgnh24wp8cvijlspjn9ngyc1wcvwlags0gzssss9gxx") (f (quote (("default" "binary") ("binary" "serde" "serde_json" "clap" "gambit-parser"))))))

