(define-module (crates-io #{3}# l ltp) #:use-module (crates-io))

(define-public crate-ltp-0.1.0 (c (n "ltp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "05lnjiz83rkc5b9c8qhxj1jiplaj3ax7xij5fnh5mrf77rz5j4dv") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default"))))))

(define-public crate-ltp-0.1.1 (c (n "ltp") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "12la31y6fk1pb2ivhrgsv1b0lphr4r07dsxq4kxyqswxsij5c554") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default"))))))

(define-public crate-ltp-0.1.2 (c (n "ltp") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "04rjr8qng6rlg1l9sqcdy4ma7awv3d4bnj1as5qvwkkrzygxgwfl") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default"))))))

(define-public crate-ltp-0.1.3 (c (n "ltp") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "13f685zb37lqa79gbv9bkblznw45znjacr1gb5bp6kpcai583w5q") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default"))))))

(define-public crate-ltp-0.1.4 (c (n "ltp") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1z7qbrdkd1ny5ck1sybin2kfbd0hs3ziqs99bh1w6xz45gw9w2f0") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default") ("cross-char") ("char-type"))))))

(define-public crate-ltp-0.1.5 (c (n "ltp") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compact_str") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0k9rwrk0gcqdzww5327gy6zcws1npr7gjb2cmsz7il5zlsaqi1vw") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default") ("cross-char") ("char-type"))))))

(define-public crate-ltp-0.1.6 (c (n "ltp") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compact_str") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0ynf9l46853v01747r1qwgyyfl3kbwfpyj1ss46v34jkz20yl66s") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default") ("cross-char") ("char-type"))))))

(define-public crate-ltp-0.1.7 (c (n "ltp") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compact_str") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1cyz6zy09dy5nvmh6qnjpvfndx63c6l0zrs9a1h4xgphfn6gg1gb") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("default") ("cross-char") ("char-type"))))))

(define-public crate-ltp-0.1.9 (c (n "ltp") (v "0.1.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.5") (d #t) (k 0)) (d (n "cedarwood") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compact_str") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("npz"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "01fp8hzxhawd3abxq3zki9g4j4bsnv8f47x8q1hqli3f2qhqdvbq") (f (quote (("serialization" "serde" "serde_json" "apache-avro") ("parallel" "rayon") ("near-char-type") ("default") ("cross-char") ("char-type"))))))

