(define-module (crates-io #{3}# g gls) #:use-module (crates-io))

(define-public crate-gls-0.1.0 (c (n "gls") (v "0.1.0") (d (list (d (n "gl_generator") (r "^0.14.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 0)) (d (n "sdl2") (r "^0.32.2") (d #t) (t "cfg(unix)") (k 2)) (d (n "sdl2") (r "^0.32.2") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "063g7qyiqwvsb30lj6m96c3m99sahm9ffvv8nihvf1731w1fw0dn") (f (quote (("hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

(define-public crate-gls-0.1.2 (c (n "gls") (v "0.1.2") (d (list (d (n "egls") (r "^0.1") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "gl_generator") (r "^0.14.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 0)) (d (n "sdl2") (r "^0.32.2") (d #t) (t "cfg(unix)") (k 2)) (d (n "sdl2") (r "^0.32.2") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1439mjx8z3n99b1m27qn3pm78aga520v4lkjg596p15pkhc539b5") (f (quote (("hi3559av100" "egls/hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

(define-public crate-gls-0.1.3 (c (n "gls") (v "0.1.3") (d (list (d (n "egls") (r "^0.1") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "sdl2") (r "^0.32") (d #t) (t "cfg(unix)") (k 2)) (d (n "sdl2") (r "^0.32") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0q3nkvm1xskvh43808ddg8cjpflgxm9fqdv2w906658qw17pkj00") (f (quote (("hi3559av100" "egls/hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

(define-public crate-gls-0.1.4 (c (n "gls") (v "0.1.4") (d (list (d (n "egls") (r "^0.1") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "sdl2") (r "^0.32") (d #t) (t "cfg(unix)") (k 2)) (d (n "sdl2") (r "^0.32") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0jrm3psf2ibhx2kgvs9b3fxk7bhxq8fb5r5kwzynsc5gqv2m0k2d") (f (quote (("hi3559av100" "egls/hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

(define-public crate-gls-0.1.5 (c (n "gls") (v "0.1.5") (d (list (d (n "egls") (r "^0.1") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "sdl2") (r "^0.32") (d #t) (t "cfg(unix)") (k 2)) (d (n "sdl2") (r "^0.32") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1v1kra3ycsml7plfpb7n8b15lwpaf5z7gx2y51bphi6b5snyd02h") (f (quote (("hi3559av100" "egls/hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

(define-public crate-gls-0.1.6 (c (n "gls") (v "0.1.6") (d (list (d (n "egls") (r "^0.1") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "egls") (r "^0.1") (d #t) (t "aarch64-unknown-linux-gnu") (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "nalgebra") (r "^0") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (t "aarch64-unknown-linux-gnu") (k 2)) (d (n "rand") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "sdl2") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "sdl2") (r "^0.32") (f (quote ("bundled" "static-link"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hb698a4x90vfjphg7jaz1q59y66vhg69fk2jgbqn4q63rwavqq2") (f (quote (("hi3559av100" "egls/hi3559av100") ("hi3531v100") ("hi3519av100") ("hi3518ev300") ("hi3518ev200") ("hi3516ev300") ("hi3516ev200") ("gles3") ("gles2") ("gles1") ("gl4") ("gl3") ("gl2") ("default" "gles3"))))))

