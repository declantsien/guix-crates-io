(define-module (crates-io #{3}# b bex) #:use-module (crates-io))

(define-public crate-bex-0.1.0 (c (n "bex") (v "0.1.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "031r52mank2rvn7kf2cj33vp2mlrhcfg1hyhx939b7v8n73crwn3")))

(define-public crate-bex-0.1.1 (c (n "bex") (v "0.1.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1nnc8hq6pn728y6y0c6spsp9pb96ix3a8idlsczkwqzvq11dhf9n")))

(define-public crate-bex-0.1.2 (c (n "bex") (v "0.1.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0y3yli48wg067nn54vxcm2qw09w0ashhxf8sdwwq328k2xfa8dnz")))

(define-public crate-bex-0.1.3 (c (n "bex") (v "0.1.3") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)))) (h "15a8cyraqv2icwr5kbw5zicbk9hzsqw1g2h727nhzp3bdjxjl5c5")))

(define-public crate-bex-0.1.4 (c (n "bex") (v "0.1.4") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)))) (h "0arc0pccb3mkmh0pg8m00nmlrcyi2bfpj8px49vqaaikjfzhz370") (f (quote (("wip"))))))

(define-public crate-bex-0.1.5 (c (n "bex") (v "0.1.5") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)))) (h "02ssfqs9v89k63a6sb6sa388z0qdg64zddxhqiswllrllj10v93q") (f (quote (("wip") ("slowtests"))))))

(define-public crate-bex-0.1.6 (c (n "bex") (v "0.1.6") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)))) (h "1f7gbczmswbqa1piqm8qiyk4yqwvj6ln4cl5cw0635az2lv5pnmy") (f (quote (("slowtests")))) (y #t)))

(define-public crate-bex-0.1.7 (c (n "bex") (v "0.1.7") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)))) (h "1a4nw4ng02i2ac7agfwgkp23ydirzpbyhq29vrdp7xlm8jh78kp3") (f (quote (("slowtests"))))))

(define-public crate-bex-0.2.0 (c (n "bex") (v "0.2.0") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "boxcar") (r "^0.1.0") (d #t) (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 0)))) (h "1kf7397fffqfs4vki028x9108ihwlndyb0g0v376jplq9d4bb39r") (f (quote (("slowtests"))))))

