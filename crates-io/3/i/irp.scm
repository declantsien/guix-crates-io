(define-module (crates-io #{3}# i irp) #:use-module (crates-io))

(define-public crate-irp-0.1.0 (c (n "irp") (v "0.1.0") (d (list (d (n "bitintr") (r "^0.3.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "lrpeg") (r "^0.2.0") (d #t) (k 1)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "155i1czasb3a75a4q2axvl264bwp3zsqnbndh3njnqn7qbiznqd2")))

(define-public crate-irp-0.2.0 (c (n "irp") (v "0.2.0") (d (list (d (n "bitintr") (r "^0.3.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "lrpeg") (r "^0.3.0") (d #t) (k 1)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0gkwmqcj6lq2y0s1an37qv33d2skpcs910y5h8d9bdagwri8ycj1")))

(define-public crate-irp-0.2.1 (c (n "irp") (v "0.2.1") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "lrpeg") (r "^0.4") (d #t) (k 1)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "13v4k9dwziaadvc26zx8664v1zk4g65sgq965pjag8pwqxv4jm3v")))

(define-public crate-irp-0.2.2 (c (n "irp") (v "0.2.2") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "lrpeg") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "0yj1gaz4xpi6j0jkw9frh1670l61zs2w0jdwxw97m7klx6v8vb7m")))

(define-public crate-irp-0.3.0 (c (n "irp") (v "0.3.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "peg") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "1b95zvzvlngykc7zx5vj7bmg9lxqdypfp5maxndwzgm8f9qxbm0f")))

(define-public crate-irp-0.3.1 (c (n "irp") (v "0.3.1") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "cir") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "peg") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "04ys4pr9wi9752wp4s65142iq7wip6rr498pjb0jrpaq0x61b65d")))

(define-public crate-irp-0.3.2 (c (n "irp") (v "0.3.2") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "j4rs") (r "^0.15") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "peg") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "0yrk9zcj6vrfrg60f303y2g7ap4sbacnbwl4s2h0hbknz8ryh6p2") (r "1.67.0")))

(define-public crate-irp-0.3.3 (c (n "irp") (v "0.3.3") (d (list (d (n "aya-obj") (r "^0.1") (d #t) (k 2)) (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "inkwell") (r "^0.4") (f (quote ("target-bpf" "llvm17-0-force-dynamic"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "peg") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rbpf") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "146w3aapw2ami9x1mirjfd19xjm2vm0vxyx5vh46qr9rhr6lq6zp") (f (quote (("bpf" "inkwell")))) (r "1.74.0")))

