(define-module (crates-io #{3}# i ipp) #:use-module (crates-io))

(define-public crate-ipp-0.0.1 (c (n "ipp") (v "0.0.1") (d (list (d (n "byteorder") (r "^0.5.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.9.10") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "mime") (r "^0.2.2") (d #t) (k 0)))) (h "0xzxx8pfchk6d1ly0955jfx4pi1s13a31hjbpz13vhmsx8alc7jc")))

(define-public crate-ipp-0.0.2 (c (n "ipp") (v "0.0.2") (d (list (d (n "byteorder") (r "^0.5.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.9.10") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "mime") (r "^0.2.2") (d #t) (k 0)))) (h "1wgsbqhlr1apr0l5dwaq98g2wkwiq4m4zwwh6q2qf01q73dsb370")))

(define-public crate-ipp-0.0.3 (c (n "ipp") (v "0.0.3") (d (list (d (n "byteorder") (r "^0.5.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.9.10") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)))) (h "1kp5i8yra11acscxqk6hqp93rxfaw5li13rr80di9isygqlwbwfj")))

(define-public crate-ipp-0.1.0 (c (n "ipp") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)))) (h "0xazzyad6ymk1iid2cvpy5j8fy010z1j6c1z7d0igdknyz3lcr5r")))

(define-public crate-ipp-0.2.0 (c (n "ipp") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.8") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "05ahymai9grh5amynhxflqj34ac1l71745757z0r5qi3fbdc8li0") (y #t)))

(define-public crate-ipp-0.2.1 (c (n "ipp") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.8") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "18zs8blgqyvvmlfhjzwbhffad1njh8dnnb8j3hc85sv01blngh4c")))

(define-public crate-ipp-0.2.2 (c (n "ipp") (v "0.2.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "0nxbmdzsj55gj0z54v3y7zlj8x6nzc7g2gm4npjax9ms6g3w60fv")))

(define-public crate-ipp-0.3.0 (c (n "ipp") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "ipp-client") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ipp-proto") (r "^0.3.0") (d #t) (k 0)) (d (n "ipp-server") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ipp-util") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)))) (h "0izz1g9m034cf70arlhr7baqryiks44f7vbb2i369jrkgkrbaw1y") (f (quote (("util" "ipp-util") ("server" "ipp-server") ("default" "client") ("client" "ipp-client"))))))

(define-public crate-ipp-1.0.0 (c (n "ipp") (v "1.0.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (k 0)) (d (n "isahc") (r "^0.8") (f (quote ("static-curl" "http2"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "130dak10z5r9c10vbcrn0j9yp9bi5ky47nxymn41bhdi9qwbxva5") (f (quote (("default" "client") ("client" "isahc"))))))

(define-public crate-ipp-1.0.1 (c (n "ipp") (v "1.0.1") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (k 0)) (d (n "isahc") (r "^0.9") (f (quote ("static-curl"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "1mvf19fd83xb11smjhz9zspb5zx604zid9vk2y1n4qx76qr58khs") (f (quote (("default" "client") ("client" "isahc"))))))

(define-public crate-ipp-2.0.0 (c (n "ipp") (v "2.0.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^0.9") (f (quote ("static-curl"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("native-tls" "stream"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1r3nw1sgd2ard963miqcp2wk1jrn6wg5adwyb2i38hi11zpvh29x") (f (quote (("default-client" "client-isahc") ("default" "default-client") ("client-reqwest" "reqwest" "pin-project") ("client-isahc" "isahc"))))))

(define-public crate-ipp-3.0.0 (c (n "ipp") (v "3.0.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "stream"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)))) (h "0dnvd3sz79zxlycn80vg1dkgc1cdb15nwl36hqmjab8byzpnaqac") (f (quote (("default" "client") ("client" "async" "reqwest" "tokio-util") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-3.0.1 (c (n "ipp") (v "3.0.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "stream"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)))) (h "1sxricfjqqbca7vc6h4n0nbpy6v0w5ivkala6x2gx9zxqx6m4hdw") (f (quote (("default" "client") ("client" "async" "reqwest" "tokio-util") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-3.0.2 (c (n "ipp") (v "3.0.2") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.4") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)))) (h "13whvyw06hj6yhwk9kbdqnl0yvdqn6wv55m30n6m60hz6mdw4ciq") (f (quote (("tls" "reqwest/native-tls") ("default" "client" "tls") ("client" "async" "reqwest" "tokio-util") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-3.0.3 (c (n "ipp") (v "3.0.3") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)))) (h "0sc10my8f6zi462rnqg65s6rnvjlahxpmb48x72qa9164g0175wh") (f (quote (("tls" "reqwest/native-tls") ("default" "client" "tls") ("client" "async" "reqwest" "tokio-util") ("async" "futures-util" "futures-executor")))) (s 2) (e (quote (("serde" "dep:serde" "bytes/serde"))))))

(define-public crate-ipp-4.0.0 (c (n "ipp") (v "4.0.0") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (o #t) (k 0)))) (h "12garx7y93yd8l5hix4qank12i102yfcsq2g7rn2g45k22mhwyqy") (f (quote (("default" "async-client" "client" "async-client-tls" "client-tls") ("client-tls" "client" "native-tls" "ureq/native-tls") ("client" "ureq" "base64") ("async-client-tls" "async-client" "native-tls" "reqwest/native-tls") ("async-client" "async" "reqwest" "tokio-util" "base64") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-5.0.0 (c (n "ipp") (v "5.0.0") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (o #t) (k 0)))) (h "0idp8s6pcl4xxr6ybbra74kb5a3ypsgq7vk6ssxyz2nb7l14sciz") (f (quote (("default" "async-client" "client" "async-client-tls" "client-tls") ("client-tls" "client" "native-tls" "ureq/native-tls") ("client" "ureq" "base64") ("async-client-tls" "async-client" "native-tls" "reqwest/native-tls") ("async-client" "async" "reqwest" "tokio-util" "base64") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-5.0.1 (c (n "ipp") (v "5.0.1") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (o #t) (k 0)))) (h "1rnq89j2sv3gdb100nfwz0g267h7w3b66d9ldgzj8gs4wi1r0dc1") (f (quote (("default" "async-client" "client" "async-client-tls" "client-tls") ("client-tls" "client" "native-tls" "ureq/native-tls") ("client" "ureq" "base64") ("async-client-tls" "async-client" "native-tls" "reqwest/native-tls") ("async-client" "async" "reqwest" "tokio-util" "base64") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-5.0.2 (c (n "ipp") (v "5.0.2") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (o #t) (k 0)))) (h "0n1whpknzb8ps3fy09yrfnfwac9baqibdn059dlyj73ygrmz4xvv") (f (quote (("default" "async-client" "client" "async-client-tls" "client-tls") ("client-tls" "client" "native-tls" "ureq/native-tls") ("client" "ureq" "base64") ("async-client-tls" "async-client" "native-tls" "reqwest/native-tls") ("async-client" "async" "reqwest" "tokio-util" "base64") ("async" "futures-util" "futures-executor"))))))

(define-public crate-ipp-5.0.3 (c (n "ipp") (v "5.0.3") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (o #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "compat"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (o #t) (k 0)))) (h "0ylb2gfkyb1lmmapk07m9flhc93ad6fha8cby5xg2b8aib8mflvn") (f (quote (("default" "async-client" "client" "async-client-tls" "client-tls") ("client-tls" "client" "native-tls" "ureq/native-tls") ("client" "ureq" "base64") ("async-client-tls" "async-client" "native-tls" "reqwest/native-tls") ("async-client" "async" "reqwest" "tokio-util" "base64") ("async" "futures-util" "futures-executor"))))))

