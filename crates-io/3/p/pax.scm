(define-module (crates-io #{3}# p pax) #:use-module (crates-io))

(define-public crate-pax-0.2.0 (c (n "pax") (v "0.2.0") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.0.4") (d #t) (k 0)) (d (n "json") (r "^0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)))) (h "16b754jsw91jqcfzhh1c4h5rl462gdd90fy889qsjsgc2jjs3l9q") (y #t)))

(define-public crate-pax-0.2.1 (c (n "pax") (v "0.2.1") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.0.4") (d #t) (k 0)) (d (n "json") (r "^0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)))) (h "1l6wykh1pvi3bsilcja9ximyjccam5vk977jxbnsv3gsx5xzdb84") (y #t)))

(define-public crate-pax-0.2.2 (c (n "pax") (v "0.2.2") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.0.4") (d #t) (k 0)) (d (n "json") (r "^0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)))) (h "1byani77ngc7x59wzvnc03sjm7h2hjln814q5pinfcqg9kgfvpdf") (y #t)))

(define-public crate-pax-0.2.3 (c (n "pax") (v "0.2.3") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1n0gvqdcpkdzi67zar6sxva6h64c1igdc6b13xjk42bvf62dkdd4") (f (quote (("default") ("bench")))) (y #t)))

(define-public crate-pax-0.3.0 (c (n "pax") (v "0.3.0") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0giwfbvrsikj33wl52s7zdlq80kq38x28nwri5qh9438sd8814wf") (f (quote (("default") ("bench")))) (y #t)))

(define-public crate-pax-0.3.1 (c (n "pax") (v "0.3.1") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "18cba3c04dsw5s0h5jysv9b54bjgn83nq4d0l5m492khpmww617j") (f (quote (("default") ("bench")))) (y #t)))

(define-public crate-pax-0.4.0 (c (n "pax") (v "0.4.0") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "02pvc5ry2wk23bw1n41p7snaajich8016ibs9qx7xqgqyf1j6j6b") (f (quote (("default") ("bench")))) (y #t)))

