(define-module (crates-io #{3}# d ddo) #:use-module (crates-io))

(define-public crate-ddo-0.1.0 (c (n "ddo") (v "0.1.0") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "02sxhlizvwy77kywn2b67pzn9jjrfd8aaqfin4rpm8pbx0v6iry8")))

(define-public crate-ddo-0.1.1 (c (n "ddo") (v "0.1.1") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "07f7zl9z91i73vp1zzlaib23h0241kbnn7wbdy5r6q6rczb3cvnz")))

(define-public crate-ddo-0.1.2 (c (n "ddo") (v "0.1.2") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "1isc21rlhwcvp7y3qmk79dnxa1mdyb24cjcn07sr0bqixw8gzv4x")))

(define-public crate-ddo-0.1.3 (c (n "ddo") (v "0.1.3") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "04r3by8ab5h2y6v5km2fvj84prk1hxsg60wayvmsifxsw36kfkc2")))

(define-public crate-ddo-0.1.4 (c (n "ddo") (v "0.1.4") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "15ry4islnam947d785y0d2kchc7rphd13p433s16yamwlb3ba2xd")))

(define-public crate-ddo-0.1.5 (c (n "ddo") (v "0.1.5") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)))) (h "0q7gvff5m2m1k4alh9zxvxnq99dkik1km2xlf0gxvy2g94cas1bi")))

(define-public crate-ddo-0.1.6 (c (n "ddo") (v "0.1.6") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.11") (d #t) (k 2)))) (h "1i0i9hw9953azcqyngr4fhqs4hacydb3fsym43dq258b9bk8mlwv")))

(define-public crate-ddo-0.2.0 (c (n "ddo") (v "0.2.0") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "0dq42igwzg96l0bp6fidnsn9ny8xkxxfd5j2ri0r1nx956aqm3ap")))

(define-public crate-ddo-0.2.1 (c (n "ddo") (v "0.2.1") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "1aq693flq0ssnnv6c51k8b5p8spg6chc3hhhlr5vcwsgxj1p1w9n")))

(define-public crate-ddo-0.2.2 (c (n "ddo") (v "0.2.2") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "0rvx6alrghpng3vwcxg7rnylfk0mq660kp7mraprqz0617azf7zs")))

(define-public crate-ddo-0.2.3 (c (n "ddo") (v "0.2.3") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "059ynrhd59s502z9akfmpa7kc8cgnfah3l43adnck7xhjqda4100")))

(define-public crate-ddo-0.3.1 (c (n "ddo") (v "0.3.1") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "05vqhl9gkzk45wd2vj0qmjd5g1a8zdb4ha5iq8d1pv6cajyk7dkb")))

(define-public crate-ddo-0.3.0 (c (n "ddo") (v "0.3.0") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "1s9nib34yj41h92r44lzlsxj2vv3nk9gql1awayhb9sids3bpys9")))

(define-public crate-ddo-0.3.2 (c (n "ddo") (v "0.3.2") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "1pqiyy6c845jd3b6gby1vkcg8amr3kx7gsa1x7m0rpsbwj7qs750")))

(define-public crate-ddo-0.3.3 (c (n "ddo") (v "0.3.3") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "06kdnmhp62lkds6gbmwjsybxw0nirs1sjpg4g1f3in5shnyrlhrd")))

(define-public crate-ddo-0.3.4 (c (n "ddo") (v "0.3.4") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "1fllsi5l87cssxm8blysjwkgjj5ny72l8i7byd80rky8l8916zkw")))

(define-public crate-ddo-0.3.5 (c (n "ddo") (v "0.3.5") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "150ln0s9anbkmsnr1ryv38nz3fjd5qdda902cj3sb178syh9qz3y") (y #t)))

(define-public crate-ddo-0.3.6 (c (n "ddo") (v "0.3.6") (d (list (d (n "binary-heap-plus") (r "^0.2.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "0z4gdc4ah032vzw853v0yvq9rgjhaypny1ggkxyz9l1f7c6y10q5")))

(define-public crate-ddo-0.3.7 (c (n "ddo") (v "0.3.7") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "0lvgjxbz21c0zb7kfa6w5l9pifzswz8k1igczkndf4x0r5l8p60d")))

(define-public crate-ddo-0.3.8 (c (n "ddo") (v "0.3.8") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "1kxh1arbrf4851yir34nrg43qcggkawbflmbw5bghis1pzylp74j")))

(define-public crate-ddo-0.3.9 (c (n "ddo") (v "0.3.9") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "metrohash") (r "^1.0.6") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "1n29mbpzgk0mgw60c4wkry73wwgar8ywcwxq30ygq3g2xd4q2d5a")))

(define-public crate-ddo-0.3.10 (c (n "ddo") (v "0.3.10") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "0vj9wdhni5r51qpgg31jp4jwnhdfybwmn6w4z453a3s57hj0n03b")))

(define-public crate-ddo-0.3.11 (c (n "ddo") (v "0.3.11") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "smallbitset") (r "^0.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "1yl9xvsb65qhdmnsaasyyl4gh1bd214zly1xwzgjcs2iijabrzjg")))

(define-public crate-ddo-0.3.12 (c (n "ddo") (v "0.3.12") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "smallbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "1i0kfwhmz3dnilwv3agz333j5lszpjg6jr1a98pqsq10yh2cb8wm")))

(define-public crate-ddo-0.4.0 (c (n "ddo") (v "0.4.0") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "smallbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "0xcc1j3shwpkw7hcxx3sy3rbgqzh2daymlq986aixm6jf4djqp9x")))

(define-public crate-ddo-0.5.0 (c (n "ddo") (v "0.5.0") (d (list (d (n "binary-heap-plus") (r "^0.4.0") (d #t) (k 0)) (d (n "bitset-fixed") (r "^0.1.0") (d #t) (k 0)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "mock-it") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smallbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)))) (h "014j4gk0jzc0kgrvk6zss2712ab8cz6qm8n6gsfpw3qlzdvr7x32")))

(define-public crate-ddo-1.0.0 (c (n "ddo") (v "1.0.0") (d (list (d (n "binary-heap-plus") (r "^0.5.0") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 2)) (d (n "bit-vec") (r "^0.6") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compare") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smallbitset") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "0ngf97zvp08sgxkjzrfs1db1wy76g3k1s68qjpqnzazycl7a1xbm")))

(define-public crate-ddo-1.1.0 (c (n "ddo") (v "1.1.0") (d (list (d (n "binary-heap-plus") (r "^0.5") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 2)) (d (n "bit-vec") (r "^0.6") (d #t) (k 2)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compare") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "smallbitset") (r "^0.7.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "0bgjqdm77ify9kai3256avf305rp49cydlfpamz8bga693hg3kwn")))

(define-public crate-ddo-1.2.0 (c (n "ddo") (v "1.2.0") (d (list (d (n "binary-heap-plus") (r "^0.5") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 2)) (d (n "bit-vec") (r "^0.6") (d #t) (k 2)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compare") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "ordered-float") (r "^3.6.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "smallbitset") (r "^0.7.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "010z0v7myyfnwgvi8vbvbzff7qvjahid4c93wmndi3r61mh6k39r")))

(define-public crate-ddo-2.0.0 (c (n "ddo") (v "2.0.0") (d (list (d (n "binary-heap-plus") (r "^0.5") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 2)) (d (n "bit-vec") (r "^0.6") (d #t) (k 2)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "compare") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "ordered-float") (r "^3.6.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "smallbitset") (r "^0.7.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "1316xch20hqvb974r88xrpi950i8cpx34rmq2pd6iqj5g59mx459")))

