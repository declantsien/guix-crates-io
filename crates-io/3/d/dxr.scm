(define-module (crates-io #{3}# d dxr) #:use-module (crates-io))

(define-public crate-dxr-0.1.0 (c (n "dxr") (v "0.1.0") (d (list (d (n "axum") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1chb6ypnswawkyxba2p6ncfgwa8mnq80qgawhj5b97ww81p0fis3") (f (quote (("server" "axum") ("nil" "dxr_shared/nil") ("i8" "dxr_shared/i8") ("derive" "dxr_derive") ("default" "dxr_shared/default" "client" "derive" "i8" "nil") ("client" "reqwest" "url")))) (r "1.56.0")))

(define-public crate-dxr-0.1.1 (c (n "dxr") (v "0.1.1") (d (list (d (n "axum") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0nw1fmnh01aqan133413d5lw3zb569frrnl43300ax6nxhmj6p3s") (f (quote (("server" "axum") ("nil" "dxr_shared/nil") ("i8" "dxr_shared/i8") ("derive" "dxr_derive") ("default" "dxr_shared/default" "client" "derive" "i8" "nil") ("client" "reqwest" "url")))) (r "1.56.0")))

(define-public crate-dxr-0.2.0 (c (n "dxr") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.2.0") (k 0)) (d (n "insta") (r "^1.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "022idgg1fhds7ms1m4lf9lgabvx4jx0q98n20xsqfwm4byrjnbgc") (f (quote (("server" "async-trait" "axum") ("nil" "dxr_shared/nil") ("i8" "dxr_shared/i8") ("derive" "dxr_derive") ("default" "dxr_shared/default" "client" "derive" "i8" "nil") ("client" "reqwest" "url")))) (r "1.56.0")))

(define-public crate-dxr-0.2.1 (c (n "dxr") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.2.1") (k 0)) (d (n "insta") (r "^1.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1r7ap8y6xlqs1vdzp83sl8zm2v2y1as05cwyskrghzgis95d07g5") (f (quote (("server" "async-trait" "axum") ("nil" "dxr_shared/nil") ("i8" "dxr_shared/i8") ("derive" "dxr_derive") ("default" "dxr_shared/default" "client" "derive" "i8" "nil") ("client" "reqwest" "url")))) (r "1.56.0")))

(define-public crate-dxr-0.3.1 (c (n "dxr") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "dxr_derive") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1x8bj12y6spq4gsbbji184c8kgrvarf3xxhc5csd84fkvwsdacfk") (f (quote (("server" "http") ("nil") ("i8") ("derive" "dxr_derive") ("default" "client" "server" "derive") ("client" "reqwest" "http" "url") ("axum-server" "server" "async-trait" "axum" "tokio/time")))) (r "1.56.0")))

(define-public crate-dxr-0.4.0 (c (n "dxr") (v "0.4.0") (d (list (d (n "dxr_client") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "1qhnvwrlhdvjpv084w3cbczsz1f4ms863q5g5bm5dfa204ywplw3") (f (quote (("default" "client")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client" "dep:dxr_client")))) (r "1.60.0")))

(define-public crate-dxr-0.5.0 (c (n "dxr") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "08fsxdg1cim7kqmz5632dzx72f7rbi2npjhl2q2znl4ksvrm6w8b") (f (quote (("default" "client")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client" "dep:dxr_client")))) (r "1.61.0")))

(define-public crate-dxr-0.5.1 (c (n "dxr") (v "0.5.1") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "1v3yjrl84w2cb1rwpay5bgkvbs9vxrafiwf3zdm59l3vlf47qqkh") (f (quote (("default" "client")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client" "dep:dxr_client")))) (r "1.61.0")))

(define-public crate-dxr-0.5.2 (c (n "dxr") (v "0.5.2") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "dxr_derive") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "16syifcqvmi7n9pwv1m9fcik9sxfz3ijipcllnlh0gg1bpczvwl3") (f (quote (("default" "client")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client" "dep:dxr_client")))) (r "1.61.0")))

(define-public crate-dxr-0.5.3 (c (n "dxr") (v "0.5.3") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.3") (o #t) (k 0)) (d (n "dxr_derive") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "1drzrgczp9ck32lb7wna2xk98hpkf4c1nxhjza843hb02b7f66pd") (f (quote (("default" "client" "client-default-tls")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client-rustls-tls" "client" "dxr_client?/rustls-tls") ("client-native-tls" "client" "dxr_client?/native-tls") ("client-default-tls" "client" "dxr_client?/default-tls") ("client" "dep:dxr_client")))) (r "1.63.0")))

(define-public crate-dxr-0.5.4 (c (n "dxr") (v "0.5.4") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.4") (o #t) (k 0)) (d (n "dxr_derive") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "0fvvfvh1w0ww2vcrjxq9jkhws0csnrciaixn9y4yzzrnkzbs9a0i") (f (quote (("default" "client" "client-default-tls")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client-rustls-tls" "client" "dxr_client?/rustls-tls") ("client-native-tls" "client" "dxr_client?/native-tls") ("client-default-tls" "client" "dxr_client?/default-tls") ("client" "dep:dxr_client")))) (r "1.63.0")))

(define-public crate-dxr-0.6.0-beta.1 (c (n "dxr") (v "0.6.0-beta.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (k 2)) (d (n "dxr_derive") (r "^0.6.0-beta.1") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0f4wmx92mlngdklkra9nfi20sr4n81186hdbgqxrsvzxsc0186ir") (f (quote (("nil") ("multicall") ("i8")))) (s 2) (e (quote (("derive" "dep:dxr_derive")))) (r "1.65.0")))

(define-public crate-dxr-0.6.0-beta.2 (c (n "dxr") (v "0.6.0-beta.2") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (k 2)) (d (n "dxr_derive") (r "^0.6.0-beta.2") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "1y2kxsmg77p0wsnjmfp88lvj58177g28w999yilk7891xwkmlhf2") (f (quote (("nil") ("multicall") ("i8")))) (s 2) (e (quote (("derive" "dep:dxr_derive")))) (r "1.65.0")))

(define-public crate-dxr-0.6.0 (c (n "dxr") (v "0.6.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (k 2)) (d (n "dxr_derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "17xscnfqpr7cy1hzjbp6pr9nhkjpwzmbwp9gp6qj58b3d6b3cp18") (f (quote (("nil") ("multicall") ("i8")))) (s 2) (e (quote (("derive" "dep:dxr_derive")))) (r "1.65.0")))

(define-public crate-dxr-0.6.1 (c (n "dxr") (v "0.6.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (k 2)) (d (n "dxr_derive") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "19aisr8ccpsvynxzwb6ia0325041s9kz8dq1c56j7lzjwrxbx0mv") (f (quote (("nil") ("multicall") ("i8")))) (s 2) (e (quote (("derive" "dep:dxr_derive")))) (r "1.65.0")))

(define-public crate-dxr-0.6.2 (c (n "dxr") (v "0.6.2") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (k 2)) (d (n "dxr_derive") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "1wzzhrh2ij39a1xlzi0ih5bk1jyh0bfzs3s6wj1arl0war8s3pr3") (f (quote (("nil") ("multicall") ("i8")))) (s 2) (e (quote (("derive" "dep:dxr_derive")))) (r "1.67.0")))

(define-public crate-dxr-0.5.5 (c (n "dxr") (v "0.5.5") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 2)) (d (n "dxr_client") (r "^0.5.5") (o #t) (k 0)) (d (n "dxr_derive") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "dxr_server") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "dxr_server_axum") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "dxr_shared") (r "^0.5.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.56") (d #t) (k 2)))) (h "1jppzzf9p1ws2mzk3yq14hsm844xwxr1wks1bg6y86jlid9lswz0") (f (quote (("default" "client" "client-default-tls")))) (s 2) (e (quote (("server-axum" "dep:dxr_server_axum" "server") ("server" "dep:dxr_server") ("nil" "dxr_shared/nil" "dxr_client?/nil" "dxr_server?/nil" "dxr_server_axum?/nil") ("i8" "dxr_shared/i8" "dxr_client?/i8" "dxr_server?/i8" "dxr_server_axum?/i8") ("derive" "dep:dxr_derive") ("client-rustls-tls" "client" "dxr_client?/rustls-tls") ("client-native-tls" "client" "dxr_client?/native-tls") ("client-default-tls" "client" "dxr_client?/default-tls") ("client" "dep:dxr_client")))) (r "1.63.0")))

