(define-module (crates-io #{3}# d dmm) #:use-module (crates-io))

(define-public crate-dmm-0.3.0 (c (n "dmm") (v "0.3.0") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "wrap_help" "cargo" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "const_cmp") (r "^0.0.0") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "highway") (r "^1.1.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rb") (r "^0.4") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1sw2mviha8m1j75qsci6ar481svr30gy10r76bwfg37j8k96jbyv")))

(define-public crate-dmm-0.4.0 (c (n "dmm") (v "0.4.0") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "wrap_help" "cargo" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "const_cmp") (r "^0.0.0") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "highway") (r "^1.1.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rb") (r "^0.4") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0x9znmf15kc0cba5wyfbcp4whw73rgr3ahr7n2amz1drkfdjj4ly")))

(define-public crate-dmm-0.5.0 (c (n "dmm") (v "0.5.0") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "wrap_help" "cargo" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "const_cmp") (r "^0.0.0") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "highway") (r "^1.1.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rb") (r "^0.4") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0286cgi42h44vdli9hk3f39d678x8ghjzm2c4vi745hyfqr4h63j")))

(define-public crate-dmm-0.5.1 (c (n "dmm") (v "0.5.1") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "wrap_help" "cargo" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "const_cmp") (r "^0.0.0") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "highway") (r "^1.1.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rb") (r "^0.4") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1zcpwsl7cv561azaqk9pamnpn6k8l4zdi2j2x4ci1409fc7xijqp")))

(define-public crate-dmm-0.6.0 (c (n "dmm") (v "0.6.0") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "wrap_help" "cargo" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "const_cmp") (r "^0.0.0") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "highway") (r "^1.1.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.10") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ratatui") (r "^0.24") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rb") (r "^0.4") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0k937pz6gn12ibm9jbf89njfxjfajgf8275gajgfgqsa859an87y")))

