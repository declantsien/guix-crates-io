(define-module (crates-io #{3}# d dkg) #:use-module (crates-io))

(define-public crate-dkg-0.0.0 (c (n "dkg") (v "0.0.0") (h "0whm92bc6srqpzy1vvnq8cwmn5m6rfs5w8msv506zh5dy0jkc8xq")))

(define-public crate-dkg-0.1.0 (c (n "dkg") (v "0.1.0") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "dleq") (r "^0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "multiexp") (r "^0.2") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.1.0") (d #t) (k 0) (p "schnorr-signatures")) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transcript") (r "^0.1.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "09kv5w9gkdw6y94gg32prfixw0kcm8sl0555qicmcl4rcg5jjdxx") (f (quote (("tests"))))))

(define-public crate-dkg-0.2.0 (c (n "dkg") (v "0.2.0") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "dleq") (r "^0.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "multiexp") (r "^0.2") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.2") (d #t) (k 0) (p "schnorr-signatures")) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transcript") (r "^0.2") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1w6qw1hvzyyfhnfr5l6jkvc84mkjdgv80vrv95vvnmwvzdy855g1") (f (quote (("tests"))))))

(define-public crate-dkg-0.3.0 (c (n "dkg") (v "0.3.0") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.2") (f (quote ("ristretto"))) (d #t) (k 2)) (d (n "dleq") (r "^0.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "multiexp") (r "^0.3") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.3") (d #t) (k 0) (p "schnorr-signatures")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "06l56z7i1021phs4ghxjwj6x7k04b4v99sq4cnijqhjsxxddiymq") (f (quote (("tests")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-dkg-0.4.0 (c (n "dkg") (v "0.4.0") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "ciphersuite") (r "^0.3") (f (quote ("ristretto"))) (d #t) (k 2)) (d (n "dleq") (r "^0.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "multiexp") (r "^0.3") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.4") (d #t) (k 0) (p "schnorr-signatures")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1zn6g51hwzds3nifclqrqyf2cc83p7k2d03nmzsd7aa8slqrv9y9") (f (quote (("tests")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-dkg-0.5.0 (c (n "dkg") (v "0.5.0") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (k 0)) (d (n "ciphersuite") (r "^0.4") (k 0)) (d (n "ciphersuite") (r "^0.4") (f (quote ("ristretto"))) (k 2)) (d (n "dleq") (r "^0.4") (k 0)) (d (n "multiexp") (r "^0.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "schnorr") (r "^0.5") (k 0) (p "schnorr-signatures")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "std-shims") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1") (o #t) (k 0)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (k 0)))) (h "0wfsmfv31k521n2f4z99d2gakwkv8z2rya83g20zkn6vr4x17632") (f (quote (("tests" "rand_core/getrandom") ("std" "thiserror" "rand_core/std" "std-shims/std" "ciphersuite/std" "multiexp/batch" "multiexp/std" "schnorr/std" "dleq/serialize") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.70")))

(define-public crate-dkg-0.5.1 (c (n "dkg") (v "0.5.1") (d (list (d (n "chacha20") (r "^0.9") (f (quote ("zeroize"))) (k 0)) (d (n "ciphersuite") (r "^0.4.1") (k 0)) (d (n "dleq") (r "^0.4.1") (k 0)) (d (n "multiexp") (r "^0.4") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "schnorr") (r "^0.5.1") (k 0) (p "schnorr-signatures")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "std-shims") (r "^0.1") (k 0)) (d (n "thiserror") (r "^1") (o #t) (k 0)) (d (n "transcript") (r "^0.3.2") (f (quote ("recommended"))) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (k 0)))) (h "0ps26yywdlj5xmv2v45g9gsyhbnvq56l6ry9prakqlh0dxgmh9wj") (f (quote (("tests" "rand_core/getrandom") ("std" "thiserror" "rand_core/std" "std-shims/std" "ciphersuite/std" "multiexp/batch" "multiexp/std" "schnorr/std" "dleq/serialize") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.70")))

