(define-module (crates-io #{3}# t tuf) #:use-module (crates-io))

(define-public crate-tuf-0.0.1 (c (n "tuf") (v "0.0.1") (d (list (d (n "chrono") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^1.4") (d #t) (k 0)))) (h "0a76hpwq60d8v03q21jam1jjfqdhcys0g8llr3qpi0zasf0mkbzm") (y #t)))

(define-public crate-tuf-0.0.2 (c (n "tuf") (v "0.0.2") (d (list (d (n "chrono") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^1.4") (d #t) (k 0)))) (h "1ym11h68r8xfzsy5xm3xwlj6c9a4w97jqr13pbzffwnyjk3p8y0w") (f (quote (("default" "cli") ("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.0.3 (c (n "tuf") (v "0.0.3") (d (list (d (n "chrono") (r "= 0.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1g7xzl0cigwxdfvqyp40wp3sjpf7686x648sq4356is4ygjs4kwb") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.0 (c (n "tuf") (v "0.1.0") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1hnzvfc062cdgfsr4sca8j5b0x3v8yz2fsm2i18z3x51dnhfdv5x") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.1 (c (n "tuf") (v "0.1.1") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mszdbyrnbwbsd3swf5bs4nhxd3r9nkqv8ph6jqz94jpddlrymbw") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.2 (c (n "tuf") (v "0.1.2") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gsig4x47rhd2k1wrvdjw8xbcbrmckb6ynxiwibqxz9z1qawcd8m") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.3 (c (n "tuf") (v "0.1.3") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ph63881yq1aiw1si283fav9mikb6chbr1fyn2fps3ccx4az7gvr") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.4 (c (n "tuf") (v "0.1.4") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0jqg83zb3z024lrllq5wazr1r0nhns71ih9pflb3fx4xzbp7rv53") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.5 (c (n "tuf") (v "0.1.5") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zal6ir6hwyjqg38jb0h2iig9fi45zw7l71837qnrz20676kfh6d") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.6 (c (n "tuf") (v "0.1.6") (d (list (d (n "chrono") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "pem") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1cnv7hryrphdrn6ar922yr3lra70xfqaqffrn44329363hyji9c8") (f (quote (("cli" "clap")))) (y #t)))

(define-public crate-tuf-0.1.7 (c (n "tuf") (v "0.1.7") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.23") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "pem") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1qv0cbrq83drdfsj8s3m6bhkyla90icr0xv4zvddbg4r87cigciy") (f (quote (("cli" "clap"))))))

(define-public crate-tuf-0.2.0 (c (n "tuf") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "derp") (r "^0.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 2)) (d (n "ring") (r "^0.9.4") (f (quote ("rsa_signing"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^2.1.5") (d #t) (k 0)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0j34wwm9d04kvc9vykjpvx5hxjq6pm3laavsmclcaaps50ydgrds")))

(define-public crate-tuf-0.3.0-alpha1 (c (n "tuf") (v "0.3.0-alpha1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "derp") (r "^0.0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.11") (f (quote ("rsa_signing"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^2.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "03fa67px06i35smjx2dml1hgnm63wp2bkj7rwxyhqsk8xxcyy137") (f (quote (("cli" "clap"))))))

(define-public crate-tuf-0.3.0-alpha2 (c (n "tuf") (v "0.3.0-alpha2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "derp") (r "^0.0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.11") (f (quote ("rsa_signing"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^2.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)))) (h "0frj7viv3njid2phl9zqh4ncc7jk7vk38kqbac160mjz7fxj99d1") (f (quote (("cli" "clap"))))))

(define-public crate-tuf-0.3.0-alpha3 (c (n "tuf") (v "0.3.0-alpha3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "derp") (r "^0.0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.11") (f (quote ("rsa_signing"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^2.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.5") (d #t) (k 0)))) (h "0n24483x4z09c5lj1awspbdk4ipa0v4f8f75900j28vxfqd2jjlg") (f (quote (("cli" "clap"))))))

(define-public crate-tuf-0.3.0-beta1 (c (n "tuf") (v "0.3.0-beta1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.13") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.2") (f (quote ("stream"))) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1l26dahq7hyy1c9b57x1yygzr2af5rbxvbmdk34mql03wkivj6qq") (f (quote (("default" "hyper/default"))))))

(define-public crate-tuf-0.3.0-beta2 (c (n "tuf") (v "0.3.0-beta2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.2") (f (quote ("stream"))) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "16cdwqgyz79xfjh8hsprq9sv14wcczp83cjvzsgjy4x1kji40aya") (f (quote (("default" "hyper/default"))))))

(define-public crate-tuf-0.3.0-beta3 (c (n "tuf") (v "0.3.0-beta3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper_013") (r "^0.13.2") (f (quote ("stream"))) (o #t) (k 0) (p "hyper")) (d (n "hyper_014") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0) (p "hyper")) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "157wnrvs3bmj22lpzrv0ijxn84r5mwjrsigdrg85rvmp6ayyq27x") (f (quote (("default" "hyper_014/tcp"))))))

(define-public crate-tuf-0.3.0-beta4 (c (n "tuf") (v "0.3.0-beta4") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper_013") (r "^0.13.2") (f (quote ("stream"))) (o #t) (k 0) (p "hyper")) (d (n "hyper_014") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0) (p "hyper")) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1xxl72cvpiff06ljzszzg9786qqgvvfx746a9kw78whh5fjsl25s") (f (quote (("unstable_rsa") ("default" "hyper_014/tcp"))))))

(define-public crate-tuf-0.3.0-beta5 (c (n "tuf") (v "0.3.0-beta5") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper_013") (r "^0.13.2") (f (quote ("stream"))) (o #t) (k 0) (p "hyper")) (d (n "hyper_014") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0) (p "hyper")) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "05z4qckdj4xg9ng1zwfsifgaygz8npjnr76paxkz85f0rykbxvj3") (f (quote (("unstable_rsa") ("default" "hyper_014/tcp"))))))

(define-public crate-tuf-0.3.0-beta6 (c (n "tuf") (v "0.3.0-beta6") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper_013") (r "^0.13.2") (f (quote ("stream"))) (o #t) (k 0) (p "hyper")) (d (n "hyper_014") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0) (p "hyper")) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0gphll9k0w6i48mb7zda1dn1y26kfbid0x0fih46gpxf7z7jlwqh") (f (quote (("unstable_rsa") ("default" "hyper_014/tcp"))))))

(define-public crate-tuf-0.3.0-beta7 (c (n "tuf") (v "0.3.0-beta7") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper_013") (r "^0.13.2") (f (quote ("stream"))) (o #t) (k 0) (p "hyper")) (d (n "hyper_014") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0) (p "hyper")) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0m5k99w1p5387ldja8838cyb28g4spsf585l34lnwgvz8yy068qn") (f (quote (("unstable_rsa") ("default" "hyper_014/tcp"))))))

(define-public crate-tuf-0.3.0-beta8 (c (n "tuf") (v "0.3.0-beta8") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0qqwpradmjib3i4f8ss5xqm093zfls0d3fh5ab5sv5ilp12i8ccp") (f (quote (("unstable_rsa") ("default" "hyper" "hyper/tcp"))))))

(define-public crate-tuf-0.3.0-beta9 (c (n "tuf") (v "0.3.0-beta9") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "197bmcsl2daqvdgdkx3nq5l5byndxiag7p9ald407fxnadrmb618") (f (quote (("unstable_rsa") ("default" "hyper" "hyper/tcp"))))))

(define-public crate-tuf-0.3.0-beta10 (c (n "tuf") (v "0.3.0-beta10") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1rpx85yl00g910szkpvw34rz3jb3chfnh0g0941hl1v33l3jk232") (f (quote (("unstable_rsa") ("default" "hyper" "hyper/tcp"))))))

(define-public crate-tuf-0.3.0-beta11 (c (n "tuf") (v "0.3.0-beta11") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0z8vnf6hzx3mvpxqryv2wvs9vawggblvmgvkya36xqkr9pbswlqx") (f (quote (("unstable_rsa") ("default" "hyper" "hyper/tcp"))))))

(define-public crate-tuf-0.3.0-beta12 (c (n "tuf") (v "0.3.0-beta12") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("io"))) (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.15") (f (quote ("stream" "client" "http1"))) (o #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "13kr0f4j6vaiycm0ipq8cbr7bs8zd677v2rvhr179wcbvk807m3b") (f (quote (("default" "hyper" "hyper/tcp"))))))

