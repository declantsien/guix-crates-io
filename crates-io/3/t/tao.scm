(define-module (crates-io #{3}# t tao) #:use-module (crates-io))

(define-public crate-tao-0.1.0 (c (n "tao") (v "0.1.0") (h "0zakv6hdgagy93lq5z2wncn3idh5xb5kxga8qsvg90h4g90i331c")))

(define-public crate-tao-0.2.0 (c (n "tao") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "192n28yqz6v70s2ny9291kx2qy0p2n6j6izb811v56vr110g2y5q") (f (quote (("menu" "sourceview" "libappindicator") ("default" "menu"))))))

(define-public crate-tao-0.2.1 (c (n "tao") (v "0.2.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07fz1cwgg3sw0qrrnqmbhkx3adkp089iilb6j1iz2z57j74d480p") (f (quote (("menu" "sourceview" "libappindicator") ("default" "menu"))))))

(define-public crate-tao-0.2.2 (c (n "tao") (v "0.2.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "02bg6dkh0rzw0jqlhz0g4zmqimkdhicgbxigli9d6p61kfx80bfx") (f (quote (("menu" "sourceview" "libappindicator") ("dox" "gtk/dox" "sourceview/dox") ("default" "menu"))))))

(define-public crate-tao-0.2.3 (c (n "tao") (v "0.2.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "127ngcgx09adz1dx4pj49yrvrk5r50zj9c9qcdcb85qqv5l7pi6v") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.2.4 (c (n "tao") (v "0.2.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16j07zs3hnrj1rm5yli3755va359w6pf3p8nq1s811z7428x6x0b") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.2.5 (c (n "tao") (v "0.2.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hla8y2fy42rvy11r8ynbl72g9f52nyz7ibdazqgjd0x0lszvqab") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.2.6 (c (n "tao") (v "0.2.6") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.9") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0l324f01yaf7pgnqrplilrk8jl6krmbh8x7lg13m14ry4c40dkiy") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.3.0 (c (n "tao") (v "0.3.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1w8kxxhkd5my25ja3jnzjpmq3nkmlv45j55m4rd27q2wfyxinawz") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.3.1 (c (n "tao") (v "0.3.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1r9c2x7xjxcnwaggikd7jakw210b749hnxrc4ahsh36jdp9kvlzc") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.4.0 (c (n "tao") (v "0.4.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "sourceview") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "19s8gdbf5dcllqzgazgn1ckgnkvx5br50503ca9lmlnz73pxz327") (f (quote (("tray" "sourceview" "libappindicator") ("menu" "sourceview") ("dox" "gtk/dox" "sourceview/dox") ("default" "tray"))))))

(define-public crate-tao-0.5.0 (c (n "tao") (v "0.5.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.14") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libayatana-appindicator") (r "^0.1.4") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13") (d #t) (k 2)) (d (n "tauri-libappindicator") (r "^0.1.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "041jkhd1351xw5l9zl4ga8pqm16jr2py3wf8jrm83b0dbj38zk17") (f (quote (("tray" "tauri-libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator"))))))

(define-public crate-tao-0.5.1 (c (n "tao") (v "0.5.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.14") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libayatana-appindicator") (r "^0.1.4") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13") (d #t) (k 2)) (d (n "tauri-libappindicator") (r "^0.1.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0vzvz3nznagq3r0jiv0sl6yc1gqdzgygjhzbmny2bjpakxqmj4rr") (f (quote (("tray" "tauri-libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator"))))))

(define-public crate-tao-0.5.2 (c (n "tao") (v "0.5.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.14") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libayatana-appindicator") (r "^0.1.4") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13") (d #t) (k 2)) (d (n "tauri-libappindicator") (r "^0.1.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "imm" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winnls" "winuser" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0sq30wghvhazq06dssghd0jmm3zd4jkl71970s4qzdl2qbkpv98s") (f (quote (("tray" "tauri-libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator"))))))

(define-public crate-tao-0.6.0 (c (n "tao") (v "0.6.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1rya6y158ffmr3f01xri2awkhd5pvw5mmzji0vzw1jwq0akbpljk") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.6.1 (c (n "tao") (v "0.6.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "01gplkw4hgkb5agvdr9h1vy84k4hsrkpak45il8c73529l61fbs0") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.6.2 (c (n "tao") (v "0.6.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0f9ra285hvhzb4s3y8nhhs3xzj1hhy0cp76gndfy9g2ij6y3nfvv") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.6.3 (c (n "tao") (v "0.6.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1x32jk2kchk1zq4cdvv53rkfhqsc2g48i04ibh67b66n2vy64k3c") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.6.4 (c (n "tao") (v "0.6.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1m7ash3xa665005q2xxrvz1j442i4h7r3qxz6q78wxj1c4yys0ba") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.7.0 (c (n "tao") (v "0.7.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "09g99h29qi7jayvqw6mlj5cizngcyh1354rzl4slfk4d11ck6sib") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray") ("ayatana" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.0 (c (n "tao") (v "0.8.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1kjzcg4gqgy85baqw83ricffil7lz34q4aj88bk8z9fx6ws911xh") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.1 (c (n "tao") (v "0.8.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1n38wvrklhp0r9w8plad8xxn9y8m6jrzsmmaybzp7cyxkk2mak5k") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.2 (c (n "tao") (v "0.8.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0qygw79vc729j4wq32z06q414v9d28zlxy2wb11ccyq82hnazm0z") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.3 (c (n "tao") (v "0.8.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1w3i6295rsgkpkark03zzmh7bqwzb834pyghscf4daiiv0lz6r9p") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.4 (c (n "tao") (v "0.8.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1qvfswvxrzf99l8zh26zyvs9flj52q3m9bhhal6fvbwaz21mgm8z") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.8.5 (c (n "tao") (v "0.8.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1lb0m2rgiq5fmnj4jlyq1bvpna9cvpxxc52i0lj1hggjdyv5x2fz") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.9.0 (c (n "tao") (v "0.9.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0k1fsh8k256phdwwn2fv42ky7hvqpkfmww03gc893an5jpb6ycgr") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.9.1 (c (n "tao") (v "0.9.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libayatana-appindicator") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0nn5594jqas04i7f04zzf9ha7a7ba1y7v5pym0y5lq1wibcmvnjk") (f (quote (("tray") ("gtk-tray" "tray" "libappindicator") ("dox" "gtk/dox") ("default" "tray" "ayatana-tray") ("ayatana-tray" "tray" "libayatana-appindicator")))) (r "1.56")))

(define-public crate-tao-0.10.0 (c (n "tao") (v "0.10.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1f634z1p7l7jmb9naamdl24sbaxj8ix2smr4y6ksbwk0vpm7yjfj") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.11.0 (c (n "tao") (v "0.11.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "03qh33rnbfhii28nir6qp5by1jn040hdyhgw7a971p4cb0k79l2k") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.11.1 (c (n "tao") (v "0.11.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0y7jba18q8nncwvpr2hhqlf90vc31wlhkcfh8javhviawfmbdzpx") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.11.2 (c (n "tao") (v "0.11.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-core-video-sys") (r "^0.2") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "103biwnizsn1vqkfflnd76pn871gdc12swrvxrkzchq55xw4rziv") (f (quote (("tray" "libappindicator") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.12.0 (c (n "tao") (v "0.12.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0biknmr4scpn40l0rb7853987x2jjwx1qvmns6a8f4b9p8944f8y") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.12.1 (c (n "tao") (v "0.12.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0ibmwb63wcbs65g6qdvymxriay3a1x3wzygc3fq4dfkvzb134757") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.12.2 (c (n "tao") (v "0.12.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.19") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1bmij3s5lalbwy143nwlhs64q81a26ff97xxrag3wn8yvhjpgzgn") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.13.0 (c (n "tao") (v "0.13.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.19") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "08cxk7k9w1nrl4hqs2jl96zsfb4fjzyi9mls4192kdf3x16f5fg6") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.13.1 (c (n "tao") (v "0.13.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.19") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0hxfaxd2qsxfp3nrmnv8cvvz8bwb9lh0wrn2c2dffp1z8g7fw0b9") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.13.2 (c (n "tao") (v "0.13.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.19") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1f7mfb90x4c02zrpqiwmbnkgp4v5mvvdvz4zq1v2qv6akz593mla") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.13.3 (c (n "tao") (v "0.13.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.19") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1v60v0vbhrx9vny8r13qgrinczkm3gg01j91bcc0rk53pfk3y2d2") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.14.0 (c (n "tao") (v "0.14.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0d5rnkyg9451nc56mq1vfj9dbp67lprpa7iadslknm4k2xfnycs3") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.0 (c (n "tao") (v "0.15.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0x5fkqh3cab1cdysdw2pmcivshzdlpccb6icmxgmqi8mi7amz172") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.1 (c (n "tao") (v "0.15.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0x89n8l2x36lyg5awzfw5l1xw7yk5g3ya3wpx5lmmccz7dyzzka7") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (y #t) (r "1.56")))

(define-public crate-tao-0.15.2 (c (n "tao") (v "0.15.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0cccmmlpb23zd9cz40fwri2f0jabn182g28jdk9gj7ccx4cg0cip") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.3 (c (n "tao") (v "0.15.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0plbsfwfkj5c5dw4b971rv2kfnxs8vryp99c4pg4nmi76qbn1i22") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.4 (c (n "tao") (v "0.15.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0hhah4v2zgvxn0zw1s3dnjpwrkgwvg16xzr4s2h20x5q0b62yf50") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.5 (c (n "tao") (v "0.15.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "18frhfjnkx581q8vmhi4h5215a3zxhnpj741d28kyxfawih2brzy") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.6 (c (n "tao") (v "0.15.6") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0js0cyaxqzi9miij25jcfwyj1axnhhlq2vxlannxg9m95fgsp3wc") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.7 (c (n "tao") (v "0.15.7") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1a1i8bl04mgd381y2w09rbd4gc30hnjlvx8g0dnq3d0iadribym1") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.8 (c (n "tao") (v "0.15.8") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1rnqhamcbln8nqv6i2iljc979k6pai3njn4vhkwr913w8acn73mc") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.15.9 (c (n "tao") (v "0.15.9") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1l2hqwapjp33w5ap08fqfnm4fl0d4w5kprai70dh1ldd8fmsdav5") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (y #t) (r "1.56")))

(define-public crate-tao-0.16.0 (c (n "tao") (v "0.16.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1wlpbahcn3nf9jjkqg195vzg98xha61sz64iyrkmg2fs7n024ibh") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.17.0 (c (n "tao") (v "0.17.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1xm86hz4xzl902x8k10qzcpm0m44gmgxmc8j47s4ngdlphc140hd") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.18.0 (c (n "tao") (v "0.18.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1gi35bq03gs4wg5wf1dcv4yhcjvqvws1l3jq83ggq8fmylw63lg1") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.18.1 (c (n "tao") (v "0.18.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "13bmpsfymxqjq257fdg5f0csb718hhp9g9hng7i5irj5a9whcc1y") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.18.2 (c (n "tao") (v "0.18.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "04g4c0p3m07igj84h2k7fl0dkpvzbvcyyn67jgm5fb986wn2a44y") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.18.3 (c (n "tao") (v "0.18.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1icss1zqvcyi3pkqqiccni6s0arcxjbqnd95xaq62d9qgmhl08wg") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.19.0 (c (n "tao") (v "0.19.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1lx6wfmlpdqgl9qy3c8ids9yj86vyjfam6vjwzfzyyajrp2j161q") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.19.1 (c (n "tao") (v "0.19.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0fj4ngsrw5zzdrf3zpxb8fj422rfk5p9y41gg5d2gbjprb8faskl") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.16.1 (c (n "tao") (v "0.16.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1prijk79dfhd03jxfsb834q96innw0cbh9msddhp5f6j1jfdwg6x") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.20.0 (c (n "tao") (v "0.20.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "02kjg4bx9yy4h3972mfrlx7wbzm40z5hw5kwkii042qwhgy2h52i") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.16.2 (c (n "tao") (v "0.16.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0caya0hmbw6r6n75fyfcwk1a46vcav8nm5rylv768m880671jvba") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.21.0 (c (n "tao") (v "0.21.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1lp63bzzchm9057kdz7jbsb5lkrqsx4fv6zsfk1211fzf6k2hxxq") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.21.1 (c (n "tao") (v "0.21.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.8.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "190qjapija5lzsgvp47ih533b4b0ibflmc9525b8fv0g04ab0vs3") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.22.0 (c (n "tao") (v "0.22.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1ws85agz9gwrhjyn1qr05na91ham4ihajdyd8ppnqfn32v5rw9v0") (f (quote (("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.22.1 (c (n "tao") (v "0.22.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "19bhh0x6vi5l9p7dyggznqmmg9l4m8cwgmdv1zn7hz3qlflv8qf5") (f (quote (("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.22.2 (c (n "tao") (v "0.22.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0mhbdyqamg2w395vr1fpi36c8ipav294xjlw5dmszcwxrqdj4xlz") (f (quote (("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.16.3 (c (n "tao") (v "0.16.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0khqnpn6p0i7x6bgmnph3mi7hlfbb8c8px0gaq75llkb8ls13g1b") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.16.4 (c (n "tao") (v "0.16.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "05xa3hd1350a4ksc94zk42swisjlrc7gdc846g84bc2pyrffns5p") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.22.3 (c (n "tao") (v "0.22.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0lhya5gfbdw0gbi5hjsifz9by7nsawkm4hagdnrgnvblls80dlzm") (f (quote (("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.23.0 (c (n "tao") (v "0.23.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "03wcja1w2aw7hg27n43rvv53l13mxxn3wi0x2iwas84qxqzm4c7i") (f (quote (("default")))) (r "1.56")))

(define-public crate-tao-0.16.5 (c (n "tao") (v "0.16.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0kzscj9p852ydgv7jlsn7vxwnmwzzm124i27y39kmkg4dgysxxbm") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.24.0 (c (n "tao") (v "0.24.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0jfr6gibrw4lfw14lki0asvxp9dqyj7937kpnnfd4xnhzqcgy39w") (f (quote (("default" "rwh_06")))) (r "1.56")))

(define-public crate-tao-0.16.6 (c (n "tao") (v "0.16.6") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1nw24yw4cijxa94hmbhdjy8a913pyvb2c58q6cxp0rcvq8mkv9m4") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.24.1 (c (n "tao") (v "0.24.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0lh8asrb7p7sm93z5xwa3r2n5wc0hjmy93vp3p38gr68z96adm3m") (f (quote (("default" "rwh_06")))) (r "1.56")))

(define-public crate-tao-0.16.7 (c (n "tao") (v "0.16.7") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1kkmp0ymjcdf84bbk8a87vy822fmi221g7qbb4fclyd6cyr0a8nj") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.25.0 (c (n "tao") (v "0.25.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "zbus") (r "^3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1agr92jvp2f9yk9ws556zhrdf3j9hcv4ysiflsiqp45qwmpbm9wz") (f (quote (("default" "rwh_06")))) (r "1.56")))

(define-public crate-tao-0.26.0 (c (n "tao") (v "0.26.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "074ds2y12xjmf96a1794w7dib6q7811cccx4m14bsznxl9fk5n99") (f (quote (("default" "rwh_06")))) (r "1.70")))

(define-public crate-tao-0.26.1 (c (n "tao") (v "0.26.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "18d0cb3x51cwwma62bknvhrbfwaj5jngsc0gsq4s6g19cl1mgfnc") (f (quote (("default" "rwh_06")))) (r "1.70")))

(define-public crate-tao-0.16.8 (c (n "tao") (v "0.16.8") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1j79balswcgr83kjnmgfnbd93ff24fng8nc0nlh990nffvj999r6") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.26.2 (c (n "tao") (v "0.26.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1nz5ynivwa55pbzv5cg6pgn4hjhvk2ifwyf08iks7dfyg35vrsv9") (f (quote (("default" "rwh_06")))) (r "1.70")))

(define-public crate-tao-0.27.0 (c (n "tao") (v "0.27.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0lr7g36s2wfl4n96fjs14ps513q90587c304bwaibg9sqk16wnxx") (f (quote (("default" "rwh_06")))) (s 2) (e (quote (("serde" "dep:serde" "dpi/serde")))) (r "1.70")))

(define-public crate-tao-0.16.9 (c (n "tao") (v "0.16.9") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cairo-rs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "gdk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-pixbuf") (r "^0.15") (f (quote ("v2_36_8"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkwayland-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.24") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libappindicator") (r "^0.7.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "png") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1axgpzs4y748yvxs1pq3p3ajnh86yzcamkwxhrs10m8yq9pqap2p") (f (quote (("tray" "libappindicator" "dirs-next") ("dox" "gtk/dox") ("default")))) (r "1.56")))

(define-public crate-tao-0.27.1 (c (n "tao") (v "0.27.1") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.25") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1pgldz8q13rvdlzp01545krq8ql78lxjclb7wbb5cyqlbs4gig4j") (f (quote (("default" "rwh_06")))) (s 2) (e (quote (("serde" "dep:serde" "dpi/serde")))) (r "1.70")))

(define-public crate-tao-0.28.0 (c (n "tao") (v "0.28.0") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dlopen2") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "gdkwayland-sys") (r "^0.18.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gdkx11-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "image") (r "^0.25") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "rwh_04") (r "^0.4") (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_05") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "scopeguard") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "softbuffer") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "unicode-segmentation") (r "^1.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Devices_HumanInterfaceDevice" "Win32_Foundation" "Win32_Globalization" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_DataExchange" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_SystemInformation" "Win32_UI_Accessibility" "Win32_UI_Controls" "Win32_UI_HiDpi" "Win32_UI_Input_Ime" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_Input_Pointer" "Win32_UI_Input_Touch" "Win32_UI_Shell" "Win32_UI_TextServices" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.21") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "14rh9z8bwvwid2dm2wa0n3p3nrr4b1njiy4912zbn7kjsldi5a0j") (f (quote (("default" "rwh_06")))) (s 2) (e (quote (("serde" "dep:serde" "dpi/serde")))) (r "1.70")))

