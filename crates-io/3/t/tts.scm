(define-module (crates-io #{3}# t tts) #:use-module (crates-io))

(define-public crate-tts-0.1.0 (c (n "tts") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1xr5jamp7blvdir6pvqzizn7lq0a1k0qhxrmgk35ciabnayb7jpr")))

(define-public crate-tts-0.1.1 (c (n "tts") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0r12zj266wldd3dwvd9cnrhl7dpqsq5ylcnbrdgnkzv5877m0w03")))

(define-public crate-tts-0.2.0 (c (n "tts") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0cyhfq8sk5cz1cp3d2vc13s97l73cdpgnixbfdr9261q2d4hy2ik")))

(define-public crate-tts-0.2.1 (c (n "tts") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "12wjw1wm632xbbwlbhcxi8p2fih90blc4sqfzdi2yf76l53yca8y")))

(define-public crate-tts-0.2.2 (c (n "tts") (v "0.2.2") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "175gz8wpfqysyvpp14i2szfrjnhasc6cahacy2k2hl5sy769nb44")))

(define-public crate-tts-0.2.3 (c (n "tts") (v "0.2.3") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "14qkrpznhxinngl5pwc0k399jz468wpl7dmf5b3q6slail9b9id4")))

(define-public crate-tts-0.3.0 (c (n "tts") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "16136rb5qyjzwjy3nk7z0m5nbq4vz3b9irghw5w99zwpgw0z7wvp")))

(define-public crate-tts-0.3.1 (c (n "tts") (v "0.3.1") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1qa03b3zqraa5mwndddbi9x3nb4x2mhs30a1x8y06k8my1xzrf8i")))

(define-public crate-tts-0.3.2 (c (n "tts") (v "0.3.2") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0xhfspk3qbajrafyrvlla8v93cjr5whhiw33w9mbq8y3fnsg64dx")))

(define-public crate-tts-0.3.3 (c (n "tts") (v "0.3.3") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1dh82mnz4bz95dcchm1vyv0mdmp123x09rw8nycwq8idyap7a2l0")))

(define-public crate-tts-0.3.4 (c (n "tts") (v "0.3.4") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0wc4hi0rv9wqc43l4dn4pfrd5mwzyigadf1528h9cwjwglan4n0f")))

(define-public crate-tts-0.3.6 (c (n "tts") (v "0.3.6") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "00gy3n2dzqhha1hinqv0fl3k5wgw9212r8gh45qhk28767sr6av2")))

(define-public crate-tts-0.3.7 (c (n "tts") (v "0.3.7") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "04mypk8b3lfg6asy86ky66cj7g9an5qgzg2b3hc0nkp6wn15sabh")))

(define-public crate-tts-0.3.8 (c (n "tts") (v "0.3.8") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "05xz30pd7qlyvs0yx6wgkbh6rdfv6hrpm27vz8vr1b380mkpdjql")))

(define-public crate-tts-0.3.9 (c (n "tts") (v "0.3.9") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "12x7d81kay10xml6z6ar5j6ajng0vzfa856gkl708vh6vf9vj3ff")))

(define-public crate-tts-0.4.0 (c (n "tts") (v "0.4.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0grcv2ag4gia7jydcg6q18ry04zkm7wg9jxfjnbqzjsvjl9fnk75")))

(define-public crate-tts-0.5.0 (c (n "tts") (v "0.5.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0zfqavgznf27hd464azhgkixxr7hlmhyjg20nvlmqvflkq12bdb8")))

(define-public crate-tts-0.6.0 (c (n "tts") (v "0.6.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1lj9w152apg60yp10w62bvh6b8kgapiy6ichhd3ci8cnaspdcadw")))

(define-public crate-tts-0.6.1 (c (n "tts") (v "0.6.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0i1hb0d92r4x10x7927wy2znbswdqlxigbqjpwwv0n8s031fb4aa")))

(define-public crate-tts-0.6.2 (c (n "tts") (v "0.6.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1l2l5247zkji94gpabqhxxf4j2zfmspx8y00rrh5qbyi6ysnz5xy")))

(define-public crate-tts-0.6.3 (c (n "tts") (v "0.6.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "001h4jyw5adxjdrcrqbk80rc02klfb84h1ayn0iwsnzyg7i9ginw")))

(define-public crate-tts-0.6.4 (c (n "tts") (v "0.6.4") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("SpeechSynthesis" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1dm20mdzk2dvgq2y78krajx9sranfp4ifc8b4zp5cwx8v1v2bm19")))

(define-public crate-tts-0.7.0 (c (n "tts") (v "0.7.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1491vmdnabi3rgnxwrbqqxz1i8gg018r0f82vdgm41ylx7cc1f86")))

(define-public crate-tts-0.8.0 (c (n "tts") (v "0.8.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1jdmhm14hjl9zv2pl92ld33dziqgs71sb69zkq9bmacbqnv207gr")))

(define-public crate-tts-0.9.0 (c (n "tts") (v "0.9.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "19sic1rpvczdg7yzj7h1f8zxni20vqyr801dqp1qnbz0xpq93zi0")))

(define-public crate-tts-0.9.1 (c (n "tts") (v "0.9.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1s9s6lczxlc5dxbyh9y6rv8rbdi193xhbx97jz3qc8nkr023y4z1")))

(define-public crate-tts-0.10.0 (c (n "tts") (v "0.10.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "170bkwabrk6fvgdz3y906nmrq7c12wg6jrrwrnah5r6929rs31q7") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.10.1 (c (n "tts") (v "0.10.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1y6sqmcw1xrcbp48nnv2f56izpv1c2xih735id53544j9ggwvdj4") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.10.2 (c (n "tts") (v "0.10.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1qza1i89gxb17ld6vnsinblwi6ysx4anzb5ayg2pjpddh15slmbz") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.10.3 (c (n "tts") (v "0.10.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r ">=0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "01lcj790798070accgb28k7qaz444qhna173yli730i1yhjhhdpz") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.0 (c (n "tts") (v "0.11.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1hmi9xkg6in2njn3jc1k4vj20rbm40w2l088m9vp1d8pxwi7i61k") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.1 (c (n "tts") (v "0.11.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0dscg93h325kb5zp73m9qlqq203hkwl1cqwp6nfd484by1w1a45p") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.2 (c (n "tts") (v "0.11.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "032l84ym3zj056qzxjqfjrz14n00351hx4zgqq9893kj1py2pqjm") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.3 (c (n "tts") (v "0.11.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0fnrkgjxg30bv8n7cx8cdqdskawsb01pc90209fym3p64dqb6858") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.4 (c (n "tts") (v "0.11.4") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0p6lcj0gd3yj54vw3k40v01dg29zj7jsi61192n464d2m5jklh11") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.11.5 (c (n "tts") (v "0.11.5") (d (list (d (n "cocoa-foundation") (r ">=0.1.0, <0.2.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.8.0, <0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "objc") (r ">=0.2.0, <0.3.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r ">=0.7.0, <0.8.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tolk") (r ">=0.3.0, <0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r ">=0.1.0, <0.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r ">=0.2.0, <0.3.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r ">=0.3.0, <0.4.0") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r ">=0.7.0, <0.8.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1s9zm0y35mh5n58lc0qk8gci540gikwd5rlmm12lxjgk3x11ln2s") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.12.0 (c (n "tts") (v "0.12.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1q0m4b1iispw19jys832q1gvm4vb63igqhdlxf7cz4whpdd8ji6l") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.12.1 (c (n "tts") (v "0.12.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1zy6xv46cn8m0i777pczymk46b8ps20qibaf8b2pn1dpafn9l8zv") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.12.2 (c (n "tts") (v "0.12.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0xqr0wr6dhr9swpwii45riz6fj12q6vlscpv21s71qyc0pf9y966") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.13.0 (c (n "tts") (v "0.13.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.18") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1sk49dk3r8n1w0plsglaxhy30nk2ac5a3j00vfkh4ly0qib9apxd") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.13.1 (c (n "tts") (v "0.13.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.18") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1fwfg8m2s0ikhdhbyh9v06ig0gh19ahis53dmi615nsshlbyyck9") (f (quote (("use_tolk" "tolk"))))))

(define-public crate-tts-0.14.0 (c (n "tts") (v "0.14.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.18") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "tts_winrt_bindings") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winrt") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1li6r0fdnxiy89vmj3v3s6dvj605vl9dg8ngl9vlcw1i4j52cbsr")))

(define-public crate-tts-0.15.0 (c (n "tts") (v "0.15.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 1)))) (h "0bjk8xw9g880gvlppxn7m0kngsm68q6cyn8k2g2mi2y3kfyd7q4j")))

(define-public crate-tts-0.15.1 (c (n "tts") (v "0.15.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 1)))) (h "1piys7jlpi7aizzbc6bdwm5c7p322cjr6rnz9a1rr9xp4nfpbryn")))

(define-public crate-tts-0.15.2 (c (n "tts") (v "0.15.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4") (d #t) (t "cfg(windows)") (k 1)))) (h "02bidfm7iip4n39ipapvkhhspqf9dlhjnprqvjhb6nbgax6smfsg")))

(define-public crate-tts-0.16.0 (c (n "tts") (v "0.16.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.7") (d #t) (t "cfg(windows)") (k 1)))) (h "1qbmmv1p16cvp9h6kc2vf4hr0gjcajr0vx3by7jc837n0bhfjs1d")))

(define-public crate-tts-0.17.0 (c (n "tts") (v "0.17.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 1)))) (h "05ginlnpzwrclzcdnwyl13rnwvkzwp3cncjxp4mnbsjzpmrkgsyd")))

(define-public crate-tts-0.17.1 (c (n "tts") (v "0.17.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 1)))) (h "1x06xymvva139nn02l5037j703kfp5rzfyckn0xl8jp8z9a6jw21")))

(define-public crate-tts-0.17.2 (c (n "tts") (v "0.17.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 1)))) (h "1i55cmlljjfv3vkfq4wvkdyhmc3xajyrh5c55vw75lxa94ailk74")))

(define-public crate-tts-0.17.3 (c (n "tts") (v "0.17.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.9") (d #t) (t "cfg(windows)") (k 1)))) (h "0q60y5iv91fpqv9sq1kz8ff159y7gq48x18s31f9451sdr9yw09p")))

(define-public crate-tts-0.18.0 (c (n "tts") (v "0.18.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.23") (f (quote ("Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (k 0)))) (h "0nq58jficgwva0z1syv0f4jxfphwknqxz3lyg22h4x3wlw93b77k")))

(define-public crate-tts-0.18.1 (c (n "tts") (v "0.18.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.25") (f (quote ("Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (k 0)))) (h "117fbl0a0p8j2flvngmisaqnfia4hdym4mdd33czjpphjd0i06m2")))

(define-public crate-tts-0.18.2 (c (n "tts") (v "0.18.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.26") (f (quote ("std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (k 0)))) (h "09lc8nqg159rylg4bnfpnx8lwkznhcqdxzij670yc33l3dq5pmm9")))

(define-public crate-tts-0.18.3 (c (n "tts") (v "0.18.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.27") (f (quote ("alloc" "std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05nwkaryxm7pv86gv0mphrb9wr18cdszlsf86yh0c488a6n9jzll")))

(define-public crate-tts-0.19.0 (c (n "tts") (v "0.19.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.28") (f (quote ("alloc" "std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0yq7g6h3b44clkv7dskz83153dvx5gh0f2vhwnc0jr51m1dcjc5m")))

(define-public crate-tts-0.19.1 (c (n "tts") (v "0.19.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.28") (f (quote ("alloc" "std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "091sxbhwgys7hpzqv09b8ch2nj6zhbqz723dqws1kjhfnqw91pyk")))

(define-public crate-tts-0.19.2 (c (n "tts") (v "0.19.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "speech-dispatcher") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.29") (f (quote ("alloc" "std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05kh50rdp01lqaxdns627s43f94jnz5lrhllbgsljjfrrphdgp1q")))

(define-public crate-tts-0.20.0 (c (n "tts") (v "0.20.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.29") (f (quote ("alloc" "std" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ryiv13sc4wxx72hb7haqqvbp0r8zl184mbnhbpslr997bkq1ng5")))

(define-public crate-tts-0.20.1 (c (n "tts") (v "0.20.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.30") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1jayw2yrfhkcyl4mrdic3n7maixzfibl29h7krpmkwswxnb98cpk")))

(define-public crate-tts-0.20.2 (c (n "tts") (v "0.20.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.30") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bfaw96vyi8nxkkjcvafih29z1kjp86bds42bd633nv3zm6crlsx")))

(define-public crate-tts-0.20.3 (c (n "tts") (v "0.20.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.32") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14kzl1andzbi0ldzqdxfv4fmc77czm2lclzy4vch61jqgx60k7mq")))

(define-public crate-tts-0.20.4 (c (n "tts") (v "0.20.4") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.33") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1jqpb9kp88n3gq2f5wd1jkb36vjx074p4dqnknkb5hczsgscw50g")))

(define-public crate-tts-0.21.0 (c (n "tts") (v "0.21.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.33") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mjvkywvmh94fyrp8dqv5qp7ds6dyklq3w4hxkk1gnb3d0gnpnbq") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.21.1 (c (n "tts") (v "0.21.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.34") (f (quote ("alloc" "Foundation" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0v6k62kdgs0wnj1dxz1adl7qkdmbsn3d6sr72p37ddkkb0zzvbfg") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.0 (c (n "tts") (v "0.22.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.36") (f (quote ("alloc" "Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02dmfrnfidbzcxsmnp24a57qy4cdkfdckqrxlkzalp8jzp61q8ss") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.1 (c (n "tts") (v "0.22.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("alloc" "Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1pwzwdf4yydv5ma89lbn0lw6diiqys2fcyyynjw5ncg9v0489x9m") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.2 (c (n "tts") (v "0.22.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("alloc" "Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "118srvicnrraf6vlnf0v1w27xp4jg59cx96kjfvxjy57jfhl3szr") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.3 (c (n "tts") (v "0.22.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("alloc" "Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xaj5xwxq9d1xx7rapp3hh66kb9mpbbzw38npxicv5ds638fn6j8") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.4 (c (n "tts") (v "0.22.4") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.38") (f (quote ("alloc" "Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05pq0ybdbfrjhj6flp62cfb8srx9fvbx8h70jikwjvmwlxybi3qj") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.22.5 (c (n "tts") (v "0.22.5") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.39") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10a1l4rmp685nhykz342yczj29gml9l3fsn77bialpmzxk7lnb3l") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.23.0 (c (n "tts") (v "0.23.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.13") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.39") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0linc22633087n0kqf6qx3pxl0aw0xpn50ladhsqcww7ana87a6j") (f (quote (("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10"))))))

(define-public crate-tts-0.23.1 (c (n "tts") (v "0.23.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.14") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.39") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10sshb63ssf0jna8adw2h0ap65qwy65jx4gzsdxv872ngi6xi8il") (f (quote (("speech_dispatcher_0_10_2" "speech-dispatcher/0_10_2") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_10_2"))))))

(define-public crate-tts-0.24.0 (c (n "tts") (v "0.24.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.15") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.39") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "104hhcvw28944z8blhizs0rbhhavp7x49lpj5jbpy1v11ky7ppj1") (f (quote (("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.24.1 (c (n "tts") (v "0.24.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.15") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.40") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ivxqzavnpghc7zlipkp02l6drgwwa6mggnaa04rpwd0ws1r8szj") (f (quote (("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.24.2 (c (n "tts") (v "0.24.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.15") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.42") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1z89nr6ir58l2bd0hir2yd75nqwzx3ksr8k38m7c9biahmvxbqd8") (f (quote (("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.24.3 (c (n "tts") (v "0.24.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.15") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.42") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1j525nchij2swn0xrdydid6ziayink779yvhvk5g6c678v988041") (f (quote (("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.0 (c (n "tts") (v "0.25.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.43") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0f23hlgh5jaip674dlci0nbb6bxsaxizrbhn7wfwvjsp0dag7lmp") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.1 (c (n "tts") (v "0.25.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01cwrlz7bc476am2rc7vypr31md0vnyqcws609ap9gc7kc605k4a") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.2 (c (n "tts") (v "0.25.2") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.46") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cygpv5saa7r2zvy17xjggdl1zyryfg256idvzvbj7fszdfrnrkg") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.3 (c (n "tts") (v "0.25.3") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06p0jgmh3kz6mjl4yih14l1gv857grsi8dscv41ipkjcwfg46acb") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.4 (c (n "tts") (v "0.25.4") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1m927l4g0wsi7008jv61hkmk0fp7m2q7gijkq9mpqf7hkymmh9wq") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.5 (c (n "tts") (v "0.25.5") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bgsnkrvwmj56aqjj22hy1p4iydngryvas3ch1gl5qfi2rwn4fg3") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.25.6 (c (n "tts") (v "0.25.6") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1r1q3idjl0rqlzwyl7lvhlnfcws9xz9nq5mfx419y1f7fyp7xrdf") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.26.0 (c (n "tts") (v "0.26.0") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os=\"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os=\"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ywb2hlpi0k6s2a3mk50m8s9cknxjk554f4bnhp29l7pp1dxmc5i") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

(define-public crate-tts-0.26.1 (c (n "tts") (v "0.26.1") (d (list (d (n "cocoa-foundation") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os=\"android\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os=\"android\")") (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "oxilangtag") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speech-dispatcher") (r "^0.16") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tolk") (r "^0.5") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("EventTarget" "SpeechSynthesis" "SpeechSynthesisErrorCode" "SpeechSynthesisErrorEvent" "SpeechSynthesisEvent" "SpeechSynthesisUtterance" "SpeechSynthesisVoice" "Window"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Foundation" "Foundation_Collections" "Media_Core" "Media_Playback" "Media_SpeechSynthesis" "Storage_Streams"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1h53gh9482sj06qgcxj31x6kpbmi3mvp6sqffgayagpppvdih6w0") (f (quote (("speech_dispatcher_0_9" "speech-dispatcher/0_9") ("speech_dispatcher_0_11" "speech-dispatcher/0_11") ("speech_dispatcher_0_10" "speech-dispatcher/0_10") ("default" "speech_dispatcher_0_11"))))))

