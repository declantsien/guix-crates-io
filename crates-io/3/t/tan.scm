(define-module (crates-io #{3}# t tan) #:use-module (crates-io))

(define-public crate-tan-0.3.0 (c (n "tan") (v "0.3.0") (h "08b6x0gpa0q944qg7lgh7a9zpa7yfb76d1fcvm389y2jm2lvcyi4")))

(define-public crate-tan-0.4.0 (c (n "tan") (v "0.4.0") (h "16xva65haj3ywkpv1hvh7b6v1kmzs8f4arsn2pjg5ij5av4q1k6c")))

(define-public crate-tan-0.5.0 (c (n "tan") (v "0.5.0") (h "17nfq131dz4m52g6hyc8784qprs3i45xw4vjxva4mws71pacia22")))

(define-public crate-tan-0.6.0 (c (n "tan") (v "0.6.0") (d (list (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0ma6pcgr36r0lczr4fsdbn065ajq0anip8lbvpc7zfyh91mv3mpv")))

(define-public crate-tan-0.7.0 (c (n "tan") (v "0.7.0") (d (list (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1bsa2psji4gs2fg4ip7f8830l8ylxz98j7lg5dc467bfdvnrm8lr")))

(define-public crate-tan-0.8.0 (c (n "tan") (v "0.8.0") (d (list (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1w5v2g6ciy7l7cw0ayp5xa67hv32ym2yyai7kdvgmrmlp3k5vm32")))

(define-public crate-tan-0.9.0 (c (n "tan") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "118k9gwfdwcv0v2d6a4am82dgb4ir0lzxwy696889i6al0yplrr8") (f (quote (("default" "dec")))) (s 2) (e (quote (("dec" "dep:rust_decimal" "dep:rust_decimal_macros"))))))

(define-public crate-tan-0.10.0 (c (n "tan") (v "0.10.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1cfshkngcc89znbl3zbk7yfrsdpxi637nms08lfqswvsqjvsv80f") (f (quote (("default" "dec" "json")))) (s 2) (e (quote (("json" "dep:serde" "dep:serde_json") ("dec" "dep:rust_decimal" "dep:rust_decimal_macros"))))))

(define-public crate-tan-0.11.0 (c (n "tan") (v "0.11.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "comrak") (r "^0.20") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1xrm0hhv4dnwfj7j0dab65ihpqq5bk4dmqzl1zb9vm3ryzs8bdjn") (f (quote (("default" "dec" "json")))) (s 2) (e (quote (("json" "dep:serde" "dep:serde_json") ("dec" "dep:rust_decimal" "dep:rust_decimal_macros"))))))

(define-public crate-tan-0.12.0 (c (n "tan") (v "0.12.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "comrak") (r "^0.21") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g5bjnh2yizy47swn7sfc6mdchq0p04hln6sripl0i5xw8hp5avq") (f (quote (("default" "dec" "json")))) (s 2) (e (quote (("json" "dep:serde" "dep:serde_json") ("dec" "dep:rust_decimal" "dep:rust_decimal_macros"))))))

(define-public crate-tan-0.13.0 (c (n "tan") (v "0.13.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "comrak") (r "^0.22") (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1.32") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "13b2ray37nziv023g7ksfv59zbif1d3kwcs65d28xhxsl12kxqcw") (f (quote (("default" "dec" "json")))) (s 2) (e (quote (("json" "dep:serde" "dep:serde_json") ("dec" "dep:rust_decimal" "dep:rust_decimal_macros"))))))

