(define-module (crates-io #{3}# k kas) #:use-module (crates-io))

(define-public crate-kas-0.0.1 (c (n "kas") (v "0.0.1") (d (list (d (n "kas-macros") (r "= 0.0.1") (d #t) (k 0)))) (h "0hpil6fwcwbr82mw90c81pc3d7l6bzn00ai8f1mkczdn4icvj1rg") (f (quote (("layout" "cassowary" "kas-macros/cassowary") ("cassowary"))))))

(define-public crate-kas-0.0.2 (c (n "kas") (v "0.0.2") (d (list (d (n "kas-macros") (r "= 0.0.2") (d #t) (k 0)))) (h "0alp2mfhpfla5xhri1sm42aly7fmi7klg3vssxs36fwxk769izz2") (f (quote (("layout" "cassowary" "kas-macros/cassowary") ("cassowary"))))))

(define-public crate-kas-0.1.0-pre.1 (c (n "kas") (v "0.1.0-pre.1") (d (list (d (n "kas-macros") (r "^0.1.0-pre.1") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.20.0-alpha5") (o #t) (d #t) (k 0)))) (h "1kfcc2rf8kd6s0fb7xbkmj08plrrk5fmjsicbap0sip8g7j2lrsw") (f (quote (("nightly"))))))

(define-public crate-kas-0.1.0 (c (n "kas") (v "0.1.0") (d (list (d (n "kas-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.20.0-alpha5") (o #t) (d #t) (k 0)))) (h "1dmjj7bfv1wb6b1v675007hkwq75nzmpajvaqyqnz68djp45rxxn") (f (quote (("nightly"))))))

(define-public crate-kas-0.2.0 (c (n "kas") (v "0.2.0") (d (list (d (n "kas-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "winit") (r "^0.20") (o #t) (d #t) (k 0)))) (h "13p46fda5vb71bc7lwlhy457bfsvqfwpavz383lqs2fh2biy2ng5") (f (quote (("nightly") ("internal_doc"))))))

(define-public crate-kas-0.2.1 (c (n "kas") (v "0.2.1") (d (list (d (n "kas-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "winit") (r "^0.20") (o #t) (d #t) (k 0)))) (h "116a0p9x7ip4fny9pq8236bl9ywjdvvks3lrx4y1nf1vpywk29v6") (f (quote (("nightly") ("internal_doc"))))))

(define-public crate-kas-0.3.0 (c (n "kas") (v "0.3.0") (d (list (d (n "kas-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (f (quote ("unsize"))) (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.21") (o #t) (d #t) (k 0)))) (h "0s24fml3sprv5d869jhjwrnnswaywb73qll1w6rkbaybijkzxhiv") (f (quote (("nightly") ("internal_doc"))))))

(define-public crate-kas-0.4.0 (c (n "kas") (v "0.4.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "kas-macros") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.22") (o #t) (d #t) (k 0)))) (h "14wpzsz1yrlkncn32xjbq3mqf30fwwwxcvlhqq2v7wm17yb2wk22") (f (quote (("nightly") ("internal_doc"))))))

(define-public crate-kas-0.4.1 (c (n "kas") (v "0.4.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "kas-macros") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.22") (o #t) (d #t) (k 0)))) (h "1r8bjr1k2jq18kll0jr8ivg9ccxzbfcv5g5c7j9gfnz0s9grqwxg") (f (quote (("nightly") ("internal_doc"))))))

(define-public crate-kas-0.5.0 (c (n "kas") (v "0.5.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "kas-macros") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "winit") (r "^0.22") (o #t) (d #t) (k 0)))) (h "159v76knkp54r096vxp7hzjbb78hirlvh66sb97hbpm7h4w2vb8l") (f (quote (("shaping" "kas-text/shaping") ("nightly") ("internal_doc"))))))

(define-public crate-kas-0.6.0 (c (n "kas") (v "0.6.0") (d (list (d (n "bitflags") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "kas-macros") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "kas-text") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "linear-map") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "stack_dst") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r ">=1.7.0, <2.0.0") (d #t) (k 0)) (d (n "winit") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)))) (h "0k5nysfajxhgqpskfxwak9ydc25dijp9fbhx53hf60vdphffgag6") (f (quote (("shaping" "kas-text/shaping") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("internal_doc") ("gat" "kas-text/gat"))))))

(define-public crate-kas-0.7.0 (c (n "kas") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "kas-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.2.1") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.24") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1a65yw4bcbhccd6nqanbrw67w5wwcdj5jrylg9kg6n6171rjdn1m") (f (quote (("yaml" "serde" "serde_yaml") ("shaping" "kas-text/shaping") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("json" "serde" "serde_json") ("internal_doc") ("gat" "kas-text/gat"))))))

(define-public crate-kas-0.7.1 (c (n "kas") (v "0.7.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "kas-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.2.1") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.24") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0x1vls827r0p7zb0yjcncqmpppn6w89riss6ji6264l07sl858sx") (f (quote (("yaml" "serde" "serde_yaml") ("shaping" "kas-text/shaping") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("json" "serde" "serde_json") ("internal_doc") ("gat" "kas-text/gat"))))))

(define-public crate-kas-0.8.0 (c (n "kas") (v "0.8.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "dep_ron") (r "^0.6.4") (o #t) (d #t) (k 0) (p "ron")) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "kas-macros") (r "^0.8.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.3.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1hjfb7l023y8aawdw2yiamzqc14vwg76h3yc7bdkg67bw328s5lw") (f (quote (("yaml" "config" "serde_yaml") ("ron" "config" "dep_ron") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("json" "config" "serde_json") ("internal_doc") ("gat" "kas-text/gat") ("default") ("config" "serde" "kas-text/serde"))))))

(define-public crate-kas-0.9.0 (c (n "kas") (v "0.9.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "dep_ron") (r "^0.6.4") (o #t) (d #t) (k 0) (p "ron")) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.3.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "resvg") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "usvg") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1dn6xjl8j619vxpx4g9caci6zm47r42vc0ayxfz79j05v6mh1pi6") (f (quote (("yaml" "config" "serde_yaml") ("svg" "tiny-skia" "resvg" "usvg") ("spec" "min_spec") ("ron" "config" "dep_ron") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("json" "config" "serde_json") ("internal_doc") ("gat" "kas-text/gat") ("default") ("config" "serde" "kas-text/serde") ("canvas" "tiny-skia"))))))

(define-public crate-kas-0.9.1 (c (n "kas") (v "0.9.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "dep_ron") (r "^0.6.4") (o #t) (d #t) (k 0) (p "ron")) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas-macros") (r "^0.9.1") (d #t) (k 0)) (d (n "kas-text") (r "^0.3.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "resvg") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "usvg") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0b9i8lz79m8qxl7jrbpr740gj4yb3ggq49g49ynlmp1fn2i03rqq") (f (quote (("yaml" "config" "serde_yaml") ("svg" "tiny-skia" "resvg" "usvg") ("spec" "min_spec") ("ron" "config" "dep_ron") ("nightly" "min_spec") ("min_spec") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("json" "config" "serde_json") ("internal_doc") ("gat" "kas-text/gat") ("default") ("config" "serde" "kas-text/serde") ("canvas" "tiny-skia"))))))

(define-public crate-kas-0.10.0 (c (n "kas") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "kas-core") (r "^0.10.0") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.10.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.10.0") (o #t) (k 0)) (d (n "kas-wgpu") (r "^0.10.0") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "05kfi03x0r4wdfhlxn1lssgjbm0apqywkq0fgv12dvfgsb014msm") (f (quote (("yaml" "config" "kas-core/yaml") ("winit" "kas-core/winit") ("wgpu" "kas-wgpu") ("unsize" "kas-theme/unsize" "kas-wgpu/unsize") ("theme" "kas-theme") ("svg" "kas-resvg/svg") ("stack_dst" "kas-core/stack_dst" "kas-theme/stack_dst" "kas-wgpu/stack_dst") ("spec" "min_spec" "kas-core/spec") ("shaping" "kas-core/shaping") ("ron" "config" "kas-core/ron") ("nightly" "min_spec" "kas-theme/nightly" "kas-wgpu/nightly" "unsize") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "config" "kas-core/json") ("internal_doc" "kas-core/internal_doc" "kas-theme/internal_doc") ("harfbuzz" "kas-core/harfbuzz") ("gat" "kas-core/gat" "kas-theme/gat" "kas-wgpu/gat") ("dynamic" "kas-dylib") ("default" "theme" "wgpu" "winit" "yaml" "svg" "canvas" "clipboard" "markdown" "shaping" "stack_dst") ("config" "kas-core/config" "kas-theme/config") ("clipboard" "kas-wgpu/clipboard") ("canvas" "kas-resvg/canvas"))))))

(define-public crate-kas-0.10.1 (c (n "kas") (v "0.10.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "kas-core") (r "^0.10.1") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.10.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.10.0") (o #t) (k 0)) (d (n "kas-wgpu") (r "^0.10.0") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "093ddwsaz9khzk01gkd2y9qbzbar8s1xhckpbw1b6wfxvagxddfm") (f (quote (("yaml" "config" "kas-core/yaml") ("winit" "kas-core/winit") ("wgpu" "kas-wgpu") ("unsize" "kas-theme/unsize" "kas-wgpu/unsize") ("theme" "kas-theme") ("svg" "kas-resvg/svg") ("stack_dst" "kas-core/stack_dst" "kas-theme/stack_dst" "kas-wgpu/stack_dst") ("spec" "min_spec" "kas-core/spec") ("shaping" "kas-core/shaping") ("ron" "config" "kas-core/ron") ("nightly" "min_spec" "kas-theme/nightly" "kas-wgpu/nightly" "unsize") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "config" "kas-core/json") ("internal_doc" "kas-core/internal_doc" "kas-theme/internal_doc") ("harfbuzz" "kas-core/harfbuzz") ("gat" "kas-core/gat" "kas-theme/gat" "kas-wgpu/gat") ("dynamic" "kas-dylib") ("default" "theme" "wgpu" "winit" "yaml" "svg" "canvas" "clipboard" "markdown" "shaping" "stack_dst") ("config" "kas-core/config" "kas-theme/config") ("clipboard" "kas-wgpu/clipboard") ("canvas" "kas-resvg/canvas"))))))

(define-public crate-kas-0.11.0 (c (n "kas") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "kas-core") (r "^0.11.0") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "kas-theme") (r "^0.11.0") (o #t) (k 0)) (d (n "kas-view") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.11.0") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "1j5dbhxpscldv36qhbmw3ka7aqyipychdm5qzszly7832rfhn74x") (f (quote (("yaml" "config" "kas-core/yaml") ("winit" "kas-core/winit") ("spec" "min_spec" "kas-core/spec") ("shaping" "kas-core/shaping") ("ron" "config" "kas-core/ron") ("minimal" "theme" "wgpu") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "config" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "yaml" "image" "resvg" "clipboard" "markdown" "shaping" "dark-light")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("theme" "dep:kas-theme") ("resvg" "dep:kas-resvg" "kas-resvg?/svg") ("nightly" "min_spec" "kas-theme?/nightly" "kas-wgpu?/nightly") ("internal_doc" "kas-core/internal_doc" "kas-theme?/internal_doc") ("gat" "kas-core/gat" "kas-theme?/gat" "kas-wgpu?/gat") ("dynamic" "dep:kas-dylib") ("dark-light" "kas-theme?/dark-light") ("config" "kas-core/config" "kas-theme?/config") ("clipboard" "kas-wgpu?/clipboard")))) (r "1.62.0")))

(define-public crate-kas-0.12.0 (c (n "kas") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.12.0") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-theme") (r "^0.12.0") (o #t) (k 0)) (d (n "kas-view") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.12.0") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "198pbcywa4nd8y1544dk82lfv81mmhlgvbf9nw7a6gz6s5wckz5p") (f (quote (("yaml" "config" "kas-core/yaml") ("winit" "kas-core/winit") ("spec" "min_spec" "kas-core/spec") ("shaping" "kas-core/shaping") ("ron" "config" "kas-core/ron") ("minimal" "theme" "wgpu") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "config" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "yaml" "image" "resvg" "clipboard" "markdown" "shaping" "dark-light")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("theme" "dep:kas-theme") ("resvg" "dep:kas-resvg" "kas-resvg?/svg") ("nightly" "min_spec" "kas-theme?/nightly" "kas-wgpu?/nightly") ("internal_doc" "kas-core/internal_doc" "kas-theme?/internal_doc") ("dynamic" "dep:kas-dylib") ("dark-light" "kas-theme?/dark-light") ("config" "kas-core/config" "kas-theme?/config") ("clipboard" "kas-wgpu?/clipboard")))) (r "1.62.0")))

(define-public crate-kas-0.12.1 (c (n "kas") (v "0.12.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.12.1") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-theme") (r "^0.12.0") (o #t) (k 0)) (d (n "kas-view") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.12.1") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "0qlqfz58x99f4hcgnvgl57n85m0bnmbbl0nx4s5fdj4zw8h70gm7") (f (quote (("yaml" "config" "kas-core/yaml") ("winit" "kas-core/winit") ("spec" "min_spec" "kas-core/spec") ("shaping" "kas-core/shaping") ("ron" "config" "kas-core/ron") ("minimal" "theme" "wgpu") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "config" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "yaml" "image" "resvg" "clipboard" "markdown" "shaping" "dark-light")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("theme" "dep:kas-theme") ("resvg" "dep:kas-resvg" "kas-resvg?/svg") ("nightly" "min_spec" "kas-theme?/nightly" "kas-wgpu?/nightly") ("internal_doc" "kas-core/internal_doc" "kas-theme?/internal_doc") ("dynamic" "dep:kas-dylib") ("dark-light" "kas-theme?/dark-light") ("config" "kas-core/config" "kas-theme?/config") ("clipboard" "kas-wgpu?/clipboard")))) (r "1.62.0")))

(define-public crate-kas-0.13.0 (c (n "kas") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.13.0") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "kas-view") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.13.0") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "09wbk4cmalgmmhssah7n1bjjlk7vz09jf37zjap3bmwan6k38v2h") (f (quote (("yaml" "serde" "kas-core/yaml") ("x11" "kas-core/x11") ("winit" "kas-core/winit") ("wayland" "kas-core/wayland") ("spec" "min_spec" "kas-core/spec") ("spawn" "kas-core/spawn") ("shaping" "kas-core/shaping") ("serde" "kas-core/serde") ("ron" "serde" "kas-core/ron") ("nightly" "min_spec") ("minimal" "wgpu") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "serde" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "yaml" "image" "resvg" "clipboard" "markdown" "shaping" "dark-light" "spawn" "wayland" "x11") ("dark-light" "kas-core/dark-light") ("clipboard" "kas-core/clipboard")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("resvg" "dep:kas-resvg" "kas-resvg?/svg") ("internal_doc" "kas-core/internal_doc" "kas-wgpu?/internal_doc") ("dynamic" "dep:kas-dylib")))) (r "1.62.0")))

(define-public crate-kas-0.14.0-alpha (c (n "kas") (v "0.14.0-alpha") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.14.0-alpha") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.14.0-alpha") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.14.0-alpha") (o #t) (d #t) (k 0)) (d (n "kas-view") (r "^0.14.0-alpha") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.14.0-alpha") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.14.0-alpha") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "0sjdxxyxafi3xq1j1r7nfxrqi44pf1csl76nx9dl95iw0pvq7iln") (f (quote (("yaml" "serde" "kas-core/yaml") ("x11" "kas-core/x11") ("winit" "kas-core/winit") ("wayland" "kas-core/wayland") ("unsafe_node" "kas-core/unsafe_node") ("stable" "default" "serde" "json" "ron" "macros_log") ("spec" "min_spec" "kas-core/spec") ("spawn" "kas-core/spawn") ("shaping" "kas-core/shaping") ("serde" "kas-core/serde") ("ron" "serde" "kas-core/ron") ("nightly" "min_spec") ("minimal" "wgpu" "winit" "wayland" "x11") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "serde" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "yaml" "image" "resvg" "clipboard" "markdown" "shaping" "spawn") ("dark-light" "kas-core/dark-light") ("clipboard" "kas-core/clipboard")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("resvg" "dep:kas-resvg" "kas-resvg?/svg" "kas-dylib?/resvg") ("internal_doc" "kas-core/internal_doc" "kas-wgpu?/internal_doc") ("dynamic" "dep:kas-dylib")))) (r "1.66.0")))

(define-public crate-kas-0.14.1 (c (n "kas") (v "0.14.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.14.1") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "kas-view") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.14.1") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.14.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "1dw764ln693cccsglhri096iic7xibrm5n6ji5fgcjr3bkbc5h6d") (f (quote (("yaml" "serde" "kas-core/yaml") ("x11" "kas-core/x11") ("winit" "kas-core/winit") ("wayland" "kas-core/wayland") ("unsafe_node" "kas-core/unsafe_node") ("toml" "serde" "kas-core/toml") ("stable" "default" "serde" "toml" "yaml" "json" "ron" "macros_log") ("spec" "min_spec" "kas-core/spec") ("spawn" "kas-core/spawn") ("shaping" "kas-core/shaping") ("serde" "kas-core/serde") ("ron" "serde" "kas-core/ron") ("nightly" "min_spec") ("minimal" "wgpu" "winit" "wayland") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "serde" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "image" "resvg" "clipboard" "markdown" "shaping" "spawn") ("dark-light" "kas-core/dark-light") ("clipboard" "kas-core/clipboard")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("resvg" "dep:kas-resvg" "kas-resvg?/svg" "kas-dylib?/resvg") ("internal_doc" "kas-core/internal_doc" "kas-wgpu?/internal_doc") ("dynamic" "dep:kas-dylib")))) (r "1.66.0")))

(define-public crate-kas-0.14.2 (c (n "kas") (v "0.14.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "kas-core") (r "^0.14.1") (d #t) (k 0)) (d (n "kas-dylib") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "kas-resvg") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "kas-view") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "kas-wgpu") (r "^0.14.1") (f (quote ("raster"))) (o #t) (k 0)) (d (n "kas-widgets") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)))) (h "00k8cnp778nisqkiydifxjhnak85spddwzkzw04njfcnhz5f7lbj") (f (quote (("yaml" "serde" "kas-core/yaml") ("x11" "kas-core/x11") ("winit" "kas-core/winit") ("wayland" "kas-core/wayland") ("unsafe_node" "kas-core/unsafe_node") ("toml" "serde" "kas-core/toml") ("stable" "default" "serde" "toml" "yaml" "json" "ron" "macros_log") ("spec" "min_spec" "kas-core/spec") ("spawn" "kas-core/spawn") ("shaping" "kas-core/shaping") ("serde" "kas-core/serde") ("ron" "serde" "kas-core/ron") ("nightly" "min_spec") ("minimal" "wgpu" "winit" "wayland") ("min_spec" "kas-widgets/min_spec") ("markdown" "kas-core/markdown") ("macros_log" "kas-core/macros_log") ("json" "serde" "kas-core/json") ("image" "kas-widgets/image") ("harfbuzz" "kas-core/harfbuzz") ("default" "minimal" "view" "image" "resvg" "clipboard" "markdown" "shaping" "spawn") ("dark-light" "kas-core/dark-light") ("clipboard" "kas-core/clipboard")))) (s 2) (e (quote (("wgpu" "dep:kas-wgpu") ("view" "dep:kas-view") ("tiny-skia" "dep:kas-resvg") ("resvg" "dep:kas-resvg" "kas-resvg?/svg" "kas-dylib?/resvg") ("internal_doc" "kas-core/internal_doc" "kas-wgpu?/internal_doc") ("dynamic" "dep:kas-dylib")))) (r "1.66.0")))

