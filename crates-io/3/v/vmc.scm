(define-module (crates-io #{3}# v vmc) #:use-module (crates-io))

(define-public crate-vmc-0.1.0 (c (n "vmc") (v "0.1.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("alloc"))) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "17j576h3c9h42a2bq5chr1ip4dgfmjsq02x07ra1ik1f2az1vzj7") (r "1.70")))

(define-public crate-vmc-0.2.0 (c (n "vmc") (v "0.2.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("alloc"))) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0caiy4kqfp2dczp1znfzf9mfxasnkld5bb8r0qgsxp50x9h8bh01") (r "1.70")))

(define-public crate-vmc-0.3.0 (c (n "vmc") (v "0.3.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("alloc"))) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.30") (f (quote ("net" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1l99yf7r8r56n70wm5nmh5vvg5wmzpfhq8lq3y7mm6k6q7c2b9y9") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "nalgebra/serde-serialize")))) (r "1.70")))

