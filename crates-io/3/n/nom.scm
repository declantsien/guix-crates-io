(define-module (crates-io #{3}# n nom) #:use-module (crates-io))

(define-public crate-nom-0.0.1 (c (n "nom") (v "0.0.1") (h "0ndcjhfr3kg86ji4p0lfcna70k5q39y669bqrj9032yfyb2l1n3j")))

(define-public crate-nom-0.0.2 (c (n "nom") (v "0.0.2") (h "13ynm4vsggaijdvm7mnrp9f4k4z29ywnzc9yq6p1ppgy6jcn7adb")))

(define-public crate-nom-0.1.0 (c (n "nom") (v "0.1.0") (h "01b5q12hhjn7982a5bqvr8z3sc13bz88ym3g2na3ll2iqknljvak")))

(define-public crate-nom-0.1.1 (c (n "nom") (v "0.1.1") (h "0kv70sfkd8x2gzr60pf11m2rc3kspdzqh0198v3jg23lq3s9wzii")))

(define-public crate-nom-0.1.2 (c (n "nom") (v "0.1.2") (h "03rj8hdcn5g6l05whn74kzirshgk3yvnr1jb4hc5yrxp0dzl1r5z")))

(define-public crate-nom-0.1.3 (c (n "nom") (v "0.1.3") (h "1y077gi1b9kalcxj7dg7kmxdrqds3qkxjzdayrd8lay42q003gw3")))

(define-public crate-nom-0.1.4 (c (n "nom") (v "0.1.4") (h "1i4bqsncwrvy1ch8j8hjzdhivqci6sfppf3ijy6bfd7xf1dhzrji")))

(define-public crate-nom-0.1.5 (c (n "nom") (v "0.1.5") (h "0l0xcsglpyw3y1j8zjniqgah044fizjx2w06p252fwwv1jw2kzdh")))

(define-public crate-nom-0.1.6 (c (n "nom") (v "0.1.6") (h "1j6l7gxslwbg3pcmxpsswja5xx26jn6pb5kc6hzx2csdycazbl7w")))

(define-public crate-nom-0.2.0 (c (n "nom") (v "0.2.0") (h "0k25sdqmiffsqpj306lywjc0mcz5b2c2hnbjki3dhfcg0r1m8kzk")))

(define-public crate-nom-0.2.1 (c (n "nom") (v "0.2.1") (h "16lzxwl2xwwzsmyn6l2spnagfaq19bi81sgpbxa7hc8zkk1my2xj")))

(define-public crate-nom-0.2.2 (c (n "nom") (v "0.2.2") (h "1n2sj1p30h4kf2q7mbhbi9yckgrblj8lngl997jzjvziva51623p")))

(define-public crate-nom-0.3.0 (c (n "nom") (v "0.3.0") (h "07pim0gsj6gk2bc6pyxp7nk64i3h3bals1grvq2chpm9mznvf107")))

(define-public crate-nom-0.3.1 (c (n "nom") (v "0.3.1") (h "1107v3pbfli7srqmy1jbhnz41vzwqsimp35gy8nx2r72bsrb1bcn") (f (quote (("core"))))))

(define-public crate-nom-0.3.2 (c (n "nom") (v "0.3.2") (h "19kh8bjyflnyn9xhcgy558b3s5xz6vlwcalmkv2rr29rarm90689") (f (quote (("core"))))))

(define-public crate-nom-0.3.3 (c (n "nom") (v "0.3.3") (h "08biaklgd55xss8rkhjlllc43iscv5r4bfl2pimlcadrnnn4zbcs") (f (quote (("core"))))))

(define-public crate-nom-0.3.4 (c (n "nom") (v "0.3.4") (h "0axnkpnlyqjbqb76gzi63rz8gkn10sw76wgvn5hjqn5lmqsr20rr") (f (quote (("core"))))))

(define-public crate-nom-0.3.5 (c (n "nom") (v "0.3.5") (h "0449kfk0xgva4qzbkl5s3agn897hx6q32admxfqdgd2krscfpl8q") (f (quote (("core"))))))

(define-public crate-nom-0.3.6 (c (n "nom") (v "0.3.6") (h "157bqzdpyp8sl6hbsbnwvs2l0smgjp0vk0ajkd0s3cc045vw9cbc") (f (quote (("core"))))))

(define-public crate-nom-0.3.7 (c (n "nom") (v "0.3.7") (h "1gzz2nnsnd331z4m070lvl55rzkvxpx03hcmy61s5bysqrb13kbf") (f (quote (("core"))))))

(define-public crate-nom-0.3.8 (c (n "nom") (v "0.3.8") (h "1la8lkk2bsgmni7adyj4ykg0saxhn24bks1h153dpnsf0dgrv4zy") (f (quote (("nightly") ("core"))))))

(define-public crate-nom-0.3.9 (c (n "nom") (v "0.3.9") (h "1sxjpm47ajlklhhaq4k2n8d2ccaq6gkcpdj64725dclwsdh77ha4") (f (quote (("nightly") ("core"))))))

(define-public crate-nom-0.3.10 (c (n "nom") (v "0.3.10") (h "1bmy6qgbcy3p48rhjnyqr8grfnm2cw15zbxnal68rkvrqxvmf03j") (f (quote (("nightly") ("core"))))))

(define-public crate-nom-0.3.11 (c (n "nom") (v "0.3.11") (h "1ds8xnqwvcjsf5kii4k50zgcqja1v9wklv7p61pd7ifi9y7czr9v") (f (quote (("nightly") ("core"))))))

(define-public crate-nom-0.4.0 (c (n "nom") (v "0.4.0") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "0gkyic86a8qipkb4fjkc060zj3mnydqs5l1gwkywsmxrk5jx11rx") (f (quote (("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("core"))))))

(define-public crate-nom-0.5.0 (c (n "nom") (v "0.5.0") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "05vm5sw9xrax2jar8gbcws079wvqkxbyy9frjn1fjl30wch79f6m") (f (quote (("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("core"))))))

(define-public crate-nom-1.0.0-alpha (c (n "nom") (v "1.0.0-alpha") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "0qs6i6ji20b39zp9772a7366spdaw9rbzyhhvsv05k3vy1k028kn") (f (quote (("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("core"))))))

(define-public crate-nom-1.0.0-alpha2 (c (n "nom") (v "1.0.0-alpha2") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1l69v87cyy4pqlclmqsxhwsjqd0bwqbc0ljq2n89hr1ar1y20k87") (f (quote (("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("core"))))))

(define-public crate-nom-1.0.0-beta (c (n "nom") (v "1.0.0-beta") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1lhz4pv43r90z4ik48lf4c5qq889h26j556skyxgfqpr7y2y8sp3") (f (quote (("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("core"))))))

(define-public crate-nom-1.0.0-beta2 (c (n "nom") (v "1.0.0-beta2") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1rpklr82b3942iq87py2gljgwaa1fqrnmpzcyvhbz3al2k76iw19") (f (quote (("stream") ("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.0.0 (c (n "nom") (v "1.0.0") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1djcyr5m0zfgfhl8f3y1lc83b80biwa8cj02jarfyibavm07abiq") (f (quote (("stream") ("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.0.1 (c (n "nom") (v "1.0.1") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1j7hhinqh340zv98kl1pkna87x9vd9v8276n1fj391qmz2yfr67v") (f (quote (("stream") ("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.1.0 (c (n "nom") (v "1.1.0") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "1w4v69cjkjcnxnbkz722g8dp1zwvl68f8sl36dk32xy5hjlr89gj") (f (quote (("stream") ("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.2.0 (c (n "nom") (v "1.2.0") (d (list (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.21") (o #t) (d #t) (k 0)))) (h "0givcdppyhnn13glnxr971chv5m1vdwqn66cx1p03aczmgp1cbz4") (f (quote (("stream") ("regexp_macros" "regexp" "regex_macros") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.2.1 (c (n "nom") (v "1.2.1") (d (list (d (n "lazy_static") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)))) (h "062c8j919hi41f7pvff5ziikrbdnv115skmcyd5k1w4mhssb1gb8") (f (quote (("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.2.2 (c (n "nom") (v "1.2.2") (d (list (d (n "lazy_static") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (o #t) (d #t) (k 0)))) (h "0kpxbynprmvx4mnf4idl48aqw48m46imlwj9n9n33alpbwnb3akc") (f (quote (("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.2.3 (c (n "nom") (v "1.2.3") (d (list (d (n "lazy_static") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.56") (o #t) (d #t) (k 0)))) (h "1djcpygpndf5jjpnihp74hwvy4rpz5a20f5p3l5415jp54snmc6i") (f (quote (("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-1.2.4 (c (n "nom") (v "1.2.4") (d (list (d (n "lazy_static") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.56") (o #t) (d #t) (k 0)))) (h "1kjh42w67z1hh1dw3jrilgqrf54jk2xcvhw4rcdm4wclzmbc5f55") (f (quote (("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-2.0.0 (c (n "nom") (v "2.0.0") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.56") (o #t) (d #t) (k 0)))) (h "0wfmpjdqi56ij0mnc1957c2zclrfmnkclc9kxcgirjmhibhnx3b2") (f (quote (("verbose-errors") ("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-2.0.1 (c (n "nom") (v "2.0.1") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.1.56") (o #t) (d #t) (k 0)))) (h "040bpf3ggj38cx8hjrd6hzrxgfw41pnzzm2mvf9qjxbzfar69igz") (f (quote (("verbose-errors") ("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-2.1.0 (c (n "nom") (v "2.1.0") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0rwh8r4lsyi58zal9xcj5ac7f3lp5a35p7d6l2wyv7w56j45km75") (f (quote (("verbose-errors") ("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-2.2.0 (c (n "nom") (v "2.2.0") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "00ph9pmcqcnh8jbmaq5pzw3fq9l55f3r2yzcahxgci78i0szzvsg") (f (quote (("verbose-errors") ("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-2.2.1 (c (n "nom") (v "2.2.1") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1zv6ig7nw532rl4p35jsahglfhyyznjkblwa6si6c0plxhlsflfg") (f (quote (("verbose-errors") ("stream") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "stream") ("core"))))))

(define-public crate-nom-3.0.0 (c (n "nom") (v "3.0.0") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "121wxrlnkh4s1vaahlnz5i05kir06qpaj2qzw2g8hpbx4ygh122k") (f (quote (("verbose-errors") ("stream") ("std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "std" "stream"))))))

(define-public crate-nom-3.1.0 (c (n "nom") (v "3.1.0") (d (list (d (n "compiler_error") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0dv20ms1h5vmmg1aqnfp5p2zmg9b0ahln4ybzkymkn5a21m9sq3g") (f (quote (("verbose-errors") ("stream") ("std" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly" "compiler_error") ("default" "std" "stream"))))))

(define-public crate-nom-3.2.0 (c (n "nom") (v "3.2.0") (d (list (d (n "compiler_error") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1c9i38k29azza88w07261fhymq63v1kvrwsilj3zf1ky6syrr606") (f (quote (("verbose-errors") ("stream") ("std" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly" "compiler_error") ("default" "std" "stream"))))))

(define-public crate-nom-3.2.1 (c (n "nom") (v "3.2.1") (d (list (d (n "compiler_error") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0yr8fazcspgawl6s7wmx5llz61s68jl88cnrph18fa7xf06cbbh5") (f (quote (("verbose-errors") ("stream") ("std" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly" "compiler_error") ("default" "std" "stream"))))))

(define-public crate-nom-4.0.0-alpha1 (c (n "nom") (v "4.0.0-alpha1") (d (list (d (n "lazy_static") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "04jcy7i8prj49njg4il2aqhciv293ww6y72crazs59ysmxxg3zdd") (f (quote (("verbose-errors") ("stream") ("std" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "std" "stream"))))))

(define-public crate-nom-4.0.0-alpha2 (c (n "nom") (v "4.0.0-alpha2") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0n85cafkx1vrv82s662s29qhymgbhbrps2q8f07lccgiillriwyl") (f (quote (("verbose-errors") ("std" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "std"))))))

(define-public crate-nom-4.0.0-beta1 (c (n "nom") (v "4.0.0-beta1") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0qmlx5n4wjmvjyr086aq94nqvimyysyhr0rywppn373f4b2in7vq") (f (quote (("verbose-errors") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("nightly") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.0.0-beta2 (c (n "nom") (v "4.0.0-beta2") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "00bkc8hxi5ip5rg8bf583vxsa4scdj091v71wzan7firaxddv1ib") (f (quote (("verbose-errors") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.0.0-beta3 (c (n "nom") (v "4.0.0-beta3") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^0.2") (o #t) (d #t) (k 0)))) (h "073xidypx8khrprfwl7q0s6qgvqlbymw9l4gb5xy5qskym9d2dag") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.0.0 (c (n "nom") (v "4.0.0") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)))) (h "056inskpv4xpwixyklqrds9y3i7pwx3bxgxgnmgcxhxm1rsrd1l9") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.1.0 (c (n "nom") (v "4.1.0") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)))) (h "01xyjwipbis0pcbndx63d1i20rc40jiz3vx7kk1xcid1cn9lddah") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.1.1 (c (n "nom") (v "4.1.1") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0jkp6c1bmgqqjn2gzhsh0lxn6p1afmlpq3ng8jgnnnazy9l9yd4w") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.2.0 (c (n "nom") (v "4.2.0") (d (list (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "126mmfad29m71d5ygarf5rpg7ijv1dp3rjyps34h1kjqf1axq2mk") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.2.1 (c (n "nom") (v "4.2.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0m5kfi3h05gj9anv3w8z2r2y5pmjjy65kp3y21z02lk50gbfjdj8") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.2.2 (c (n "nom") (v "4.2.2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1hyaj03mhn4q0p5grl43rrhvgvn7807w47carikqafpkscjksa92") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-4.2.3 (c (n "nom") (v "4.2.3") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia") (f (quote (("verbose-errors" "alloc") ("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-5.0.0-alpha1 (c (n "nom") (v "5.0.0-alpha1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0vymwak1893vsl9qx9qdki0inzx1x9nz6rnrzp02n2fsbky3gbdk") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("default" "std") ("alloc"))))))

(define-public crate-nom-5.0.0-alpha2 (c (n "nom") (v "5.0.0-alpha2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1xg1gp4a4n4028l35fk0rxz0nvym46qi22w6lbfarkqzaknw31zv") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.0.0-beta1 (c (n "nom") (v "5.0.0-beta1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "097sxr37ffqrxfw3n88mvbbgdgsymdh8800fk2g61fmsn88z69v5") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.0.0-beta2 (c (n "nom") (v "5.0.0-beta2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1372bbw3zfjp1f0rvqc7c29zqvzbfrciivnfj0r2nz3lkzg1b8ng") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.0.0-beta3 (c (n "nom") (v "5.0.0-beta3") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "025lwpcm9lrr9ybcj8a7ixap9k718hb0abaiq0s2y5v1a6pb569a") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.0.0 (c (n "nom") (v "5.0.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "06snml9wfrvk8k71l4md6gg29jgj4pa8wzsg180q3qr0jf2isxp9") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.0.1 (c (n "nom") (v "5.0.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1jimv9sh1l5dh6dzbxaixw3a26gq766ndrl470l02i6s48sbc666") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.1.0 (c (n "nom") (v "5.1.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "01sfs72wrrfbicb2dz41w682d7qb7ahjygajg3zyfv7y0paz8cy4") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.1.1 (c (n "nom") (v "5.1.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1mma0q5bzgzbyyjc2w8z0wvff08yaaf28lhmnsj2slwpv99i4iqb") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-6.0.0-alpha1 (c (n "nom") (v "6.0.0-alpha1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">= 0.6, < 0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1ih5jxqci844ckgpddcp5fyz3glx7kr44frj2ywigxsbaiwhf0i5") (f (quote (("std" "alloc" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-5.1.2 (c (n "nom") (v "5.1.2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1br74rwdp3c2ddga03bphnf355spn4mzwf1slg0a30zd4qnjdd7z") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-6.0.0-alpha2 (c (n "nom") (v "6.0.0-alpha2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1fbpa2rzgdh6q6bi62nhihcg1zp2hga2s72191pqnkrvnrgjilsv") (f (quote (("std" "alloc" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-6.0.0-alpha3 (c (n "nom") (v "6.0.0-alpha3") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0idhmyn7qg6cc5isjjzhjan4nhjqxvbwynk0frczb05y3dgv3zdc") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0-beta1 (c (n "nom") (v "6.0.0-beta1") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0nf25hlfjidvi8vw3n8bqg1gjx63swrq33j2hylrz0b7hm0gn0lb") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0-beta2 (c (n "nom") (v "6.0.0-beta2") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1017d6yr5gcc3qhqj77y4x10m9bfzdin2gm6078vsqlvv4q4f5m3") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0-beta3 (c (n "nom") (v "6.0.0-beta3") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1bn0pilyxd5dlkvx33jz7rlii71p5sv2sj844y25mva8ci22amf6") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0-beta4 (c (n "nom") (v "6.0.0-beta4") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1vx8j2zapj70hcqrxqk9f0n6pqdqi25gkp0bnsz4jkdmpqxibkh5") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0-beta5 (c (n "nom") (v "6.0.0-beta5") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1igsi6c8g0c5lklbfdczh74kpyw7xmrpa110lzf0gfl1gxll5s5b") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.0 (c (n "nom") (v "6.0.0") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0pzp51bvz6byv8srsix6mw1qjwl1q0kx0z5gckgpv5b8sv3wr2a4") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.0.1 (c (n "nom") (v "6.0.1") (d (list (d (n "bitvec") (r ">=0.19.3, <0.20.0") (o #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "doc-comment") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "jemallocator") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r ">=2.0.0, <3.0.0") (k 0)) (d (n "regex") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r ">=0.9.0, <0.10.0") (d #t) (k 1)))) (h "1w0ppq112myzwk23c8m0wmq0nv73xvn0g9gl2kfm83aadgylq0w8") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.1.0 (c (n "nom") (v "6.1.0") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1cg27ijcxq2f56zsd3kdh0kzqz8jf3ab6yqw1wqal9b3dns70vxb") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.1.1 (c (n "nom") (v "6.1.1") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "funty") (r ">1.0, <=1.1") (o #t) (k 0)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "06xhgpjra1ms5ppdvsgsr3nlkljqb10bl5b5w3arsq8g4pi1wlix") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc"))))))

(define-public crate-nom-6.1.2 (c (n "nom") (v "6.1.2") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "funty") (r ">1.0, <=1.1") (o #t) (k 0)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1qnmyd9y9ljy7hxch8sbayybd7sn18vvs95nlx2lggbijsckyhg7") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc" "funty"))))))

(define-public crate-nom-6.2.0 (c (n "nom") (v "6.2.0") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "funty") (r ">1.0, <=1.1") (o #t) (k 0)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r ">=2.0, <2.4") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "17kpb99jk5zh3ydfjimdzgdm3pziivcna6qw565z9qjif9f5jsh4") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc" "funty"))))))

(define-public crate-nom-6.2.1 (c (n "nom") (v "6.2.1") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "funty") (r ">1.0, <=1.1") (o #t) (k 0)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r ">=2.0, <2.4") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "19h3l5hajpcszwl6nzcmgs4mpng73ifn6akslq7n4g1s12wm2p4w") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc" "funty"))))))

(define-public crate-nom-7.0.0-alpha1 (c (n "nom") (v "7.0.0-alpha1") (d (list (d (n "bitvec") (r ">=0.22.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "00k0nisi3s4brxi8sn7dbw9gb5qjv8m61k5c57k9d18nacgcshyx") (f (quote (("std" "alloc" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "lexical") ("bitvec-std" "bitvec/std" "std") ("bitvec-base" "bitvec") ("bitvec-alloc" "alloc" "bitvec/alloc") ("alloc"))))))

(define-public crate-nom-7.0.0-alpha2 (c (n "nom") (v "7.0.0-alpha2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1gsnly8w2klj0q8bkh30cpygvmdfp90dhy1lrslbz93xycz1z21r") (f (quote (("std" "alloc" "memchr/use_std") ("lexical" "lexical-core") ("docsrs") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-7.0.0-alpha3 (c (n "nom") (v "7.0.0-alpha3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "minimal-lexical") (r "^0.1.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "15vx4pik3dsaw9bd3xxvwgchx0ycp4lnjby9qihbzgwf3hwl7c5g") (f (quote (("std" "alloc" "memchr/use_std") ("docsrs") ("default" "std") ("alloc"))))))

(define-public crate-nom-7.0.0 (c (n "nom") (v "7.0.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "minimal-lexical") (r "^0.1.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1ha24yclw4m74gi9p5c3d68rhrrcb7qvkgicz153p5cahck9vzbz") (f (quote (("std" "alloc" "memchr/use_std") ("docsrs") ("default" "std") ("alloc"))))))

(define-public crate-nom-7.1.0 (c (n "nom") (v "7.1.0") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "minimal-lexical") (r "^0.2.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0281jdx0xcyhjgs1jkj9pii8py1clcpazg41bgz7d71qxzhi278v") (f (quote (("std" "alloc" "memchr/std" "minimal-lexical/std") ("docsrs") ("default" "std") ("alloc"))))))

(define-public crate-nom-7.1.1 (c (n "nom") (v "7.1.1") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "minimal-lexical") (r "^0.2.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)))) (h "0djc3lq5xihnwhrvkc4bj0fd58sjf632yh6hfiw545x355d3x458") (f (quote (("std" "alloc" "memchr/std" "minimal-lexical/std") ("docsrs") ("default" "std") ("alloc")))) (r "1.48")))

(define-public crate-nom-7.1.2 (c (n "nom") (v "7.1.2") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "minimal-lexical") (r "^0.2.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)))) (h "132lkkqd8hcbmpb90hncwknr7rn6knfq7774d679k74iqilpfl75") (f (quote (("std" "alloc" "memchr/std" "minimal-lexical/std") ("docsrs") ("default" "std") ("alloc")))) (r "1.48")))

(define-public crate-nom-7.1.3 (c (n "nom") (v "7.1.3") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "minimal-lexical") (r "^0.2.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)))) (h "0jha9901wxam390jcf5pfa0qqfrgh8li787jx2ip0yk5b8y9hwyj") (f (quote (("std" "alloc" "memchr/std" "minimal-lexical/std") ("docsrs") ("default" "std") ("alloc")))) (r "1.48")))

(define-public crate-nom-5.1.3 (c (n "nom") (v "5.1.3") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0jyxc4d3pih60pp8hvzpg5ajh16s273cpnsdpzp04qv7g8w9m588") (f (quote (("std" "alloc" "memchr/use_std") ("regexp_macros" "regexp" "lazy_static") ("regexp" "regex") ("lexical" "lexical-core") ("default" "std" "lexical") ("alloc"))))))

(define-public crate-nom-6.2.2 (c (n "nom") (v "6.2.2") (d (list (d (n "bitvec") (r "^0.19.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "funty") (r ">1.0, <=1.1") (o #t) (k 0)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r ">=0.6, <0.8") (o #t) (d #t) (k 0)) (d (n "memchr") (r ">=2.0, <2.4") (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0i0dmnj7wfdskwjhcf2pn4c9rw4x8as8pdlnc5683mc4gijsk9y6") (f (quote (("std" "alloc" "bitvec/std" "memchr/use_std") ("regexp" "regex") ("lexical" "lexical-core") ("docsrs") ("default" "std" "bitvec" "lexical") ("alloc" "bitvec/alloc" "funty"))))))

(define-public crate-nom-8.0.0-alpha1 (c (n "nom") (v "8.0.0-alpha1") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "proptest") (r "=1.0.0") (d #t) (k 2)))) (h "0y5y1l22xhway7g0wn8xmjkwd5pxp66gl8vjk9bd12j5bkmwj3hq") (f (quote (("std" "alloc" "memchr/std") ("docsrs") ("default" "std") ("alloc")))) (r "1.56")))

(define-public crate-nom-8.0.0-alpha2 (c (n "nom") (v "8.0.0-alpha2") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (k 0)) (d (n "proptest") (r "=1.0.0") (d #t) (k 2)))) (h "1qkz1dalkibslk07p6qzlxdx2arn32pj0hnqnd3ff40rd6358y62") (f (quote (("std" "alloc" "memchr/std") ("docsrs") ("default" "std") ("alloc")))) (r "1.56")))

