(define-module (crates-io #{3}# o omt) #:use-module (crates-io))

(define-public crate-omt-0.1.1 (c (n "omt") (v "0.1.1") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "~0.15.1") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.1.1") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "07giilsi0kwg35lhmk8g0c4zrkhw4ixgk3hgwxvr3w4zl8r0qhw8")))

(define-public crate-omt-0.1.2 (c (n "omt") (v "0.1.2") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "~0.15.1") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.4.5") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "~0.1.2") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1fa07d1zr226p260w354mgfs46nrmciy60byma9id3xr2gmrmsv5")))

(define-public crate-omt-0.2.0 (c (n "omt") (v "0.2.0") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "~0.15.1") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.2") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1rmp6fxsygs21ncq0vwx6jq9kf780xkn9idpy7q4p20khw2hdy53")))

(define-public crate-omt-0.3.0 (c (n "omt") (v "0.3.0") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "~0.15.1") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.2") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1wbqd6cfi85xsmk06g6qx5f7xyqfnn349h7mkd7n83m55d9vabvx")))

(define-public crate-omt-0.4.0-alpha (c (n "omt") (v "0.4.0-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "~0.15.1") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "072wvga2d2lrqhf5ncim738xzc76iz39lwy6l4qybnr51cng95aa")))

(define-public crate-omt-0.4.1-alpha (c (n "omt") (v "0.4.1-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "~1.8.1") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0x66k3i64dv9m6r7zfipn4sv7dbiq3wqm0y7x134d9k1wbv1i0aq")))

(define-public crate-omt-0.4.2-alpha (c (n "omt") (v "0.4.2-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "~0.16") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0804bcckz2l5sfr6j6ky8hy6c80ipd1zp6b2cirxzk0ly564pa8h")))

(define-public crate-omt-0.4.3-alpha (c (n "omt") (v "0.4.3-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1dw399d32rlgm48p51wdla5i906j1h4s8ivqyr5kgnhab4i7pj3b")))

(define-public crate-omt-0.4.4-alpha (c (n "omt") (v "0.4.4-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0h3fpcqhrk9i5ywbvplkix7d3cawd4jrkfk49pd7xdhbac6ibgm6")))

(define-public crate-omt-0.4.5-alpha (c (n "omt") (v "0.4.5-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1y0lh0lvg8i7x371whrqmzfvgx87zi3fjbd1nf8vzn14s02f5s1h") (y #t)))

(define-public crate-omt-0.4.6-alpha (c (n "omt") (v "0.4.6-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "14w5xz2vnifg3fvhnrhnni33p8zx53jlkd24jb9qac9ssmrfc0cc")))

(define-public crate-omt-0.4.7-alpha (c (n "omt") (v "0.4.7-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "~0.4") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0hvpa7jambh03gs9vad7iqcniyc1540981pgi0srqgn7k27ii6ab")))

(define-public crate-omt-0.5.0-alpha (c (n "omt") (v "0.5.0-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1mqwf8ghw2sl2xdac7xcjl5mavrr3q4k0nq9k6jlyh7hgnwz8773")))

(define-public crate-omt-0.5.1-alpha (c (n "omt") (v "0.5.1-alpha") (d (list (d (n "byteorder") (r "~1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "~0.22.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "~1.5.4") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.17.0") (d #t) (k 0)) (d (n "rusttype") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "08hbp99374ll8gbxycdgbp2s8ahwsml3kkmhihvx1lyzgkq4wq5n")))

(define-public crate-omt-0.5.2-alpha (c (n "omt") (v "0.5.2-alpha") (d (list (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "om-fork-distance-field") (r "^0.1.8") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "19js4l4q0jv326k0z62bfpvnlv6842a74ir0hv8gnyvbbsbc5a7i")))

(define-public crate-omt-0.6.0-alpha (c (n "omt") (v "0.6.0-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "om-fork-distance-field") (r "^0.1.8") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.0-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "18hdm7kpc4bvy2zvcddlfdbi000kxa1yzparbxx94jczrn32ycc8")))

(define-public crate-omt-0.6.1-alpha (c (n "omt") (v "0.6.1-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "om-fork-distance-field") (r "^0.1.8") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0pr80ishy01azi070k3fa1c1p980nqx4wm6df21f1lvvl82wmqli")))

(define-public crate-omt-0.6.2-alpha (c (n "omt") (v "0.6.2-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "om-fork-distance-field") (r "^0.1.8") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0gjmwv6xcb5ri10zdlf98ckz8jq4qdcn208vznsvd6zkb227dvib")))

(define-public crate-omt-0.6.3-alpha (c (n "omt") (v "0.6.3-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1lgygb3279y97xazy5234i6g8l1ryap456r9shqbqj40r6dwp688")))

(define-public crate-omt-0.7.0-alpha (c (n "omt") (v "0.7.0-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "04jw69jjmxqg4z11h3k1i85x0djwqdq79q214l0mcy94rilb6vz6")))

(define-public crate-omt-0.7.1-alpha (c (n "omt") (v "0.7.1-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1xzb97jqazsfngxg7z10yaa7lhcbbqd3ax9xpmc68k7f1gsp8s22")))

(define-public crate-omt-0.7.2-alpha (c (n "omt") (v "0.7.2-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1h97hlsgzh7zhg0xlzjl3mk1gx5i1blg6mk8jsn95qa70zbzyl6y")))

(define-public crate-omt-0.7.4-alpha (c (n "omt") (v "0.7.4-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1p8jz1mjabrg581a2ycszci7ww767fwp92slfmva57dr2a0raxjf")))

(define-public crate-omt-0.7.5-alpha (c (n "omt") (v "0.7.5-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "124wx67v09k0slshl2f5qg7acbj6zyfl96aind09hfdyqgmjqcqd")))

(define-public crate-omt-0.8.0-alpha (c (n "omt") (v "0.8.0-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "04ndpvpbpl2hcg9gsdm598whdhxwl8p5dh8y0j3s9s2mwwvibg98")))

(define-public crate-omt-0.8.1-alpha (c (n "omt") (v "0.8.1-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "1ma4lq6ihwbssr1qmwh21vwhs4y97qgrq4bq2cz4nc5zpc3bf2kj")))

(define-public crate-omt-0.8.2-alpha (c (n "omt") (v "0.8.2-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0msiz234j5mkdp6k8kgznck0y4lswi2lwbcn3hbqnrqk24zfjpkc")))

(define-public crate-omt-0.8.3-alpha (c (n "omt") (v "0.8.3-alpha") (d (list (d (n "anyhow") (r "^1.0.62") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive" "cargo" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "distance-field") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "~0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "minifb") (r "^0.23.0") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "resize") (r "^0.7.2") (d #t) (k 0)) (d (n "rgb") (r "^0.8.32") (d #t) (k 0)) (d (n "rlua") (r "^0.19.4") (d #t) (k 0)) (d (n "rusttype") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "shader-crusher") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "~0.4.3") (d #t) (k 0)))) (h "0ix0ly77mkxz0fks1nsiijaxbdkgpcwbsk9wmnjchw6lzpsv2igj")))

