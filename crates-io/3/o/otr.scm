(define-module (crates-io #{3}# o otr) #:use-module (crates-io))

(define-public crate-otr-0.6.1 (c (n "otr") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "01hfs9m4671jcaxa6dha49zhhh248d68plsaqiw3x2sr731p3fsc")))

(define-public crate-otr-0.6.2 (c (n "otr") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0pjv3ysrdnnxagdc638k98r5amxy8cn3xp08a685zx5lraqxmckx")))

(define-public crate-otr-0.7.0 (c (n "otr") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "11i5nxzsv86ziyj3aklgs8i72f542b3g12fgwz0h71sryn4d22zr")))

(define-public crate-otr-0.8.0 (c (n "otr") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable" "kv_unstable_serde"))) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "print_logger") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1i75lmn8lfp0yyihph1ifhsnq2vfwh2p16gcaa9nsmzxxlxpz6wb")))

(define-public crate-otr-0.9.0 (c (n "otr") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable" "kv_unstable_serde"))) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "print_logger") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "multipart"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.20") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1pvvp7q70gd12fsa56wh4snn8r9kxxbd93s23jk1ncbs8ck2wp2y")))

(define-public crate-otr-0.11.1 (c (n "otr") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable" "kv_unstable_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "otr-utils") (r "^0") (d #t) (k 0)) (d (n "print_logger") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "multipart"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.21") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0skhsq5b8dsl43x3qhgkqhixkzx8k2kxv1z3y6xq22wi1dql5dky")))

