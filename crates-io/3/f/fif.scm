(define-module (crates-io #{3}# f fif) #:use-module (crates-io))

(define-public crate-fif-0.2.3 (c (n "fif") (v "0.2.3") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0f5kh8b8bfc1a81sn2zxjrd8dg94gj4phf8nvns2563hgvsz6myr") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("infer-backend" "infer") ("default" "multi-threaded" "infer-backend"))))))

(define-public crate-fif-0.2.3+hotfix (c (n "fif") (v "0.2.3+hotfix") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1xngi5gssjvpnyx4ln4a4s9vx0sn3ydb28pszyn9fdw49an3q8x6") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("infer-backend" "infer") ("default" "multi-threaded" "infer-backend"))))))

(define-public crate-fif-0.2.4 (c (n "fif") (v "0.2.4") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0ffikvf168a9n22wdz7aswjapvpbj6f7pxx09rgvjajjdf0qiixv") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("infer-backend" "infer") ("default" "multi-threaded" "infer-backend"))))))

(define-public crate-fif-0.2.5 (c (n "fif") (v "0.2.5") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "12nvzdv06xciwc3csjzmphilj9b4gx8x1c3wq1svrhi7097jc8q5") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded"))))))

(define-public crate-fif-0.2.6 (c (n "fif") (v "0.2.6") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(any(unix, target_os = \"redox\"))") (k 0)))) (h "0jdbrg2g9vi5q3sfbs8kclclwiqi23iad9hwahbfkspl864gss2k") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded"))))))

(define-public crate-fif-0.2.7 (c (n "fif") (v "0.2.7") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(any(unix, target_os = \"redox\"))") (k 0)))) (h "1f2iag6niny6b581dprpkm4ahpxsa89f318gh8xrw0kjz893l5qi") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded"))))))

(define-public crate-fif-0.2.8 (c (n "fif") (v "0.2.8") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)))) (h "05ff7fjwg869g3331mdc8yi6fl06z5fp14dlajy7ng18b1jxh823") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded"))))))

(define-public crate-fif-0.2.9 (c (n "fif") (v "0.2.9") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)))) (h "0m3g22d2jc85q6sf7isvgz5y15fd7l153maddspj5fjqi83h1d8k") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded"))))))

(define-public crate-fif-0.2.10 (c (n "fif") (v "0.2.10") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.0") (d #t) (k 2)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)))) (h "180qwpgkwcqpdx873cbpfx18w816amxhmx1q9n6m00szdssna2r9") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded")))) (r "1.43.0")))

(define-public crate-fif-0.2.11 (c (n "fif") (v "0.2.11") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.2") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.0") (d #t) (k 2)) (d (n "infer") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)))) (h "0q3i6ny2j4909x8v3qfjn6lxdss7wzw8w7k5i9riky0ppcapcvaa") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded")))) (r "1.43.0")))

(define-public crate-fif-0.2.12 (c (n "fif") (v "0.2.12") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.0") (d #t) (k 2)) (d (n "infer") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.2") (d #t) (t "cfg(unix)") (k 0)))) (h "1ccbwng8k4xz5hiz92bflky0phk3a1gq5p0l12sfizkwk01vx07c") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded")))) (r "1.43.0")))

(define-public crate-fif-0.2.13 (c (n "fif") (v "0.2.13") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 2)) (d (n "infer") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)))) (h "0l6as5pgzm9pv72g01wwiywlgqfq6krcg39gymvfqxglmsnd483p") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded")))) (r "1.43.0")))

(define-public crate-fif-0.3.0 (c (n "fif") (v "0.3.0") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 2)) (d (n "infer") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.1.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)))) (h "0dyai9a3y593w8cbphdxys3svisf2bxxih8gn202zpfx4aw5saw2") (f (quote (("xdg-mime-backend") ("multi-threaded" "rayon") ("infer-backend") ("default" "multi-threaded")))) (r "1.43.0")))

(define-public crate-fif-0.3.1 (c (n "fif") (v "0.3.1") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.1.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "0ds145l1i8q0qwpv56ffdz815cw8fdzzpa2zgzgk33rq9hsdmcvw") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.3.2 (c (n "fif") (v "0.3.2") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.1.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "0nm70ci00nb5li84lky885h602nv98i1ix8h80jc77fvp3nch0kh") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.3.3 (c (n "fif") (v "0.3.3") (d (list (d (n "cached") (r "^0.23.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.8.3") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.1.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1ms9hli3chf6xcf3fsqzp5ikxz5mb86f0d8rkfpx415bdj3flmk3") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.3.4 (c (n "fif") (v "0.3.4") (d (list (d (n "cached") (r "^0.24.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^3.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "<=0.2.7, >=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1fass2ddx68ias42gqm5dk1ybx8jz8jmkwgnh357raw5683j9d3x") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.3.5 (c (n "fif") (v "0.3.5") (d (list (d (n "cached") (r "^0.25.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^3.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "<=0.2.7, >=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1qd3l8yvzy7igljdr7fnrjpz08d2avkfzfp2ccg0cnjfpzs9sb2l") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (y #t) (r "1.43.0")))

(define-public crate-fif-0.3.6 (c (n "fif") (v "0.3.6") (d (list (d (n "bitflags") (r "~1.2.1") (d #t) (k 0)) (d (n "cached") (r "^0.25.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^3.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "<=0.2.7, >=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "0f6fp5pwh185m1r3nwyd3nlskmm11wkaxrgxiqi9jnmz1zpdfgyc") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.3.7 (c (n "fif") (v "0.3.7") (d (list (d (n "bitflags") (r "~1.2.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^3.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "<=0.2.7, >=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1dm0zccbqpg74fg69g4283x05w3lrijk3k6b853ji566aw8pnr43") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.43.0")))

(define-public crate-fif-0.4.0 (c (n "fif") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("wrap_help" "color" "derive" "std"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^3.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r ">=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1ik6gq2j8s825bz2l0ppzh9lki5l3fb2l6k698d8zjiw7851xwhi") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.48.0")))

(define-public crate-fif-0.5.0 (c (n "fif") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.5.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.5.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r ">=0.2.4") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "02yhcjdzscgy51va7n32fn9q3i4n4hhww32ff44nsrb28nvnhpfh") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.54.0")))

(define-public crate-fif-0.5.1 (c (n "fif") (v "0.5.1") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.7.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r ">=0.2.4, <=0.2.9") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1lzajirrsgpmm4z3ca5wggzcm3driivb2yq5g0r75mf2d0r7s5nv") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.54.0")))

(define-public crate-fif-0.5.2 (c (n "fif") (v "0.5.2") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.7.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r ">=0.2.4, <=0.2.9") (d #t) (t "cfg(not(all(target_endian = \"big\", target_pointer_width = \"32\")))") (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "177i4hjml0p033135399jrjwic5pikjpzdlk3s9ca7sqwj9m9c3c") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.54.0")))

(define-public crate-fif-0.6.0 (c (n "fif") (v "0.6.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.9.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.9.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (f (quote ("phf-map"))) (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "1q707raw16svxsgv1b08vmznf6shi8yjw1svcgfrndwy8i534zi5") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.57.0")))

(define-public crate-fif-0.7.0 (c (n "fif") (v "0.7.0") (d (list (d (n "assert_cmd") (r "^2.0.5") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "~4.1") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("color"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "^0.13.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "^0.13.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "~2.3.2") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "052zk391bldv8v4xf3i9giqf7rp2vfrj6an7a227jfx3n4bbprxf") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.64.0")))

(define-public crate-fif-0.7.1 (c (n "fif") (v "0.7.1") (d (list (d (n "assert_cmd") (r "=2.0.5") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "~4.1") (f (quote ("wrap_help" "color" "derive" "std" "unicode"))) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("color"))) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "infer") (r "=0.13.0") (d #t) (t "cfg(not(unix))") (k 0)) (d (n "infer") (r "=0.13.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime_guess") (r "^4.0.0") (d #t) (k 0) (p "new_mime_guess")) (d (n "num_cpus") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "=1.9.5") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "snailquote") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)) (d (n "xdg-mime") (r "^0.3.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "xdg-mime") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(unix))") (k 0)))) (h "0330hbna49fxr3d3y4nf3i6kgpl3ll2l7y49zmq916nfl19qpalv") (f (quote (("xdg-mime-backend" "xdg-mime") ("multi-threaded" "rayon" "num_cpus") ("json" "serde" "serde_json") ("infer-backend" "infer") ("default" "multi-threaded" "json")))) (r "1.64.0")))

