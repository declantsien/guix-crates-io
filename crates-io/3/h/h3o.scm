(define-module (crates-io #{3}# h h3o) #:use-module (crates-io))

(define-public crate-h3o-0.1.0 (c (n "h3o") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "runtime-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.23") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.15") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "0sx68fcgqm59hc21n49n8qhqf4vfv34vb6fi39abimig9zc72ygc") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.2.0 (c (n "h3o") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "runtime-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.23") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.15") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "07lh8ynrblp39rlnhmmfa4m78pzflrcvkfw5x6wb1ajcxglr96kz") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.0 (c (n "h3o") (v "0.3.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "runtime-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.23") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "15nzlyrpcszyvvf2rcisnwxid7s5qafb9i5rixxd19x96b0sqhxh") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.1 (c (n "h3o") (v "0.3.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.24") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "04imyw83y52bgvf2klsys24x5dqdbpw2lmf82zsgi85d2c9gcn7k") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.2 (c (n "h3o") (v "0.3.2") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.24") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "198d64ykiwa6n3bh79x8awyq6whn0qwnwmkqc7i89hv84qnf8dwp") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.3 (c (n "h3o") (v "0.3.3") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.26") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "1lg49fq0zaf7lfa9561gk8a608483lg1bngzad6i5qlg3hzga50g") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.4 (c (n "h3o") (v "0.3.4") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.26") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "0yx00zin1j2s134wwyz1j4rpg3kppdw2j6lyc2wvrz0kdpb7ynmf") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.3.5 (c (n "h3o") (v "0.3.5") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.26") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "1w9vaqccs1lib5fwzwcnzw3ihd83b0ssxz9yfx920y0q3hpglcxf") (f (quote (("tools" "polyfit-rs") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.4.0 (c (n "h3o") (v "0.4.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.26") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3ron-h3-sys") (r "^0.16") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "1hdylxgxdlamkps2zsp41f90a8fq7ix8filzf4bv67b5020r7yy6") (f (quote (("tools" "polyfit-rs") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.5.0 (c (n "h3o") (v "0.5.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.27") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "18ni1z5pcyijfxw6xmpc57q8zrbjql1yas9xwwqd7jfzmf2a7d7r") (f (quote (("tools" "polyfit-rs") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.5.1 (c (n "h3o") (v "0.5.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "auto_ops") (r "^0.3") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.27") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)))) (h "02czz5f3x8w5cix76ri0mlbs9j9wn57646572q93m2787x0aw65f") (f (quote (("tools" "polyfit-rs") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.5.2 (c (n "h3o") (v "0.5.2") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.27") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "konst") (r "^0.3") (f (quote ("parsing"))) (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^0.7") (o #t) (k 0)))) (h "16j1f2jaj8hhxn0kd67r0clf01pbhn5fxj2px67j43v5yyiy9dkm") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.6.0 (c (n "h3o") (v "0.6.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.27") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^0.7") (o #t) (k 0)))) (h "0r30im63msilaxzsji2kvn7slpkjlxqi0qiqdyld1x8vs0bjicy4") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.6.1 (c (n "h3o") (v "0.6.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.27") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^0.7") (o #t) (k 0)))) (h "11dx020zsxm4vyccsfsana2mmll4qb6cnk1ipa8vqvm2k9c22abk") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.6.2 (c (n "h3o") (v "0.6.2") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.28") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^1.0") (o #t) (k 0)))) (h "0ila1jcmq10gjpxadh00gj6yhfqac63pz8b9178hx2w1nnnhal6m") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.6.3 (c (n "h3o") (v "0.6.3") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.28") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^1.0") (o #t) (k 0)))) (h "13x3ms7nvx854xb2cwj6nsyhyzaa56b122adr4lc1jih8fp12m9b") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

(define-public crate-h3o-0.6.4 (c (n "h3o") (v "0.6.4") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "compile-time-rng"))) (o #t) (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "arbitrary") (r "^1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("plotters" "cargo_bench_support" "html_reports"))) (k 2)) (d (n "either") (r "^1.0") (k 0)) (d (n "float_eq") (r "^1.0") (k 0)) (d (n "geo") (r "^0.28") (o #t) (k 0)) (d (n "geojson") (r "^0.24") (f (quote ("geo-types"))) (o #t) (k 0)) (d (n "h3o-bit") (r "^0.1") (k 0)) (d (n "h3ron-h3-sys") (r "^0.17") (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "polyfit-rs") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_repr") (r "^0.1") (o #t) (k 0)) (d (n "typed_floats") (r "^1.0") (o #t) (k 0)))) (h "1irrvhf0m4dwcw4z56ij6rzfxhwyhzvjzi150nm955k93wp5kqqd") (f (quote (("tools" "polyfit-rs") ("default" "std")))) (s 2) (e (quote (("typed_floats" "dep:typed_floats") ("std" "dep:ahash") ("serde" "dep:serde" "dep:serde_repr") ("geo" "dep:geo" "dep:geojson"))))))

