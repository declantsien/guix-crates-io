(define-module (crates-io #{3}# s sst) #:use-module (crates-io))

(define-public crate-sst-0.1.0 (c (n "sst") (v "0.1.0") (d (list (d (n "armnod") (r "^0.2") (d #t) (k 0)) (d (n "arrrg") (r "^0.1") (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.1") (d #t) (k 0)) (d (n "biometrics") (r "^0.1") (d #t) (k 0)) (d (n "buffertk") (r "^0.2") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "guacamole") (r "^0.2") (d #t) (k 0)) (d (n "prototk") (r "^0.2") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "setsum") (r "^0.2") (d #t) (k 0)) (d (n "tatl") (r "^0.1") (d #t) (k 0)) (d (n "utilz") (r "^0.1") (d #t) (k 0)) (d (n "zerror") (r "^0.1") (d #t) (k 0)) (d (n "zerror_core") (r "^0.2") (d #t) (k 0)))) (h "1sbxxrc500ll3pmqph5c18lad55cid3ry8schpgz3jrzc3dm6mc3")))

(define-public crate-sst-0.2.0 (c (n "sst") (v "0.2.0") (d (list (d (n "armnod") (r "^0.2") (d #t) (k 0)) (d (n "arrrg") (r "^0.1") (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.1") (d #t) (k 0)) (d (n "biometrics") (r "^0.2") (d #t) (k 0)) (d (n "buffertk") (r "^0.3") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "guacamole") (r "^0.2") (d #t) (k 0)) (d (n "prototk") (r "^0.2") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "setsum") (r "^0.3") (d #t) (k 0)) (d (n "tatl") (r "^0.2") (d #t) (k 0)) (d (n "utilz") (r "^0.1") (d #t) (k 0)) (d (n "zerror") (r "^0.1") (d #t) (k 0)) (d (n "zerror_core") (r "^0.2") (d #t) (k 0)))) (h "0r1lkfy1rn2i98j6f3s726qrb2qxwr28j14a4aa7f6fbmpj4bwdp")))

(define-public crate-sst-0.3.0 (c (n "sst") (v "0.3.0") (d (list (d (n "armnod") (r "^0.3") (d #t) (k 0)) (d (n "arrrg") (r "^0.1") (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.1") (d #t) (k 0)) (d (n "biometrics") (r "^0.3") (d #t) (k 0)) (d (n "buffertk") (r "^0.3") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "guacamole") (r "^0.2") (d #t) (k 0)) (d (n "prototk") (r "^0.2") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "setsum") (r "^0.3") (d #t) (k 0)) (d (n "tatl") (r "^0.2") (d #t) (k 0)) (d (n "utilz") (r "^0.1") (d #t) (k 0)) (d (n "zerror") (r "^0.1") (d #t) (k 0)) (d (n "zerror_core") (r "^0.2") (d #t) (k 0)))) (h "0cy3bvv36iaz30vw94zajw93ar7isf70cgh34yic5b8mpkmm3h9q")))

(define-public crate-sst-0.4.0 (c (n "sst") (v "0.4.0") (d (list (d (n "armnod") (r "^0.4") (d #t) (k 0)) (d (n "arrrg") (r "^0.2") (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.2") (d #t) (k 0)) (d (n "biometrics") (r "^0.4") (d #t) (k 0)) (d (n "buffertk") (r "^0.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "guacamole") (r "^0.3") (d #t) (k 0)) (d (n "prototk") (r "^0.4") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "setsum") (r "^0.4") (d #t) (k 0)) (d (n "tatl") (r "^0.3") (d #t) (k 0)) (d (n "utilz") (r "^0.2") (d #t) (k 0)) (d (n "zerror") (r "^0.2") (d #t) (k 0)) (d (n "zerror_core") (r "^0.3") (d #t) (k 0)))) (h "0jdj6478zkwqd9hmhrz67i023ihqnxw6baxd560xlalpy9hv1pdl")))

(define-public crate-sst-0.5.0 (c (n "sst") (v "0.5.0") (d (list (d (n "armnod") (r "^0.5") (d #t) (k 0)) (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.5") (d #t) (k 0)) (d (n "buffertk") (r "^0.5") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "guacamole") (r "^0.5") (d #t) (k 0)) (d (n "keyvalint") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prototk") (r "^0.5") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "setsum") (r "^0.5") (d #t) (k 0)) (d (n "siphasher") (r "^1.0.0") (d #t) (k 0)) (d (n "sync42") (r "^0.5") (d #t) (k 0)) (d (n "tatl") (r "^0.4") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.3") (d #t) (k 0)) (d (n "zerror_core") (r "^0.4") (d #t) (k 0)) (d (n "zerror_derive") (r "^0.2") (d #t) (k 0)))) (h "1vdicbw0izx0fyq7m6ralq7rzcyhvn9wp4j4hkj4dm5wx2q1r8j2") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

(define-public crate-sst-0.6.0 (c (n "sst") (v "0.6.0") (d (list (d (n "armnod") (r "^0.5") (d #t) (k 0)) (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.6") (d #t) (k 0)) (d (n "buffertk") (r "^0.6") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "guacamole") (r "^0.6") (d #t) (k 0)) (d (n "keyvalint") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prototk") (r "^0.6") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.6") (d #t) (k 0)) (d (n "setsum") (r "^0.5") (d #t) (k 0)) (d (n "siphasher") (r "^1.0.0") (d #t) (k 0)) (d (n "sync42") (r "^0.6") (d #t) (k 0)) (d (n "tatl") (r "^0.5") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.4") (d #t) (k 0)) (d (n "zerror_core") (r "^0.5") (d #t) (k 0)) (d (n "zerror_derive") (r "^0.3") (d #t) (k 0)))) (h "0zyy2bh1g5p4aa7lg5xpv4ij5bjaw59vgs6dah9jh7fnmjp4gd3r") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

