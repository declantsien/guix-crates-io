(define-module (crates-io #{3}# s sjq) #:use-module (crates-io))

(define-public crate-sjq-0.1.0 (c (n "sjq") (v "0.1.0") (d (list (d (n "combine") (r "^3.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.2") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (d #t) (k 0)) (d (n "unicode_reader") (r "^1.0") (d #t) (k 0)))) (h "08zay4avrqsd3hknkpwldj2s1gi46qq3fx4hfvxgwqjabi6ihmls")))

(define-public crate-sjq-0.1.1 (c (n "sjq") (v "0.1.1") (d (list (d (n "combine") (r "^3.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help" "color" "suggestions"))) (d #t) (k 0)) (d (n "unicode_reader") (r "^1.0") (d #t) (k 0)))) (h "1068hjjfhrvxz3ycd6vspa3j60f2yygdpbksph832hd20y04ph8v")))

(define-public crate-sjq-0.1.2 (c (n "sjq") (v "0.1.2") (d (list (d (n "combine") (r "^3.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "lexical") (r "^2.2") (d #t) (k 0)) (d (n "once_cell") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help" "color" "suggestions"))) (d #t) (k 0)) (d (n "unicode_reader") (r "^1.0") (d #t) (k 0)))) (h "17cgpay1f7ini98v58r4ggc7yji2zhqfiql4z4mm7nviqal0g87w")))

(define-public crate-sjq-0.1.3 (c (n "sjq") (v "0.1.3") (d (list (d (n "combine") (r "^3.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "lexical") (r "^2.2") (d #t) (k 0)) (d (n "once_cell") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help" "color" "suggestions"))) (d #t) (k 0)) (d (n "unicode_reader") (r "^1.0") (d #t) (k 0)))) (h "05gk89yc5g13myima6ph2i3m84yfa82rmbn7iv1g21x5js17c9sn")))

(define-public crate-sjq-0.1.4 (c (n "sjq") (v "0.1.4") (d (list (d (n "combine") (r "^3.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "lexical") (r "^2.2") (d #t) (k 0)) (d (n "once_cell") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help" "color" "suggestions"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode_reader") (r "^1.0") (d #t) (k 0)))) (h "18qkr49j87ngyv8qibh1yjc2hgq3xd7jib8rzw8ppahnjzlh54p3")))

