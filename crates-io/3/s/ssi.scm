(define-module (crates-io #{3}# s ssi) #:use-module (crates-io))

(define-public crate-ssi-0.1.0 (c (n "ssi") (v "0.1.0") (h "1ascimfkpm4rxd4v5bqgcrz9p4d8gnyygwkqhgwialbxkxzv0xnp")))

(define-public crate-ssi-0.2.0 (c (n "ssi") (v "0.2.0") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combination") (r "^0.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "client" "http1" "stream"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "iref") (r "^1.4") (d #t) (k 0)) (d (n "iref-enum") (r "^1.2") (d #t) (k 2)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "langtag") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mown") (r "^0.2") (d #t) (k 0)) (d (n "multibase") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_jcs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "signature") (r ">=1.2.2, <1.3.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.5") (d #t) (k 0)) (d (n "ssi-contexts") (r "^0.0.2") (d #t) (k 0)) (d (n "static-iref") (r "^1.0") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "05px4jf19fpc46q4rg686hc2kggx8wsb0znihdl9r7ppr8wjgix7") (f (quote (("secp256k1" "libsecp256k1" "rand") ("http-did" "hyper" "hyper-tls" "http" "percent-encoding" "tokio") ("default" "ring"))))))

(define-public crate-ssi-0.2.1 (c (n "ssi") (v "0.2.1") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "wasmbind"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "combination") (r "^0.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "client" "http1" "stream"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "iref") (r "^1.4") (d #t) (k 0)) (d (n "iref-enum") (r "^1.2") (d #t) (k 2)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "langtag") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mown") (r "^0.2") (d #t) (k 0)) (d (n "multibase") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_jcs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "ssi-contexts") (r "^0.1.0") (d #t) (k 0)) (d (n "static-iref") (r "^1.0") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1wbmjnka6mbzarr09453r59ijwlxw6zv1c3hhac2ma32if0cjvqg") (f (quote (("sha" "sha2" "k256/sha256") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256") ("ripemd-160" "ripemd160" "secp256k1") ("libsecp256k1" "secp256k1") ("keccak" "keccak-hash" "secp256k1" "k256/keccak256") ("http-did" "hyper" "hyper-tls" "http" "percent-encoding" "tokio") ("default" "ring"))))))

(define-public crate-ssi-0.2.2 (c (n "ssi") (v "0.2.2") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "wasmbind"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "combination") (r "^0.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "client" "http1" "stream"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "iref") (r "^1.4") (d #t) (k 0)) (d (n "iref-enum") (r "^1.2") (d #t) (k 2)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "langtag") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mown") (r "^0.2") (d #t) (k 0)) (d (n "multibase") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_jcs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "ssi-contexts") (r "^0.1.0") (d #t) (k 0)) (d (n "static-iref") (r "^1.0") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0l3mc58wd5ka9y5z5w0jiwq3sraqwh1hb9y970piskxkm4rvz23q") (f (quote (("sha" "sha2" "k256/sha256") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256") ("ripemd-160" "ripemd160" "secp256k1") ("libsecp256k1" "secp256k1") ("keccak" "keccak-hash" "secp256k1" "k256/keccak256") ("http-did" "hyper" "hyper-tls" "http" "percent-encoding" "tokio") ("default" "ring"))))))

(define-public crate-ssi-0.3.0 (c (n "ssi") (v "0.3.0") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bbs") (r "^0.4.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "wasmbind"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "combination") (r "^0.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ecdsa") (r "^0.11.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.6") (d #t) (k 0) (p "ff-zeroize")) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.8") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "client" "http1" "stream"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "iref") (r "^2.0.3") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "json-ld") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.8") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "multibase") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "pairing-plus") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_old") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_jcs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha2_old") (r "^0.8") (d #t) (k 0) (p "sha2")) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi-contexts") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "05l1mbh0lqfa1krvjhsymxgvw9m9ir1rhz9ccvi1qmq9q58yhs2m") (f (quote (("sha" "sha2" "k256/sha256") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256") ("ripemd-160" "ripemd160" "secp256k1") ("libsecp256k1" "secp256k1") ("keccak" "keccak-hash" "secp256k1" "k256/keccak256") ("http-did" "hyper" "hyper-tls" "http" "percent-encoding" "tokio") ("default" "ring"))))))

(define-public crate-ssi-0.4.0 (c (n "ssi") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bbs") (r "=0.4.1") (d #t) (k 0)) (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2_old") (r "^0.8") (d #t) (k 2) (p "blake2")) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "wasmbind"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "clear_on_drop") (r "^0.2.4") (d #t) (k 0)) (d (n "combination") (r "^0.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ecdsa") (r "^0.11.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.6") (d #t) (k 0) (p "ff-zeroize")) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.8") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "http1" "stream"))) (d #t) (k 2)) (d (n "iref") (r "^2.0.3") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "json-ld") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.9.6") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "multibase") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("zeroize" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "pairing-plus") (r "=0.19.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_old") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_jcs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha2_old") (r "^0.8") (d #t) (k 0) (p "sha2")) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "snarkvm-algorithms") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-dpc") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-parameters") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi-contexts") (r "^0.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1fynnlx0350qlzr568kkjrm6lzaac115ll5jy27240lyd73zpk1n") (f (quote (("sha" "sha2" "k256/sha256") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256") ("ripemd-160" "ripemd160" "secp256k1") ("libsecp256k1" "secp256k1") ("keccak" "keccak-hash" "secp256k1" "k256/keccak256") ("http-did" "http" "percent-encoding") ("example-http-issuer") ("default" "ring") ("aleosig" "rand" "blake2" "snarkvm-dpc" "snarkvm-algorithms" "snarkvm-curves" "snarkvm-utilities" "snarkvm-parameters"))))))

(define-public crate-ssi-0.5.0 (c (n "ssi") (v "0.5.0") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssi-caips") (r "^0.1") (k 0)) (d (n "ssi-core") (r "^0.1") (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (k 0)) (d (n "ssi-dids") (r "^0.1") (d #t) (k 0)) (d (n "ssi-dids") (r "^0.1") (f (quote ("example"))) (d #t) (k 2)) (d (n "ssi-json-ld") (r "^0.1") (k 0)) (d (n "ssi-jwk") (r "^0.1") (k 0)) (d (n "ssi-jws") (r "^0.1") (k 0)) (d (n "ssi-jwt") (r "^0.1") (k 0)) (d (n "ssi-ldp") (r "^0.1") (k 0)) (d (n "ssi-ssh") (r "^0.1") (k 0)) (d (n "ssi-tzkey") (r "^0.1") (k 0)) (d (n "ssi-ucan") (r "^0.1") (d #t) (k 0)) (d (n "ssi-vc") (r "^0.1") (d #t) (k 0)) (d (n "ssi-zcap-ld") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0ywbzcn15rackzbig7i415b92rywpckh3h3mv3489f90znnj29dn") (f (quote (("w3c" "ssi-ldp/w3c" "secp256k1" "ed25519" "secp256r1" "rsa") ("tezos" "ssi-caips/tezos" "ssi-jwk/tezos" "ssi-jws/tezos" "ssi-ldp/tezos") ("solana" "ssi-ldp/solana") ("sha" "rsa") ("secp384r1" "ssi-ldp/secp384r1") ("secp256r1" "ssi-ldp/secp256r1") ("secp256k1" "ssi-ldp/secp256k1") ("rsa" "ssi-ldp/rsa") ("ripemd-160" "ssi-jwk/ripemd-160") ("ring" "ssi-jwk/ring" "ssi-jws/ring" "ssi-crypto/ring") ("keccak" "eip") ("http-did" "ssi-dids/http") ("example-http-issuer" "ssi-ldp/example-http-issuer") ("eip" "ssi-caips/eip" "ssi-jwk/eip" "ssi-ldp/eip" "ssi-crypto/keccak") ("ed25519-dalek" "ed25519") ("ed25519" "ssi-ldp/ed25519" "ssi-jwk/ed25519" "ssi-jws/ed25519") ("default" "w3c" "ripemd-160" "eip" "tezos") ("bbs" "ssi-crypto/bbs") ("aleo" "ssi-ldp/aleo" "ssi-caips/aleo" "ssi-jws/aleo")))) (y #t)))

(define-public crate-ssi-0.6.0 (c (n "ssi") (v "0.6.0") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssi-caips") (r "^0.1") (k 0)) (d (n "ssi-core") (r "^0.1") (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (k 0)) (d (n "ssi-dids") (r "^0.1") (d #t) (k 0)) (d (n "ssi-dids") (r "^0.1") (f (quote ("example"))) (d #t) (k 2)) (d (n "ssi-json-ld") (r "^0.2") (k 0)) (d (n "ssi-jwk") (r "^0.1") (k 0)) (d (n "ssi-jws") (r "^0.1") (k 0)) (d (n "ssi-jwt") (r "^0.1") (k 0)) (d (n "ssi-ldp") (r "^0.2") (k 0)) (d (n "ssi-ssh") (r "^0.1") (k 0)) (d (n "ssi-tzkey") (r "^0.1") (k 0)) (d (n "ssi-ucan") (r "^0.1") (d #t) (k 0)) (d (n "ssi-vc") (r "^0.1") (d #t) (k 0)) (d (n "ssi-zcap-ld") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1yfd489vzjlkspsn06681yd9x8bf2akm7sbkb94rjdgwvkbasx0a") (f (quote (("w3c" "ssi-ldp/w3c" "secp256k1" "ed25519" "secp256r1" "rsa") ("tezos" "ssi-caips/tezos" "ssi-jwk/tezos" "ssi-jws/tezos" "ssi-ldp/tezos") ("solana" "ssi-ldp/solana") ("sha" "rsa") ("secp384r1" "ssi-ldp/secp384r1") ("secp256r1" "ssi-ldp/secp256r1") ("secp256k1" "ssi-ldp/secp256k1") ("rsa" "ssi-ldp/rsa") ("ripemd-160" "ssi-jwk/ripemd-160") ("ring" "ssi-jwk/ring" "ssi-jws/ring" "ssi-crypto/ring") ("keccak" "eip") ("http-did" "ssi-dids/http") ("example-http-issuer" "ssi-ldp/example-http-issuer") ("eip" "ssi-caips/eip" "ssi-jwk/eip" "ssi-ldp/eip" "ssi-crypto/keccak") ("ed25519-dalek" "ed25519") ("ed25519" "ssi-ldp/ed25519" "ssi-jwk/ed25519" "ssi-jws/ed25519") ("default" "w3c" "ripemd-160" "eip" "tezos") ("bbs" "ssi-crypto/bbs") ("aleo" "ssi-ldp/aleo" "ssi-caips/aleo" "ssi-jws/aleo"))))))

(define-public crate-ssi-0.7.0 (c (n "ssi") (v "0.7.0") (d (list (d (n "async-std") (r "^1.9") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssi-caips") (r "^0.1") (k 0)) (d (n "ssi-core") (r "^0.1") (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (k 0)) (d (n "ssi-dids") (r "^0.1") (d #t) (k 0)) (d (n "ssi-dids") (r "^0.1") (f (quote ("example"))) (d #t) (k 2)) (d (n "ssi-json-ld") (r "^0.2.2") (k 0)) (d (n "ssi-jwk") (r "^0.1.1") (k 0)) (d (n "ssi-jws") (r "^0.1") (k 0)) (d (n "ssi-jwt") (r "^0.1") (k 0)) (d (n "ssi-ldp") (r "^0.3.0") (k 0)) (d (n "ssi-ssh") (r "^0.1") (k 0)) (d (n "ssi-tzkey") (r "^0.1") (k 0)) (d (n "ssi-ucan") (r "^0.1") (d #t) (k 0)) (d (n "ssi-vc") (r "^0.2.0") (d #t) (k 0)) (d (n "ssi-zcap-ld") (r "^0.1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0mjyjcxn160kpgx2vhhd02fh95lip737cy0c79lajg6qhnk7wvld") (f (quote (("w3c" "ssi-ldp/w3c" "secp256k1" "ed25519" "secp256r1" "rsa") ("tezos" "ssi-caips/tezos" "ssi-jwk/tezos" "ssi-jws/tezos" "ssi-ldp/tezos") ("solana" "ssi-ldp/solana") ("sha" "rsa") ("secp384r1" "ssi-ldp/secp384r1") ("secp256r1" "ssi-ldp/secp256r1") ("secp256k1" "ssi-ldp/secp256k1") ("rsa" "ssi-ldp/rsa") ("ripemd-160" "ssi-jwk/ripemd-160") ("ring" "ssi-jwk/ring" "ssi-jws/ring" "ssi-crypto/ring") ("keccak" "eip") ("http-did" "ssi-dids/http") ("example-http-issuer" "ssi-ldp/example-http-issuer") ("eip" "ssi-caips/eip" "ssi-jwk/eip" "ssi-ldp/eip" "ssi-crypto/keccak") ("ed25519-dalek" "ed25519") ("ed25519" "ssi-ldp/ed25519" "ssi-jwk/ed25519" "ssi-jws/ed25519") ("default" "w3c" "ripemd-160" "eip" "tezos") ("bbs" "ssi-crypto/bbs") ("aleo" "ssi-ldp/aleo" "ssi-caips/aleo" "ssi-jws/aleo"))))))

