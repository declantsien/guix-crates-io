(define-module (crates-io #{3}# s ssp) #:use-module (crates-io))

(define-public crate-ssp-0.1.0 (c (n "ssp") (v "0.1.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1a6833dc0838lwgfg8527shfyrga4kp8z9kx6gcgmjrks2h35sj6") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serialport"))))))

(define-public crate-ssp-0.1.1 (c (n "ssp") (v "0.1.1") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0zcdkj3llf0zmy9s8568z0cgrb6n151b4sa2d03vkpbmzz8yq715") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serialport"))))))

(define-public crate-ssp-0.2.0 (c (n "ssp") (v "0.2.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "04xkhniq89ibcqaqca2v9s9r68ijj9j113df049m6k0k73d99vf5") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serialport") ("nv200") ("default" "nv200"))))))

(define-public crate-ssp-0.2.1 (c (n "ssp") (v "0.2.1") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1i0fvqys1jzla937yh13w7bjzhdrkkl2bm1jxsy80snh2zgi7w5a") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.2.2 (c (n "ssp") (v "0.2.2") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0y24fj3mk5aj5brm8f3q5k6661qwvdkrhydmh11wp2z7sik22j9f") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.3.0 (c (n "ssp") (v "0.3.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "crc") (r "^3.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0rjdmn218mia9v0d8zmf7lxds4025j13zr9rh6zg1j4qpzmiyx22") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.4.0 (c (n "ssp") (v "0.4.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0la0rz04xy9hdb7bsph9xnahvnl5ahx17gsvfwjjvkfzh7pd93gi") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.4.1 (c (n "ssp") (v "0.4.1") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "047lq73jrlrlf2drl2f2p5zy7jkakj7dp7i0pqdmjnnr457am36y") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.4.2 (c (n "ssp") (v "0.4.2") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0g62plrf64k1d12xq1j2vvb4wrf0wzdmbdsxm77x9lkbsavgz7jw") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.5.0 (c (n "ssp") (v "0.5.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1fq04pgb8a00yscpzwnpfs1nd63svpr7p8z25lz0jicc895lykwq") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.5.1 (c (n "ssp") (v "0.5.1") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0fsx82lb5p71dfx10dsv8s0ndym83g5plls3215if4jf1rznirj2") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.5.2 (c (n "ssp") (v "0.5.2") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "08d1xv1n48pyzhik7iygihpgxb572pd4qr1cxy69xrfx8fwlj1ib") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.5.3 (c (n "ssp") (v "0.5.3") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1n3ivhan8n7bj6yz60qkxjkzz9kbqpra206d368xnshpxd6r3fiw") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

(define-public crate-ssp-0.5.4 (c (n "ssp") (v "0.5.4") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "currency-iso4217") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smol-jsonrpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ajl3pnikdlfmv8ispjn24j6a4i0ral92k5bf8fkwwz8czwi74jc") (f (quote (("std" "log/std" "rand/std" "rand/std_rng" "serde/std" "serde_json/std" "serialport" "smol-jsonrpc/std") ("nv200") ("jsonrpc-std" "jsonrpc" "std") ("jsonrpc" "serde_json" "smol-jsonrpc") ("default" "nv200"))))))

