(define-module (crates-io #{3}# s sbp) #:use-module (crates-io))

(define-public crate-sbp-0.1.0 (c (n "sbp") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "sbp-derive") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1g3jx04hfl84d9sqkm6w91nwksxmg323syz3x8p7py05zhq95qfz") (f (quote (("derive" "sbp-derive") ("default" "bitflags" "derive")))) (y #t)))

(define-public crate-sbp-0.1.1 (c (n "sbp") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "sbp-derive") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1gkvlrgcysps6i10z6pqq1k1frhw9j3z9bxx4iwq87yj40pxrdyv") (f (quote (("derive" "sbp-derive") ("default" "bitflags" "derive")))) (y #t)))

(define-public crate-sbp-0.1.2 (c (n "sbp") (v "0.1.2") (d (list (d (n "bitflags") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "sbp-derive") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0dhcgdf0v1za2s89xzs7hnakrlhbzz0j01f979saqh9dxly9d8jd") (f (quote (("derive" "sbp-derive") ("default" "bitflags" "derive")))) (y #t)))

(define-public crate-sbp-3.4.10 (c (n "sbp") (v "3.4.10") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0vg2q5hpm70sx5c5wjrb4dn3fpx2r0rim33by7fg79gqzy18vkgv") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-3.4.11-beta.0 (c (n "sbp") (v "3.4.11-beta.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "06xq9a5xpqxf3rnhq6854g6fyralhmf4aqgxr2gj9iy1ixncjyaw") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-3.4.11-beta.1 (c (n "sbp") (v "3.4.11-beta.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1sjqfwgcp9xnk4jrzdr9jbd0rppsl9w44c1aw1a5nm9hg7qwghma") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.0.0 (c (n "sbp") (v "4.0.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0vps1qaazf7drb94ll9nc02cj7979pqgz1cmqxnqjdkxcsmq5q4f") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.0.1-alpha (c (n "sbp") (v "4.0.1-alpha") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1lf3fpzmmmh9ll29qjqvip66cxysi988xswfkgc35pd8kbzjvm1w") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async")))) (y #t)))

(define-public crate-sbp-4.0.1-alpha.1 (c (n "sbp") (v "4.0.1-alpha.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0v2jwc8z2s1nr25kv55wdqng79bdjpkgwsml9vpw1l3n67951k83") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async")))) (y #t)))

(define-public crate-sbp-4.0.1 (c (n "sbp") (v "4.0.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1hj65adbwdc37sbzl8n3l2lin9ghahdih1j7b4nn34x0q4x2nx64") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.0.2 (c (n "sbp") (v "4.0.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0crzzg05mf5id5lvjli1z7wlp50w7rddn09d3cim7xvnx5aia9ns") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.0.3 (c (n "sbp") (v "4.0.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1zvm0r0zdy24w18i85apa2lha2p6gqwwna43j5kqabx74nnxw7px") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.0 (c (n "sbp") (v "4.1.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "14bxhnl7ankad407ab6yxxdpwkj7wrlbvhhld7jaxl9ilpvrngf5") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.1 (c (n "sbp") (v "4.1.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0ygjqbd3gpxvrcgmns5siix2147z13ncj5zafv6439icawxwmqih") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.2 (c (n "sbp") (v "4.1.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "13wpsbw5x52m4ld1wg1kfb3ac6pw3qhxnbwagn0y92yzdkpdx46m") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.3 (c (n "sbp") (v "4.1.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1clwc9p0xwddrnd29wlg4vh8vl9awngr9rxa3f5mprrw7lz3q6y8") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.4 (c (n "sbp") (v "4.1.4") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "105z7l1rmnfgdyd5ffpjf3wpdbximihdw9d33f9xmdlhdp3sk3fc") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.5 (c (n "sbp") (v "4.1.5") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0pibd6rd7dm4kliaklpgjg7d4vxva2qddcq8ca021yyc38dhlnv4") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.1.6 (c (n "sbp") (v "4.1.6") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "095d3l0nrsviq4l24b4arj85a4jy49yjqamqyh5l1pdwiz3gc2jm") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.2.0 (c (n "sbp") (v "4.2.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1krp10izppbd2lf91fhid5sy1hwixhhrhz5q3v1jdbhfldp1310m") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.3.0 (c (n "sbp") (v "4.3.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "18lvlmdcd3hj5wk4illpjn2mvfpflhb9yc4i02637rx9l8z611yp") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.3.3 (c (n "sbp") (v "4.3.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.7") (o #t) (d #t) (k 0)))) (h "091q3s0djfcqials4j5psrk0iamwc2hlzr3k3c91034lwsf351dk") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.4.0 (c (n "sbp") (v "4.4.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1736vlsyh3029dklid8vw3a7jbrg6k8zazjcyn4fpddnd7dik9wz") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.5.0 (c (n "sbp") (v "4.5.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1rqgc92cc4yd7hj7gv5c0s4vjqdikh88v60bmq4r36l1sjkl5j5i") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("default") ("async" "futures" "dencode/async"))))))

(define-public crate-sbp-4.6.0 (c (n "sbp") (v "4.6.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1h9939597653pdg3wrrbc8nb3s4xp3aylnbjq8zwyzb8a05kyrsw") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.7.0 (c (n "sbp") (v "4.7.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0bmkapfxdns92kjnd1fla4van8wmf5wpbmysrf33rcqyqkqr3gri") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.8.0 (c (n "sbp") (v "4.8.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1qk2b29y9gh2fbc283ris38w0z9gkh9ir4s4dk10zsgkj8jnq6f2") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.8.1 (c (n "sbp") (v "4.8.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1x046g4ngwxb8a0jlfq0vxi7aa2jglb5yz9hsa424h1r135f6y9x") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.9.0 (c (n "sbp") (v "4.9.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1jiax7hiaylg0dmjkzhh60shkwsdib7497r51jlsp86ij0bnc5dp") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.9.1 (c (n "sbp") (v "4.9.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0555s5yg9qbzyra24inx0wmgqybx6fsswy6g1zzy273r0yjapzfm") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.10.0 (c (n "sbp") (v "4.10.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "01f28skxb4hq9sd8jdfq38id5lnqxdnc7clin7w3367j8rcrb0zm") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.11.0 (c (n "sbp") (v "4.11.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "05454z550n8ipw6pc8d3hmx78qpi74i9w0yy83p5y5nl7by4vwvn") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.12.0 (c (n "sbp") (v "4.12.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1vdqwia811ksi9yrhfamcxpy2vls3cnrmlcvxgbfxgqyf6gdbln9") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.13.0 (c (n "sbp") (v "4.13.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0qc27axzjf4n1di2g7v3mhwb3a3bmnkhfg6sd6mzvqshak3yqga5") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.14.0 (c (n "sbp") (v "4.14.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1bkhwynbqmj6yvrh5b9ff6ww0v90rvxvpz29iisdkwdyp2lz8yrj") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.14.1 (c (n "sbp") (v "4.14.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "11gsc48d2xyyxb0br22py8x5yll13vs1frxhsrnhlxq0syy9hq79") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.16.0 (c (n "sbp") (v "4.16.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0pzdy2m1dc16vi7568j8xgz8a5bw9frhfbmhw3i6hh86d7pcs6p7") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-4.17.0 (c (n "sbp") (v "4.17.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0yrgw6n5l8hsq43s7pjz9jp5n3rj8dz5diw7jdl3697bx8lmahnv") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.0 (c (n "sbp") (v "5.0.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0srrnasxqai3zd2kcvzlrcg2jc2aa26ac9kly64jpiqgvi1argwm") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.1 (c (n "sbp") (v "5.0.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0kjjwadkdvdh9smjlxrnfhmsyqy7gpbszjr2ycwv9d2mar606103") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.4 (c (n "sbp") (v "5.0.4") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1pd7g29affmdzaxbrlmmp9kwmc3081gxmh8bpia8733hlxnj0k3d") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.5 (c (n "sbp") (v "5.0.5") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0wf359qvalwdc0kxmpm3kf7l3gya8lb2kmgjvw0ldmf4szp7kf57") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.6 (c (n "sbp") (v "5.0.6") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "004xclw1fpaq2p6375wm7gl3xbjb6nlbgg8xz7gqyfvzd8vwsq1q") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.7 (c (n "sbp") (v "5.0.7") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1pncljv26inzwq4zs46c4bc1x13ghyz8zrp1y124qf5bbczr9a14") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-5.0.8 (c (n "sbp") (v "5.0.8") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0d9y5gmrxz5a3123q6y37bcr3hmahaaykan2zf7zipgv0kd58830") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-sbp-6.0.0 (c (n "sbp") (v "6.0.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc16") (r "^0.4") (d #t) (k 0)) (d (n "dencode") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^2.1.0") (d #t) (k 2)) (d (n "slotmap") (r "^1") (o #t) (d #t) (k 0)) (d (n "swiftnav") (r "^0.8") (o #t) (d #t) (k 0)))) (h "09wi6nb09iqkkhgvlbyg47rhy82nyg91yf2pjxfd8zq6myazd4kv") (f (quote (("link" "slotmap") ("json" "serde" "serde_json" "base64") ("float_roundtrip" "serde" "serde_json/float_roundtrip") ("default") ("async" "futures" "dencode/async")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

