(define-module (crates-io #{3}# s sgx) #:use-module (crates-io))

(define-public crate-sgx-0.0.0 (c (n "sgx") (v "0.0.0") (h "0sgk1akwlpsvr90a6gb39frsj12fsqfwsb3w0kpsrmzkm0zdsym1") (y #t)))

(define-public crate-sgx-0.1.0 (c (n "sgx") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9.8") (o #t) (d #t) (k 0)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^1.0.0") (k 0)))) (h "1h7w0hj3z84i5qr1r2mkbnyg65dr7qq8i5k440cwhl1g6nzxiipq") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.2.0 (c (n "sgx") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9.8") (o #t) (d #t) (k 0)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (k 0)))) (h "11bamql1s44dq3bdh3mmkd1gsdq4vw8pj2189krnzw21dyvh81nz") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.3.0 (c (n "sgx") (v "0.3.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9.8") (o #t) (d #t) (k 0)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (k 0)))) (h "0v4a428kwhszma7b6iabl17hhx65wszwq748rzdvqpyc74zrn3v3") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.4.0 (c (n "sgx") (v "0.4.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "testaso") (r "^0.1") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (k 0)))) (h "026z7iksxjxv1qdil7mn0wf34ah3vq3n217s1s4sg449q0sxsvmk") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.4.1 (c (n "sgx") (v "0.4.1") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "testaso") (r "^0.1") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (k 0)))) (h "0yai2yldn52iymv7ckyqa8xz343ap3wrakwjgi86s7i4vmprvwg1") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.5.0 (c (n "sgx") (v "0.5.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "testaso") (r "^0.1") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (k 0)))) (h "0dvlj2h6whlx1ss3ys7kgig2i7lcykak8a72w6mv5b6scjkrcv2k") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits"))))))

(define-public crate-sgx-0.6.0 (c (n "sgx") (v "0.6.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "testaso") (r "^0.1") (d #t) (k 2)) (d (n "x86_64") (r "^0.14.6") (k 0)) (d (n "xsave") (r "^2.0.0") (t "cfg(target_arch = \"x86_64\")") (k 0)))) (h "087847sirrflvn2j51nkykl1g4rxbz56m4alnnaxqpwfl9339dbb") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits")))) (r "1.60")))

(define-public crate-sgx-0.6.1 (c (n "sgx") (v "0.6.1") (d (list (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "const-oid") (r "^0.9.5") (o #t) (k 0)) (d (n "der") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.59") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.9.3") (f (quote ("sha2"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "testaso") (r "^0.1") (d #t) (k 2)) (d (n "x509") (r "^0.2.4") (o #t) (k 0) (p "x509-cert")) (d (n "x86_64") (r "^0.14.11") (k 0)) (d (n "xsave") (r "^2.0.2") (t "cfg(target_arch = \"x86_64\")") (k 0)))) (h "129x0mh2lvbfas783glf4wknc5kww51fa70ds3kac9h0xvrrbfa7") (f (quote (("rcrypto" "rand" "rsa" "sha2" "num-integer" "num-traits" "const-oid" "der" "x509")))) (r "1.67")))

