(define-module (crates-io #{3}# w wry) #:use-module (crates-io))

(define-public crate-wry-0.1.0 (c (n "wry") (v "0.1.0") (h "0waxk82d25jayyl30cldkq51sydmgscs9dls96vzqvvdc3mj9ani")))

(define-public crate-wry-0.1.1 (c (n "wry") (v "0.1.1") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gobject-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "javascriptcore-rs-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "webkit2gtk-sys") (r "^0.12") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0j2af20iy9kgmzifbbdr493mqz4p8pv7x0f8mc0yww7h9dz5i6y6")))

(define-public crate-wry-0.1.2 (c (n "wry") (v "0.1.2") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gobject-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "javascriptcore-rs-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "webkit2gtk-sys") (r "^0.12") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dz0k3vpxv0sxsmnnm9hrimn6wvc3flkdhyf02468bzry5x108dj")))

(define-public crate-wry-0.2.0 (c (n "wry") (v "0.2.0") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1xi003ndj6i03yx72d4z40x9lnm84w5gnp32nhf4vz33qnkzf8r6")))

(define-public crate-wry-0.3.0 (c (n "wry") (v "0.3.0") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kfsgm07i2mnn4w24nig8ja4vdgmpd0x172lmvrbyj6p4ffk0799")))

(define-public crate-wry-0.3.1 (c (n "wry") (v "0.3.1") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0j3p57q55iyiklaq0ps6cm6i891k7xa9d25m9377a1fr6myksrrq")))

(define-public crate-wry-0.4.0 (c (n "wry") (v "0.4.0") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1s28p56zy5r3qd3kmikrkcj0xksi0wy65k8nz1bmy4mycnv9vf6b")))

(define-public crate-wry-0.4.1 (c (n "wry") (v "0.4.1") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1q5pqljxh8wpwwf9c7wfz9vj81nwhlyxdpz4mkg3ik3q1khylhxg")))

(define-public crate-wry-0.5.0 (c (n "wry") (v "0.5.0") (d (list (d (n "cc") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vyqrf9y7ljbglr9faahbrisjhx3b21ax1ycycg7pdwnh1hqzn31")))

(define-public crate-wry-0.5.1 (c (n "wry") (v "0.5.1") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "008rb23yf44ln3fknhimly429ygsn1mb2jv8b3dfann5k75na0c6")))

(define-public crate-wry-0.6.0 (c (n "wry") (v "0.6.0") (d (list (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1f3s7mnfrrlma2pbksq43psf8wj73qmwzm2ajshs8x68vlfn6k46") (f (quote (("protocol") ("file-drop") ("default" "file-drop" "protocol"))))))

(define-public crate-wry-0.6.1 (c (n "wry") (v "0.6.1") (d (list (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hxb98bp6b16ai4j4hic6ql0jr65jpm1bzlwndl77r8yhg7igcx2") (f (quote (("protocol") ("file-drop") ("default" "file-drop" "protocol"))))))

(define-public crate-wry-0.6.2 (c (n "wry") (v "0.6.2") (d (list (d (n "async-channel") (r "^1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p1hnsm41m900xiqpbqsnggvw9dwwq6xgyrgw8c8vrvvibhg1bhk") (f (quote (("protocol") ("file-drop") ("default" "file-drop" "protocol"))))))

(define-public crate-wry-0.7.0 (c (n "wry") (v "0.7.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0s3yaml729x6cnnmyb7bddp4qcw65mvyyvl66zrczqjrd0si9pa9") (f (quote (("win32" "webview2" "winapi") ("protocol") ("file-drop") ("default" "file-drop" "protocol" "win32"))))))

(define-public crate-wry-0.8.0 (c (n "wry") (v "0.8.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_8"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0-beta.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08wff1k4cnw96blgz2r15c719mbi5db1k8mmrqanx0mxgvp49zfz") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi") ("protocol") ("file-drop") ("default" "file-drop" "protocol" "win32"))))))

(define-public crate-wry-0.9.0 (c (n "wry") (v "0.9.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-winit") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_10"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0w32kpfk8i2hr0prxj4c3cbjgynq09m153xxjyrnc88z4f5wfsk3") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi" "webview2-sys") ("protocol") ("file-drop") ("default" "file-drop" "protocol" "win32"))))))

(define-public crate-wry-0.9.1 (c (n "wry") (v "0.9.1") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.2") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_10"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mzk55mijpfvw6vns5xvzi9p65j1zpcxscbwm45p9911m0ia0vj4") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi" "webview2-sys") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "menu"))))))

(define-public crate-wry-0.9.2 (c (n "wry") (v "0.9.2") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.2") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_10"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "100549pwzbjhavp7bvyag9sihqipishjlnf4cya43kdh9sq5gza4") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.9.3 (c (n "wry") (v "0.9.3") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.2") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_10"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mq4ig35saspi0vscwxn9l8q4h61ngr1kcc5vjpdzb42z1jcl3di") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.9.4 (c (n "wry") (v "0.9.4") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.2.6") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_10"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rw7m5b8fxggr66vay82lgravlyngf39fjhzsnzlrvl4ir0g60ac") (f (quote (("winrt" "windows-webview2" "windows") ("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.10.0 (c (n "wry") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.3.0") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_18"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1082fjsgf4wy86y8p7x0ccfzdl8bz2cbkfs4bd2paq9adgw329jn") (f (quote (("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.10.1 (c (n "wry") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.3.0") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_18"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0d38mwrkkc7q14z9p08ahl6qjwp1sizr36hmq4135dip0663xq73") (f (quote (("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.10.2 (c (n "wry") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_18"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06bv814jgfir8067fg92vvipk9hznv97bhz3xpi76qqrxxl6ajnw") (f (quote (("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.10.3 (c (n "wry") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_18"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0izpfycw4xsj4iynp33xh2aq1spgvz69k0x0825zkz1gjr1dq26w") (f (quote (("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.11.0 (c (n "wry") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.13") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.11") (f (quote ("v2_18"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webkit2gtk-sys") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "webview2") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-webview2") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ia2hys8127rcjq82kk3i0d5d55k38chzag6s642cqdq25wkhwlj") (f (quote (("win32" "webview2" "winapi" "webview2-sys") ("tray" "tao/tray") ("protocol") ("menu" "tao/menu") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "win32" "tray"))))))

(define-public crate-wry-0.12.0 (c (n "wry") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.5") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.14") (f (quote ("v2_18"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0k5w3x435qvjxpjsarfgn3z64plrpwqfa7gj7ahgf78sfm9wh0ww") (f (quote (("tray" "tao/tray") ("protocol") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "tray"))))))

(define-public crate-wry-0.12.1 (c (n "wry") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.14") (f (quote ("v2_18"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1s2651nj88m0r5yxhdqk45i196kbb5kadr0k3ijwip3fs02war38") (f (quote (("tray" "tao/tray") ("protocol") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "tray"))))))

(define-public crate-wry-0.12.2 (c (n "wry") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.14") (f (quote ("v2_18"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "webview2-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "oleidl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "058rnrcam12j9v0g29cvcbyzkv4fgwkb1avp68qba5rr78wlk58g") (f (quote (("tray" "tao/tray") ("protocol") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol" "tray"))))))

(define-public crate-wry-0.13.0 (c (n "wry") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tao") (r "^0.6") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0c3y07lg60mxgzfkli4mhwxpxddig3v89vy4axn3zin2pzxpaj3z") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("default" "file-drop" "protocol") ("ayatana" "tao/ayatana"))))))

(define-public crate-wry-0.13.1 (c (n "wry") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tao") (r "^0.6") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.11.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jaq3wsj9c2252rx4rd3b1a8rjsnksh2qpmgi7qzw47yv182fjqr") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtool") ("default" "file-drop" "protocol") ("ayatana" "tao/ayatana"))))))

(define-public crate-wry-0.13.2 (c (n "wry") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tao") (r "^0.6") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03vzzjbaj182pxpqvq50qm5ax3gx9mjzr7x6687k3sfdsf7gw2v2") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtool") ("default" "file-drop" "protocol") ("ayatana" "tao/ayatana"))))))

(define-public crate-wry-0.13.3 (c (n "wry") (v "0.13.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.6") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17y85avix503hzfa3xj33k5v7xqgi2lsxj93f7630kcnbip5h54m") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtool") ("default" "file-drop" "objc-exception" "protocol") ("ayatana" "tao/ayatana"))))))

(define-public crate-wry-0.14.0 (c (n "wry") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.7") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0k1lg5lyhfdchq7icnl2n30bz891h558xk2hbw6hmspchvy9zl3g") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol") ("ayatana" "tao/ayatana"))))))

(define-public crate-wry-0.15.0 (c (n "wry") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.8.1") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0l6j3pcvwkic4bwk9mka3511x101h5mcwadg7i6kdaxj1a5hyg8z") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.15.1 (c (n "wry") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.8.2") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hpg0gkplisl2y8rxcgib504i5gn5jfaq6z5885v3fjhkzzrrdi0") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.16.0 (c (n "wry") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.8.4") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.17") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12k286cjnv422whnyak70ihpx4wm3xm6ll8c0qfgh5gqmlf6vabc") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.16.1 (c (n "wry") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.8.4") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1had06iwynn3qhfxglvv3dw4wppczj47pry9xqkgpjrbnz1k6vl8") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.16.2 (c (n "wry") (v "0.16.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.8.4") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("alloc" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_SystemInformation" "Win32_System_Ole" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows_macros") (r "^0.30.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nd0vvp42dnlydh1yk4gnxa874ifpfy1g1r61znlhd53w6960rx5") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.17.0 (c (n "wry") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.9.1") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1msgrlyclpnv4r54j6i4dcpwpmfxy3vn5yd49w3nrhgqn61mahiq") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("gtk-tray" "tao/gtk-tray") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tray" "ayatana-tray") ("ayatana-tray" "tao/ayatana-tray"))))))

(define-public crate-wry-0.18.0 (c (n "wry") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.10") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06rx8d0k5ngayqlcacx6874m71px22bacb0yq11fdam5hdi1bhz0") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.18.1 (c (n "wry") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.10") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nyafsyg5zgwdzvr1nrcp1237fgl756qmk1wr1fkc5iwnwxqfjj3") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.18.2 (c (n "wry") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.10") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gl6ib3cmcsjmdll735lfj0bfpsv2ba6sji498091vzhyyk893hk") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.18.3 (c (n "wry") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.11") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mm819gdjnd30k9wjwr97d2b8bgcwsl6p3mz8qpjkm3xghrbmc96") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.19.0 (c (n "wry") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.12") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gsa23viz62gvbv3ia5ag61vy8s1j67lqvgb2j7xq0ffsgdxs6ff") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.20.0 (c (n "wry") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "jni") (r "^0.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.13") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1n1lb7jf9xzzy4fqy8vnnmsq0cnj46i7jjb9jc25w35qkk8a0xw5") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.20.1 (c (n "wry") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.13") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wc2jlybk2m5r1ampld9gvwm4m6wbq74hllxbbprzblzgllhda12") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.20.2 (c (n "wry") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tao") (r "^0.13.3") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("alloc" "implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.37.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lpzxwpy4cq0szjx854wxkdqb8frmqxsdkmz6wlgcxmbd0xznj7a") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.21.0 (c (n "wry") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "tao") (r "^0.14") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zg8h962v9qlg8714jxvj1brqqx6cm1hjjpshv8q1v94j8lbjkc4") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.21.1 (c (n "wry") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "tao") (r "^0.14") (f (quote ("serde"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ib9j8ki5v8i42vc3yvq9vf2kkdlibsx4y9lqs9dyvr6ni916p7z") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.0 (c (n "wry") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19fy6kghwf9qf7db84l0jvhjp4xpg0lw05mgjnq6bbiy41xjjgcj") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.1 (c (n "wry") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08fdnpc4yjh2b2lqdf1wb7vjjgr3f171diardpifms6q5fxq1zg0") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.2 (c (n "wry") (v "0.22.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ivzcly9ra3fv92cm3b05kcp55b28jjjas8zhphbi3l6slikn89l") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.3 (c (n "wry") (v "0.22.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rqygq1jwyjrg4lcaz8jyv7l2npi74q2zmv39xv2w6h7awkwvqav") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.4 (c (n "wry") (v "0.22.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0y2ck8h4hxv6v5mdfak3mnzazl67q1x3d4caiv5bl1crgcb1x2sk") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.5 (c (n "wry") (v "0.22.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vh8s2rzaab5gq3j4imikr9r9v4212v4p67kjfc9bidkqxn91d73") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.23.0 (c (n "wry") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01i2njjbqd8b0mzp1gd8hmwyjz9xnmfzhl8fcafrpllzn9jdr0qs") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.22.6 (c (n "wry") (v "0.22.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16fcp9xjy2aghlwizv6d917jwfw19q6vb5j5g888s3zs6mgx03gj") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.23.1 (c (n "wry") (v "0.23.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mmqz1p1aiy8kwxb21s41ka64cmzanygb29z441azm0hm0v94v57") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.23.2 (c (n "wry") (v "0.23.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "00fvf53gjac3pwyq4rx6fk8cn81241nbi5rgcvf9gv1aw2wzpald") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.23.3 (c (n "wry") (v "0.23.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lgxyq26lhkid7pxfxd0cy6pq1w4s0jnv5fh6x8d3ay17b7h1qws") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.23.4 (c (n "wry") (v "0.23.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "167gqwgrd283ramynyl1zzz37d7m9qvsms7bpp2lqmag8bidh6jc") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.24.0 (c (n "wry") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.15.9") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pd92dq1sw6l8107s9qg3y1kiwl8rbwnp84gq4p9zmiyw17mjl1q") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (y #t)))

(define-public crate-wry-0.24.1 (c (n "wry") (v "0.24.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "098di4lfxbkqj7j96iaqdrlwj5vls8n81l4xhrcyk259vp26v10w") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.25.0 (c (n "wry") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.17.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "007y2i9k6s4l3s1567h1rsmp3a184xblq9xviqbsln9pzdrawjhn") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.26.0 (c (n "wry") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.17.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fzs71kmksihgvjkyf4nzlg2w5gw0hwx958qbwir1ywfwgbm504g") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.27.0 (c (n "wry") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.18.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rn3p475awcx28hmxb7pdmfxzk722m2jhyq6n31jkfwsm4z2nw96") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.27.1 (c (n "wry") (v "0.27.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.18.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1sagflkdzqqz1mprvfv7k3l9fxrzvdxpcgrbi0pfry3v6i7shn5r") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.27.2 (c (n "wry") (v "0.27.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.18.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rgjiyplim3vazx3p6ckp1rmgqr1xq5jz9vhhvc2x7g7xc8zq11a") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.27.3 (c (n "wry") (v "0.27.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.18.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0kyqzxmz9blwm52b4h0al073clmmshcqn2d368w2xgfclyzhvkz8") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.28.0 (c (n "wry") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.19") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kz6fa6l9hdbm595q5vxnzzrf4jlf1w265z7nrqnvqqvrg0qhfq7") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.28.1 (c (n "wry") (v "0.28.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.19") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bg27s44k61szrwfqnbp8ns3yxqcjfqz76flb5azk7m82hj0gi0b") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.28.2 (c (n "wry") (v "0.28.2") (d (list (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.19") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07z3q2dgg9w05hxwf9h83hqzc66w5fzcj0dkgm8qggsn0pzd3nvp") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.28.3 (c (n "wry") (v "0.28.3") (d (list (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^0.17.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.19") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.2") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.19.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.44") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1aimfqhm749idax0hpmqvwwb52ax1y9y6yq4dpzcwdym4zwgj5bx") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.24.2 (c (n "wry") (v "0.24.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lmngs5s6bzr0pvl3r20h4k3b01z76cvp8j7x2cl8zn3bhgvp0iw") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.24.3 (c (n "wry") (v "0.24.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1slc4p6yp975mpxd20qqa0amj34chhnq623sbza9i2iw84sqyx1k") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.29.0 (c (n "wry") (v "0.29.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.20") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1h5czyfzqa75n289y8h6bknpdp98lxxzbxkv7gkd3fggdhnqawx6") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.30.0 (c (n "wry") (v "0.30.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.21") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1p8i6pmbcqclxc8sgm1pzyi0xqdjdyh0hagy4ya5w9i68rnhh3a3") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.31.0 (c (n "wry") (v "0.31.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.22") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "084hk3bcmckyarsnqi97llsky36q0ahy2jizq58w1jx3iw0qjqjc") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.31.1 (c (n "wry") (v "0.31.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.22") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "023l3qc0ykl9lc0g67asyw6mqicak7vqlmhz1gz4s61haj587gq7") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.32.0 (c (n "wry") (v "0.32.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.22") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0dzrgf0gzmggm1qrndn0qpybjfgbakibvim602vgb7qwa78h1z21") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.33.0 (c (n "wry") (v "0.33.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.22") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0) (p "winit-gtk")))) (h "1axbcxd7rszdqfmm82w5gg9188mpsjscx3cpbb41a9h4p11np45z") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.24.4 (c (n "wry") (v "0.24.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13jpwfbcyra451r4ph8bgfldcfs1r243dr863zha5ss9mnyh9vw8") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.33.1 (c (n "wry") (v "0.33.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.22") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0) (p "winit-gtk")))) (h "12n7n5dffgjjivb45pjhir07dpjyxvly98v3m6jhbng3sxpbrcrc") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.34.0 (c (n "wry") (v "0.34.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.1") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.23") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.27") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0) (p "winit-gtk")))) (h "1ld4mlg2l2r6ghvwqy4qlbj92dyiy157lbwpmflhvl12x3pxq3ik") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.34.1 (c (n "wry") (v "0.34.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.1") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.23") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.27") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0) (p "winit-gtk")))) (h "06vlksv9wdlbknaf76rq130k9w9m9sjblhfgrzkh5g8wrhslkbci") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.34.2 (c (n "wry") (v "0.34.2") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gtk") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.23") (f (quote ("serde"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.27") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0) (p "winit-gtk")))) (h "09qrxj6xp8731awqj31p7h8y8cgjzsvmj7zl870yxn121xk2j7iz") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "tao"))))))

(define-public crate-wry-0.35.0 (c (n "wry") (v "0.35.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0blzcv8dqfbzbqmg4wlhx9xmkbrma57s0pwzqy85l8114whyhk3n") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.24.5 (c (n "wry") (v "0.24.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1p2rx48lfr9q15sm5h0hzpwdha8ynhd4nyp9phg2y6qvxivrxfds") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wry-0.24.6 (c (n "wry") (v "0.24.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0i67b9n3vdyr0hqhgqd6axsarqxxyx1r2q5gynh5vn7rx13hb9v4") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-wry-0.24.7 (c (n "wry") (v "0.24.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i3gpbc5mnmkpy52af6nwn9c65y8xb1h72dqzh4y8nbk0q75vn3a") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-wry-0.35.1 (c (n "wry") (v "0.35.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "08vl3kcbccyykqxq8zim46749l1w0yq3066h3gg0qpljsv0ipbd2") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.35.2 (c (n "wry") (v "0.35.2") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1ab52djnca9fr7rmbsd0pck74cjjhfplikd7knd05xxnr53nq0fk") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.36.0 (c (n "wry") (v "0.36.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0123sp17b1vrdawd0knyk5hag5iq4462m27ghqq30mc5js0pp7is") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.37.0 (c (n "wry") (v "0.37.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0plkynbhvwg82cng0d45zwsfgy2mnnk6x322xf4gswcpp9070wcb") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.38.0 (c (n "wry") (v "0.38.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1csbpjaiskzd5g8899as1kkmbz53rw0d6k20k20mhlccdmpzilwx") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.38.1 (c (n "wry") (v "0.38.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "00212rwxlvnk0a17kk9m0c9civx8dk8q6pb06hp3a3bzwz05d2fi") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.38.2 (c (n "wry") (v "0.38.2") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0nynr2wj2wng1bfhwm9pzcb9mww7h3zkr5fm1lyqg40razr624kl") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.39.0 (c (n "wry") (v "0.39.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.25") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "06jxyk3mhfkzchnsw4q72na5gqyq67fns69cx1kzq13w8d89vjjf") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.39.1 (c (n "wry") (v "0.39.1") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.27") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.54") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0gfkxxxinyydc9ns64hzynih486i1wawaqiy8qyj8bawfbpb13vr") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.24.8 (c (n "wry") (v "0.24.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1v1qnnxinsmr3b93w01paql79j5dis42b1mz7n722jp8krrp4km0") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-wry-0.39.2 (c (n "wry") (v "0.39.2") (d (list (d (n "base64") (r "^0.22") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "javascriptcore-rs") (r "=1.1.2") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.27") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.21") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0d1dypmb5pg9q5yr1wjlwi1anh005shhnbmw8b6rgx5vq0vrskhs") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.39.3 (c (n "wry") (v "0.39.3") (d (list (d (n "base64") (r "^0.22") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.2") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.27") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.21") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "113q9d6cih8k7c206f2ygqdhzadymhzgday0rvav8v0dfk10l63f") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.39.4 (c (n "wry") (v "0.39.4") (d (list (d (n "base64") (r "^0.22") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.2") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.27") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.21") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0lp1cvb5ns2cfx91gdmw8q6mrdscy3w2my4kgmwjlv4v4z518zzh") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.24.9 (c (n "wry") (v "0.24.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wwcq7j2zhzhwnnrmiynxfkrsazgpcbvi3vjv6q6gfr2w009js1w") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-wry-0.39.5 (c (n "wry") (v "0.39.5") (d (list (d (n "base64") (r "^0.22") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.2") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.28") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.21") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "021hf04g1pf7s5w57ywk4wvsrd04nsjk2yk2kh45vmbncg3jy5y7") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

(define-public crate-wry-0.24.10 (c (n "wry") (v "0.24.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup2") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.16.0") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^0.18") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.39.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0i9v719228b6sh8a8kaf0i769b7chrkji73l9ka50wrmxmw14w80") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-headers" "webkit2gtk/v2_36") ("fullscreen") ("file-drop") ("dox" "tao/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-wry-0.40.0 (c (n "wry") (v "0.40.0") (d (list (d (n "base64") (r "^0.22") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dpi") (r "^0.1") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 2)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1.2") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.28") (d #t) (k 2)) (d (n "tao-macros") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 2)) (d (n "windows") (r "^0.56") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-core") (r "^0.56") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "x11-dl") (r "^2.21") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1i5vh7g6fnc4rc2sf75v4a4kph82qrq3fnfhw38fzlfqpa12dm3w") (f (quote (("transparent") ("serde" "dpi/serde") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("drag-drop") ("devtools") ("default" "drag-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("tracing" "dep:tracing") ("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

