(define-module (crates-io #{3}# w wmi) #:use-module (crates-io))

(define-public crate-wmi-0.1.0 (c (n "wmi") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09x670ly530icqkdmz0j2jgswhrggnzf4jpp7yw8gg3lb7lqlbp5") (f (quote (("test")))) (y #t)))

(define-public crate-wmi-0.1.1 (c (n "wmi") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0r15f2x7wxil66nlbwp15hskfc1wbnlpnmgldvba76lryh6n5f2x") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.2.0 (c (n "wmi") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "131831v091xdsly8yg897bj3m8zaa2s7ra990w0nlz21s6vf600l") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.3.0 (c (n "wmi") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gmh9n3qrdr56rh2g0lsgyxgwyk9m3gcdbna5pj95hshmvwhq17s") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.0 (c (n "wmi") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10r9b4xw9ar05v0x5w6i5lzq0jiylc5jv304c83i17svd6clqgp8") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.1 (c (n "wmi") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1974iyndfpnmdnyhdrdlxk0fkpfxdjya6zlvk3mxv8rr6y3kgkp3") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.2 (c (n "wmi") (v "0.4.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nbdcq9c8i3w57b9wb254nq7g2krajjfsh3xdri6ssfiaqcagglp") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.3 (c (n "wmi") (v "0.4.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 1)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zhshgf9bhngmqgl09p1fhs2pw61rr8bzff012cz1gjjr0lfjqhn") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.4 (c (n "wmi") (v "0.4.4") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 1)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0y6jkvjksl1bsidanfr8832a2rmbz7h444iasiybg5hhsv76g8sy") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.5 (c (n "wmi") (v "0.4.5") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 1)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0kls8fl51ivhasnv9afdls5kv9p8k2xz6rjygizq2z7m8jc9l5qn") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.4.6 (c (n "wmi") (v "0.4.6") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 1)) (d (n "little-skeptic") (r "^0.15") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11i0lkr2a3vmwza1sfwx7phwh5gm5w5wgm2wz0291h5wv1wxx4hj") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.5.0 (c (n "wmi") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fn060ybhibr76r434xvp2488i4xvdg7zr0fx25jfcgmng2pp7wm") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.6.0 (c (n "wmi") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gwzpn1rhyrqsg194a9kl5g6q6qwjnh0c56c0jkpx0qgzynf7z0k") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.6.1 (c (n "wmi") (v "0.6.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0d4z3fwh1mvmrqxhxzl7zh0si6z3ihhc0iwwsykyjgc6ykg60pn3") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.7.0 (c (n "wmi") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1fq5kzvvfhw58cqzaxvcv1w5k4ddn9vyiazyq9ri35gk82d2w8yz") (f (quote (("test" "lazy_static"))))))

(define-public crate-wmi-0.8.0 (c (n "wmi") (v "0.8.0") (d (list (d (n "async-channel") (r "^1.5.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.4") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05ihk0mf4q59q273xf3c6pm8k517a65chshqggz7y18b66yz45p1") (f (quote (("test" "lazy_static" "async-std") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.8.1 (c (n "wmi") (v "0.8.1") (d (list (d (n "async-channel") (r "^1.5.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.4") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0vcc7f25s35vclswhchzikr27b5278da0rlvkq8vn4i69sbpg7am") (f (quote (("test" "lazy_static" "async-std") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.9.0 (c (n "wmi") (v "0.9.0") (d (list (d (n "async-channel") (r "^1.5.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.4") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04wsn383qcy4sr291v9kjrc840b70jzmkrjmyqz0k0nqjf1hh4pq") (f (quote (("test" "lazy_static" "async-std") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.9.1 (c (n "wmi") (v "0.9.1") (d (list (d (n "async-channel") (r "^1.5.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.4") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cq5mp57z7lgslkkgxyih1zl2axilsmfb2gzgd03pj813bw30vbx") (f (quote (("test" "lazy_static" "async-std") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.9.2 (c (n "wmi") (v "0.9.2") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.8.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lx4iyhnvz2si5956ibl2n399zld1xjfk0bcljb6xady6a9w714f") (f (quote (("test" "lazy_static" "async-std") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.9.3 (c (n "wmi") (v "0.9.3") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bfkfcv9gipqxj7bs585snnj7gic96yrkvgy24n59c7skf7laykm") (f (quote (("test" "lazy_static" "async-std") ("default" "chrono") ("async-query" "async-channel" "futures" "com"))))))

(define-public crate-wmi-0.10.0 (c (n "wmi") (v "0.10.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1byk32rsk5r1hlcm7hrqw3z6hzqclw3sdjkm80ibgn2yyb3bli4v") (f (quote (("test" "lazy_static") ("default" "chrono") ("async-query"))))))

(define-public crate-wmi-0.11.0 (c (n "wmi") (v "0.11.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qglw69wh292pwzhf3cn73znw6vzs7ab28vknnlppqdws4zkib81") (f (quote (("test" "lazy_static") ("default" "chrono") ("async-query"))))))

(define-public crate-wmi-0.11.1 (c (n "wmi") (v "0.11.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1969klvkis9g6n37icc2vc6plpc1fac4nkwsq47c7484wpnipx1p") (f (quote (("test" "lazy_static") ("default" "chrono") ("async-query"))))))

(define-public crate-wmi-0.11.2 (c (n "wmi") (v "0.11.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0b5n67acnhsc8baj51i5hcw5ysnz2rx9nk0xyvsxavkq6cc6l61i") (f (quote (("test" "lazy_static") ("default" "chrono") ("async-query"))))))

(define-public crate-wmi-0.11.3 (c (n "wmi") (v "0.11.3") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sys-locale") (r "^0.2.1") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ikbrni6s12agln465ja1qvcfqnhvj8nd2m9fbp99s0ki197x5db") (f (quote (("test" "lazy_static") ("default" "chrono") ("async-query"))))))

(define-public crate-wmi-0.11.4 (c (n "wmi") (v "0.11.4") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sys-locale") (r "^0.2.1") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1511q3nqr0zsdlx1v04d3k7pvpi6ld6cqigwbf5fd402fnpxbj5q") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.11.5 (c (n "wmi") (v "0.11.5") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "com") (r "^0.6") (f (quote ("production"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sys-locale") (r "^0.2.1") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "widestring") (r "^1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("objbase" "wbemcli" "objidlbase" "oaidl" "oleauto" "errhandlingapi" "wtypes" "wtypesbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hbayjbmrc89z5z5pvqhqdmpgknbn9yfp71adcq8n6xrc75z7kax") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.12.0 (c (n "wmi") (v "0.12.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sys-locale") (r "^0.2.1") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.44") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0xff3d889zgqzf9qshb8xy7r4c9dlyxg6x0a8y4id956s7z3xvzm") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.12.1 (c (n "wmi") (v "0.12.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sys-locale") (r "^0.2.1") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.44") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0h3vkcmxj8bfh25pdaq9pw3qzmh824dhzhrfypwgnqarv81qnv8a") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.12.2 (c (n "wmi") (v "0.12.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "000sdzx8fnw913ws28ranf8bhm8dvvdpz89s4fhqfbkxpd5b9zys") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.13.0 (c (n "wmi") (v "0.13.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cbs7j1k9lqdsdm6j024ngrbdh978nqi0gwzhxhbx96h2bld7nz6") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.13.1 (c (n "wmi") (v "0.13.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lb3dbdspyb1v7ifczpz7i0krva0wqn97hl26pjiqmw8078h7myf") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.13.2 (c (n "wmi") (v "0.13.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi" "Win32_System_Variant"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1n349n0dsmvl4rmzm3s2pxigjsb9yb97yanbbnsnpvyqdzlriwpz") (f (quote (("test") ("default" "chrono"))))))

(define-public crate-wmi-0.13.3 (c (n "wmi") (v "0.13.3") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std" "serde"))) (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros" "serde"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Rpc" "Win32_System_Wmi" "Win32_System_Variant"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16pp0wbg4nnxilm2143radbkh6q6sj7r98h58ynjllnac900lbzw") (f (quote (("test") ("default" "chrono"))))))

