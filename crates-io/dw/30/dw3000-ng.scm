(define-module (crates-io dw #{30}# dw3000-ng) #:use-module (crates-io))

(define-public crate-dw3000-ng-0.3.0 (c (n "dw3000-ng") (v "0.3.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)) (d (n "ssmarshal") (r "^1") (k 0)))) (h "1cy10069i3pqpbs13afk92kk456g2kxyh5j661b83387q3dn039s") (f (quote (("std" "ssmarshal/std" "serde/std" "num_enum/std") ("defmt") ("default" "async") ("async"))))))

(define-public crate-dw3000-ng-0.3.1 (c (n "dw3000-ng") (v "0.3.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)) (d (n "ssmarshal") (r "^1") (k 0)))) (h "07j11816hnjzzb524rjdv7swg3nyyg6r2v4gcgk2qi7y5qgpgcpy") (f (quote (("std" "ssmarshal/std" "serde/std" "num_enum/std") ("defmt") ("default" "async") ("async"))))))

(define-public crate-dw3000-ng-0.4.0 (c (n "dw3000-ng") (v "0.4.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10.0-rc.1") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "1wdy3xvhrlfpjhf1gz12i4pwq7yjsvbw3i890wq8ngdyn75az867") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.4.1 (c (n "dw3000-ng") (v "0.4.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10.0-rc.1") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "0kncxkbryx472n9lf9vsl8ggfy0pyvzdk4yrnkksg7akc9nsr2bq") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.5.0 (c (n "dw3000-ng") (v "0.5.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "0ngq0crmc20ajm84cj1ldj2g6p9f9y6v5yh30nyxv4qd4i3ydi9p") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.5.1 (c (n "dw3000-ng") (v "0.5.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "14m2pzd0r83nscvq6zfwir30yvsayyjsw528q2xwbj55xjm8mp7r") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.6.0 (c (n "dw3000-ng") (v "0.6.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "1lqqlz442g5swd1dlsm6j5hlmhnzjhrx7ismac8vqz0yzz1pk0nd") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.6.1 (c (n "dw3000-ng") (v "0.6.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "1h521gy2h8g28i33zkrrs4xddg5nhpa9nxr4k7j00k12rcpyr50b") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt") ("async"))))))

(define-public crate-dw3000-ng-0.7.0 (c (n "dw3000-ng") (v "0.7.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (o #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "1fd2m8wlqyis4my5fmxq0dsda9g6hxgbr4vc30zd78z15kh943lp") (f (quote (("std" "serde/std" "num_enum/std") ("defmt") ("default" "async" "defmt" "num-traits") ("async")))) (s 2) (e (quote (("num-traits" "dep:num-traits"))))))

(define-public crate-dw3000-ng-0.7.1 (c (n "dw3000-ng") (v "0.7.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (o #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "0r56si6slpi9i8343dzv8jhik9y95s10l9z3c49npszc3jpbgcpk") (f (quote (("std" "serde/std" "num_enum/std") ("default" "async" "defmt" "num-traits") ("async")))) (s 2) (e (quote (("num-traits" "dep:num-traits") ("defmt" "dep:defmt"))))))

(define-public crate-dw3000-ng-0.8.0 (c (n "dw3000-ng") (v "0.8.0") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (o #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "0rbg1vqkcyh8dmbb17ipyhjp9zl8bfr2y4pfkgavrdh19xmvwhxf") (f (quote (("std" "serde/std" "num_enum/std") ("default" "async" "defmt" "rssi") ("async")))) (s 2) (e (quote (("rssi" "dep:num-traits") ("defmt" "dep:defmt"))))))

(define-public crate-dw3000-ng-0.8.1 (c (n "dw3000-ng") (v "0.8.1") (d (list (d (n "byte") (r "^0.2") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10") (d #t) (k 2)) (d (n "fixed") (r "^1.7") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (o #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("socket-raw" "defmt" "medium-ieee802154"))) (k 0)))) (h "1bq6x83g3szwspc2n1ayzxgksqz8wypdica6ddns8mla44gw8y5c") (f (quote (("std" "serde/std" "num_enum/std") ("default" "async" "defmt" "rssi") ("async")))) (s 2) (e (quote (("rssi" "dep:num-traits") ("defmt" "dep:defmt"))))))

