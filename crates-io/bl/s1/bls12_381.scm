(define-module (crates-io bl s1 bls12_381) #:use-module (crates-io))

(define-public crate-bls12_381-0.0.0 (c (n "bls12_381") (v "0.0.0") (h "1ai5yrvf9p0607242pj94fp48926icpf05nmdghf6g6yqr3vwxfn")))

(define-public crate-bls12_381-0.1.0 (c (n "bls12_381") (v "0.1.0") (d (list (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "0856b4vg362fa5xn6l4niqaw6pzk646likcyfr4dbjdcpwk6jn68") (f (quote (("pairings" "groups") ("nightly" "subtle/nightly") ("groups") ("default" "groups" "pairings" "alloc") ("alloc"))))))

(define-public crate-bls12_381-0.1.1 (c (n "bls12_381") (v "0.1.1") (d (list (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "07pfjyhakpp1dpy9hpy68ym2zx8nkilklbrfrhw83dh7sgd1dh90") (f (quote (("pairings" "groups") ("nightly" "subtle/nightly") ("groups") ("endo") ("default" "groups" "pairings" "alloc") ("alloc"))))))

(define-public crate-bls12_381-0.2.0 (c (n "bls12_381") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.7") (k 0)) (d (n "group") (r "^0.7") (o #t) (k 0)) (d (n "pairing") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "1l4avbds2i5vlc6vw35pc2kaimpz7h1rrjyhidmm7klacx3hbfyl") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("endo") ("default" "groups" "pairings" "alloc") ("alloc"))))))

(define-public crate-bls12_381-0.3.0 (c (n "bls12_381") (v "0.3.0") (d (list (d (n "bitvec") (r "^0.18") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.8") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "pairing") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "1aqqw01dmkdkddsjvlwc8yxx6yp7kxgdngddmy57i2ipgik0vsy3") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("endo") ("default" "groups" "pairings" "alloc") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.3.1 (c (n "bls12_381") (v "0.3.1") (d (list (d (n "bitvec") (r "^0.18") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.8") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "pairing") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "07s207dyl7l566v9q8387sb1kv5wnvyacq1dfwglk0jm400h3bsc") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("endo") ("default" "groups" "pairings" "alloc") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.4.0 (c (n "bls12_381") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.9") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "pairing") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "0cmdv0hvv540ig02si2hiimn5vx48aphp3miwx48hqicqjf60mhw") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("endo") ("default" "groups" "pairings" "alloc" "endo") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.5.0 (c (n "bls12_381") (v "0.5.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.10") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "15r378ijkjpf075hia3b129768kl58w3wc7cnmqbwscsn247hxal") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("endo") ("default" "groups" "pairings" "alloc" "bits" "endo") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.6.0 (c (n "bls12_381") (v "0.6.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.4") (o #t) (k 0)))) (h "0jy7wzj018w419v2605aw05v0ww4r5vk6sbjghf9z56pvvpdla3d") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("default" "groups" "pairings" "alloc" "bits") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.6.1 (c (n "bls12_381") (v "0.6.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.4") (o #t) (k 0)))) (h "1ydhpp7fm927mlkbqy0icqwbwhhvvnvswkiivqsbw1lwk4hwhad8") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("default" "groups" "pairings" "alloc" "bits") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.7.0 (c (n "bls12_381") (v "0.7.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.4") (o #t) (k 0)))) (h "11n9f6g9acknv7pj4mbqsxnl47ghhsaxba5kd0hb5aazaz70w9b2") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("default" "groups" "pairings" "alloc" "bits") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.7.1 (c (n "bls12_381") (v "0.7.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.4") (o #t) (k 0)))) (h "0hary1bvjyiwkarfrj5gnmw1aa81chx43khmnlpwrrrpfjkrdhd3") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("default" "groups" "pairings" "alloc" "bits") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

(define-public crate-bls12_381-0.8.0 (c (n "bls12_381") (v "0.8.0") (d (list (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "pairing") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r ">=1.0, <1.2") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)))) (h "00zl6c2bhjh6wfxixdavba3falgm034dm1lp6zk1jfmyj9i6vg6p") (f (quote (("pairings" "groups" "pairing") ("nightly" "subtle/nightly") ("groups" "group") ("experimental" "digest") ("default" "groups" "pairings" "alloc" "bits") ("bits" "ff/bits") ("alloc" "group/alloc"))))))

