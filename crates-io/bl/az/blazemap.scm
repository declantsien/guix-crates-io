(define-module (crates-io bl az blazemap) #:use-module (crates-io))

(define-public crate-blazemap-0.0.1 (c (n "blazemap") (v "0.0.1") (d (list (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1w3v709skiljyrn37v9gk4kmpz07ylaf7m8vayd9k40mm13z7fg1") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.2 (c (n "blazemap") (v "0.0.2") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1vp2sldng3k1800la44k59h85dbd3sriznnymgly3yzidwfnh0ib") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.3 (c (n "blazemap") (v "0.0.3") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "1pq3r9fsigsc0nhw9hq6f91wgqlkci4fzksz56zv6gqwyg52yps6") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.4 (c (n "blazemap") (v "0.0.4") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "0bn5migm7l1zm6410y0pahr5vvqc6hkwwdwyli051bcsnv2pk0bz") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.5 (c (n "blazemap") (v "0.0.5") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "0f0ryijpswla5g7fr08gcdf4i4a4i7d1kzqazh5zljhgqcyvyyqv") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.6 (c (n "blazemap") (v "0.0.6") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "02v75wzqzfz3smhbvamzyxllssxa8cp6nwv3x6xcv106zcicrf5m") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.7 (c (n "blazemap") (v "0.0.7") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "08lnsgqm8wi2yxnpkxwdd7r1dfpbci36qdxnbblcxdzjxrvjrbn9") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.8 (c (n "blazemap") (v "0.0.8") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "19a2b1w7ly95hw55b7was3sb90n5vw3c87d8jmhy5g2jx58wak0s") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.0.9 (c (n "blazemap") (v "0.0.9") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "read-write-api") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "120a6sqv19q3c2nhr3lvrhk9znxjwjd6r01hbhljfhcmn3y4vj3b") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.1.0 (c (n "blazemap") (v "0.1.0") (d (list (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "0g2vcvnyn27n6szm43v7g9g1rs6rjnb8jwx3q03l4zls50d1cksk") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.2.0 (c (n "blazemap") (v "0.2.0") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "0yj973i6n7l8dyxx3fnsi6g8msj52ndp16j5a4h0prlry8yq8yzs") (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.3.0 (c (n "blazemap") (v "0.3.0") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "18596bqnc2vyaz494n3wdhcg5l8mhzvciy9kak8gmvk3ism8cmbi") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.3.1 (c (n "blazemap") (v "0.3.1") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "10qbwwvmnwba3frh35nkqiigrfqy8d3lg9fhpijy9h5aq8pcbnhg") (f (quote (("miri_action_log")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.3.2 (c (n "blazemap") (v "0.3.2") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "0hwgab2dcpckrhqpz8z4jq7gfr9mzn2xgdmsb9vx2q63kwff1iys") (f (quote (("miri_action_log")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.4.0 (c (n "blazemap") (v "0.4.0") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "18w0zzl03gnr8iv1s0nkcwlbc62vkhbj2zpqwrnbf8vqd34490yf") (f (quote (("miri_action_log")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.5.0 (c (n "blazemap") (v "0.5.0") (d (list (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "19i5b2sq2zg9x1k33iy76sp7a0nfg2zd0ym2smjv5ajchm1ki1sb") (f (quote (("miri_action_log")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-blazemap-0.5.1 (c (n "blazemap") (v "0.5.1") (d (list (d (n "loom") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)))) (h "1dv4728fimz149ca489jlqiz1gcram74ajc3kdw8byngwdx2i899") (f (quote (("miri_action_log") ("full" "serde")))) (s 2) (e (quote (("serde" "dep:serde") ("loom" "dep:loom"))))))

