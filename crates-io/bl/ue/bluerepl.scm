(define-module (crates-io bl ue bluerepl) #:use-module (crates-io))

(define-public crate-bluerepl-0.1.0 (c (n "bluerepl") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "12cn3q4cgf7z8d20hpdx0pc92wipwcwrdv7hhmw0w27np584n7wj")))

(define-public crate-bluerepl-0.1.1 (c (n "bluerepl") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0vivil46gmqq9dp7r5dsbnvwh9v8vcgfaik14j9dxvigv14dibah")))

(define-public crate-bluerepl-0.1.2 (c (n "bluerepl") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0rpij5zlnml409m3nlfkwh6hdb4izb8sqjfw42xwv7y1iwzzcvzq")))

(define-public crate-bluerepl-0.1.3 (c (n "bluerepl") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0n1p5sa24hc2892mgxqm0lhv1kk4zh73ph5z968fx0rdadp1w4vn")))

(define-public crate-bluerepl-0.1.4 (c (n "bluerepl") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pre-commit") (r "^0.5.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rhexdump") (r "^0.1.1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "03pjn5kq7xk3244bf7x76b0ay3b4c4a65hfpxd7iamlzgk7g8335")))

(define-public crate-bluerepl-0.1.5 (c (n "bluerepl") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pre-commit") (r "^0.5.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rhexdump") (r "^0.1.1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0n3rmzmj6fxy8p1rzr5sna66ngmdp951rzfili1qal7ak1rbwmi1")))

(define-public crate-bluerepl-0.1.6 (c (n "bluerepl") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pre-commit") (r "^0.5.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rhexdump") (r "^0.1.1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "16dhb0s4h92zhy0i419chirxk3rahb73l60n6i06lbzwxbvldywh")))

(define-public crate-bluerepl-0.1.7 (c (n "bluerepl") (v "0.1.7") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "btleplug") (r "^0.10.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pre-commit") (r "^0.5.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rhexdump") (r "^0.1.1") (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shlex") (r "^0.1.1") (d #t) (k 0)) (d (n "str_to_bytes") (r "^0.2.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "02a9p2pr2w6kl9qrl5qlw1angk7pd4wygjff7d20bx9gkbl6mqly")))

