(define-module (crates-io bl ue blue-build-utils) #:use-module (crates-io))

(define-public crate-blue-build-utils-0.8.1 (c (n "blue-build-utils") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1gq5466x0c5xmydw78wcb4vir8x6iljx0rpnhzalz1jxwy23f4sg")))

(define-public crate-blue-build-utils-0.8.2 (c (n "blue-build-utils") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1lnkj6phcd10gxy9rskh0kxb8i0r3bf0w4fcgrpgz2b8yj2m5m47")))

(define-public crate-blue-build-utils-0.8.3 (c (n "blue-build-utils") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1ar0rqyhf4bhavsmrz71bw03f9zvdiib0ln44sbmhf29yqgy2zmd")))

(define-public crate-blue-build-utils-0.8.4 (c (n "blue-build-utils") (v "0.8.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "0sj5h986803dcg97j65f8p2p6lgixhsj1hy9jn7d3wzmin5szi6m")))

(define-public crate-blue-build-utils-0.8.5 (c (n "blue-build-utils") (v "0.8.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "unicode" "derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1kvws5czjr0hpv0zkvq1mpra4xar5l378p0zsax0d4xpxs7d56ab")))

(define-public crate-blue-build-utils-0.8.6 (c (n "blue-build-utils") (v "0.8.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "unicode" "derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "077i89zszy5x1q6991aj7bsyvwv9b1d4gdf0k6j7ximxgn0fv3kh")))

(define-public crate-blue-build-utils-0.8.7 (c (n "blue-build-utils") (v "0.8.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "unicode" "derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1rjmf0v8g4kmjqi4l4qy0bqch6b0wcqjs9bnx8n2w1yln6z7zl86")))

(define-public crate-blue-build-utils-0.8.8 (c (n "blue-build-utils") (v "0.8.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "unicode" "derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "1y6fmg4fn51nvfm3bjiyr42b46zlgmvw2qajbj457qrqaihmwg1h")))

(define-public crate-blue-build-utils-0.8.9 (c (n "blue-build-utils") (v "0.8.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "unicode" "derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4.0.3") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "067pvsv6cvwh0ylr5xs2jinnynka9nryyagvwd7qs5bqa02691w5")))

(define-public crate-blue-build-utils-0.8.10 (c (n "blue-build-utils") (v "0.8.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "format_serde_error") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "process_control") (r "^4") (f (quote ("crossbeam-channel"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "syntect") (r "^5") (d #t) (k 0)) (d (n "syntect") (r "^5.2.0") (d #t) (k 1)) (d (n "which") (r "^6") (d #t) (k 0)))) (h "0nsjp02l2g6lhspyn4gkwqqff9i90z5s4y4lflk50wphv0ng8cm0")))

