(define-module (crates-io bl oc blockifier) #:use-module (crates-io))

(define-public crate-blockifier-0.1.0-rc1 (c (n "blockifier") (v "0.1.0-rc1") (d (list (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.3.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1zydpr1qd36r220l82i2ik73i9a8xpki6dplpswxrhq7s7hq1ic1") (f (quote (("testing"))))))

(define-public crate-blockifier-0.1.0-rc2 (c (n "blockifier") (v "0.1.0-rc2") (d (list (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.3.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0ps6zgrs8qxsw3zqxisn994lgzm79wiv6l6kkryvxjcwjy1ircpf") (f (quote (("testing"))))))

(define-public crate-blockifier-0.2.0-rc0 (c (n "blockifier") (v "0.2.0-rc0") (d (list (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "=1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.4.1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0gvq3f8941rjc76yvjg7j7zwwigj4af6qa8g6mimk9afmrsx7d1c") (f (quote (("testing"))))))

(define-public crate-blockifier-0.2.0-rc1 (c (n "blockifier") (v "0.2.0-rc1") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.4.1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0liaygbziqw1d3vk49jw5baisq7c5j2ggak5nfnfrh2qz89vvjs7") (f (quote (("testing"))))))

(define-public crate-blockifier-0.3.0-rc0 (c (n "blockifier") (v "0.3.0-rc0") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.2.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.5.0-rc1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "10hcqi98p9f5vqvgcy53w464lkh1qadwizvrqdyfjry2im8d6zgg") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc2 (c (n "blockifier") (v "0.4.0-rc2") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "genco") (r "=0.17.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.5.0-rc1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "11j0rpzqb4ncl6cn4infl60napl0dnji9iy7w85dzqrspdbp2snk") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc3 (c (n "blockifier") (v "0.4.0-rc3") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "genco") (r "=0.17.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1c968gzqlcfmhmmfv38jm46lq6kfnvq2f59k5wlxq9jmryf28f7f") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc4 (c (n "blockifier") (v "0.4.0-rc4") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "12si4cw2d0b7x1bpl6ymca8cvcd0c9v4li372z3km8ziw195m5ar") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc5 (c (n "blockifier") (v "0.4.0-rc5") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.0") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc1") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0dlzgsmm7sngrsdvfj72axnx3vfbdnkngsk45jdp8l4cpnmzsm4v") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc6 (c (n "blockifier") (v "0.4.0-rc6") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc2") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0fgxpnnf0y50qbkfz8dwmvhhk6hcg5vr4608cya9rfmf4w22sfs2") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc7 (c (n "blockifier") (v "0.4.0-rc7") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc2") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0xjyw75shhgj9fdzk2qbdxsxww1prx2s5n9a12sa7ld5zdb8qyym") (f (quote (("testing")))) (y #t)))

(define-public crate-blockifier-0.4.0-rc8 (c (n "blockifier") (v "0.4.0-rc8") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc2") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1zz0b91a15w8k94q1b2xr5rxsds7hp193vz5z8rzxg5mdnygvrkk") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc9 (c (n "blockifier") (v "0.4.0-rc9") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc2") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0iarqwqpnvbhd9ywv28xrxnp02hdr5f3xi9lzxdi2979gjgdgjfa") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc10 (c (n "blockifier") (v "0.4.0-rc10") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc3") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0ac7l99zlhbzhi5c539hbnz58s1vhkkch1vk2rh24gaqxf66kw73") (f (quote (("testing")))) (y #t)))

(define-public crate-blockifier-0.4.0-rc9.1 (c (n "blockifier") (v "0.4.0-rc9.1") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc3") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1xllfshdwp8jpbcxd49ifyrif1yfdl4hpapv0r75fvz8d06g3hz9") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0-rc9.2 (c (n "blockifier") (v "0.4.0-rc9.2") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.8.2") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.2") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc3") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0gmfkzjf96wyx0x464gjpdqf0q25sjdi3115jx6rikcrilc3nnpg") (f (quote (("testing"))))))

(define-public crate-blockifier-0.4.0 (c (n "blockifier") (v "0.4.0") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "=0.8.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.3") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "04g0acc6nin4hd2pyllq129c4f82ia8w5ardri9rnl5bhqghybnh") (f (quote (("testing"))))))

(define-public crate-blockifier-0.5.0-dev.0 (c (n "blockifier") (v "0.5.0-dev.0") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.1") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoize") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.7.0-dev.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "13kbmfhg8x8rsaw5irnhpclmyrnl2590di7h3lgazdzp49vcqniv") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.4.1-rc.0 (c (n "blockifier") (v "0.4.1-rc.0") (d (list (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "=0.8.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.3") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.4.3") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.3") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.3") (d #t) (k 0)) (d (n "cairo-vm") (r "=0.8.4-rc.0") (d #t) (k 0)) (d (n "ctor") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "13b5w4azn4b2gjfdi33z9bvbrzkr9ig6l6qlxhb4zrdgyk0dlbwa") (f (quote (("testing"))))))

(define-public crate-blockifier-0.5.0-rc.0 (c (n "blockifier") (v "0.5.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1jnfsl38qzfbf6xdcmdq1x1cn1fbxar0b8fdp7xjsbg21znvzjsg") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.5.0-rc.1 (c (n "blockifier") (v "0.5.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0fz51dnk56kjn1i8yggp3mizsd1qpdhm897flw138kq7zy44jpn1") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.5.0-rc.2 (c (n "blockifier") (v "0.5.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1d49zlai20mxb0jyvdf8rh38snq8b48q90w4wkcq84i0xb0rxl7p") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.5.0-rc.3 (c (n "blockifier") (v "0.5.0-rc.3") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1b0d6hfb59g5rwivmaww3p0q8rifk29kdqvz03zls8n59n0sw6bn") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.5.0-rc.4 (c (n "blockifier") (v "0.5.0-rc.4") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0-dev.2") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0rrr50pl0b737fg2pq7gv59zjhccrwi1sha9n3a47sjf1win1hij") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.5.0 (c (n "blockifier") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1cb41y5r85mnv0mdi1ydhhfjk8498asrzhlpnam8vjwjv9i1k94k") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.6.0-rc.0 (c (n "blockifier") (v "0.6.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1p3ifz1lcja7lv2jkzxslrjiqg35qbbsgir8daifr1iy508y0mv4") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.6.0-rc.1 (c (n "blockifier") (v "0.6.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0z9rd7giix3ny3qcbljdsj69xk58l0zzv5lh72cvxilxfmscycjy") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.7.0-dev.0 (c (n "blockifier") (v "0.7.0-dev.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "=0.12.0-dev.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "0zgjxwv5n6f48dpi21c054hb909pwjfzlihlkaqmxvkmcqbvv2px") (f (quote (("testing" "rstest") ("concurrency"))))))

(define-public crate-blockifier-0.7.0-dev.1 (c (n "blockifier") (v "0.7.0-dev.1") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.12.0-dev.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "1prn0f2r431ai37vd04mnfcm79y6yjblnfxrz7pznvhwci5s57i7") (f (quote (("testing" "rstest") ("concurrency"))))))

(define-public crate-blockifier-0.6.0-rc.2 (c (n "blockifier") (v "0.6.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-felt") (r "^0.9.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.9.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "157x4vrcsdbiw330fg8d3v5nkq6kxz7wvmdy4jfqcr2ffgc2gvf7") (f (quote (("testing" "rstest"))))))

(define-public crate-blockifier-0.8.0-dev.0 (c (n "blockifier") (v "0.8.0-dev.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.2") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (d #t) (k 0)) (d (n "ark-secp256k1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.7.0-dev.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.7.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.7.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.7.0-dev.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^1.0.0-rc3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet-types-core") (r "^0.1.2") (f (quote ("hash" "prime-bigint"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.13.0-dev.4") (f (quote ("testing"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)))) (h "13cdxy6hsx4d5hpcpf4had53lqmlk00xia6daibbfd0jf775fkyb") (f (quote (("testing" "rstest") ("concurrency"))))))

