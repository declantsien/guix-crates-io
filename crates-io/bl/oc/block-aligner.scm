(define-module (crates-io bl oc block-aligner) #:use-module (crates-io))

(define-public crate-block-aligner-0.1.0 (c (n "block-aligner") (v "0.1.0") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "05qprpr2pw4ycr5jfxnj87ncvmhzmd6h5vy30kz6nvxxfik2rmlh") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.1.1 (c (n "block-aligner") (v "0.1.1") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "1nvr28n53kcmwqxqdy25hvzbbhacf4fw8yl37bwa0fy661i3s5l2") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.1.2 (c (n "block-aligner") (v "0.1.2") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "14rxpx8ndhy85adz919sbqj5r0di3glpa6mwwgdagj48dy1bcxvf") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.1.3 (c (n "block-aligner") (v "0.1.3") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "1apdid16bh1bpdbcndx9w7f9m61klivqzm0rmjy870aq7rpx3ldi") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.1.4 (c (n "block-aligner") (v "0.1.4") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "1ivpzwl0iggv8nmlziplmf41k59ypxma8l489jw1b8a9f7f9r8y0") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.1.5 (c (n "block-aligner") (v "0.1.5") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.19.0") (d #t) (k 1)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "imageproc") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "1z5l670lp8mym4zb8ml7rf7idy50cfy55sv9v7nv3il85z2h45hd") (f (quote (("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.2.0 (c (n "block-aligner") (v "0.2.0") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.20.0") (d #t) (k 1)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "imageproc") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "12jwqw1b071a76lccfi9dprszvijqb982vg4b6mh6h5fb0jb2wzc") (f (quote (("simd_wasm") ("simd_avx2") ("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.3.0 (c (n "block-aligner") (v "0.3.0") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "cbindgen") (r "^0.20.0") (d #t) (k 1)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)) (d (n "imageproc") (r "^0.22.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)) (d (n "parasailors") (r "^0.3.1") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng" "alloc"))) (k 0)))) (h "0wr8y3j2hdvd1yaxwsjmjf05z7qfpghp8px67zx92nj9vi0s065f") (f (quote (("simd_wasm") ("simd_neon") ("simd_avx2") ("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.4.0 (c (n "block-aligner") (v "0.4.0") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)) (d (n "imageproc") (r "^0.22.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)))) (h "16vgf5mvkwyp5a0gzv8j1wmvzj19fj71s796b0izqhd114aw9j1p") (f (quote (("simd_wasm") ("simd_sse2") ("simd_neon") ("simd_avx2") ("no_simd") ("mca") ("debug_size") ("debug" "debug_size"))))))

(define-public crate-block-aligner-0.5.0 (c (n "block-aligner") (v "0.5.0") (d (list (d (n "bio") (r "^0.33") (d #t) (k 2)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)) (d (n "imageproc") (r "^0.22.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"aarch64\")))") (k 2)))) (h "0if0a55mf3xgisc9fh5inc1vvv97m0pqamd1pqyazjg4hx7jd18r") (f (quote (("simd_wasm") ("simd_sse2") ("simd_neon") ("simd_avx2") ("no_simd") ("mca") ("debug_size") ("debug" "debug_size"))))))

