(define-module (crates-io bl oc blockchain_contracts) #:use-module (crates-io))

(define-public crate-blockchain_contracts-0.1.0 (c (n "blockchain_contracts") (v "0.1.0") (d (list (d (n "bitcoincore-rpc") (r "^0.8.0-rc1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 1)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.19.1") (d #t) (k 0) (p "bitcoin")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.8") (d #t) (k 2)) (d (n "tiny-keccak") (r "^1.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5") (d #t) (k 2)) (d (n "web3") (r "^0.8") (f (quote ("http"))) (k 0)))) (h "1cvsd9b1xns3462r56jk5yss48lka6ljm3n11b0kw62ljnxqk2ry")))

(define-public crate-blockchain_contracts-0.2.0 (c (n "blockchain_contracts") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.19.1") (f (quote ("use-serde"))) (d #t) (k 0) (p "bitcoin")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.8") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "026pr46frw7jd2cj6nxi29i2iqliqzpbz1bfc0l4dp41dk80jgns")))

(define-public crate-blockchain_contracts-0.3.0 (c (n "blockchain_contracts") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.23") (f (quote ("use-serde"))) (d #t) (k 0) (p "bitcoin")) (d (n "secp256k1") (r "^0.17.1") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.8") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "1slqac67vc9ffpa6ykjmycd4c6prwbpngw4aqs4lix5jzzq4fcm6")))

(define-public crate-blockchain_contracts-0.3.1 (c (n "blockchain_contracts") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.23") (f (quote ("use-serde"))) (d #t) (k 0) (p "bitcoin")) (d (n "secp256k1") (r "^0.17.1") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.8") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "1isxcav9ans0ng4n0ab828yrfcbiqc1b3za7vhhkll445396zngi")))

(define-public crate-blockchain_contracts-0.3.2 (c (n "blockchain_contracts") (v "0.3.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.23") (f (quote ("use-serde"))) (d #t) (k 0) (p "bitcoin")) (d (n "secp256k1") (r "^0.17.1") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.8") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "07yvd0jmgp7a0qhfcnp6dxm0w1wwhqyqq30yqvark70p8j7254lg")))

(define-public crate-blockchain_contracts-0.4.0 (c (n "blockchain_contracts") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.25") (d #t) (k 0) (p "bitcoin")) (d (n "rust_bitcoin") (r "^0.25") (f (quote ("use-serde"))) (d #t) (k 2) (p "bitcoin")) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "1pfcwc780vzr83y8r5gzjba64r8gks3w82j6fwx5a065zhvvw0ss")))

(define-public crate-blockchain_contracts-0.4.1 (c (n "blockchain_contracts") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.5.0") (f (quote ("rlp"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rlp") (r "^0.4.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "rust_bitcoin") (r "^0.25") (d #t) (k 0) (p "bitcoin")) (d (n "rust_bitcoin") (r "^0.25") (f (quote ("use-serde"))) (d #t) (k 2) (p "bitcoin")) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "spectral") (r "^0.6") (d #t) (k 2)) (d (n "testcontainers") (r "^0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "^2") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "web3") (r "^0.10") (f (quote ("http"))) (k 2)))) (h "1rqpl1dm12aybdb7fda987rahwha00b8whj0kfh88rg01yr5496w")))

