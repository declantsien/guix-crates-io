(define-module (crates-io bl oc blockscout-service-launcher) #:use-module (crates-io))

(define-public crate-blockscout-service-launcher-0.1.0 (c (n "blockscout-service-launcher") (v "0.1.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0m0083sfyp458q80xb2m2y7vlfyb234xl40g7h9h2h31a96q7qbw")))

(define-public crate-blockscout-service-launcher-0.3.0 (c (n "blockscout-service-launcher") (v "0.3.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0xmbkgrjppn1j7q7rspwlgp7a0i1hf2ixqrmgxh3zaljaaz5b6a4")))

(define-public crate-blockscout-service-launcher-0.4.0 (c (n "blockscout-service-launcher") (v "0.4.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "0bvqfdlpa8pgklpb732sp89wqwlh3bv9mrhl7c1x23ikzibcwydb")))

(define-public crate-blockscout-service-launcher-0.5.0 (c (n "blockscout-service-launcher") (v "0.5.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "0q6zb5d7srydk4r7w0wgqyxq4rkjn6h1l66ab6pdk6ybv95zkksp")))

(define-public crate-blockscout-service-launcher-0.6.0 (c (n "blockscout-service-launcher") (v "0.6.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "1d5bscqm286lkvrvgkr7i4g2x3xwppw1n0i3dw6vgnsb0b73zpxs")))

(define-public crate-blockscout-service-launcher-0.6.1 (c (n "blockscout-service-launcher") (v "0.6.1") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "05hks1k4y0wm569sns2r9lzf3xb8wpyck77z4makq7m2n5zv7dhw")))

(define-public crate-blockscout-service-launcher-0.7.0 (c (n "blockscout-service-launcher") (v "0.7.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)))) (h "09xvcnmbw1gdjc8rv53bwq464iqncnx05637dhfcqjkfzc5pdk91") (f (quote (("database-0_11" "sea-orm-0_11" "sea-orm-migration-0_11" "database") ("database-0_10" "sea-orm-0_10" "sea-orm-migration-0_10" "database") ("database" "url"))))))

(define-public crate-blockscout-service-launcher-0.7.1 (c (n "blockscout-service-launcher") (v "0.7.1") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)))) (h "0rqymgvqwaygbkkp72rr7lk3zqlwwhpnh9nz3p4qxy24zy5ilanp") (f (quote (("database-0_11" "sea-orm-0_11" "sea-orm-migration-0_11" "database") ("database-0_10" "sea-orm-0_10" "sea-orm-migration-0_10" "database") ("database" "url"))))))

(define-public crate-blockscout-service-launcher-0.8.0 (c (n "blockscout-service-launcher") (v "0.8.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r ">=0.8, <0.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)))) (h "1n02rgxs9dvg3xnpy22s4g0mpzwfwjvmjdp3s2gl0ijafci91z0q") (f (quote (("default" "launcher" "tracing")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:tracing-opentelemetry" "dep:tracing-subscriber") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:anyhow" "dep:futures" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.9.0 (c (n "blockscout-service-launcher") (v "0.9.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r ">=0.8, <0.11") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)))) (h "095a00b952ixpn64sd87m0hc0rifkg92azdbb9isz7x43hri49b6") (f (quote (("default" "launcher" "tracing")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:tracing-opentelemetry" "dep:tracing-subscriber") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:anyhow" "dep:config" "dep:futures" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.10.0 (c (n "blockscout-service-launcher") (v "0.10.0") (d (list (d (n "actix-cors") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.8.0") (o #t) (d #t) (k 0) (p "blockscout-tracing-actix-web")) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0mj8y8fc67b91y2m9kwc68rdgvlzhiz1n5190pa1f5pwvnmmalsl") (f (quote (("default" "launcher" "tracing" "actix-request-id") ("actix-request-id")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:serde_json" "dep:tracing" "dep:tracing-opentelemetry" "dep:tracing-subscriber" "dep:uuid") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:actix-cors" "dep:anyhow" "dep:config" "dep:futures" "dep:once_cell" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing" "dep:tracing-actix-web") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.10.1 (c (n "blockscout-service-launcher") (v "0.10.1") (d (list (d (n "actix-cors") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.8.0") (o #t) (d #t) (k 0) (p "blockscout-tracing-actix-web")) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1bz0sc2ig9iqgg5mwb0k76i3d24h4hr2nnsgi0vfwxza6hm7vr49") (f (quote (("default" "launcher" "tracing" "actix-request-id") ("actix-request-id")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:serde_json" "dep:tracing" "dep:tracing-opentelemetry" "dep:tracing-subscriber" "dep:uuid") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:actix-cors" "dep:anyhow" "dep:config" "dep:futures" "dep:once_cell" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing" "dep:tracing-actix-web") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.10.2 (c (n "blockscout-service-launcher") (v "0.10.2") (d (list (d (n "actix-cors") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.8.0") (o #t) (d #t) (k 0) (p "blockscout-tracing-actix-web")) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1zyymfiabzdwmpwqmgmy1p6x0bml63vr6rxjlh5ybbyapksg0l6c") (f (quote (("default" "launcher" "tracing" "actix-request-id") ("actix-request-id")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:serde_json" "dep:tracing" "dep:tracing-opentelemetry" "dep:tracing-subscriber" "dep:uuid") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:actix-cors" "dep:anyhow" "dep:config" "dep:futures" "dep:once_cell" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing" "dep:tracing-actix-web") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.11.0 (c (n "blockscout-service-launcher") (v "0.11.0") (d (list (d (n "actix-cors") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "json_dotpath") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.8.0") (o #t) (d #t) (k 0) (p "blockscout-tracing-actix-web")) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0hxmhwn6jm7iab3qnsfr8mifcw06zw18f8906r63gchn3a7504n2") (f (quote (("default" "launcher" "tracing" "actix-request-id") ("actix-request-id")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:serde_json" "dep:tracing" "dep:tracing-opentelemetry" "dep:tracing-subscriber" "dep:uuid") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:actix-cors" "dep:anyhow" "dep:config" "dep:futures" "dep:once_cell" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing" "dep:tracing-actix-web") ("env-collector" "dep:anyhow" "dep:config" "dep:serde" "dep:serde_json" "dep:regex" "dep:json_dotpath") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

(define-public crate-blockscout-service-launcher-0.11.1 (c (n "blockscout-service-launcher") (v "0.11.1") (d (list (d (n "actix-cors") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "actix-web-prom") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "json_dotpath") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sea-orm-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm")) (d (n "sea-orm-migration-0_10") (r "^0.10") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_11") (r "^0.11") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "sea-orm-migration-0_12") (r "^0.12.2") (o #t) (d #t) (k 0) (p "sea-orm-migration")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.8.0") (o #t) (d #t) (k 0) (p "blockscout-tracing-actix-web")) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1qs04r7mhvpk9zw29r3va02lvf158pghxd05ks78c7cpma1h67rh") (f (quote (("default" "launcher" "tracing" "actix-request-id") ("actix-request-id")))) (s 2) (e (quote (("tracing" "dep:anyhow" "dep:opentelemetry" "dep:opentelemetry-jaeger" "dep:serde" "dep:serde_json" "dep:tracing" "dep:tracing-opentelemetry" "dep:tracing-subscriber" "dep:uuid") ("test-server" "launcher" "dep:reqwest") ("test-database" "database" "dep:keccak-hash") ("launcher" "dep:actix-web" "dep:actix-web-prom" "dep:actix-cors" "dep:anyhow" "dep:config" "dep:futures" "dep:once_cell" "dep:prometheus" "dep:serde" "dep:tokio" "dep:tonic" "dep:tracing" "dep:tracing-actix-web") ("env-collector" "dep:anyhow" "dep:config" "dep:serde" "dep:serde_json" "dep:regex" "dep:json_dotpath") ("database-0_12" "database" "dep:sea-orm-0_12" "dep:sea-orm-migration-0_12") ("database-0_11" "database" "dep:sea-orm-0_11" "dep:sea-orm-migration-0_11") ("database-0_10" "database" "dep:sea-orm-0_10" "dep:sea-orm-migration-0_10") ("database" "dep:anyhow" "dep:cfg-if" "dep:tracing" "dep:url"))))))

