(define-module (crates-io bl st blstrs_plus) #:use-module (crates-io))

(define-public crate-blstrs_plus-0.8.0 (c (n "blstrs_plus") (v "0.8.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.4") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "0lp864b2f1z540iyb7hllxd8zs95mjifrms299wj6mhdn2slr348") (f (quote (("portable" "blst/portable") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.1 (c (n "blstrs_plus") (v "0.8.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.4") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "123nzhbvnvi5dnv49jhq6dfgrcj3zglx0yzrqink6jgvyl2vvbs9") (f (quote (("portable" "blst/portable") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.2 (c (n "blstrs_plus") (v "0.8.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.4") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1yb1fkqf1iynj9jwwmjn57c1rmbhbwn6j2x2ldhr3p6m8vc1jlv1") (f (quote (("portable" "blst/portable") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.3 (c (n "blstrs_plus") (v "0.8.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.4") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1315xfmpzr391jrpb2sghav0fk80kfgwgk1sdvqps404jxx86b1i") (f (quote (("portable" "blst/portable") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.4 (c (n "blstrs_plus") (v "0.8.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.4") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "141d52ld941dgmyax427kjzv0xdxsf71r2mp6kpsyfvmjchcqjsx") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.5 (c (n "blstrs_plus") (v "0.8.5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.5") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "11avs83a1r7ag5ynxyzj2hizy3gl81lj52i5qrb1383a338a9gpk") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.6 (c (n "blstrs_plus") (v "0.8.6") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8.5") (d #t) (k 2)) (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0vnxk487x5frw7q8a77xxdb8ax8syn7k9gb8x2qxsb5wl4jn0ig3") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.7 (c (n "blstrs_plus") (v "0.8.7") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0snmdl0k3sk36hsq1ani99c3mxcpfkhsprzh351gvyc2qknfi67p") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.8 (c (n "blstrs_plus") (v "0.8.8") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1qgjxzqx4z4ff96dswzvg0v4n3jzbk824riifmc8gppsmpr8jq7v") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.9 (c (n "blstrs_plus") (v "0.8.9") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0h7n7c7bha4wyzkjqacg9nivn32db724vxz7daf7k7j3mbd7fmqa") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.10 (c (n "blstrs_plus") (v "0.8.10") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1svdcz2p3naq87m7clvakm8rbzs7g3nrlayb4nb1gs0ivdqarki4") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.11 (c (n "blstrs_plus") (v "0.8.11") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0fib2abh3qwbd0i2cxsxn4l9qr480ncwqh2cv3c4hwnj84bzg427") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.12 (c (n "blstrs_plus") (v "0.8.12") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16bymqm0ypd7mf4dllkdjwmbgd6ab0nrckq93l3vc7jyd0rn43wk") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench")))) (y #t)))

(define-public crate-blstrs_plus-0.8.13 (c (n "blstrs_plus") (v "0.8.13") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1a93hyv568kkkzjp1m6a9snmldfrs8fq6fxnpv0a6725jkjcpwsg") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.14 (c (n "blstrs_plus") (v "0.8.14") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "10n91v97yn2wfr7rk3am1afx9zxrfp6zwy03rmgpx8hh8mbwmha6") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.15 (c (n "blstrs_plus") (v "0.8.15") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0jjwlg0v9l4ydylivfpvqnizpl2qiip4wnfn25j5ak6gav5cqz29") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

(define-public crate-blstrs_plus-0.8.16 (c (n "blstrs_plus") (v "0.8.16") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bls12_381_plus") (r "^0.8") (d #t) (k 2)) (d (n "blst") (r "=0.3.11") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat"))) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ah5c3fgr86v7znkys4mm15d1g8smk26aih1cch9iivysjzbcx82") (f (quote (("portable" "blst/portable") ("hashing" "elliptic-curve/hash2curve") ("default" "hashing" "serde") ("__private_bench"))))))

