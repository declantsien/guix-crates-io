(define-module (crates-io bl st blstrs) #:use-module (crates-io))

(define-public crate-blstrs-0.1.0 (c (n "blstrs") (v "0.1.0") (d (list (d (n "blst") (r "^0.2.0") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "187wr5ls2azk1wcq0l41pv3lf55afvc5mnc3g5611xr2brrq8hls") (f (quote (("default"))))))

(define-public crate-blstrs-0.2.0 (c (n "blstrs") (v "0.2.0") (d (list (d (n "blst") (r "^0.3.1") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "06ws0j23iz1kl77rzk2h0pryk9pv82xc6fab5kg2pq7z1gkmj4yy") (f (quote (("default"))))))

(define-public crate-blstrs-0.2.1 (c (n "blstrs") (v "0.2.1") (d (list (d (n "blst") (r "=0.3.2") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "09irhcckq1m6sbrm6v8nnk4h1vww50im90vsmajasll4dglwx6s8") (f (quote (("default"))))))

(define-public crate-blstrs-0.1.1 (c (n "blstrs") (v "0.1.1") (d (list (d (n "blst") (r "^0.2.0") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "07rqji4bislll4s76m5x4gx1ys3k1f7sac7s0gc6ch0kbrkjf8kh") (f (quote (("default"))))))

(define-public crate-blstrs-0.1.2 (c (n "blstrs") (v "0.1.2") (d (list (d (n "blst") (r "^0.2.0") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "1vvvxqyk84b6las9bhc4gyfsk08hcdpwsq1v4a94jy7bzhmrs40b") (f (quote (("default"))))))

(define-public crate-blstrs-0.1.3 (c (n "blstrs") (v "0.1.3") (d (list (d (n "blst") (r "^0.2.0") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "09ys7ps0iygn1v6cnrkd3z9fvrk3jdym01vpv87s18yarr7w8wip") (f (quote (("portable" "blst/portable") ("default"))))))

(define-public crate-blstrs-0.2.2 (c (n "blstrs") (v "0.2.2") (d (list (d (n "blst") (r "=0.3.3") (d #t) (k 0)) (d (n "fff") (r "^0.2.3") (d #t) (k 0)) (d (n "groupy") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "1b416x970j3zirjnghf2dm1jp1h3sr1c57s984dx8prsahp8rxzc") (f (quote (("portable" "blst/portable") ("default"))))))

(define-public crate-blstrs-0.3.0 (c (n "blstrs") (v "0.3.0") (d (list (d (n "blst") (r "=0.3.3") (d #t) (k 0)) (d (n "fff") (r "^0.3.0") (d #t) (k 0)) (d (n "groupy") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "1irr52phlblwnwwpmpw68jlxv17qvw2bwibrvr1ff32jxrixmn2k") (f (quote (("portable" "blst/portable") ("default"))))))

(define-public crate-blstrs-0.3.1 (c (n "blstrs") (v "0.3.1") (d (list (d (n "blst") (r "=0.3.3") (d #t) (k 0)) (d (n "fff") (r "^0.3.0") (d #t) (k 0)) (d (n "groupy") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)))) (h "0m15pfx14b88ya6yws91ykm8qyzw1wd6ik799argb5i1avzjjnx4") (f (quote (("portable" "blst/portable") ("default"))))))

(define-public crate-blstrs-0.4.0 (c (n "blstrs") (v "0.4.0") (d (list (d (n "blst") (r "=0.3.5") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (d #t) (k 0)) (d (n "group") (r "^0.11") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.21") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "1c2brcvx073p8ala40yjjgy0rdc6vyw9iifhwkyvvs1wj9955fsr") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.4.1 (c (n "blstrs") (v "0.4.1") (d (list (d (n "blst") (r "=0.3.6") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (d #t) (k 0)) (d (n "group") (r "^0.11") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.21") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "0qjglxxdw8ghfns118gx8m60b1jc7ncqr22fql8h47l3jmwxz5b4") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.4.2 (c (n "blstrs") (v "0.4.2") (d (list (d (n "blst") (r "=0.3.7") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (d #t) (k 0)) (d (n "group") (r "^0.11") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.21") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "0xdlcaxwg12q5rk4q2dm9g098vhx7z36c4ciwf6jz585r6w5nkk6") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.5.0 (c (n "blstrs") (v "0.5.0") (d (list (d (n "blst") (r "=0.3.9") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (d #t) (k 0)) (d (n "group") (r "^0.12") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "0nf4cvs4a9fsn3jd7iyhihripfalrrs6hkyi7dkjfwc1am7b5zsh") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.6.0 (c (n "blstrs") (v "0.6.0") (d (list (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (d #t) (k 0)) (d (n "group") (r "^0.12") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "0sk25qrmlmnyirhpl1rmfd739v1yk0qh6q4vm1fb7mb6gs60vjzi") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.6.1 (c (n "blstrs") (v "0.6.1") (d (list (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (d #t) (k 0)) (d (n "group") (r "^0.12") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "1w3xrd6fcdq38pxipmx7wg9akar2z624pprycdqnjw19jhx6zjry") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

(define-public crate-blstrs-0.7.0 (c (n "blstrs") (v "0.7.0") (d (list (d (n "blst") (r "=0.3.10") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "052vr7f1i2dw3hbvssshh3l79whc8f2bh51637q72cprnz69y51k") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench")))) (r "1.56.1")))

(define-public crate-blstrs-0.7.1 (c (n "blstrs") (v "0.7.1") (d (list (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "group") (r "^0.13") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.23") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "0afg9l66bbg6m8hjdwvwbcmf5i8j1q8y8q5lqylg9vpvzvb8x2ks") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench")))) (r "1.56.1")))

(define-public crate-blstrs-0.6.2 (c (n "blstrs") (v "0.6.2") (d (list (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (d #t) (k 0)) (d (n "group") (r "^0.12") (f (quote ("tests"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)))) (h "1ggfbm8rvjxqlr2c8sifz9db6sgf92wzy2aacvmh5kif6m5nkwqz") (f (quote (("portable" "blst/portable") ("gpu" "ec-gpu") ("default" "serde") ("__private_bench"))))))

