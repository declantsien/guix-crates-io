(define-module (crates-io bl ob blobary) #:use-module (crates-io))

(define-public crate-blobary-0.1.0 (c (n "blobary") (v "0.1.0") (d (list (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "libflate") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (o #t) (d #t) (k 0)))) (h "0l8ghlxdv4c9imzpwzj5x3mwyim27kpxv78668rya87pl9phhmdn") (f (quote (("default" "gzip" "lz4" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("lz4" "dep:lz4_flex") ("gzip" "dep:libflate")))) (r "1.73")))

(define-public crate-blobary-0.1.1 (c (n "blobary") (v "0.1.1") (d (list (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "libflate") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (o #t) (d #t) (k 0)))) (h "1pgm060nwwsybinninb0s4acr0198x63kwg2m7f62s6vcbqxvhjw") (f (quote (("default" "gzip" "lz4" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("lz4" "dep:lz4_flex") ("gzip" "dep:libflate")))) (r "1.73")))

(define-public crate-blobary-0.2.0 (c (n "blobary") (v "0.2.0") (d (list (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "libflate") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (o #t) (d #t) (k 0)))) (h "0xqpr6jbwcrrh7fq3wyjq74sq2w3klzc42m8asc2jzsiwkr9zmj2") (f (quote (("default" "gzip" "lz4" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("lz4" "dep:lz4_flex") ("gzip" "dep:libflate")))) (r "1.73")))

(define-public crate-blobary-0.3.0 (c (n "blobary") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7.4") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("mmap" "neon" "rayon" "zeroize"))) (d #t) (k 0)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cap-std") (r "^2.0.0") (d #t) (k 0)) (d (n "cap-tempfile") (r "^2.0.0") (d #t) (k 0)) (d (n "infer") (r "^0.15.0") (o #t) (k 0)) (d (n "libflate") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.3") (f (quote ("keep-alive" "tls-rustls"))) (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "rust-s3") (r "^0.33.0") (f (quote ("sync-rustls-tls"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.11") (d #t) (k 0)) (d (n "zerocopy-derive") (r "^0.7.11") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "0s5fb0855d42y2ky2mfqwxrdy0282ch02nix8irrvszfr9qxvxk5") (f (quote (("default" "base58" "encrypt" "gzip" "lz4" "magic" "redis" "s3" "sqlite" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("sqlite" "dep:rusqlite") ("s3" "dep:rust-s3") ("redis" "dep:redis") ("magic" "dep:infer") ("lz4" "dep:lz4_flex") ("gzip" "dep:libflate") ("encrypt" "dep:zeroize") ("base58" "dep:bs58")))) (r "1.73")))

