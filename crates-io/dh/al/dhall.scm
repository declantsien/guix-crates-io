(define-module (crates-io dh al dhall) #:use-module (crates-io))

(define-public crate-dhall-0.1.0 (c (n "dhall") (v "0.1.0") (d (list (d (n "abnf_to_pest") (r "^0.1.2") (d #t) (k 1)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "1lbxm1zcha061w9xla65jpb1jrn6qbks3r6y6pxrb21l3yk3yv4i")))

(define-public crate-dhall-0.1.1 (c (n "dhall") (v "0.1.1") (d (list (d (n "abnf_to_pest") (r "^0.1.2") (d #t) (k 1)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "0i58k9vqchd0hl8a6p1cqfb2gkz5rf4zr3r0wxmb5xqsczz7bhsl")))

(define-public crate-dhall-0.2.0 (c (n "dhall") (v "0.2.0") (d (list (d (n "abnf_to_pest") (r "^0.2.0") (d #t) (k 1)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "1nmgck20dww2id722a70n389ds235ajxww64nblix2kyb5zqnm0z")))

(define-public crate-dhall-0.2.1 (c (n "dhall") (v "0.2.1") (d (list (d (n "abnf_to_pest") (r "^0.2.0") (d #t) (k 1)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "1nbikx2f6nxzrrgkk7k0hshqb6ylvsslmxbjii5iyc9cc5ch7ybd")))

(define-public crate-dhall-0.3.0 (c (n "dhall") (v "0.3.0") (d (list (d (n "abnf_to_pest") (r "^0.2.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "0cnc0d2vgdj5dvg8na6dv6syhh7kasndshcghkg3vkqvlx9r9983")))

(define-public crate-dhall-0.4.0 (c (n "dhall") (v "0.4.0") (d (list (d (n "abnf_to_pest") (r "^0.2.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "1d66kn4ncg8lq63pj141xhy8mwvq2ldcj2c7dbkm55vdnmlnwfqg")))

(define-public crate-dhall-0.5.0 (c (n "dhall") (v "0.5.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "19fmamhpc44br4h8xvkr647adljpp1l8g19cxg0m83704xq78cwq")))

(define-public crate-dhall-0.5.1 (c (n "dhall") (v "0.5.1") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "18lnf3kcbjbjlp8l9dijh6jy8cfpfw3j77hg9lkkffdwhwmxzmlx")))

(define-public crate-dhall-0.5.2 (c (n "dhall") (v "0.5.2") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "0rab6xhspbcsvqq4sl1nk3mj62b33knan496y9xdkl5kck4nwvhz")))

(define-public crate-dhall-0.5.3 (c (n "dhall") (v "0.5.3") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "blocking") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "08rgdq6ws4gh8p1l9h3x70kwzmhqmvgxranjcvsgkm6xwhc9ia69")))

(define-public crate-dhall-0.6.0 (c (n "dhall") (v "0.6.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04imyr8cfp2axzw0l7r458lwqzpj3wq6ib4xji353xwsrb4j9572")))

(define-public crate-dhall-0.7.0 (c (n "dhall") (v "0.7.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "120gwa4hqp5240qm0wbysjk3vdfk64qisbq8l3n5jrwrqi0aa6gi")))

(define-public crate-dhall-0.7.2 (c (n "dhall") (v "0.7.2") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09l7kdwbia10ljl02g8a7ban9mp07hxgqyn2fj659xadkg8vzmzd") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.7.4 (c (n "dhall") (v "0.7.4") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0i52h6p7hfhn4xr8ig2nmf8jdlls8bsjaw13mr68i5xw2cpxqkzj") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.8.0 (c (n "dhall") (v "0.8.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.7.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 1)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12bj20cf7xn8n57yb1451sczzig57cbgaidw9w3fzhhnpcmamqm8") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.9.0 (c (n "dhall") (v "0.9.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1l5bdww4saip5gr3y3ik9w3na75wykwhnh53l83rm65kq9x0r4x7") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.10.0 (c (n "dhall") (v "0.10.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "elsa") (r "^1.3.2") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1s2i3l00zwfgaq2wma6wsbbljlkdz2b3ckpj2264q4j8k2flvp7h") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.10.1 (c (n "dhall") (v "0.10.1") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "elsa") (r "^1.3.2") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.0") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0i97h06vm1r8aaivqdfgs4i0a21ir11gwcczpbafvli4i9j7nzas") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.11.0 (c (n "dhall") (v "0.11.0") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "elsa") (r "^1.3.2") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.1") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jjbpm5l73vf20i9dddhr8sbby7vl47q8z4wm0ppcipi37k3yj29") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.11.1 (c (n "dhall") (v "0.11.1") (d (list (d (n "abnf_to_pest") (r "^0.5.0") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "elsa") (r "^1.3.2") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.1") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dfq0vgik9wywckf5j8wyjdcr3jayancfj29rlbdpa8wc94fx4wh") (f (quote (("default" "reqwest"))))))

(define-public crate-dhall-0.12.0 (c (n "dhall") (v "0.12.0") (d (list (d (n "abnf_to_pest") (r "^0.5.1") (d #t) (k 1)) (d (n "annotate-snippets") (r "^0.9.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.2") (d #t) (k 2)) (d (n "elsa") (r "^1.3.2") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.5.0") (d #t) (k 2)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "half"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_consume") (r "^1.1") (d #t) (k 0)) (d (n "pest_generator") (r "^2.1.3") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1iswsp1fb2xq3g7yci2lg4crxgn6lqjbnymkzd13d3jsw96jc9pc") (f (quote (("default" "reqwest"))))))

