(define-module (crates-io dh at dhatu) #:use-module (crates-io))

(define-public crate-dhatu-0.1.0 (c (n "dhatu") (v "0.1.0") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("full_crypto" "std"))) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "0hj2kbwi18p0mwqhdg00rayvnlf7cwmkickvqwz64nyi3379xz18") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp_keyring") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde")))) (y #t)))

(define-public crate-dhatu-0.1.1 (c (n "dhatu") (v "0.1.1") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("full_crypto" "std"))) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "0b7xr0sll03b46caa54xwry6irrx79msbzg4q0i4ynvg1b2ln4zd") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp-keyring") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde")))) (y #t)))

(define-public crate-dhatu-0.1.2 (c (n "dhatu") (v "0.1.2") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("full_crypto" "std"))) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "0nr63142bj6wx0pabsm0yj0z6jn4dgz4a9imhyhmz1rp79i13kq7") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp-keyring") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde"))))))

(define-public crate-dhatu-0.2.0 (c (n "dhatu") (v "0.2.0") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30.0") (f (quote ("maths"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("full_crypto" "std"))) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "0v5l4alnx3lf12gd07sbml5pdnpyw0n7gx13gc0vy7vs29jrwmgh") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp-keyring" "asset_migration") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde") ("asset_migration"))))))

(define-public crate-dhatu-0.2.1 (c (n "dhatu") (v "0.2.1") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30.0") (f (quote ("maths"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("full_crypto" "std"))) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "1y6fi3mh4xpnn470crrax70h9r5p0kwflshjx44kzqczwn344961") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp-keyring" "asset_migration") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde") ("asset_migration"))))))

(define-public crate-dhatu-0.2.2 (c (n "dhatu") (v "0.2.2") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockito") (r "^1.0.2") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30.0") (f (quote ("maths"))) (d #t) (k 0)) (d (n "schnorrkel") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (o #t) (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.32.1") (f (quote ("substrate-compat"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "0mn9m7sfn2wqb5w6ab1b8qylllhrhi5622zrwgwznpm8knns2szp") (f (quote (("unstable_sp_core") ("unstable" "default" "unstable_sp_core" "subxt" "sp-keyring" "asset_migration") ("tokio") ("subxt") ("sp_keyring") ("serde") ("default" "tokio" "serde") ("asset_migration"))))))

