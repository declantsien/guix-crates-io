(define-module (crates-io dh -d dh-drone-stm32f4-utils) #:use-module (crates-io))

(define-public crate-dh-drone-stm32f4-utils-0.1.0 (c (n "dh-drone-stm32f4-utils") (v "0.1.0") (d (list (d (n "drone-core") (r "^0.12.0") (d #t) (k 0)) (d (n "drone-cortexm") (r "^0.12.0") (f (quote ("bit-band" "floating-point-unit" "memory-protection-unit"))) (d #t) (k 0)) (d (n "drone-stm32-map") (r "^0.12.0") (f (quote ("adc" "dma" "exti" "gpio" "i2c" "tim"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (k 0)))) (h "1dmp0lh7p7p34mh0ss9p1kl8xw66raj0ml2vgkchvjjp8iw7a7zx") (f (quote (("std" "drone-core/std" "drone-cortexm/std" "drone-stm32-map/std" "futures/std") ("heaptrace" "drone-core/heaptrace") ("default"))))))

(define-public crate-dh-drone-stm32f4-utils-0.1.1 (c (n "dh-drone-stm32f4-utils") (v "0.1.1") (d (list (d (n "drone-core") (r "^0.12.0") (d #t) (k 0)) (d (n "drone-cortexm") (r "^0.12.0") (f (quote ("bit-band" "floating-point-unit" "memory-protection-unit"))) (d #t) (k 0)) (d (n "drone-stm32-map") (r "^0.12.0") (f (quote ("adc" "dma" "exti" "gpio" "i2c" "tim"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (k 0)))) (h "0hd7xf54snr5zw13v8ddg50kshj4b129nq9njz5gz7n3c4kjs6wx") (f (quote (("std" "drone-core/std" "drone-cortexm/std" "drone-stm32-map/std" "futures/std") ("heaptrace" "drone-core/heaptrace") ("default"))))))

(define-public crate-dh-drone-stm32f4-utils-0.1.2 (c (n "dh-drone-stm32f4-utils") (v "0.1.2") (d (list (d (n "drone-core") (r "^0.12.0") (d #t) (k 0)) (d (n "drone-cortexm") (r "^0.12.0") (f (quote ("bit-band" "floating-point-unit" "memory-protection-unit"))) (d #t) (k 0)) (d (n "drone-stm32-map") (r "^0.12.0") (f (quote ("adc" "dma" "exti" "gpio" "i2c" "tim"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (k 0)))) (h "0h3r1gak14f8y6ph9rg1afn1lqdg23wjzimy18dyfgk6pnc7ilps") (f (quote (("std" "drone-core/std" "drone-cortexm/std" "drone-stm32-map/std" "futures/std") ("heaptrace" "drone-core/heaptrace") ("default"))))))

