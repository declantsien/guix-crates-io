(define-module (crates-io dh ar dharitri-sc-meta) #:use-module (crates-io))

(define-public crate-dharitri-sc-meta-0.0.1 (c (n "dharitri-sc-meta") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.1") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0vy9i4qp6jcbddwff8xwng5m3vdr8ah9dzlflqji4l1y4m2h5r4g") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.0.2 (c (n "dharitri-sc-meta") (v "0.0.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0p28kn2jddmijg1i5krmgkxjqmq3y4a1b0pbdxnx48igwd33lp0m")))

(define-public crate-dharitri-sc-meta-0.0.3 (c (n "dharitri-sc-meta") (v "0.0.3") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.3") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0iqi5j4pgijnmkxds097kjr13pd6dqrr2ghx4zg8nsr1vj4gry0b")))

(define-public crate-dharitri-sc-meta-0.0.4 (c (n "dharitri-sc-meta") (v "0.0.4") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.4") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1b578s1b5n1rxyfl8sdfmz3c8pj8qpb4sp0lah0ds9784h4yf4vd")))

(define-public crate-dharitri-sc-meta-0.0.5 (c (n "dharitri-sc-meta") (v "0.0.5") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.5") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "054j2k9a3kidr8a1g5jys7lywqr34csvzlxqi77kjdjvfddyky52")))

(define-public crate-dharitri-sc-meta-0.0.6 (c (n "dharitri-sc-meta") (v "0.0.6") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.6") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1bzc2wwwbd4m1jqc2gy5mhyixdl1sa4rkkvfqi81nmhg5c4n4qh0")))

(define-public crate-dharitri-sc-meta-0.0.7 (c (n "dharitri-sc-meta") (v "0.0.7") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.7") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1c5pzp7iq4a3v1mahf9x3q60z7ai4nd0pnbwc6n6wrl1cibl5n4c")))

(define-public crate-dharitri-sc-meta-0.0.8 (c (n "dharitri-sc-meta") (v "0.0.8") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.8") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0hq8vxs4ps8mppc7ja0x1q42jmm59m7dcvj5icyxzb1vs7rzwiha")))

(define-public crate-dharitri-sc-meta-0.0.9 (c (n "dharitri-sc-meta") (v "0.0.9") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.0.9") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "19w9xxmcakm1v0h87ydk1l20vzr3rjyx7mg41ids328zmanyyhai")))

(define-public crate-dharitri-sc-meta-0.1.0 (c (n "dharitri-sc-meta") (v "0.1.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0k23znqzvxw0j0hhm4g4azhf64hnm37vlfdpgbd4y05hhm5s65mc")))

(define-public crate-dharitri-sc-meta-0.1.1 (c (n "dharitri-sc-meta") (v "0.1.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "094hfpd5fv2yn2k02fh0gcr1m8s5z99zhwmq7wdvlfwhb6bfszh6")))

(define-public crate-dharitri-sc-meta-0.1.2 (c (n "dharitri-sc-meta") (v "0.1.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0i5q4prf1dr7s7irg1399r267j86qgk9wkqb0k0qfqix606dkzj1")))

(define-public crate-dharitri-sc-meta-0.1.3 (c (n "dharitri-sc-meta") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.3") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0z7pag5ibr7npd1sl1j0mbpcy37plgsw2v371ykv6nimq19sryc6") (f (quote (("template-test"))))))

(define-public crate-dharitri-sc-meta-0.1.4 (c (n "dharitri-sc-meta") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.4") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0wzfdhxn4vafahr9l5l7c6bsm7qkbhzsa11z3p6xm2y7r4kx7j2q") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.1.5 (c (n "dharitri-sc-meta") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.5") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0rrc0lqp8jh67xzfn2b4gc6vxbv85bzyp9ai7a8nalmkjsn2jh94") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.1.6 (c (n "dharitri-sc-meta") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.6") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0drih370y68dbmivln1k68fyq2hly0p2ri6aqb8x901123ih7w9g") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.1.7 (c (n "dharitri-sc-meta") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.7") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0l8nha2yriw5jvv09jxv698qyi3i94lsps3g554yg5bcmnhxj5w7") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.1.8 (c (n "dharitri-sc-meta") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.8") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "19bz9zlz99aa4xpg21k2hgdlwy44qsq0jlij7v3xg3nxp034kjbc") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.1.9 (c (n "dharitri-sc-meta") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.1.9") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0b19iabcnm8xyca6rjryaipwx9lzsqblab02aaixqva89dqryhbj") (f (quote (("template-test-released") ("template-test-current"))))))

(define-public crate-dharitri-sc-meta-0.2.0 (c (n "dharitri-sc-meta") (v "0.2.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.2.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0k45dz02y56lvm5my20cgzhiq5i8h9xb8wpv76qy7bfiq9lhy3vm")))

(define-public crate-dharitri-sc-meta-0.10.9 (c (n "dharitri-sc-meta") (v "0.10.9") (d (list (d (n "dharitri-sc") (r "=0.10.9") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1xdadwm33f637c7chcmx65g3hgsaxv162n9fv3wx2llf1c5finlk")))

(define-public crate-dharitri-sc-meta-0.11.0 (c (n "dharitri-sc-meta") (v "0.11.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1k56s64l95vk3ncxqc2h1xcv9k1w9k4nwisgik5kmd9zr64wxk4i")))

(define-public crate-dharitri-sc-meta-0.11.1 (c (n "dharitri-sc-meta") (v "0.11.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1jyb0xg40jpwh73g21c13mqbczpilcgkq8k3dqxik7vmi4hj3qr1")))

(define-public crate-dharitri-sc-meta-0.11.2 (c (n "dharitri-sc-meta") (v "0.11.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1gdysx7kfaif8727f5bb2cqdbcwkwdds7i0w64a53m3yx18pp6m3")))

(define-public crate-dharitri-sc-meta-0.11.3 (c (n "dharitri-sc-meta") (v "0.11.3") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.3") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1hv8d1bfhczlk6nzfc2sh1206jfhd5rac6xm8984d80g9dflx622")))

(define-public crate-dharitri-sc-meta-0.11.4 (c (n "dharitri-sc-meta") (v "0.11.4") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.4") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1p1nmbixx3d2716vr1fxqqbqy6gvjywqklmk3av516isykcg1nk9")))

(define-public crate-dharitri-sc-meta-0.11.5 (c (n "dharitri-sc-meta") (v "0.11.5") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.5") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "00iv568qbav504aaxj5im34s6ss1zv7f0nyi011gq5rbi6yhvxb6") (y #t)))

(define-public crate-dharitri-sc-meta-0.11.6 (c (n "dharitri-sc-meta") (v "0.11.6") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.6") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "160mq8ri9dr0yc2hmfddi7iknrklwp12gylp2bc66i2c1sf3y0cs") (y #t)))

(define-public crate-dharitri-sc-meta-0.11.7 (c (n "dharitri-sc-meta") (v "0.11.7") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.7") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "15mjxsdrdv9lhwbcbdrh1vsmf3ics9m6m77wgyjb9n5bh68hgimx") (y #t)))

(define-public crate-dharitri-sc-meta-0.11.8 (c (n "dharitri-sc-meta") (v "0.11.8") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.8") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "07b1d6vkif87vmiyczwr4y0q2bzs4pgf4zmvybwjpmvxhd9718mn") (y #t)))

(define-public crate-dharitri-sc-meta-0.11.9 (c (n "dharitri-sc-meta") (v "0.11.9") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.11.9") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0zxmhf8fzwx0q2g04gh2p9x20kp44qj0r399a0b9mx1gnx3sq7cw") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.0 (c (n "dharitri-sc-meta") (v "0.12.0") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.0") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0vpfrsmf0i74v0apjhqfy2d9x6s2vhszf0k84f0xqwxaxq7cjjf0") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.1 (c (n "dharitri-sc-meta") (v "0.12.1") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.1") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0lilf9l2nwdy2n84fv1xvyd1nhfw53qklvvmf25wyy41a3j7crpp") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.2 (c (n "dharitri-sc-meta") (v "0.12.2") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.2") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "18j35vlvb9wvxvrj18njwc6scag8mb7frmswnh6xqflj37h7g18y") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.3 (c (n "dharitri-sc-meta") (v "0.12.3") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.3") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1vn4sb5hhw9g8ra48qpphpsw7px2ga4gndclka5mabrpplkryp4x") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.4 (c (n "dharitri-sc-meta") (v "0.12.4") (d (list (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.4") (f (quote ("alloc" "num-bigint" "promises" "big-float"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1j69f2gaz4mrvd2n9bxj7awnlpbr02xhgf6yqyw1wrbwg5363l1j") (y #t)))

(define-public crate-dharitri-sc-meta-0.12.5 (c (n "dharitri-sc-meta") (v "0.12.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.5") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0mqgl4di6lmflflhljmn3fj81vk1fq9k5w7h2j2l1vg4n4k2qpqa") (f (quote (("template-test")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.12.6 (c (n "dharitri-sc-meta") (v "0.12.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.6") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "16hp00vzmd50gmif7z3kmffmpcymixvx6rrjawmg242bsxgawsb5") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.12.7 (c (n "dharitri-sc-meta") (v "0.12.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.7") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "06pvqfvdzyma6g496m5xhx3r7bxgzr0g0dawx6djkbmq3v7rmhx4") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.12.8 (c (n "dharitri-sc-meta") (v "0.12.8") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.8") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "100ll5f4v8208mlj7020vnnx5mqnqzxsz2q3h62lqg8xgpi04n09") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.12.9 (c (n "dharitri-sc-meta") (v "0.12.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.12.9") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0ad0zfdgqc68l399k0dmb7jp6r4lvx3034sv6k07bp5jmp76rm42") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.0 (c (n "dharitri-sc-meta") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.0") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "0phdzp17g6h38f6x63nnrm9dsyjqz2prhdnralxix9pvbdrpl3sm") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.1 (c (n "dharitri-sc-meta") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^4.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.1") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.67") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (d #t) (k 0)))) (h "1mdnllg00aj93hnki3gj0n5jbpwcpz36ajwd7lc9q3mx8sl2ipsw") (f (quote (("template-test-released") ("template-test-current")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.2 (c (n "dharitri-sc-meta") (v "0.13.2") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.2") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "029h6dlwhh74ffxh67cd5iq10gmabwapdk6908cxx11h8c73dcxb") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.3 (c (n "dharitri-sc-meta") (v "0.13.3") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.3") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0c72g6sm43gpy5b156yy7g55z17swh65l3rgmkgmsrl82iz0qjvy") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone"))))))

(define-public crate-dharitri-sc-meta-0.13.4 (c (n "dharitri-sc-meta") (v "0.13.4") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.4") (f (quote ("alloc" "num-bigint" "promises"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "14yhwlr5mfr2yap03k4ji30lmn9lzn0665cxbqcfcmgaycvghfwl") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.5 (c (n "dharitri-sc-meta") (v "0.13.5") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.5") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1jys1xi0h7x8cfd0nbnq7b4q9rpxpwjrng7176k9zdfwardijhwy") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.6 (c (n "dharitri-sc-meta") (v "0.13.6") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.6") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1ld6w96sysyhvzmxkmbmdksrn0fjgrpmigny3mw37q1j232h395b") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.7 (c (n "dharitri-sc-meta") (v "0.13.7") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.7") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1c4kyw25knjad88mz62q6f7l4y2xpk71hcjr0ms36h3ld60kgj1r") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.8 (c (n "dharitri-sc-meta") (v "0.13.8") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.8") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0cqb7likfq6n2ygba1dax40xc18qa9f3i4wqqyacx3b3f15cqq0q") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.13.9 (c (n "dharitri-sc-meta") (v "0.13.9") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.13.9") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1f234zbh7dm3bm94bi04rhyv9f4bml4nh6lpgkkac560qc73zlph") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.14.0 (c (n "dharitri-sc-meta") (v "0.14.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.14.0") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1jc5y7d18zlh77ivlq011rm93caslscw98j0hynmr79c4b9sbj0l") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

(define-public crate-dharitri-sc-meta-0.14.1 (c (n "dharitri-sc-meta") (v "0.14.1") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "copy_dir") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "dharitri-sc") (r "=0.14.1") (f (quote ("alloc" "num-bigint"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "ruplacer") (r "^0.8.1") (o #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2.71") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "12c21n0c0wkympc6wl8c6yn351mnipn50bp9v57r4gs3sjcccnwk") (f (quote (("template-test-released") ("template-test-current") ("standalone" "ruplacer" "reqwest" "zip" "copy_dir" "pathdiff" "common-path") ("default" "standalone")))) (y #t)))

