(define-module (crates-io dh ar dharitri-sc-derive) #:use-module (crates-io))

(define-public crate-dharitri-sc-derive-0.0.1 (c (n "dharitri-sc-derive") (v "0.0.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1dqq2ha0aafpmcnkwsnwww57xwz3xbizkijrckd4xxdinhbn8cgj") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.2 (c (n "dharitri-sc-derive") (v "0.0.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0l1zxchd5q5rnvjawvz05d94ymg4a7hb0qcgi9cwxrncvrrk9hbn") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.3 (c (n "dharitri-sc-derive") (v "0.0.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "14rmi5niyl47l2saa9vjkwn5br3nl4dhvxxwixz8wcp5dvng4p3f") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.4 (c (n "dharitri-sc-derive") (v "0.0.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0nsbx50qjs7sz700dfx9j51r4afvcc8pa53h9aphff4p4sq29n1b") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.5 (c (n "dharitri-sc-derive") (v "0.0.5") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1c1xsqj0vm3q4q2lm13cf0m8ns6k9r1h9c8xivmnxd1s05cqmhgq") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.6 (c (n "dharitri-sc-derive") (v "0.0.6") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "111f6fgspk1lnwpr9v9c5zbh0ya786nydc13frqf9569ban3pmab") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.7 (c (n "dharitri-sc-derive") (v "0.0.7") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1779j3w2z9v25lgc766gk1c5lg0xs8v76gdvk4y0q6i0zw5b1a6y") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.8 (c (n "dharitri-sc-derive") (v "0.0.8") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1ipflv83wlspw0wf8wmg098w524rnya3hmxckjqbx466fbf31g1x") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.0.9 (c (n "dharitri-sc-derive") (v "0.0.9") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0xax0r270s532b1k7cpwarm94dzbzhiz0249hs25h1z9d65w19qp") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.0 (c (n "dharitri-sc-derive") (v "0.1.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1z95nrvfwdkp3ldgxfk3dlp6s6ljpycps37la4kqcq817bha4920") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.1 (c (n "dharitri-sc-derive") (v "0.1.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0iw3d29kfpfwwkmhp4dyzrrsckp3izksfjllyml60nk8dbjpfg54") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.2 (c (n "dharitri-sc-derive") (v "0.1.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "09n7f3pz9mizdrdwgfw12ja891pz2i24sxplwvpf0i4qvbygamh9") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.3 (c (n "dharitri-sc-derive") (v "0.1.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1is8cr4fy96wb0fnsqpf00i8yz3gip0j46ib4rv7nibq40ak8dhj") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.4 (c (n "dharitri-sc-derive") (v "0.1.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1nrrc1637dnsq9401n7v3hrag6wbzdnjylizss7df8apgj7i15db") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.5 (c (n "dharitri-sc-derive") (v "0.1.5") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0vi3sr4vl3900pw95cvnq36g6149fnsiyd5cs6nalclki9pdhspd") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.6 (c (n "dharitri-sc-derive") (v "0.1.6") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "14p0cvs9c08zzlfjalk9j7pqzqngwvc4c7dflhff2a9zf9qs04gb") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.7 (c (n "dharitri-sc-derive") (v "0.1.7") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0xyqq4a5gzqj8slfpp3k6g5mwzagwjssw5wjxccazk8qdj6fspm7") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.8 (c (n "dharitri-sc-derive") (v "0.1.8") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "073d4zcsmaapjm0baf8hf6gb1bvdm1w329aar10iaqicib3jsz5c") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.1.9 (c (n "dharitri-sc-derive") (v "0.1.9") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0yqwgm2s9q42vidlnya9nsy25y0g6l27bwwzhjrrcxv823qj19k4") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.2.0 (c (n "dharitri-sc-derive") (v "0.2.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1q0xaqz1zq99dry6s2rri354lil8bxmihgdrm7car9604lanwa74") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.10.9 (c (n "dharitri-sc-derive") (v "0.10.9") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0xsbz8pr980dw88nhzz59m68l1354nymijswwpzan0dkf01sfnvg") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.0 (c (n "dharitri-sc-derive") (v "0.11.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1h8qpb9qb7pakv1wkqpa3jyx0s6xp0f2daxnap9i6k9hd2p989ap") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.1 (c (n "dharitri-sc-derive") (v "0.11.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "17k9b49rjpsnszlv2m8hqqyq5dhaycjdq02ck9c2w87nh6hxqfml") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.2 (c (n "dharitri-sc-derive") (v "0.11.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1nxs5xs0rl4r77as6gswp7rrql6n63dg75wifmxrqc3vys3x01yy") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.3 (c (n "dharitri-sc-derive") (v "0.11.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0r2szm1hwi5d0qrmrmq1m7jpdadpj6krd4vilpg5j1qhqp9m6ykn") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.4 (c (n "dharitri-sc-derive") (v "0.11.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0rkjzr4xhid1dckn4sag8g9bviaj02481cf7s5zjq968z0j8xjbs") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.11.5 (c (n "dharitri-sc-derive") (v "0.11.5") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0ani9bw0xk490yhcfa9xkfrfwmk8pch8ma2kyynwdz5d6m6774ng") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.11.6 (c (n "dharitri-sc-derive") (v "0.11.6") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0wwlwnn4d3lmn17x5hvv6kwb8awhcx736dcsyylxfg6866zb2xyk") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.11.7 (c (n "dharitri-sc-derive") (v "0.11.7") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0l2njnga8jnp3w5h653hmcglxpmzfgfsamdma7hajqrgjkx6x5aq") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.11.8 (c (n "dharitri-sc-derive") (v "0.11.8") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1dfmil0cdgj9id7ydggvcw5f7p8gsq1gwiw5a4aqxb7ljk4mlqk8") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.11.9 (c (n "dharitri-sc-derive") (v "0.11.9") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1hw9zkclaq25ii4mzhkgp3cv3z7kq5lnxkf9wk8n6pmvajxpf4yg") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.0 (c (n "dharitri-sc-derive") (v "0.12.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1f9y0dyrysyr90z62y5kcw1g1wr89fshq411s2cfmwlix20lyq15") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.1 (c (n "dharitri-sc-derive") (v "0.12.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "14xs4909c5ahlxyj6fj1djjpw9qkyabv77hrh0yx4ay8mzy9nllk") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.2 (c (n "dharitri-sc-derive") (v "0.12.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1n5y7rdiw4rwfgbv561nhp4j3diwivn735hgb5hylq03avh2z8rc") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.3 (c (n "dharitri-sc-derive") (v "0.12.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "120ddkgkahiji7a5cnsynd0wzydbakmm3j1p685hwikfdpf95qhx") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.4 (c (n "dharitri-sc-derive") (v "0.12.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0zss7ccgmq59pzn77pj1dn1bff8i0i6vb4qfgwd8dvpssrlsar9b") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.5 (c (n "dharitri-sc-derive") (v "0.12.5") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1r4w45isk6nvld6m4ikcsszxm22rvyw96mpkr8rh1ymk049psj2h") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.6 (c (n "dharitri-sc-derive") (v "0.12.6") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1x6gyvxiqka5gryaszzdvmr5crsmlm9983qg8pi2wwzjjsjkci69") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.7 (c (n "dharitri-sc-derive") (v "0.12.7") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0y5b00cnqkssdasqfpgh5n4fldcavn994xa07wl93rls60mdn5m5") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.8 (c (n "dharitri-sc-derive") (v "0.12.8") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1c9yak18qjm5nnfl33j7w01ykkzv9smh9j7s6wlwdy6nzvjgn51w") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.12.9 (c (n "dharitri-sc-derive") (v "0.12.9") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "13zqzxnc08cs8n2khx2v1hbz7allbcix8444p425b67gp2g8sxb8") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.0 (c (n "dharitri-sc-derive") (v "0.13.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1m3pxav8jjsaiji2v8g2l8m5ix6a9qg4ssf3rx6zsabp3z9rn1sd") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.1 (c (n "dharitri-sc-derive") (v "0.13.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0p2jbgr6jhvabj5m9dyr1j9j2s0aj928mlngsi53fkps0z2zc66x") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.2 (c (n "dharitri-sc-derive") (v "0.13.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "004i9pkwqzlim0x3c2qlgf64nr9rfmsj4g2mgs4snc0ix7hjg1n5") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.3 (c (n "dharitri-sc-derive") (v "0.13.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0207sayq82wa8xb0g6kqbh5yjak447i7g4bgw8h1v00p3s8m81p1") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits"))))))

(define-public crate-dharitri-sc-derive-0.13.4 (c (n "dharitri-sc-derive") (v "0.13.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^2.0.39") (d #t) (k 0)))) (h "04lb51vqkw5wf58yhjg0b3lpdd5dxaza84awqwgsjb7ybbdd2plz") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.5 (c (n "dharitri-sc-derive") (v "0.13.5") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^2.0.39") (d #t) (k 0)))) (h "0l5njpdi1imsgdj52j46ygv3xaa8vn163sikmz8ri60mbdva0151") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.6 (c (n "dharitri-sc-derive") (v "0.13.6") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.66") (d #t) (k 0)) (d (n "quote") (r "^1.0.33") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^2.0.39") (d #t) (k 0)))) (h "19z5cxg1df15687jr46wfh125hyy9s8598f7jy5jz4x1zd1z26qa") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.7 (c (n "dharitri-sc-derive") (v "0.13.7") (d (list (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proc-macro2") (r "=1.0.76") (d #t) (k 0)) (d (n "quote") (r "=1.0.35") (d #t) (k 0)) (d (n "radix_trie") (r "=0.2.1") (d #t) (k 0)) (d (n "syn") (r "=2.0.48") (d #t) (k 0)))) (h "0vg46hyq1jmlm19z90g0z90fqrkisrmd696abajpd9ramwy8a11p") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.8 (c (n "dharitri-sc-derive") (v "0.13.8") (d (list (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proc-macro2") (r "=1.0.78") (d #t) (k 0)) (d (n "quote") (r "=1.0.35") (d #t) (k 0)) (d (n "radix_trie") (r "=0.2.1") (d #t) (k 0)) (d (n "syn") (r "=2.0.48") (d #t) (k 0)))) (h "1ijiw1cxpslvvhq7q2s5aia22fn2k6znd9rv4qvd0nanypnbmc40") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.13.9 (c (n "dharitri-sc-derive") (v "0.13.9") (d (list (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proc-macro2") (r "=1.0.78") (d #t) (k 0)) (d (n "quote") (r "=1.0.35") (d #t) (k 0)) (d (n "radix_trie") (r "=0.2.1") (d #t) (k 0)) (d (n "syn") (r "=2.0.48") (d #t) (k 0)))) (h "03akjzw4f632s744v91xsriazmwcqlj7326kcylhank5w1balis3") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.14.0 (c (n "dharitri-sc-derive") (v "0.14.0") (d (list (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proc-macro2") (r "=1.0.78") (d #t) (k 0)) (d (n "quote") (r "=1.0.35") (d #t) (k 0)) (d (n "radix_trie") (r "=0.2.1") (d #t) (k 0)) (d (n "syn") (r "=2.0.48") (d #t) (k 0)))) (h "01mrpl8v7ijamfxnawfvhag9q9jgp47dg79s0bfby9v63j1mqkmh") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

(define-public crate-dharitri-sc-derive-0.14.1 (c (n "dharitri-sc-derive") (v "0.14.1") (d (list (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proc-macro2") (r "=1.0.78") (d #t) (k 0)) (d (n "quote") (r "=1.0.35") (d #t) (k 0)) (d (n "radix_trie") (r "=0.2.1") (d #t) (k 0)) (d (n "syn") (r "=2.0.48") (d #t) (k 0)))) (h "0zd98zqvkmqfjxdvk8agpy93gdzmli94anqjdzybgbfyras7d6zc") (f (quote (("default" "syn/full" "syn/parsing" "syn/extra-traits")))) (y #t)))

