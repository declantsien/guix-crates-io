(define-module (crates-io mt #{94}# mt940) #:use-module (crates-io))

(define-public crate-mt940-0.2.0 (c (n "mt940") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proptest") (r "^0.8.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skeptic") (r "^0.13") (d #t) (k 1)) (d (n "skeptic") (r "^0.13") (d #t) (k 2)) (d (n "strum") (r "^0.11") (d #t) (k 0)) (d (n "strum_macros") (r "^0.11") (d #t) (k 0)))) (h "0sbr1f8w49gzkz6fxxqh7hs8fp5945gy79rs796mn0apbr3i5f1h")))

(define-public crate-mt940-0.3.0 (c (n "mt940") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "deunicode") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proptest") (r "^0.8.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skeptic") (r "^0.13") (d #t) (k 1)) (d (n "skeptic") (r "^0.13") (d #t) (k 2)) (d (n "strum") (r "^0.11") (d #t) (k 0)) (d (n "strum_macros") (r "^0.11") (d #t) (k 0)))) (h "1kx6j6ysdp4ad416f301pj10jzyn90bdl13f0aas3c0qski8x6vn")))

(define-public crate-mt940-0.3.1 (c (n "mt940") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "deunicode") (r "^0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proptest") (r "^0.8.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skeptic") (r "^0.13") (d #t) (k 1)) (d (n "skeptic") (r "^0.13") (d #t) (k 2)) (d (n "strum") (r "^0.11") (d #t) (k 0)) (d (n "strum_macros") (r "^0.11") (d #t) (k 0)))) (h "1pngbqf29wxpri68bjffzlwgz0zydk7ik71wdprvbs559dhbpbvy")))

(define-public crate-mt940-0.3.2 (c (n "mt940") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "deunicode") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.3") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skeptic") (r "^0.13") (d #t) (k 1)) (d (n "skeptic") (r "^0.13") (d #t) (k 2)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)))) (h "1746zdkgb2m6cc6idqf1g4hzyxm77k8q87rizyms8sp6y3krc576")))

(define-public crate-mt940-1.0.0 (c (n "mt940") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "deunicode") (r "^1.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1k4gfc7ri5wkw78q05c2yvnya1sm21xmc2pr9jgl1114mmyrzxic")))

(define-public crate-mt940-1.0.1 (c (n "mt940") (v "1.0.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "deunicode") (r "^1.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "19ci1rnfdk2g2spvbbhxhsa5kfjgzh10hdvqpsismmq8wylpl7sz")))

(define-public crate-mt940-1.0.2 (c (n "mt940") (v "1.0.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "deunicode") (r "^1.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.15") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.140") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1b2glw6m4rm9fkhmks451q23kfkill8vw1wd8z62bylpw2xk9d22")))

