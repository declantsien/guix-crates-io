(define-module (crates-io bu ll bulletproofs-gadgets) #:use-module (crates-io))

(define-public crate-bulletproofs-gadgets-2.0.0 (c (n "bulletproofs-gadgets") (v "2.0.0") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 0)) (d (n "bulletproofs") (r "^2.0.0") (f (quote ("yoloproofs"))) (k 0) (p "webb-bulletproofs")) (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "curve25519-dalek") (r "^3.0.0") (f (quote ("u64_backend" "alloc"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "1yv190syrlvz640lj6d440ziji1mvl2gh6xym4h87x0km96m8c7p") (f (quote (("verify") ("std" "codec/std" "hex" "num-bigint") ("default" "std"))))))

(define-public crate-bulletproofs-gadgets-2.1.1 (c (n "bulletproofs-gadgets") (v "2.1.1") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 0)) (d (n "bulletproofs") (r "^2.0.3") (f (quote ("yoloproofs"))) (k 0) (p "webb-bulletproofs")) (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "curve25519-dalek") (r "^3.0.0") (f (quote ("u64_backend" "alloc"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("alloc"))) (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "0gibsp244sqbh4z7kn4kmdm1wbnzwm2gk5h1mx8dq85i4lysgbll") (f (quote (("verify") ("std" "rand_core/getrandom" "codec/std" "hex" "num-bigint") ("default" "std"))))))

(define-public crate-bulletproofs-gadgets-2.1.2 (c (n "bulletproofs-gadgets") (v "2.1.2") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 0)) (d (n "bulletproofs") (r "^2.0.3") (f (quote ("yoloproofs"))) (k 0) (p "webb-bulletproofs")) (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "curve25519-dalek") (r "^3.0.0") (f (quote ("u64_backend" "alloc"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("alloc"))) (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "13ff06nha8m6z03rmazhgy1zdldr165j2h74ply4prlq9409nrqk") (f (quote (("verify") ("std" "rand_core/getrandom" "codec/std" "hex" "num-bigint") ("poseidon_x5_9") ("poseidon_x5_8") ("poseidon_x5_7") ("poseidon_x5_6") ("poseidon_x5_5") ("poseidon_x5_4") ("poseidon_x5_3") ("poseidon_x5_2") ("poseidon_x3_9") ("poseidon_x3_8") ("poseidon_x3_7") ("poseidon_x3_6") ("poseidon_x3_5") ("poseidon_x3_4") ("poseidon_x3_3") ("poseidon_x3_2") ("poseidon_x17_9") ("poseidon_x17_8") ("poseidon_x17_7") ("poseidon_x17_6") ("poseidon_x17_5") ("poseidon_x17_4") ("poseidon_x17_3") ("poseidon_x17_2") ("poseidon_inverse_9") ("poseidon_inverse_8") ("poseidon_inverse_7") ("poseidon_inverse_6") ("poseidon_inverse_5") ("poseidon_inverse_4") ("poseidon_inverse_3") ("poseidon_inverse_2") ("default" "std" "poseidon_x3_6" "poseidon_x5_6" "poseidon_x17_6" "poseidon_inverse_6"))))))

