(define-module (crates-io bu nn bunny-api) #:use-module (crates-io))

(define-public crate-bunny-api-0.0.1 (c (n "bunny-api") (v "0.0.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0g3ifynvv1rx6rz7q3924nbmknnbqz7wpdlpmfxblmag649p79hz")))

(define-public crate-bunny-api-0.0.2 (c (n "bunny-api") (v "0.0.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "serde" "serde-well-known"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1nqibhpb195rz2qhshg14a1rbw3726jvx81zfnr1ns29ak017mzq")))

(define-public crate-bunny-api-0.0.3 (c (n "bunny-api") (v "0.0.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "serde" "serde-well-known"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0s7dalz6dbx5mpmlyac1k9wmzz0ilpc6bdv7vzdn28s829x0c7v3")))

(define-public crate-bunny-api-0.0.4 (c (n "bunny-api") (v "0.0.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "serde" "serde-well-known"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1pbr2gv2hr7k1lcppwr5df6jpa3vv7v6pi4873zphyfifs0snxdf") (f (quote (("default" "tracing" "tracing-subscriber"))))))

(define-public crate-bunny-api-0.0.5 (c (n "bunny-api") (v "0.0.5") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "serde" "serde-well-known"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "0jp138cdpgy86nix8402hihk1l5xqh57n7kim5mkl56rmmafpd3s") (f (quote (("default" "tracing" "tracing-subscriber"))))))

