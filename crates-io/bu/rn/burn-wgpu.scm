(define-module (crates-io bu rn burn-wgpu) #:use-module (crates-io))

(define-public crate-burn-wgpu-0.8.0 (c (n "burn-wgpu") (v "0.8.0") (d (list (d (n "burn-autodiff") (r "^0.8.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.8.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.8.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.8.0") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.8.0") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.17.0") (d #t) (k 0)))) (h "0q2s6gkynj96k0vqz9aca0p8idad3igmsk8747hlp9yijnzrx0gh") (f (quote (("default" "async") ("async"))))))

(define-public crate-burn-wgpu-0.9.0 (c (n "burn-wgpu") (v "0.9.0") (d (list (d (n "burn-autodiff") (r "^0.9.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.9.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.9.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.9.0") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.9.0") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.17.0") (d #t) (k 0)))) (h "1nip40ayi8vi6454l7d9s88m42yng3iabvg3ivjz6rszwis8dvls") (f (quote (("default" "async") ("autotune") ("async"))))))

(define-public crate-burn-wgpu-0.10.0 (c (n "burn-wgpu") (v "0.10.0") (d (list (d (n "burn-autodiff") (r "^0.10.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.10.0") (d #t) (k 0)) (d (n "burn-compute") (r "^0.10.0") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-ndarray") (r "^0.10.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.10.0") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.10.0") (f (quote ("export_tests" "benchmark"))) (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num-traits") (r "^0.2.16") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "1wa4n0h1rd5rm377maxcwr1k5arip186fizjdmjp9j8ld1kl4rfg") (f (quote (("default"))))))

(define-public crate-burn-wgpu-0.11.0 (c (n "burn-wgpu") (v "0.11.0") (d (list (d (n "burn-autodiff") (r "^0.11.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.11.0") (d #t) (k 0)) (d (n "burn-compute") (r "^0.11.0") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "burn-fusion") (r "^0.11.0") (d #t) (k 2)) (d (n "burn-ndarray") (r "^0.11.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.11.0") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.11.0") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num-traits") (r "^0.2.17") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "0jxgl1rwnbsl10nqsrj9lzxh8vag43rw1xlivw5zbljm03afycpz") (f (quote (("std") ("fusion" "burn-fusion") ("default" "autotune" "std") ("autotune"))))))

(define-public crate-burn-wgpu-0.11.1 (c (n "burn-wgpu") (v "0.11.1") (d (list (d (n "burn-autodiff") (r "^0.11.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.11.1") (d #t) (k 0)) (d (n "burn-compute") (r "^0.11.1") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-fusion") (r "^0.11.1") (d #t) (k 2)) (d (n "burn-ndarray") (r "^0.11.1") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.11.1") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.11.1") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num-traits") (r "^0.2.17") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "1v3i367vhv180wnads6ibv0pilvz3518wvfj5rpxp4gs7icglxl6") (f (quote (("std") ("fusion" "burn-fusion") ("default" "autotune" "std") ("autotune"))))))

(define-public crate-burn-wgpu-0.12.0 (c (n "burn-wgpu") (v "0.12.0") (d (list (d (n "burn-autodiff") (r "^0.12.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.12.0") (d #t) (k 0)) (d (n "burn-compute") (r "^0.12.0") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "burn-fusion") (r "^0.12.0") (d #t) (k 2)) (d (n "burn-ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.12.0") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.12.0") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num-traits") (r "^0.2.17") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "18bln3h47zw2n0czqzcf14p8hjng4y3y2hpggzy3wqmvhp4060jr") (f (quote (("std") ("fusion" "burn-fusion") ("default" "autotune" "std" "burn-compute/default") ("autotune"))))))

(define-public crate-burn-wgpu-0.12.1 (c (n "burn-wgpu") (v "0.12.1") (d (list (d (n "burn-autodiff") (r "^0.12.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-common") (r "^0.12.1") (d #t) (k 0)) (d (n "burn-compute") (r "^0.12.1") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "burn-fusion") (r "^0.12.1") (d #t) (k 2)) (d (n "burn-ndarray") (r "^0.12.1") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.12.1") (d #t) (k 0)) (d (n "burn-tensor") (r "^0.12.1") (f (quote ("export_tests"))) (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num-traits") (r "^0.2.17") (f (quote ("libm"))) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "15dfyq749rbpg9f2vc57pmv8smx9hwd0vsfmkp13ha502kmjs793") (f (quote (("std") ("fusion" "burn-fusion") ("doc" "default") ("default" "autotune" "std" "burn-compute/default") ("autotune"))))))

(define-public crate-burn-wgpu-0.13.0 (c (n "burn-wgpu") (v "0.13.0") (d (list (d (n "burn-common") (r "^0.13.0") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.0") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-jit") (r "^0.13.0") (k 0)) (d (n "burn-jit") (r "^0.13.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tensor") (r "^0.13.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "148ybb84zx47n07j250z74m9nky0diim2pm9m43v3bx466xa8r8a") (f (quote (("template" "burn-jit/template") ("std" "burn-jit/std") ("fusion" "burn-fusion" "burn-jit/fusion") ("doc" "burn-jit/doc") ("default" "fusion" "burn-jit/default") ("autotune" "burn-jit/autotune"))))))

(define-public crate-burn-wgpu-0.13.1 (c (n "burn-wgpu") (v "0.13.1") (d (list (d (n "burn-common") (r "^0.13.1") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.1") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-jit") (r "^0.13.1") (k 0)) (d (n "burn-jit") (r "^0.13.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tensor") (r "^0.13.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "055cxx2x6s6hdbv4kdy8xiab2jdil1vlz2wk0z48flxn8w0nfxv3") (f (quote (("template" "burn-jit/template") ("std" "burn-jit/std") ("fusion" "burn-fusion" "burn-jit/fusion") ("doc" "burn-jit/doc") ("default" "fusion" "burn-jit/default") ("autotune" "burn-jit/autotune"))))))

(define-public crate-burn-wgpu-0.13.2 (c (n "burn-wgpu") (v "0.13.2") (d (list (d (n "burn-common") (r "^0.13.2") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.2") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-jit") (r "^0.13.2") (k 0)) (d (n "burn-jit") (r "^0.13.2") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tensor") (r "^0.13.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)))) (h "1rapp065wkakvibkyc722c09xyj9qqmca9dpmv30jc8jf428jx8m") (f (quote (("template" "burn-jit/template") ("std" "burn-jit/std") ("fusion" "burn-fusion" "burn-jit/fusion") ("doc" "burn-jit/doc") ("default" "fusion" "burn-jit/default") ("autotune" "burn-jit/autotune"))))))

