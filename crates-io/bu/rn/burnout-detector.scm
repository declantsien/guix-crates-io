(define-module (crates-io bu rn burnout-detector) #:use-module (crates-io))

(define-public crate-burnout-detector-0.3.0 (c (n "burnout-detector") (v "0.3.0") (d (list (d (n "chan") (r "^0.1.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "std"))) (d #t) (k 0)) (d (n "hhmmss") (r "^0.1.0") (d #t) (k 0)) (d (n "notify-rust") (r "^4.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.5") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols-plasma") (r "^0.1.0") (f (quote ("client" "wayland-client"))) (d #t) (k 0)))) (h "13x67wvw1akxxlv321qplkvxfzq84yznzlnnyvqgkp53w9p0jfa0")))

(define-public crate-burnout-detector-0.3.1 (c (n "burnout-detector") (v "0.3.1") (d (list (d (n "chan") (r "^0.1.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "std"))) (d #t) (k 0)) (d (n "hhmmss") (r "^0.1.0") (d #t) (k 0)) (d (n "notify-rust") (r "^4.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.5") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols-plasma") (r "^0.1.0") (f (quote ("client" "wayland-client"))) (d #t) (k 0)))) (h "1f9zy4vlmffvn557m18bq6imxad2m3i9y50zlmp3bnpa958xqzvi")))

