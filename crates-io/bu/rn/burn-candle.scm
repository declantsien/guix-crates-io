(define-module (crates-io bu rn burn-candle) #:use-module (crates-io))

(define-public crate-burn-candle-0.10.0 (c (n "burn-candle") (v "0.10.0") (d (list (d (n "burn-autodiff") (r "^0.10.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.10.0") (k 2)) (d (n "burn-tensor") (r "^0.10.0") (k 0)) (d (n "burn-tensor") (r "^0.10.0") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.3.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "0znsyb0nbkrrqd4d2pssr90qhxs9kblb14v5cca8smr9mxds2kkg") (f (quote (("cuda" "candle-core/cuda"))))))

(define-public crate-burn-candle-0.11.0 (c (n "burn-candle") (v "0.11.0") (d (list (d (n "burn-autodiff") (r "^0.11.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.11.0") (k 2)) (d (n "burn-tensor") (r "^0.11.0") (k 0)) (d (n "burn-tensor") (r "^0.11.0") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.3.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "13wk6pncpidcz7gwx5hrpv17rl4mf7mgqhbxav7khqky1xjxvm45") (f (quote (("std") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.11.1 (c (n "burn-candle") (v "0.11.1") (d (list (d (n "burn-autodiff") (r "^0.11.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.11.1") (k 2)) (d (n "burn-tensor") (r "^0.11.1") (k 0)) (d (n "burn-tensor") (r "^0.11.1") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.3.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "14nqwdjnmzk8m3jafzj8s32jkxb4i8pr6v8dip6z2bjz13mmc9ff") (f (quote (("std") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.12.0 (c (n "burn-candle") (v "0.12.0") (d (list (d (n "burn-autodiff") (r "^0.12.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.12.0") (k 2)) (d (n "burn-tensor") (r "^0.12.0") (k 0)) (d (n "burn-tensor") (r "^0.12.0") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.3.2") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "0rf7rzmpv6b4v6p3wkwa04lvwaxl9x52sb9hykk32c0p9van7899") (f (quote (("std") ("metal" "candle-core/metal") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.12.1 (c (n "burn-candle") (v "0.12.1") (d (list (d (n "burn-autodiff") (r "^0.12.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.12.1") (k 2)) (d (n "burn-tensor") (r "^0.12.1") (k 0)) (d (n "burn-tensor") (r "^0.12.1") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.3.2") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "1876w17przr4hfmvjsi5f913kdjgwblpc4axq2vw2g6ql92bd1zw") (f (quote (("std") ("metal" "candle-core/metal") ("doc" "default") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.13.0 (c (n "burn-candle") (v "0.13.0") (d (list (d (n "burn-autodiff") (r "^0.13.0") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.13.0") (k 2)) (d (n "burn-tensor") (r "^0.13.0") (k 0)) (d (n "burn-tensor") (r "^0.13.0") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.4.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "1sylyqcvjws2km5pjilp88zc392qg3859sa78mx5f577fcpkqh0l") (f (quote (("std") ("metal" "candle-core/metal") ("doc" "default") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.13.1 (c (n "burn-candle") (v "0.13.1") (d (list (d (n "burn-autodiff") (r "^0.13.1") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.13.1") (k 2)) (d (n "burn-tensor") (r "^0.13.1") (k 0)) (d (n "burn-tensor") (r "^0.13.1") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.4.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "17rnr3arwssg03vzvh42yzjjj7bj5n32xhsl05sfkxsd4n49lcax") (f (quote (("std") ("metal" "candle-core/metal") ("doc" "default") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

(define-public crate-burn-candle-0.13.2 (c (n "burn-candle") (v "0.13.2") (d (list (d (n "burn-autodiff") (r "^0.13.2") (f (quote ("export_tests"))) (k 2)) (d (n "burn-tch") (r "^0.13.2") (k 2)) (d (n "burn-tensor") (r "^0.13.2") (k 0)) (d (n "burn-tensor") (r "^0.13.2") (f (quote ("export_tests"))) (k 2)) (d (n "candle-core") (r "^0.4.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)))) (h "1zg808bin12wy9a2smxf1ir914632navvam1124b7gnrlr7wa4fq") (f (quote (("std") ("metal" "candle-core/metal") ("doc" "default") ("default" "std") ("cuda" "candle-core/cuda") ("accelerate" "candle-core/accelerate"))))))

