(define-module (crates-io bu rn burn-core) #:use-module (crates-io))

(define-public crate-burn-core-0.5.0 (c (n "burn-core") (v "0.5.0") (d (list (d (n "burn-autodiff") (r "^0.5.0") (d #t) (k 0)) (d (n "burn-dataset") (r "^0.5.0") (k 0)) (d (n "burn-dataset") (r "^0.5.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.5.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.5.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)))) (h "1gjrj8px847clmczhcwwsh337cdz3aycr0kmq97521p0izblr90d") (f (quote (("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default"))))))

(define-public crate-burn-core-0.6.0 (c (n "burn-core") (v "0.6.0") (d (list (d (n "burn-autodiff") (r "^0.6.0") (f (quote ("export_tests"))) (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.6.0") (k 0)) (d (n "burn-dataset") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.6.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.6.0") (k 2)) (d (n "burn-tch") (r "^0.6.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.6.0") (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.5") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)))) (h "1cb4868amy14wpi9945fxc369zwb52vciihaglgwy7x5315pgaz2") (f (quote (("test-tch") ("std" "burn-autodiff" "burn-common/std" "burn-dataset" "burn-tensor/std" "derive-new/std" "burn-ndarray/std" "flate2" "log" "rand/std" "serde_json/std" "serde/std") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default" "std"))))))

(define-public crate-burn-core-0.7.0 (c (n "burn-core") (v "0.7.0") (d (list (d (n "bincode") (r "^2.0.0-rc") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.7.0") (f (quote ("export_tests"))) (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.7.0") (k 0)) (d (n "burn-dataset") (r "^0.7.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.7.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.7.0") (k 2)) (d (n "burn-tch") (r "^0.7.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.7.0") (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.26") (o #t) (d #t) (k 0)) (d (n "half") (r "^2") (f (quote ("alloc" "num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)))) (h "1jsm3ck30srfrha0gq96qdppqlplvqxb7p1lx32yqzr3z57ysrgf") (f (quote (("test-tch") ("std" "burn-autodiff" "burn-common/std" "burn-dataset" "burn-tensor/std" "burn-ndarray/std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std" "half/serde") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default" "std"))))))

(define-public crate-burn-core-0.8.0 (c (n "burn-core") (v "0.8.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.8.0") (f (quote ("export_tests"))) (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.8.0") (k 0)) (d (n "burn-dataset") (r "^0.8.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.8.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.8.0") (k 2)) (d (n "burn-tch") (r "^0.8.0") (d #t) (k 2)) (d (n "burn-tensor") (r "^0.8.0") (k 0)) (d (n "burn-wgpu") (r "^0.8.0") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.26") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.7") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)))) (h "0d32l9f2m2ldnzfl897m3iz5kq2lnap56j75ipv9xxmrxvc5yrnf") (f (quote (("test-wgpu") ("test-tch") ("std" "burn-autodiff" "burn-common/std" "burn-dataset" "burn-tensor/std" "burn-ndarray/std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default" "std"))))))

(define-public crate-burn-core-0.9.0 (c (n "burn-core") (v "0.9.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.9.0") (d #t) (k 2)) (d (n "burn-common") (r "^0.9.0") (k 0)) (d (n "burn-dataset") (r "^0.9.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.9.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.9.0") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.9.0") (k 2)) (d (n "burn-tch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.9.0") (k 0)) (d (n "burn-wgpu") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.26") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.7") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)))) (h "1nfrcvj8w99m7yq179mz80r9qqnklcjqxylmcyr599fmvir8c91v") (f (quote (("wgpu-autotune" "wgpu" "burn-wgpu/autotune") ("wgpu" "burn-wgpu") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("std" "burn-common/std" "burn-tensor/std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std") ("ndarray-no-std" "burn-ndarray") ("ndarray-blas-openblas-system" "ndarray" "burn-ndarray/blas-openblas-system") ("ndarray-blas-openblas" "ndarray" "burn-ndarray/blas-openblas") ("ndarray-blas-netlib" "ndarray" "burn-ndarray/blas-netlib") ("ndarray-blas-accelerate" "ndarray" "burn-ndarray/blas-accelerate") ("ndarray" "burn-ndarray/default") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default" "std" "dataset-minimal") ("dataset-sqlite-bundled" "burn-dataset/sqlite-bundled") ("dataset-sqlite" "burn-dataset/sqlite") ("dataset-minimal" "burn-dataset") ("dataset" "burn-dataset/default") ("autodiff" "burn-autodiff"))))))

(define-public crate-burn-core-0.10.0 (c (n "burn-core") (v "0.10.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.10.0") (d #t) (k 2)) (d (n "burn-candle") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.10.0") (k 0)) (d (n "burn-dataset") (r "^0.10.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.10.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.10.0") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.10.0") (k 2)) (d (n "burn-tch") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.10.0") (k 0)) (d (n "burn-wgpu") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.27") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)))) (h "199d1pq9i66bqr6ynr25yxdjahj1bn7iji94gqxrvs1nfk0bggpv") (f (quote (("wgpu" "burn-wgpu/default") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("std" "burn-common/std" "burn-tensor/std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std") ("ndarray-no-std" "__ndarray" "burn-ndarray") ("ndarray-blas-openblas-system" "__ndarray" "ndarray" "burn-ndarray/blas-openblas-system") ("ndarray-blas-openblas" "__ndarray" "ndarray" "burn-ndarray/blas-openblas") ("ndarray-blas-netlib" "__ndarray" "ndarray" "burn-ndarray/blas-netlib") ("ndarray-blas-accelerate" "__ndarray" "ndarray" "burn-ndarray/blas-accelerate") ("ndarray" "__ndarray" "burn-ndarray/default") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("default" "std" "dataset-minimal") ("dataset-sqlite-bundled" "burn-dataset/sqlite-bundled") ("dataset-sqlite" "burn-dataset/sqlite") ("dataset-minimal" "burn-dataset") ("dataset" "burn-dataset/default") ("candle-cuda" "candle" "burn-candle/cuda") ("candle" "burn-candle") ("autodiff" "burn-autodiff") ("__ndarray"))))))

(define-public crate-burn-core-0.11.0 (c (n "burn-core") (v "0.11.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.11.0") (d #t) (k 2)) (d (n "burn-candle") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.11.0") (k 0)) (d (n "burn-dataset") (r "^0.11.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.11.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.11.0") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.11.0") (k 2)) (d (n "burn-tch") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.11.0") (k 0)) (d (n "burn-wgpu") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)))) (h "0vrjlxrjw2qxszcsskb5q30xpwjgbvmfrjicg9g8106ifhlbd1f9") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std" "burn-ndarray?/std" "burn-candle?/std" "burn-wgpu?/std" "burn-fusion?/std" "burn-common/std" "burn-tensor/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("fusion" "burn-fusion" "burn-wgpu?/fusion") ("default" "std" "burn-dataset?/default" "burn-ndarray?/default" "burn-candle?/default" "burn-wgpu?/default" "burn-fusion?/default" "burn-tch?/default" "burn-dataset?/default" "burn-common/default" "burn-tensor/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.11.1 (c (n "burn-core") (v "0.11.1") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.11.1") (d #t) (k 2)) (d (n "burn-candle") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.11.1") (k 0)) (d (n "burn-dataset") (r "^0.11.1") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.11.1") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.11.1") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.11.1") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.11.1") (k 2)) (d (n "burn-tch") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.11.1") (k 0)) (d (n "burn-wgpu") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)))) (h "1r8z2p2majasccniskqpgky28q04i60wr9rmd2gf488bym7h4rr0") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std" "burn-ndarray?/std" "burn-candle?/std" "burn-wgpu?/std" "burn-fusion?/std" "burn-common/std" "burn-tensor/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("fusion" "burn-fusion" "burn-wgpu?/fusion") ("default" "std" "burn-dataset?/default" "burn-ndarray?/default" "burn-candle?/default" "burn-wgpu?/default" "burn-fusion?/default" "burn-tch?/default" "burn-dataset?/default" "burn-common/default" "burn-tensor/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.12.0 (c (n "burn-core") (v "0.12.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.12.0") (d #t) (k 2)) (d (n "burn-candle") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.12.0") (k 0)) (d (n "burn-dataset") (r "^0.12.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.12.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.12.0") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.12.0") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.12.0") (k 2)) (d (n "burn-tch") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.12.0") (k 0)) (d (n "burn-wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (o #t) (d #t) (k 0)))) (h "09x9b7xbwh6kvvcjavpikjzhj8qxh38rkrcx9m7fpv0lg6vlakdz") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("record-item-custom-serde" "thiserror" "regex") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("vision" "burn-dataset?/vision") ("std" "flate2" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "bincode/std" "half/std" "burn-ndarray?/std" "burn-candle?/std" "burn-wgpu?/std" "burn-fusion?/std" "burn-common/std" "burn-tensor/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("metal" "burn-candle?/metal") ("fusion" "burn-fusion" "burn-wgpu?/fusion") ("default" "std" "burn-dataset?/default" "burn-ndarray?/default" "burn-candle?/default" "burn-wgpu?/default" "burn-fusion?/default" "burn-tch?/default" "burn-dataset?/default" "burn-common/default" "burn-tensor/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.12.1 (c (n "burn-core") (v "0.12.1") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.12.1") (d #t) (k 2)) (d (n "burn-candle") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.12.1") (k 0)) (d (n "burn-dataset") (r "^0.12.1") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.12.1") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.12.1") (d #t) (k 0)) (d (n "burn-fusion") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.12.1") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.12.1") (k 2)) (d (n "burn-tch") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.12.1") (k 0)) (d (n "burn-wgpu") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libm") (r "^0.2.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (o #t) (d #t) (k 0)))) (h "1ayhqfnd7pwgpff3cymgvh23jn64k2vh7d8b3bp6wrcc3vyxh4bb") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("record-item-custom-serde" "thiserror" "regex") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("doc" "std" "dataset" "candle" "fusion" "ndarray" "tch" "wgpu" "vision" "autodiff" "burn-candle/doc" "burn-common/doc" "burn-dataset/doc" "burn-fusion/doc" "burn-ndarray/doc" "burn-tch/doc" "burn-tensor/doc" "burn-wgpu/doc") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("vision" "burn-dataset?/vision") ("std" "bincode/std" "burn-candle?/std" "burn-common/std" "burn-fusion?/std" "burn-ndarray?/std" "burn-tensor/std" "burn-wgpu?/std" "flate2" "half/std" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("metal" "burn-candle?/metal") ("fusion" "burn-fusion" "burn-wgpu?/fusion") ("default" "std" "burn-candle?/default" "burn-common/default" "burn-dataset?/default" "burn-fusion?/default" "burn-ndarray?/default" "burn-tch?/default" "burn-tensor/default" "burn-wgpu?/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.13.0 (c (n "burn-core") (v "0.13.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.13.0") (d #t) (k 2)) (d (n "burn-candle") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.13.0") (k 0)) (d (n "burn-dataset") (r "^0.13.0") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.13.0") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.13.0") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.0") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.0") (k 2)) (d (n "burn-tch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.0") (k 0)) (d (n "burn-wgpu") (r "^0.13.0") (o #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.115") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (o #t) (d #t) (k 0)))) (h "1mql94m4nmgzjcimdbwryaqiswmickfqm9x2pa5v1xybmfsfb63z") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("record-item-custom-serde" "thiserror" "regex") ("network" "burn-common/network") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("doc" "std" "dataset" "candle" "fusion" "ndarray" "tch" "wgpu" "vision" "autodiff" "burn-candle/doc" "burn-common/doc" "burn-dataset/doc" "burn-ndarray/doc" "burn-tch/doc" "burn-tensor/doc" "burn-wgpu/doc") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("vision" "burn-dataset?/vision" "burn-common/network") ("template" "burn-wgpu?/template") ("std" "burn-autodiff?/std" "bincode/std" "burn-candle?/std" "burn-common/std" "burn-ndarray?/std" "burn-tensor/std" "burn-wgpu?/std" "flate2" "half/std" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "num-traits/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("metal" "burn-candle?/metal") ("fusion" "burn-wgpu?/fusion") ("default" "std" "burn-candle?/default" "burn-common/default" "burn-dataset?/default" "burn-ndarray?/default" "burn-tch?/default" "burn-tensor/default" "burn-wgpu?/default" "burn-autodiff?/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("autotune" "burn-wgpu?/autotune") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.13.1 (c (n "burn-core") (v "0.13.1") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.13.1") (d #t) (k 2)) (d (n "burn-candle") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.13.1") (k 0)) (d (n "burn-dataset") (r "^0.13.1") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.13.1") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.13.1") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.1") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.1") (k 2)) (d (n "burn-tch") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.1") (k 0)) (d (n "burn-wgpu") (r "^0.13.1") (o #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.115") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (o #t) (d #t) (k 0)))) (h "0xm4kvc84w2m3d1ahnzrf2zw7wkciqmym6m6xyda7g12yzi34dcz") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("record-item-custom-serde" "thiserror" "regex") ("network" "burn-common/network") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("doc" "std" "dataset" "candle" "fusion" "ndarray" "tch" "wgpu" "vision" "autodiff" "burn-candle/doc" "burn-common/doc" "burn-dataset/doc" "burn-ndarray/doc" "burn-tch/doc" "burn-tensor/doc" "burn-wgpu/doc") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("vision" "burn-dataset?/vision" "burn-common/network") ("template" "burn-wgpu?/template") ("std" "burn-autodiff?/std" "bincode/std" "burn-candle?/std" "burn-common/std" "burn-ndarray?/std" "burn-tensor/std" "burn-wgpu?/std" "flate2" "half/std" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "num-traits/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("metal" "burn-candle?/metal") ("fusion" "burn-wgpu?/fusion") ("default" "std" "burn-candle?/default" "burn-common/default" "burn-dataset?/default" "burn-ndarray?/default" "burn-tch?/default" "burn-tensor/default" "burn-wgpu?/default" "burn-autodiff?/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("autotune" "burn-wgpu?/autotune") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

(define-public crate-burn-core-0.13.2 (c (n "burn-core") (v "0.13.2") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "burn-autodiff") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-autodiff") (r "^0.13.2") (d #t) (k 2)) (d (n "burn-candle") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-common") (r "^0.13.2") (k 0)) (d (n "burn-dataset") (r "^0.13.2") (o #t) (k 0)) (d (n "burn-dataset") (r "^0.13.2") (f (quote ("fake"))) (d #t) (k 2)) (d (n "burn-derive") (r "^0.13.2") (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.2") (o #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.2") (k 2)) (d (n "burn-tch") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.2") (k 0)) (d (n "burn-wgpu") (r "^0.13.2") (o #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "flate2") (r "^1.0.28") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("alloc" "num-traits" "serde"))) (k 0)) (d (n "hashbrown") (r "^0.14.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng" "std_rng"))) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.115") (f (quote ("alloc"))) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex" "mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (o #t) (d #t) (k 0)))) (h "0krbn0n0iw91qlaiwkssh2b9zl73yhnk0llgn3q7z9amzq5brxla") (f (quote (("wgpu" "burn-wgpu") ("wasm-sync" "burn-tensor/wasm-sync" "burn-common/wasm-sync") ("test-wgpu" "wgpu") ("test-tch" "tch") ("tch" "burn-tch") ("record-item-custom-serde" "thiserror" "regex") ("network" "burn-common/network") ("ndarray" "burn-ndarray") ("experimental-named-tensor" "burn-tensor/experimental-named-tensor") ("doc" "std" "dataset" "candle" "fusion" "ndarray" "tch" "wgpu" "vision" "autodiff" "burn-candle/doc" "burn-common/doc" "burn-dataset/doc" "burn-ndarray/doc" "burn-tch/doc" "burn-tensor/doc" "burn-wgpu/doc") ("dataset" "burn-dataset") ("candle" "burn-candle") ("autodiff" "burn-autodiff")))) (s 2) (e (quote (("vision" "burn-dataset?/vision" "burn-common/network") ("template" "burn-wgpu?/template") ("std" "burn-autodiff?/std" "bincode/std" "burn-candle?/std" "burn-common/std" "burn-ndarray?/std" "burn-tensor/std" "burn-wgpu?/std" "flate2" "half/std" "log" "rand/std" "rmp-serde" "serde/std" "serde_json/std" "num-traits/std") ("sqlite-bundled" "burn-dataset?/sqlite-bundled") ("sqlite" "burn-dataset?/sqlite") ("openblas-system" "burn-ndarray?/blas-openblas-system") ("openblas" "burn-ndarray?/blas-openblas") ("metal" "burn-candle?/metal") ("fusion" "burn-wgpu?/fusion") ("default" "std" "burn-candle?/default" "burn-common/default" "burn-dataset?/default" "burn-ndarray?/default" "burn-tch?/default" "burn-tensor/default" "burn-wgpu?/default" "burn-autodiff?/default") ("cuda" "burn-candle?/cuda") ("blas-netlib" "burn-ndarray?/blas-netlib") ("autotune" "burn-wgpu?/autotune") ("accelerate" "burn-candle?/accelerate" "burn-ndarray?/blas-accelerate"))))))

