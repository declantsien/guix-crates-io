(define-module (crates-io bu rn burn-jit) #:use-module (crates-io))

(define-public crate-burn-jit-0.13.0 (c (n "burn-jit") (v "0.13.0") (d (list (d (n "burn-autodiff") (r "^0.13.0") (o #t) (k 0)) (d (n "burn-common") (r "^0.13.0") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.0") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.0") (d #t) (k 0)) (d (n "burn-tensor-testgen") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)))) (h "07jm7vj7c7f20i6932hj81iyb1mdyiq9vv31k3a8py44i8dq0c1z") (f (quote (("template") ("std") ("fusion" "burn-fusion") ("export_tests" "burn-tensor-testgen" "serial_test" "burn-autodiff/export_tests" "burn-tensor/export_tests" "burn-ndarray" "fusion") ("doc" "default") ("default" "autotune" "std" "burn-compute/default" "fusion") ("autotune"))))))

(define-public crate-burn-jit-0.13.1 (c (n "burn-jit") (v "0.13.1") (d (list (d (n "burn-autodiff") (r "^0.13.1") (o #t) (k 0)) (d (n "burn-common") (r "^0.13.1") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.1") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.1") (d #t) (k 0)) (d (n "burn-tensor-testgen") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)))) (h "1p1kwvqqisr32c2l2ql2szamwxyh6862ljamjg3h8i0vdk1wwmyj") (f (quote (("template") ("std") ("fusion" "burn-fusion") ("export_tests" "burn-tensor-testgen" "serial_test" "burn-autodiff/export_tests" "burn-tensor/export_tests" "burn-ndarray" "fusion") ("doc" "default") ("default" "autotune" "std" "burn-compute/default" "fusion") ("autotune"))))))

(define-public crate-burn-jit-0.13.2 (c (n "burn-jit") (v "0.13.2") (d (list (d (n "burn-autodiff") (r "^0.13.2") (o #t) (k 0)) (d (n "burn-common") (r "^0.13.2") (d #t) (k 0)) (d (n "burn-compute") (r "^0.13.2") (f (quote ("channel-mutex" "std"))) (k 0)) (d (n "burn-fusion") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "burn-tensor") (r "^0.13.2") (d #t) (k 0)) (d (n "burn-tensor-testgen") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (k 0)) (d (n "hashbrown") (r "^0.14.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "num-traits") (r "^0.2.18") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serial_test") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("mutex" "spin_mutex"))) (d #t) (k 0)) (d (n "text_placeholder") (r "^0.5.0") (f (quote ("struct_context"))) (d #t) (k 0)))) (h "1b7k89pd6hbnacfi3s9ic39lnjh6wd1iph4mkcr0qs8a0f9jmdhc") (f (quote (("template") ("std") ("fusion" "burn-fusion") ("export_tests" "burn-tensor-testgen" "serial_test" "burn-autodiff/export_tests" "burn-tensor/export_tests" "burn-ndarray" "fusion") ("doc" "default") ("default" "autotune" "std" "burn-compute/default" "fusion") ("autotune"))))))

