(define-module (crates-io bu il build-clean) #:use-module (crates-io))

(define-public crate-build-clean-0.0.9 (c (n "build-clean") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.8") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "146mmnyq29lpwh2yhirr0mh291j6gxmf4nvh5d9rryxra4ygd0zk")))

(define-public crate-build-clean-1.0.0 (c (n "build-clean") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.8") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "1ykz22kchf6xki6s9ybzvairifdagv485n3krlx1wrly2151ni51")))

(define-public crate-build-clean-1.1.0 (c (n "build-clean") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.8") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "0m96cwn6nhjvrhh07z1g6lnaniqfr6gp4qls1hbjxb57zy45cc48")))

(define-public crate-build-clean-1.1.1 (c (n "build-clean") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.8") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "0x0g5am5lk6l7njakgspnr35sxx9mgwm9iy2xgigbzqjssrylq0y")))

(define-public crate-build-clean-1.1.2 (c (n "build-clean") (v "1.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.8") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "1n4cc1hcmpip5fnd7s4a5124spmvq9vyv827j6gbc1993plsa24d")))

(define-public crate-build-clean-1.2.0 (c (n "build-clean") (v "1.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "cursive") (r "^0.20") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6") (d #t) (k 0)) (d (n "globset") (r "^0.4.14") (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "0f9mgkhkakp8jjkhnds5vj1mxzk8cirsw5cshm3zkj05xj4j6r0i")))

(define-public crate-build-clean-1.3.0 (c (n "build-clean") (v "1.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "cursive") (r "^0.20") (f (quote ("crossterm-backend"))) (d #t) (k 0)) (d (n "cursive-async-view") (r "^0.6") (d #t) (k 0)) (d (n "globset") (r "^0.4.14") (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54" "send" "serde" "macros" "mlua_derive"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "tracing"))) (d #t) (k 0)))) (h "0yx6g2b6a9mqwy31hyydq9h1sglirld0kzmbazyqvis0cjg9hbyy")))

