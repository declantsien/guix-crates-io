(define-module (crates-io bu sy busyrpc) #:use-module (crates-io))

(define-public crate-busyrpc-0.2.0 (c (n "busyrpc") (v "0.2.0") (d (list (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.5") (d #t) (k 0)) (d (n "boring") (r "^2.1.0") (d #t) (k 0)) (d (n "buffertk") (r "^0.5") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "guacamole") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "indicio") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "one_two_eight") (r "^0.4") (d #t) (k 0)) (d (n "prototk") (r "^0.5") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.5") (d #t) (k 0)) (d (n "rpc_pb") (r "^0.4") (d #t) (k 0)) (d (n "sync42") (r "^0.5") (d #t) (k 0)) (d (n "tatl") (r "^0.4") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.3") (d #t) (k 0)) (d (n "zerror_core") (r "^0.4") (d #t) (k 0)))) (h "0m8wyfzb38v9m1wzlnl08dyb5cdg0mvh0345473ndb01ib7rcabk") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

(define-public crate-busyrpc-0.3.0 (c (n "busyrpc") (v "0.3.0") (d (list (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.6") (d #t) (k 0)) (d (n "boring") (r "^2.1.0") (d #t) (k 0)) (d (n "buffertk") (r "^0.6") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "guacamole") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "indicio") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "one_two_eight") (r "^0.4") (d #t) (k 0)) (d (n "prototk") (r "^0.6") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.6") (d #t) (k 0)) (d (n "rpc_pb") (r "^0.5") (d #t) (k 0)) (d (n "sync42") (r "^0.6") (d #t) (k 0)) (d (n "tatl") (r "^0.5") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.4") (d #t) (k 0)) (d (n "zerror_core") (r "^0.5") (d #t) (k 0)))) (h "1qqv4vp3l6kb3sq1xi829ckq3ykdrbdmphkmwrxk1mrrg4gwvk0y") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

