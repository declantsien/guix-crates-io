(define-module (crates-io vr p- vrp-cli) #:use-module (crates-io))

(define-public crate-vrp-cli-1.0.0 (c (n "vrp-cli") (v "1.0.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "vrp-core") (r "^1.0.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.0.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.0.0") (d #t) (k 0)) (d (n "vrp-solver") (r "^1.0.0") (d #t) (k 0)))) (h "1z833fh00cxdaga6qava8asmkaf7sgps13rvb2m98y86avcx5qfl")))

(define-public crate-vrp-cli-1.0.1 (c (n "vrp-cli") (v "1.0.1") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "vrp-core") (r "^1.0.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.0.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.0.1") (d #t) (k 0)) (d (n "vrp-solver") (r "^1.0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yscid3m9dz2gmh5i017sfbfasb97pfmz2w9ipp7s77vibxc5fg1")))

(define-public crate-vrp-cli-1.0.2 (c (n "vrp-cli") (v "1.0.2") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "vrp-core") (r "^1.0.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.0.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.0.2") (d #t) (k 0)) (d (n "vrp-solver") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12i00l62m5qkg0radb4ayb2b85bawqrgid6najl4pqf2yyf1mac6")))

(define-public crate-vrp-cli-1.0.3 (c (n "vrp-cli") (v "1.0.3") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "vrp-core") (r "^1.0.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.0.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.0.3") (d #t) (k 0)) (d (n "vrp-solver") (r "^1.0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "18vwyh8g1y1dn6y2c9yjgmr8y2w7vjvhhwyzpgw6vk0wmscnyb7c")))

(define-public crate-vrp-cli-1.1.0 (c (n "vrp-cli") (v "1.1.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "vrp-core") (r "^1.1.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.1.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0f1slryk7p2idqcgli87536kmq01afi8q72xplgfmgs75b0md846")))

(define-public crate-vrp-cli-1.1.1 (c (n "vrp-cli") (v "1.1.1") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.1.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.1.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0i422162amcc2sy6xjc6bl573kqgc77frqg9w8pn5jl0a7v87pk0")))

(define-public crate-vrp-cli-1.1.2 (c (n "vrp-cli") (v "1.1.2") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.1.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.1.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.1.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "185zrl5wcviihvnl1y3xac809kx5d406gv756lga3lb4528xx9sp")))

(define-public crate-vrp-cli-1.2.0 (c (n "vrp-cli") (v "1.2.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.2.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.2.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "10250pwn5p96l27ks1gzlb7fdz7y8j04531zjy3913li5dj368lm")))

(define-public crate-vrp-cli-1.2.1 (c (n "vrp-cli") (v "1.2.1") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.2.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.2.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0n3mqfy8v2xrgz113zynsgia3if4nnm2j59kw0l394ylxn07ivzr")))

(define-public crate-vrp-cli-1.2.2 (c (n "vrp-cli") (v "1.2.2") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.2.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.2.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0q20x41pnp8qwf4l5d2d9l6sw95wfd301p0chaxpx1mnsdx0kj14")))

(define-public crate-vrp-cli-1.2.3 (c (n "vrp-cli") (v "1.2.3") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.2.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.2.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12x62b6899k26zz3rbcsky8yi3bgxf536wkf5xivjkx6r3sf6l9l")))

(define-public crate-vrp-cli-1.2.4 (c (n "vrp-cli") (v "1.2.4") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.2.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.2.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.2.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1pfg0djgs8s80i3x2lrnib82w4xlpfqzma5055iy4mbi2rwmmr72")))

(define-public crate-vrp-cli-1.3.0 (c (n "vrp-cli") (v "1.3.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "vrp-core") (r "^1.3.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.3.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.3.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0imgl636aids2jj5xxnaqzbmba9z3fx90j7xkxnbs4ck48yj4klw")))

(define-public crate-vrp-cli-1.4.0 (c (n "vrp-cli") (v "1.4.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "vrp-core") (r "^1.4.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.4.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.65") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0z5irnbggsvpqf6w3qpg9xbhszbqxcpcw4jih6vhnpw162g4zih6")))

(define-public crate-vrp-cli-1.4.1 (c (n "vrp-cli") (v "1.4.1") (d (list (d (n "clap") (r "^2.33.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "vrp-core") (r "^1.4.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.4.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.4.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.65") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yf032adbzqqq1c7i8qw7vrigj75a5m91cpcri2s545y6wvhnj2l")))

(define-public crate-vrp-cli-1.4.2 (c (n "vrp-cli") (v "1.4.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.4.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.4.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.4.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yynq45sl1pvv2n2jn635vgf6gh3br86kbv842j84znkc1jk0zzd")))

(define-public crate-vrp-cli-1.4.3 (c (n "vrp-cli") (v "1.4.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.4.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.4.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.4.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m52xkw2xbfz6b6z66gx2pmwv05lgdm9j4lqjc4kk8is6d10y9jm")))

(define-public crate-vrp-cli-1.5.0 (c (n "vrp-cli") (v "1.5.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1pxrayzmll7azax34byi9rc9ymwjs27b7qhdm734zsy5ljrpqzjx")))

(define-public crate-vrp-cli-1.5.1 (c (n "vrp-cli") (v "1.5.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1c0c3cvn6mfjq3g9gs46dclk358dxybgj9c0f38q4bf4pg3hl1k4")))

(define-public crate-vrp-cli-1.5.2 (c (n "vrp-cli") (v "1.5.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "17qn88hyh1b00mmhvc85iymi1hrnyxc6ks3g5dlc2g6gh3syhwnl")))

(define-public crate-vrp-cli-1.5.3 (c (n "vrp-cli") (v "1.5.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ms06parc7jrxqrnnvjl7yac68qrykxnckcjkjffida1nb7angqg")))

(define-public crate-vrp-cli-1.5.4 (c (n "vrp-cli") (v "1.5.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zp2d20dp7r5pwvnqkh42vbli087dp0rbvg5c0ymcwfyni9qxj84")))

(define-public crate-vrp-cli-1.5.5 (c (n "vrp-cli") (v "1.5.5") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.5") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.5") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1n23fhgl6blwpgh0jg4mxlcvsichwrapvd3dlgpnyn8ff5vbiq44")))

(define-public crate-vrp-cli-1.5.6 (c (n "vrp-cli") (v "1.5.6") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.6") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.6") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1kzyszxcpzz6w9mva784yyhxsnjxbz76f8kg868g5rkrbiiw787v")))

(define-public crate-vrp-cli-1.5.7 (c (n "vrp-cli") (v "1.5.7") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.7") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.7") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0kwczsz94fzqvaaca6s162zgcvm33z0i6fmkbxqczw0dgm4rip9v")))

(define-public crate-vrp-cli-1.5.8 (c (n "vrp-cli") (v "1.5.8") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.5.8") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.5.8") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.5.8") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "172hpm3b68h8qhgg8pgk9p56qkgjz8600l3p2vsa4f6npxx5jj1r")))

(define-public crate-vrp-cli-1.6.0 (c (n "vrp-cli") (v "1.6.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "vrp-core") (r "^1.6.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.6.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1fn3al24l7bgpb9hkphxwkqxs3krywwd5isxaxkdsw93qmbbqxr9") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.6.1 (c (n "vrp-cli") (v "1.6.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "vrp-core") (r "^1.6.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.6.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0m49fqv3smaf6v6jyxcr1mih9rfbqqfbrch8skdrxi1vnjs0d4ab") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.6.2 (c (n "vrp-cli") (v "1.6.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "vrp-core") (r "^1.6.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.6.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m7ppayi5s7spjxfzlfxjx5r67p6ccpqa6mfh92qc7nwby2zb399") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.6.3 (c (n "vrp-cli") (v "1.6.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "vrp-core") (r "^1.6.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.6.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1p7acrpw8wpz9y81amahq0rmk6ws0fhd4362wzjhsn202f9phg3g") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.6.4 (c (n "vrp-cli") (v "1.6.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "vrp-core") (r "^1.6.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.6.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.6.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1r8vl0a9lykwrrg6my4pn7m7kr6100ncs6bl635qr2yqklcar3lp") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.7.0 (c (n "vrp-cli") (v "1.7.0") (d (list (d (n "clap") (r ">=2.33.3, <3.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r ">=1.1.3, <2.0.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r ">=0.3.45, <0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r ">=1.13.0, <2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)) (d (n "vrp-core") (r ">=1.7.0, <2.0.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r ">=1.7.0, <2.0.0") (d #t) (k 0)) (d (n "vrp-scientific") (r ">=1.7.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r ">=0.2.68, <0.3.0") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0cnrav2j82s246bgb2lynxwjchg4iinw0cvlfx7kdzgmgf6iwvni") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.7.1 (c (n "vrp-cli") (v "1.7.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "vrp-core") (r "^1.7.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.7.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jq9adgyl84qmnv913h5d8m5cj58ibrc323ijkwcljnfhxk6anp6") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.7.2 (c (n "vrp-cli") (v "1.7.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "vrp-core") (r "^1.7.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.7.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.7.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07abbnkprm3xpcvzk28kklzbk7n4g55c4w6lr40jm2i3jqq3vdxk") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.7.3 (c (n "vrp-cli") (v "1.7.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.7.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.7.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.7.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "05z2dj94ykc0mcr4w9v4vn5nnqciv7d1xwgxl01h9x54sx18j7sp") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.7.4 (c (n "vrp-cli") (v "1.7.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.7.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.7.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.7.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ncds963yzr6s7cmx733acn2brcgwl24km6mz4a43fwi1g9aczsm") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.8.0 (c (n "vrp-cli") (v "1.8.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.47") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.8.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.8.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1r88cki2ik12a830jxsy39cjbqyy5kngpzmjwwc413hbh5y4i6bc") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.8.1 (c (n "vrp-cli") (v "1.8.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.47") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.8.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.8.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14ycpsvfl9rzrgx4wswzx1pm9j2wlyzvflvx3hm3gj74k3wdvs4y") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.9.0 (c (n "vrp-cli") (v "1.9.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.47") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.9.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.9.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0a9s9x6281s9jcnh35jfbj6wgmzxb72k9937q04aphy5kf5f9ngz") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.9.1 (c (n "vrp-cli") (v "1.9.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.47") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "vrp-core") (r "^1.9.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.9.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0x53f2jgc18l8krpd3fqd36dys1lp37kz6kvg95mlpmvdnpvvldb") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.0 (c (n "vrp-cli") (v "1.10.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "vrp-core") (r "^1.10.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.73") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0l3hbs21208pnxrmiydgjw3g4rjrdr299h2j5mwnmsqgb3n63rw1") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.1 (c (n "vrp-cli") (v "1.10.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "vrp-core") (r "^1.10.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.73") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ayw1j38wkklchsjlis2f22fy9rfn19755b28fgw1jw2a9qzav7g") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.2 (c (n "vrp-cli") (v "1.10.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "vrp-core") (r "^1.10.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.73") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0h5grm9plkb9vqgz0mxjrb1nkcwpqa50mks19pb9x3nkwj2ajcwc") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.3 (c (n "vrp-cli") (v "1.10.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "vrp-core") (r "^1.10.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.73") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1p977qfz2lfg5bhjc1by1zz14pjyilcn30gbyb3rx59jragw9n2r") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.4 (c (n "vrp-cli") (v "1.10.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "vrp-core") (r "^1.10.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.74") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14giam8agd6wk0m3frajpyvm8iask967ki3bj3d9jgqgjzynaay1") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "hre-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.5 (c (n "vrp-cli") (v "1.10.5") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.10.5") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.5") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.74") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1vsb4p54y78sd7bc7pfwla1ijz4x53ywrvfbp2j1ai2z08xwfc3c") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.6 (c (n "vrp-cli") (v "1.10.6") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.10.6") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.6") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.6") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.74") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "01r2k13hcb2l14anqay9fbjb5cpslgpz7c36g1knw7fz96qbl1bw") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.10.7 (c (n "vrp-cli") (v "1.10.7") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.10.7") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.10.7") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.10.7") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.74") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0w1yi4ifxgyxinbkf8c8lyhsrn2q4fd3xkny92nkxq32j0i16jyy") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.0 (c (n "vrp-cli") (v "1.11.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.74") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ysj08g5z5wi9mhzy01v7c1fn28cvjzjhv15d0in9sgv0kr183kv") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.1 (c (n "vrp-cli") (v "1.11.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "15sibfbgh7nbglv29xys0xxyd0xz5rgb26z5019av04y1kfafk1d") (f (quote (("scientific-format" "vrp-scientific") ("hre-format") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.2 (c (n "vrp-cli") (v "1.11.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.128") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0h02qfc8bpr92lrycnchhf1907b5k7cfzn2ik092x4lgzvxvp7hv") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.3 (c (n "vrp-cli") (v "1.11.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0i40z7zbvzpdjs78lxxhlj1p8fp6s750lwzs1x6gkdcqww8ywpr4") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.4 (c (n "vrp-cli") (v "1.11.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vhzi7mf0xv25wnijsgpnn724h1jdhgg8lrv7hyk1jsyp7k6rj3a") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.11.5 (c (n "vrp-cli") (v "1.11.5") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.11.5") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.11.5") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.11.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "004c2fa9m7m2c9ldrjx31bmhmyyng4971m6xncnf0dkn6l9wsksq") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.12.0 (c (n "vrp-cli") (v "1.12.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.12.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.12.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dgs8j724bbld6v8rx7k7fb3dldhjh50d0x5j48hs6s1z5xq9p4n") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.13.0 (c (n "vrp-cli") (v "1.13.0") (d (list (d (n "clap") (r "^2.34.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.13.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.13.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gqjgk536xdnxfl01rcmbivwqjmi5vxdzh43dfkfs98my0si5a27") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.14.0 (c (n "vrp-cli") (v "1.14.0") (d (list (d (n "clap") (r "^3.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.75") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.14.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.14.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0l7cysdy65d3hi55qg01d5fr5jcr7f2kkfj51m010jxsqm7kwnxg") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.15.0 (c (n "vrp-cli") (v "1.15.0") (d (list (d (n "clap") (r "^3.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.75") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.15.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.15.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.15.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1lzv8m8dlbg9fmzlv94vd1p1xb4iwr87ldjrpwa002janqg9msgn") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.16.0 (c (n "vrp-cli") (v "1.16.0") (d (list (d (n "clap") (r "^3.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.16.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.16.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0s6lccpr7680ivbsnirpsxmh8sq9ydhp7bms1dbzg1751dwq4cal") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.16.1 (c (n "vrp-cli") (v "1.16.1") (d (list (d (n "clap") (r "^3.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.16.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.16.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "00kkfcqbh7ckg0q6kp5gw0m0bahvkkz57gkwjjl6afm3nvdmqdqn") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.17.0 (c (n "vrp-cli") (v "1.17.0") (d (list (d (n "clap") (r "^3.1.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.17.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.17.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1s8i1vgp1sd4ql2kijh1my0bav3g3051yvljxd0y470pfmfyrm4y") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.18.0 (c (n "vrp-cli") (v "1.18.0") (d (list (d (n "clap") (r "^3.1.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.18.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.18.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1afbhq7jlj8iilmgb058i2mx3gsdaqndszn5k6pdi8jy5ffhlkhd") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.18.1 (c (n "vrp-cli") (v "1.18.1") (d (list (d (n "clap") (r "^3.1.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.18.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.18.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.18.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1n974zy143c60vl284d37k3vbqsdwvwyfrwqqnvjhzqqis5mm234") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.18.2 (c (n "vrp-cli") (v "1.18.2") (d (list (d (n "clap") (r "^3.2.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.18.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.18.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.18.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0j25ha50m5ga4cvnyi753abpsbsfzqbpvwjxbp33qwj7vggnjl69") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.18.3 (c (n "vrp-cli") (v "1.18.3") (d (list (d (n "clap") (r "^3.2.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.18.3") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.18.3") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.18.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12lgr63hapaga7fckmvzcab6ngg24b1glrjsx0i6kqi4ip55cvp6") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.18.4 (c (n "vrp-cli") (v "1.18.4") (d (list (d (n "clap") (r "^3.2.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.3") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.18.4") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.18.4") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.18.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1jia2d6vcvwgbw2g8rjmlqfzzzz2px3kdpfmb8gxxikaql0iz7pm") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.19.0 (c (n "vrp-cli") (v "1.19.0") (d (list (d (n "clap") (r "^4.0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.3") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.86") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.19.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.19.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02xnlwq98c2h837pfdjvq6v0y2jxjbwyvs5vz79kkkvpvqszfx5n") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.19.1 (c (n "vrp-cli") (v "1.19.1") (d (list (d (n "clap") (r "^4.0.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.4") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.19.1") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.19.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.19.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1kb1il0ra7imphfaq7m4ccmjkxw42lm101kvj65bbyb19iqq1np6") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.19.2 (c (n "vrp-cli") (v "1.19.2") (d (list (d (n "clap") (r "^4.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.18.1") (f (quote ("extension-module"))) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.19.2") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.19.2") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.19.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dngh7mqjlizlnkwbpb1wjyqdsch3khpgppqh3fgliwb9958578g") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.20.0 (c (n "vrp-cli") (v "1.20.0") (d (list (d (n "clap") (r "^4.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.18.2") (f (quote ("extension-module"))) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.20.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.20.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.20.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0g1y4nkvrkidw279q7s1sj1byxygdl8qdjysjaxgsyw6mgizvn2v") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv"))))))

(define-public crate-vrp-cli-1.21.0 (c (n "vrp-cli") (v "1.21.0") (d (list (d (n "clap") (r "^4.2.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.18.3") (f (quote ("extension-module"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.21.0") (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.21.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.21.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1fn9q01mra640n39wwj94483x9fg85z15zav9yg88ka2k3j6kyn7") (f (quote (("scientific-format" "vrp-scientific") ("default" "csv-format" "scientific-format") ("csv-format" "csv")))) (s 2) (e (quote (("py_bindings" "dep:pyo3"))))))

(define-public crate-vrp-cli-1.21.1 (c (n "vrp-cli") (v "1.21.1") (d (list (d (n "clap") (r "^4.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.21.1") (o #t) (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.21.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.21.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0fx8dmmx7zzxgiig87k70aa4b9jf39x71wbx0r60pjjd846hjfff") (f (quote (("scientific-format" "vrp-scientific") ("default" "vrp-core" "csv-format" "scientific-format") ("csv-format" "csv") ("async-evolution" "vrp-core/async-evolution")))) (s 2) (e (quote (("py_bindings" "dep:pyo3"))))))

(define-public crate-vrp-cli-1.22.0 (c (n "vrp-cli") (v "1.22.0") (d (list (d (n "clap") (r "^4.3.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.19.2") (f (quote ("extension-module"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 2)) (d (n "vrp-core") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.22.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.22.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "15prffdlpmysbz6r73x819bw2qhbqk8v2la72fc732sx9hk0ki8r") (f (quote (("scientific-format" "vrp-scientific") ("default" "vrp-core" "csv-format" "scientific-format") ("csv-format" "csv") ("async-evolution" "vrp-core/async-evolution")))) (s 2) (e (quote (("py_bindings" "dep:pyo3"))))))

(define-public crate-vrp-cli-1.22.1 (c (n "vrp-cli") (v "1.22.1") (d (list (d (n "clap") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.19.2") (f (quote ("extension-module"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "vrp-core") (r "^1.22.1") (o #t) (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.22.1") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.22.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19rs56ld4mphvk0ksmps0zhmka5m0jw17z631xfpkxjcncxffdy4") (f (quote (("scientific-format" "vrp-scientific") ("default" "vrp-core" "csv-format" "scientific-format") ("csv-format" "csv") ("async-evolution" "vrp-core/async-evolution")))) (s 2) (e (quote (("py_bindings" "dep:pyo3"))))))

(define-public crate-vrp-cli-1.23.0 (c (n "vrp-cli") (v "1.23.0") (d (list (d (n "clap") (r "^4.4.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(tarpaulin)))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "vrp-core") (r "^1.23.0") (o #t) (d #t) (k 0)) (d (n "vrp-pragmatic") (r "^1.23.0") (d #t) (k 0)) (d (n "vrp-scientific") (r "^1.23.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "007llz8nmmsk89d3phz63bq8cs8fa9zcvq374nm0cfdqklx92kk9") (f (quote (("scientific-format" "vrp-scientific") ("default" "vrp-core" "csv-format" "scientific-format") ("csv-format" "csv") ("async-evolution" "vrp-core/async-evolution")))) (s 2) (e (quote (("py_bindings" "dep:pyo3"))))))

