(define-module (crates-io vr u- vru-sphinx) #:use-module (crates-io))

(define-public crate-vru-sphinx-1.0.0 (c (n "vru-sphinx") (v "1.0.0") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.7") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.0") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "0zjjf9dbnnnccc3fxjrhf9znnzjyrsa1x6a4pm1ij0fhman5sx62") (f (quote (("serde-support" "serde"))))))

(define-public crate-vru-sphinx-1.0.1 (c (n "vru-sphinx") (v "1.0.1") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.7") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.0") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "0gvjjx6iyd7c7a3y8lk5mq57l07fqc77k58pnlkbizdc4pavzsb8") (f (quote (("serde-support" "serde"))))))

(define-public crate-vru-sphinx-1.1.0 (c (n "vru-sphinx") (v "1.1.0") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.8") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.1") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "07zbqfj2imsl3y359shjybx4vrrxcgss8cwyl87rpjgvyzkl7s4i") (f (quote (("serde-support" "serde"))))))

(define-public crate-vru-sphinx-1.2.0 (c (n "vru-sphinx") (v "1.2.0") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.8") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.1") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "153hf7dhvp3zlfbzkghdr3dh1prmz1jw9y5m5wqjj0jciwnclwfd")))

(define-public crate-vru-sphinx-1.3.0 (c (n "vru-sphinx") (v "1.3.0") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.9") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.3") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "1zs9868qzgc40x5nh785ix7cqnn7y16n9m721cwnnrw26pjgx866")))

(define-public crate-vru-sphinx-1.4.0 (c (n "vru-sphinx") (v "1.4.0") (d (list (d (n "chacha") (r "^0.3") (d #t) (k 2)) (d (n "crypto-mac") (r "^0.9") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.9") (d #t) (k 2)) (d (n "keystream") (r "^1.0") (d #t) (k 0)) (d (n "rac") (r "^1.3") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "19qjcragjqs0gx264wh90viy151c0rrrwqaw3kc7q5s8b9yfasld")))

(define-public crate-vru-sphinx-1.5.0 (c (n "vru-sphinx") (v "1.5.0") (d (list (d (n "cryptography") (r "^0.3") (f (quote ("digest" "mac" "stream-cipher"))) (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 2)) (d (n "generic-array") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.9") (d #t) (k 2)) (d (n "rac") (r "^1.3") (f (quote ("secp256k1"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tirse") (r "^0.6") (f (quote ("use_std"))) (d #t) (k 2)))) (h "0104w6gmm29rydx0d1lrqsj4pknd71s52yfcl1xfiy64vi0lz17f")))

