(define-module (crates-io cb or cbor-data) #:use-module (crates-io))

(define-public crate-cbor-data-0.1.0 (c (n "cbor-data") (v "0.1.0") (d (list (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1bisrcr246qni7gcpzsmfrm6xyh3g3srxbm2wvkqy7p4p28x0r7r")))

(define-public crate-cbor-data-0.2.0 (c (n "cbor-data") (v "0.2.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1is9kl33svph6n2mrr1fma19bw03i068zw1qbl9s0fy4ncap11sc")))

(define-public crate-cbor-data-0.2.1 (c (n "cbor-data") (v "0.2.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "08wsbiv1905x4g1dgldn4sgkcwc5kivzj25h2sww4fw9n7vk3axf")))

(define-public crate-cbor-data-0.3.0 (c (n "cbor-data") (v "0.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1kpb0gk495ldqv2h7q6mcnxbcv0ilhqjf8bp83cqh8l6bnj7gb6l")))

(define-public crate-cbor-data-0.4.0 (c (n "cbor-data") (v "0.4.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1mdbvl1hfr1prdvjp655zhcyrqi8sf6mivfa4hjp046p3dd0nmcy")))

(define-public crate-cbor-data-0.4.1 (c (n "cbor-data") (v "0.4.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0yf721ayghhbhy3lmxh70r68mc22x635i92ffsjj95qz63ny3yi6")))

(define-public crate-cbor-data-0.4.2 (c (n "cbor-data") (v "0.4.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "17s4xbj71dxjxh332njgmb877jchmpc2cr1lip3cm10nvrzdc0s9")))

(define-public crate-cbor-data-0.5.0 (c (n "cbor-data") (v "0.5.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1vrf5gvgbnpvlr3kxqp275n5i6dvg700vxp66x82ar9mpbl09m2f")))

(define-public crate-cbor-data-0.6.0 (c (n "cbor-data") (v "0.6.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0i5cn464drq5z56zlb24svkk4ksii9rl4nsmm901114fhk2xy1c0") (f (quote (("rfc3339" "chrono")))) (y #t)))

(define-public crate-cbor-data-0.6.1 (c (n "cbor-data") (v "0.6.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1ndhlj6650jw44r3wbzgzz8c44zgwqlx58sas9lm9g2rywxjr8gz") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.7.0 (c (n "cbor-data") (v "0.7.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0z4sjynm80npk5lp4c8bwkw6lxh1dq4f1ljs1l4rrni5i90zp0x9") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.0 (c (n "cbor-data") (v "0.8.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1jbwfi6pz0bpvs1jrg7hlbq7yiggzqnsmxsv9jn4af9d3ypfpd4v") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.1 (c (n "cbor-data") (v "0.8.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1i2fkvpn7fzzn3r7pwr9ayqa0d1x65hz812vx3sb5ybdss9fyx1m") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.2 (c (n "cbor-data") (v "0.8.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0g11y7k69lgfkmzpadvybj7p9i25m607fp81b0xnv33l92dr37yq") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.3 (c (n "cbor-data") (v "0.8.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1gdhj253acdxjvgbrvjgkllyff5mdkvhip0jnf7ihddk2hhjg3r8") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.4 (c (n "cbor-data") (v "0.8.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "19qkydrpy7dr4l4gjy0p1gibb3nps6brwk1nrr838pxmapqrfxki") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.5 (c (n "cbor-data") (v "0.8.5") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "03h8b5lnzjp541fx0amnr0dg733qjgvziajkajgbrdj38gk30yzy") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.6 (c (n "cbor-data") (v "0.8.6") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "11bh2sfn8a6x7zxyjjcp4g56nsw13yaf3bjndmdgfrpc4hjl84xk") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.7 (c (n "cbor-data") (v "0.8.7") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1abwzgyv21vqsnfim2bphkmip06c2w6xz740sjyn5cvagpj8v314") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.8 (c (n "cbor-data") (v "0.8.8") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "069kd46r56hnjfg9x3hi8m43wzkc3w55phnk40dqga51bzs54gi3") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.9 (c (n "cbor-data") (v "0.8.9") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1mqfjx0zpg1jf8xram79jmci5q3a9bx3f3dbysfxrwx03cswjgpw") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.10 (c (n "cbor-data") (v "0.8.10") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0aqf1sj1vwqxhhwsg72kjal35bw6j7bnx73zrznifsbp3chbllx9") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.11 (c (n "cbor-data") (v "0.8.11") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "0q915mwawlay5cmc6jkyf9qj60fvjaxxmas6r4zvrsvd0rhjrqr4") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.12 (c (n "cbor-data") (v "0.8.12") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "03ijrqixrwjfn5jd4w79324y074xc15cf5fns591i0nijyb70nss") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.13 (c (n "cbor-data") (v "0.8.13") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "1na31bkqz3jhvwd25xhsvzsj6dilpwkxiqdqcrh5wwik6llmi3b6") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.14 (c (n "cbor-data") (v "0.8.14") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "03b0w9nnyv1dfjbwv8lqv3cqkbcdbag78n8cchiq13d4fw3mwrx7") (f (quote (("rfc3339" "chrono"))))))

(define-public crate-cbor-data-0.8.15 (c (n "cbor-data") (v "0.8.15") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cbor-data-derive") (r "=0.8.15") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "1kaq6ji5plkg4vpjsjszg0im50bgddkbypflndq06rr08g36a4aa") (f (quote (("rfc3339" "chrono")))) (s 2) (e (quote (("derive" "dep:cbor-data-derive"))))))

(define-public crate-cbor-data-0.8.16 (c (n "cbor-data") (v "0.8.16") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cbor-data-derive") (r "=0.8.15") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "1jk6faf22hm2hmrf8vmhbjjbrq14k80jhb8pcbl57pk1vb9hqs07") (f (quote (("rfc3339" "chrono")))) (s 2) (e (quote (("derive" "dep:cbor-data-derive"))))))

(define-public crate-cbor-data-0.8.17 (c (n "cbor-data") (v "0.8.17") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cbor-data-derive") (r "=0.8.15") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "half") (r "^1.6.0") (d #t) (k 0)) (d (n "libipld14") (r "^0.14") (f (quote ("dag-cbor"))) (o #t) (k 0) (p "libipld")) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("const_generics" "write"))) (d #t) (k 0)))) (h "1r1dd1lvf5hah0ckrlw51vysmzq1a0cwy76lfdp5pryp92b4qzb5") (f (quote (("rfc3339" "chrono")))) (s 2) (e (quote (("derive" "dep:cbor-data-derive"))))))

