(define-module (crates-io ap ru aprun) #:use-module (crates-io))

(define-public crate-aprun-0.1.0 (c (n "aprun") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "1gixb46g4967a2x8w7bnhhfvq550kdj1y7jiwvzyl8w1fm01qjmk")))

(define-public crate-aprun-0.1.1 (c (n "aprun") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "0hp8raww1hy57cpfjabh8rvn5037dys48q58j97xr4s9qdmahzvc")))

(define-public crate-aprun-0.1.2 (c (n "aprun") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "06rbg5qknb3pxjnkhvn3ailrz42dxyz884x6byhhgdd21gb6sp4l")))

(define-public crate-aprun-0.1.3 (c (n "aprun") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "0pfab551lq4xkc41y3cnvaydwdn5xysn52xf3rxha09rb5axiiy3")))

(define-public crate-aprun-0.1.4 (c (n "aprun") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "0i1wwfpjqarniardfs4yn38mcvy3gqyfjxw03g4r1qgvavmc39ip")))

(define-public crate-aprun-0.2.0 (c (n "aprun") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "10fqb7w2v9cx5zzfyq576zy88af4q07hxdsplx8lsd76px37ykn5")))

(define-public crate-aprun-0.3.0 (c (n "aprun") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "1j18cgksy1l6hvj71p5k7pc3b30c7qi8sis84iwx0l7whd0crg4h")))

(define-public crate-aprun-0.3.1 (c (n "aprun") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "0fn551arcfq4yif3mmzhgwj67dffdrfrjj034nml3sm5lv3mrgwl")))

(define-public crate-aprun-0.4.0 (c (n "aprun") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("env_logger"))) (d #t) (k 0)))) (h "05hb6khczns4vyfw8pyfgg94l98v58n9cqp4pqpvz63b7ihyzn35")))

