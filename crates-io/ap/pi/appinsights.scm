(define-module (crates-io ap pi appinsights) #:use-module (crates-io))

(define-public crate-appinsights-0.1.0 (c (n "appinsights") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.22.0") (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "072831plsgfhrkgpb0942n14dks5ganm3zq6zxadxpd6ixmyxxh2")))

(define-public crate-appinsights-0.1.1 (c (n "appinsights") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (k 2)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.22.0") (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "0iqrm8z8slbf6kn4yyx5v0vd98npxqs28b37k6qahr2skpxm1w6g")))

(define-public crate-appinsights-0.1.2 (c (n "appinsights") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.2") (k 2)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.23.0") (k 2)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "10k3y2lyffpdw5z4d4v4fsc4fi0xmn6xcvh0yp47ac4y5mksigqx")))

(define-public crate-appinsights-0.1.3 (c (n "appinsights") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.4") (k 2)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.23.1") (k 2)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json" "native-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "1i0x0npcpryxkc5r6lfy6b8yaylgpzra47arzmiv2dw9anb5zx4a")))

(define-public crate-appinsights-0.1.4 (c (n "appinsights") (v "0.1.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.4") (k 2)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.0") (d #t) (k 0)) (d (n "hyper") (r "^0.13.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.23.3") (k 2)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json" "native-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "1bz0sgnbq4xrqsfliaw84vaa4h07m3y6s7yhzb7f1fgbrgz3ns50")))

(define-public crate-appinsights-0.1.5 (c (n "appinsights") (v "0.1.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (k 2)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "mockito") (r "^0.26.0") (k 2)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "1xpdcqxdzpsk02y539bxybicp4s1rm52vl6f94l0c88j1d0kdr2s")))

(define-public crate-appinsights-0.2.0 (c (n "appinsights") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "0b46vb7v5h6w484lhgxgq0g2bsg0c4kpj54i0i7kvgin9119i3in") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default-tls") ("blocking"))))))

(define-public crate-appinsights-0.2.1 (c (n "appinsights") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "150nhmhwz4kn0nbxls6vx78cqhxdv24y6b02dbwnfzgjcqy4189r") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default-tls") ("blocking"))))))

(define-public crate-appinsights-0.2.2 (c (n "appinsights") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "16wnf64bhddrjdxnbjw9ihhipccfb686nhcy2dba75574r5nq3wm") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default-tls") ("blocking"))))))

(define-public crate-appinsights-0.2.3 (c (n "appinsights") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sm") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (k 0)))) (h "12l0gw0mzhzsgphy2srz6q97b3dp5bb953fi222rwni0jky76dsv") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default-tls") ("blocking"))))))

