(define-module (crates-io ap ca apcacli) #:use-module (crates-io))

(define-public crate-apcacli-0.0.0 (c (n "apcacli") (v "0.0.0") (h "1xxqxmi0m2cnmsrh9mdiik13j88m4p9cvzhv561nz957jj2mdhnd")))

(define-public crate-apcacli-0.1.0 (c (n "apcacli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "apca") (r "^0.14") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "1am8815b283k2ygp1i2ahsmcs5cj14w2yihizg9pl5g80djmg8di")))

(define-public crate-apcacli-0.1.1 (c (n "apcacli") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "apca") (r "^0.15") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "0wihgp88v69dnap9871v4vp278mfybyvxfspk8pr9xbymhyfxlpx")))

(define-public crate-apcacli-0.1.2 (c (n "apcacli") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "apca") (r "^0.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "01k8yg75nfdygambaaal9qa77gfapiqgmprf1wwh075lyaiafwfj")))

(define-public crate-apcacli-0.1.3 (c (n "apcacli") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "apca") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "125imhdjdh3xpx3pyli3sxaxzy98niwpc3pqmf3b2b1491iscf66")))

(define-public crate-apcacli-0.1.4 (c (n "apcacli") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 1)) (d (n "apca") (r "^0.22.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "1xj4jw59p2p5hb2g6l9ysvbhwj6kznjf1bfdypacc9qds0s4dfnj")))

(define-public crate-apcacli-0.1.5 (c (n "apcacli") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 1)) (d (n "apca") (r "^0.24.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.6.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "0n6nrk734azklklb5ylabppy045fgpf6yj4v77b4z1255yy14igp")))

(define-public crate-apcacli-0.1.6 (c (n "apcacli") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 1)) (d (n "apca") (r "^0.25.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "grev") (r "^0.1.3") (d #t) (k 1)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "0fr0x4kyqdz8d1fy2pz6zcv994z2vw8520il8mx8csy6h6p97h6a") (r "1.60")))

(define-public crate-apcacli-0.1.7 (c (n "apcacli") (v "0.1.7") (d (list (d (n "_num_bigint_unused") (r "^0.4.2") (d #t) (k 2) (p "num-bigint")) (d (n "_rustc_version_unused") (r "^0.2.2") (d #t) (k 2) (p "rustc_version")) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 1)) (d (n "apca") (r "^0.27.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "chrono-tz") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "grev") (r "^0.1.3") (d #t) (k 1)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "067nfc4b4i6mvvzhphc8dxyhm3dkj2sy66b5qbzv6vlsy7xg7mm8") (f (quote (("vendored-openssl" "apca/vendored-openssl")))) (r "1.60")))

(define-public crate-apcacli-0.1.8 (c (n "apcacli") (v "0.1.8") (d (list (d (n "_num_bigint_unused") (r "^0.4.2") (d #t) (k 2) (p "num-bigint")) (d (n "_rustc_version_unused") (r "^0.2.2") (d #t) (k 2) (p "rustc_version")) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 1)) (d (n "apca") (r "^0.28.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "chrono-tz") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "std"))) (k 0)) (d (n "grev") (r "^0.1.3") (d #t) (k 1)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "yansi") (r "^0.5") (k 0)))) (h "0s4r8vm98njlamy2sjzlqakrnncwhnk9wyjly5jhwb4mh469kb67") (f (quote (("vendored-openssl" "apca/vendored-openssl")))) (r "1.63")))

