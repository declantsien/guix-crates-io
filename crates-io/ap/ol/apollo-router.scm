(define-module (crates-io ap ol apollo-router) #:use-module (crates-io))

(define-public crate-apollo-router-0.1.0 (c (n "apollo-router") (v "0.1.0") (h "13hp9gzqzjhi4xqvhvfwaffh48agw1r8wx9jbw5fhc1s26j36d9d") (y #t)))

(define-public crate-apollo-router-1.0.0-rc.0 (c (n "apollo-router") (v "1.0.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.10") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "17fn3kw3x7fs0h5ylxhy0s3jhh0rf0qmk64392m3q8gf8sccwbvp") (f (quote (("failfast") ("console" "tokio/tracing" "console-subscriber"))))))

(define-public crate-apollo-router-1.0.0-rc.1 (c (n "apollo-router") (v "1.0.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.10") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.7") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1ayaq0fw4p0inql9ir70k72pg7ds13z8n1hsrxk0qp9cawfsj4q5") (f (quote (("failfast") ("console" "tokio/tracing" "console-subscriber"))))))

(define-public crate-apollo-router-1.0.0-rc.2 (c (n "apollo-router") (v "1.0.0-rc.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.11") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.7") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1y729148w8cg54s0s1jv141sar8jxjmxy24i92pimp79vq3gmb8f") (f (quote (("failfast") ("console" "tokio/tracing" "console-subscriber"))))))

(define-public crate-apollo-router-1.0.0 (c (n "apollo-router") (v "1.0.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.11") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.7") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0vxbzs0a2cch5yivmbf082lvgzd4f6j76kx8frzll496dd5gzls7") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber"))))))

(define-public crate-apollo-router-1.1.0 (c (n "apollo-router") (v "1.1.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.11") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.133") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1rnkmw9ypkns655c7nwriazh9j2mfmswk1ah17sq5dn2mg5qy4xy") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.2.0 (c (n "apollo-router") (v "1.2.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.12") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.134") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0iqnp88c2jrilwv1dyydyv2iwhdmbyj6h9mcdqw2hifrc6wm8dbk") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.2.1 (c (n "apollo-router") (v "1.2.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.12") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.134") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "173vl6pxx0jar4pc62hy1r94j67xsb0ava8vxpgmhkzwznn0c74k") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.3.0 (c (n "apollo-router") (v "1.3.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.0") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.134") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.4.1") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0lvvw3yg88cgwphi275dni3bw8pryilwm7wpgn92vybknr1hcw94") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.4.0 (c (n "apollo-router") (v "1.4.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.3.2") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.17") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.26") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.0") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.4.1") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("cluster" "tokio-comp"))) (o #t) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.11.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1c0vhxyfv4c9f86hlga5sxia3khmk1h2775gynjk1w5lir3pldg9") (f (quote (("failfast") ("experimental_cache" "redis" "redis_cluster_async") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.5.0 (c (n "apollo-router") (v "1.5.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.17") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.26") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.22.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.138") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("cluster" "tokio-comp"))) (o #t) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.11.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.11") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.22.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1mbrk80g2zh08h5xb56j7hxkz32zi5ygbxsjwqh3ms8wc651d5gf") (f (quote (("failfast") ("experimental_cache" "redis" "redis_cluster_async") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.63.0")))

(define-public crate-apollo-router-1.6.0 (c (n "apollo-router") (v "1.6.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.1") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.17") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.23.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.138") (d #t) (k 0)) (d (n "linkme") (r "^0.3.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.0") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("cluster" "tokio-comp"))) (o #t) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.11.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.12") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "tls" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0bji290mkr601dxk3vw1kqnc7pznmqx9i03kya3a0csniqsyibr2") (f (quote (("failfast") ("experimental_cache" "redis" "redis_cluster_async") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.65.0")))

(define-public crate-apollo-router-1.7.0 (c (n "apollo-router") (v "1.7.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.1") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.17") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.23.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.138") (d #t) (k 0)) (d (n "linkme") (r "^0.3.6") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.0") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("cluster" "tokio-comp"))) (o #t) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.11.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.12") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1h84bw1zfh0lx61ckp6w5xdmn2la2k4mfdggzqiv235b83c3vz49") (f (quote (("failfast") ("experimental_cache" "redis" "redis_cluster_async") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.65.0")))

(define-public crate-apollo-router-1.8.0 (c (n "apollo-router") (v "1.8.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.61") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.2") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (o #t) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.12") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "15qrg6ma12acfs46vmh5rhj5imn6k4bdvfns554v41smwx3jifgp") (f (quote (("failfast") ("experimental_cache" "redis" "redis_cluster_async") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.65.0")))

(define-public crate-apollo-router-1.9.0 (c (n "apollo-router") (v "1.9.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.61") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.2") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.9") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.11") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.12") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0w55wfl2sfvmpzb1rgfqn32dx22csk5vk6fvgn2sm6gk3h8ibans") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.65.0")))

(define-public crate-apollo-router-1.10.0 (c (n "apollo-router") (v "1.10.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.9") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.14") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0k6isv5r59rjhviwa1zwici5nlxgqbngkr259f1mi3as616jvb49") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.65.0")))

(define-public crate-apollo-router-1.10.1 (c (n "apollo-router") (v "1.10.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.9") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.15") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_millis") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0v5zd2mps43m09w945fk5i0md2sl5v974qm09cbzhlmd5rpzc87c") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.10.2 (c (n "apollo-router") (v "1.10.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.4.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.9") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.15") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_millis") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0ybnrm4s824y0hcrg0rqcaph7cnx5sq7r7p3bqh46gn0icakvc80") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.10.3 (c (n "apollo-router") (v "1.10.3") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.9") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.15") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_millis") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0pc7imiv4hksz36rd4c6x5v9w80ic10zsaqh3w1801n3yb4kkync") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.11.0 (c (n "apollo-router") (v "1.11.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.7") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deduplicate") (r "^0.3.6") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "linkme") (r "^0.3.7") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.6") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp" "tls" "tokio-native-tls-comp"))) (d #t) (k 0)) (d (n "redis_cluster_async") (r "^0.7.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_millis") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-binary") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0jg2cchzkala0gn4jbh1wj9i4g2fh47l3alalhixrany181hs3qs") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.12.0 (c (n "apollo-router") (v "1.12.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.8") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1rzlb73plf0ihn1kdchpc4w98b5qbb0fm9m091a660b1j08alv9w") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.12.1 (c (n "apollo-router") (v "1.12.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.8") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1n5lds621j0lsl2rbhaqss82242kma9ykvr61ni0s6rr4ijwsmnq") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.13.0 (c (n "apollo-router") (v "1.13.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.12") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "04fdyjf43i9475y3qj355xc4p5z7q02na570bqcccx2w04flrxkn") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.13.1 (c (n "apollo-router") (v "1.13.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.6.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1yfcs85vglwacln4i2jpqnifpb86jj85xnlks36gf09a8bqgbcfh") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.13.2 (c (n "apollo-router") (v "1.13.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0b329phq7bbqjxjcsyycr7j2kia4r91rvkgj0gk2xm0sdz5hjfxc") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.14.0 (c (n "apollo-router") (v "1.14.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1pgy69apxzh4nf4lj8w5ya4gi00hhnnmi0rz0kh3pa2jhi3q513l") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.15.0 (c (n "apollo-router") (v "1.15.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0dlyh12q5g9qgc5j9hdj93x00i2f4ngkwd4xf0gkh2dsk81a8jbw") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.15.1 (c (n "apollo-router") (v "1.15.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1jadp58m0jvlf58gxysd3y1qzw9x557bg675w7m4yr7d5ywclarz") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.16.0-alpha.0 (c (n "apollo-router") (v "1.16.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1hk4q3m24ipwdm8f2cpc7zi21r11h3cnq68p2c6z5hmwvykz9ixf") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.16.0 (c (n "apollo-router") (v "1.16.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.2") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0h89hy5f8aq81w15v0yl98rwhrkqwq9imbdam0hsxwdl6fqcp759") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.17.0 (c (n "apollo-router") (v "1.17.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.2") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0zp8z7jcs9892il03qi81j5l7sfx0ba9v3qcrhmiyb094xxj58fd") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.18.0 (c (n "apollo-router") (v "1.18.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.2") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1hi0vg935qwfdxwrni18f0l64in4mkxl7ijrxlsnynrag71lvqgx") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.18.1 (c (n "apollo-router") (v "1.18.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.2") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1aald744inspa1j3a66g42bhbn9k1dypkwc59lszj1ybdqn76599") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.19.0 (c (n "apollo-router") (v "1.19.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.4") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0bd7dgqin3xjfcagpbwywn73bbgb2fppp4afr112wc3828cf45k9") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.19.1 (c (n "apollo-router") (v "1.19.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0zjhi95ix1l2vys9nixv4718gq08qjcyi8k4zlsp71p9xr0xdwcb") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.20.0 (c (n "apollo-router") (v "1.20.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.18") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1940c25rh5sh35mpqqihgicg4kc9wpvwl8alxpp3asz6hrm8aizy") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-apollo-router-1.21.0-alpha.0 (c (n "apollo-router") (v "1.21.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (k 0)) (d (n "linkme") (r "^0.3.10") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.9.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.14.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1qg3cmk880kgnz6qxnp79dzdp9pnc5ay71x4226x5zc295xwr03v") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.21.0-alpha.1 (c (n "apollo-router") (v "1.21.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.3") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (k 0)) (d (n "linkme") (r "^0.3.10") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.9.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.14.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.2.8") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.7.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "04z52phxm6f3w8l2igcb0fjfxkwqv7m1zb9f9dhj5ffb4vpw7g6y") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.21.0 (c (n "apollo-router") (v "1.21.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.3") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (k 0)) (d (n "linkme") (r "^0.3.10") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.14") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.9.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "^0.2.8") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.7.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1gdjqp6qshd0dyq0bach5ps69mpaibsi1jdpa77r07g87q9fds1m") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.22.0-alpha.0 (c (n "apollo-router") (v "1.22.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.3") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (k 0)) (d (n "linkme") (r "^0.3.10") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.14") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.9.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "^0.2.8") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.7.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0j5r2f7ppqi7a2kar8xsdkmffp5xrqs4swcys8m6fd5pcf1kvaij") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.22.0 (c (n "apollo-router") (v "1.22.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.3") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (k 0)) (d (n "linkme") (r "^0.3.10") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.14") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.9.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.0") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "^0.2.8") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.7.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "149w7i50i6271g8gmldqpz0p894fzwsm8ajkbz94si8qh8dfbkzz") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.23.0-alpha.0 (c (n "apollo-router") (v "1.23.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.70") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "^0.2.9") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.41") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "18n9s0illmy0mjjmv9pqfahwq2fghh6xybfs93620bn6hi83rq50") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.23.0 (c (n "apollo-router") (v "1.23.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.70") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "^0.3.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.41") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1qiw1c16r807m55j7y2d2fx4cf154qwdgjqn0nl8n1fi0wvj9kp5") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.24.0-alpha.0 (c (n "apollo-router") (v "1.24.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.3.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1ng0avfcd7hm1rxnshjgh0kw52yj85542kafvgf7fczjdz270bh1") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.24.0-alpha.1 (c (n "apollo-router") (v "1.24.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.3.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "10a7wk97phjnj6h1d2gdzvrj030b0zf4jq844a25r2ckb7xmfh8s") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.24.0 (c (n "apollo-router") (v "1.24.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.3.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1xalqfzyf445y8cm8np81bv5zii6wyb6za5sh0wh8vw00r07h3c8") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.25.0-alpha.0 (c (n "apollo-router") (v "1.25.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.3.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1mwa0rnnragmxqsi8apa8ywxn5vnhxbyg44ldbfs8j9zc5wwvxwh") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.25.0-alpha.1 (c (n "apollo-router") (v "1.25.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.15") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1b1x7qzg9cspyy30rgj3zf45q2jcjjh6acl7v0q5aqja0qq87j6a") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.25.0-alpha.2 (c (n "apollo-router") (v "1.25.0-alpha.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0xz1kxq8dr7k9fiq43f1xnpjl7ymcdk5zk4r143rjp1fq45ds9hh") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.25.0 (c (n "apollo-router") (v "1.25.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "11si9mpahrwb7lnp54nb8xzh016kcfzc96ls9vkaz9isy3wgg6zs") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.26.0-alpha.0 (c (n "apollo-router") (v "1.26.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "1n0jxpmx3j8gxnc2s1q3yngclzylingzc39y78k98pb9mr8pcf5s") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.26.0-alpha.1 (c (n "apollo-router") (v "1.26.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "0a5a6ar6isdbmr1r7zp568dz86lki5hd0gykp3i1l9by7vwzm42g") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.26.0 (c (n "apollo-router") (v "1.26.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "12g19qa2azwhk1k8b5nz0p9r0nfwz0vr2x9s69vylx6zsjssfpfy") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.27.0-alpha.0 (c (n "apollo-router") (v "1.27.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.71") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-types") (r "^0.55.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.12") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.2.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.5") (d #t) (k 0)))) (h "12dvp4wsxlqh210irybb5ly4jraml2jnrypp3qazgblznzv1pxif") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.27.0-alpha.1 (c (n "apollo-router") (v "1.27.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-types") (r "^0.55.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.22") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^6.0.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "19c8vi4dvny1mn81hqlx5mv1g0drh1c49s00zkbyf9n523311z6y") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.27.0 (c (n "apollo-router") (v "1.27.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.10.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.5.1") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.55.3") (d #t) (k 0)) (d (n "aws-types") (r "^0.55.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.22") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^6.0.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.4.0") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "0781myawmmmnkknz63za14y7zs2rwynakjvwgis5mdbwws8wna7j") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.70.0")))

(define-public crate-apollo-router-1.28.0 (c (n "apollo-router") (v "1.28.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.0") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "075vvsy5gl84dzcngblc697brbnzrj503w9lhjl2swldba9b2907") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (y #t) (r "1.71.1")))

(define-public crate-apollo-router-1.28.1 (c (n "apollo-router") (v "1.28.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1dqj30jk8sdjy8p3bqzam5dmyxdl02laf587bw49v0iqpi2r6dg7") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.71.1")))

(define-public crate-apollo-router-1.29.0 (c (n "apollo-router") (v "1.29.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.2") (d #t) (k 0)) (d (n "memchr") (r "^2.6.2") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.4") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "0lpn03aivd2sypv019wkmci0aq39r4dmjgd6771j2kshlh8x97a9") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.71.1")))

(define-public crate-apollo-router-1.29.1 (c (n "apollo-router") (v "1.29.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.2") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.2") (d #t) (k 0)) (d (n "memchr") (r "^2.6.2") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.15.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.4") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "06asl76f58jchka8k5gldw6wdd61vc9v97kg8dk45hch8jvx367d") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.71.1")))

(define-public crate-apollo-router-1.30.0-alpha.1 (c (n "apollo-router") (v "1.30.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.106") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1ssivx034105kyzj1009yi3qh2kz84lpbdppvlg43xyj3g13nqqf") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.30.0 (c (n "apollo-router") (v "1.30.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.106") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1g7nyif9riw5abi97js7inldslf4qqhwkcksnq0kllmmfgl7a13f") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.31.0-alpha.1 (c (n "apollo-router") (v "1.31.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1f2vrcl86500bpwpf0wi6dkxjgl61027c88rvr7inivg6pwhy5yl") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.30.1 (c (n "apollo-router") (v "1.30.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.1") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.1") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.106") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1z3r4ck90jhcpkrwv62spm1ap6r8sf8aj7ii0awq20wq9q4ch5pj") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.31.0 (c (n "apollo-router") (v "1.31.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "017pvg1c4fja5m763ikac09bmnxfk2x0v32shvsan6swkamiw1wd") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.32.0-alpha.0 (c (n "apollo-router") (v "1.32.0-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.5") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "036bw42gjyl16x5im8isgwgrks7cksy11acdzbhzy37a8m3f2vwn") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.32.0-alpha.1 (c (n "apollo-router") (v "1.32.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.5") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "0z8x0v6xp43gnfvhak0v62l6m3m58kn5yn7397bbl1qs3qik0qsa") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.32.0 (c (n "apollo-router") (v "1.32.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.5") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "0rng4cwqwblvjn17ya953qylr5z4zs947cv6js4qm19v55pjm9n3") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.33.0 (c (n "apollo-router") (v "1.33.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.3") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "157qvx1apc5lhgdgl8hal48ksa3iync3dbipdm1ama8gxcyiq1qs") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.33.1 (c (n "apollo-router") (v "1.33.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.3") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1yfs1pz09w63csd4d14mdpmwrp14mlw9qpxsh4jcx9xf1i6x0921") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.33.2-alpha.0 (c (n "apollo-router") (v "1.33.2-alpha.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.3") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1z9mjaxj2glf6v57v3aah9dhsm0df2ygpvgwk67cx5fsx1b0ada1") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.33.2 (c (n "apollo-router") (v "1.33.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.3") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "05z867dgqlh1jz1r7msky370wl0m8qk55glsr5hxpyggrdxvgzkm") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.34.0-alpha.1 (c (n "apollo-router") (v "1.34.0-alpha.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.4") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.4") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1p08mywybpilljc2pad0wna8j5vsfxh7gqbzgl1ccyiwv9hdzja2") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.34.0-alpha.2 (c (n "apollo-router") (v "1.34.0-alpha.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.4") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.4") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "0dgs4chcip6mxc8psgm6856fkpx2wvyzaaynh8bajjkkj43d756p") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.34.0 (c (n "apollo-router") (v "1.34.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.4") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.4") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.2") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.149") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.6") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.9") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1ydfz3a3xfy1h3k7byq5127kij9zfyrnrha2hnccmxsnmadla7b5") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.34.1 (c (n "apollo-router") (v "1.34.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.5") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("rt-tokio" "metrics" "testing"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.8") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1ir5xnvwwnp1115nnhnf4x6963dh6hp2prs8vi78rz3s97fw7hfd") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.35.0 (c (n "apollo-router") (v "1.35.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.5") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.10") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0rih8krmvgyp6p5shfbqf4gsndhha7bbbaw5h915wfrm4jlxvhs3") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.36.0-rc.0 (c (n "apollo-router") (v "1.36.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.10") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "123lcybs7vcjk659305kpz369h6ipgnpasxx6s79ichgq5pihqhh") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.36.0-rc.1 (c (n "apollo-router") (v "1.36.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.11") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "01vb7yk75z85zh1x2rpkjkjm43i6lzdkhzbvdnmyl41b317w5929") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.36.0-rc.2 (c (n "apollo-router") (v "1.36.0-rc.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.11") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1ijphnvlhqlpcram8vawbyd0yrffqxzkps2ckzr5x5lh1rx0pjsw") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.36.0-rc.3 (c (n "apollo-router") (v "1.36.0-rc.3") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.11") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0zxpmda38z7h1p9y0lfyli78k22ciw8c83r6k17m3z6r02y9mc5g") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.37.0-rc.0 (c (n "apollo-router") (v "1.37.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "linkme") (r "^0.3.19") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.13") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.1.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "14ix2s9m230pyl6vb2ga9qpdq5qsc49v55fr4npfs6b0v4w961rx") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.36.0 (c (n "apollo-router") (v "1.36.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.13") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.0.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (k 0)) (d (n "linkme") (r "^0.3.17") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.11") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.0.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.21") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "03fdf0nbwy1c2pshzyrky33v72wmzc588i54lhg28y1qrwkpi2ih") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.37.0 (c (n "apollo-router") (v "1.37.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "linkme") (r "^0.3.19") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.13") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.1.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "13szjlvcnrcx0lwqxgykvw0r9qxj02qh43qhfv9qpapcypbd48n2") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.38.0-rc.0 (c (n "apollo-router") (v "1.38.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "linkme") (r "^0.3.19") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.14") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.1.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1nby22bc5cq0nflz8pxmi8y8hac7nl1rg7xc62cv865sz7ncayd3") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.38.0-rc.2 (c (n "apollo-router") (v "1.38.0-rc.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "linkme") (r "^0.3.19") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.14") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.1.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "02m8wr8869fbyiiw8iysng4ls9j8pm3mzqyg1nidv3xkxpbxjx8f") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.38.0 (c (n "apollo-router") (v "1.38.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.1") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.29") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "linkme") (r "^0.3.19") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.16") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.14") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.1.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "00l5whlf0bc4183vn67lbgk4bwhlmkil4z341v0s1mrjcxh1qplg") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.39.0-rc.0 (c (n "apollo-router") (v "1.39.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.4") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.4") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.17") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1k7g7k2gd7ighbg8mrgl7kzgvc00cp95bbzgpb734aivmm7l6yz6") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.39.0 (c (n "apollo-router") (v "1.39.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.4") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.4") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.17") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "01ksg2hj958bkvlb8rkdhv9pajf2yh9kyidxgi0vbjn8byvc80nk") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.39.1-rc.2 (c (n "apollo-router") (v "1.39.1-rc.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.4") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.4") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.17") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1lczmhk4b49x6anmqv2xbz75n6ilxfxvwkjv4a9wkg2dh2x022xv") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.39.1 (c (n "apollo-router") (v "1.39.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.4") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.4") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.4") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.0") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.17") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.3") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "10wygm9bvn3hbhva416llzy7hpsxl0h18psw13hhg96bib8d1by4") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.0-rc.1 (c (n "apollo-router") (v "1.40.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.5") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "11i7y770qk1hafngcvh8wcnc6d4g35qcawqzv6nl1cz6j89yg7jh") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.0 (c (n "apollo-router") (v "1.40.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.10") (d #t) (k 0)) (d (n "apollo-federation") (r "^0.0.5") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.5") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0ahv6l1pkagn7fymdvsykc5ya030dxlldwz1cfmbbwjpmz4mn0js") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.1-rc.0 (c (n "apollo-router") (v "1.40.1-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.5") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0m31mys2rjacn6p6gacaiishf6mmxmdr46gx47wn2npz6r4s01q3") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.1-rc.1 (c (n "apollo-router") (v "1.40.1-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0p27z43npf6l7lcfnxw9wrc0vnxr99sv2ij7xps8k2xav169kx51") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.1 (c (n "apollo-router") (v "1.40.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0rdhj1kw1c7xam92gk9mcmz9n9w92f0070hj0jyxdfw7064by19s") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.41.0-rc.0 (c (n "apollo-router") (v "1.41.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0qar16nhfi15pjf6600yrx944w30z3yl3zb182z69y9hn6hjpvjj") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.41.0-rc.1 (c (n "apollo-router") (v "1.41.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1srl375h84dllyvrdlba5s8kxvp7yddimk0r4f65xfhbzf7h8dlp") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.2-rc.0 (c (n "apollo-router") (v "1.40.2-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "09z64hxia2kbd9czqbcj9xkasvklwpy375hng3ax59pfg6zib1mh") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.40.2 (c (n "apollo-router") (v "1.40.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.5") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.5") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.22") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0gfm4dwyirmz6w41hw9a1bqkxr5vzhb6nhg5cjb1k91gbv9fspnc") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.41.0-rc.4 (c (n "apollo-router") (v "1.41.0-rc.4") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0rqkcad9q11kjhpz6yqqq5mxfl9g4q30iz68mzj5hqc29s697z93") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.42.0-rc.0 (c (n "apollo-router") (v "1.42.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0dnv7kaxvmhg165w42vkd60sbijxw1ig6aylrv3x5gw9fl6dzziv") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.41.0 (c (n "apollo-router") (v "1.41.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0vciyrmzkqkf54w40kpmsjz1i9rkgh3i7f7mlnsb2rhy0qncgln9") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (y #t) (r "1.72.0")))

(define-public crate-apollo-router-1.42.0-rc.1 (c (n "apollo-router") (v "1.42.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0p7mmi1qhnnfway8jh3nsrf2wbx3spyff8mxdprs2ld7md7kc6md") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.41.1 (c (n "apollo-router") (v "1.41.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "07z5jblg5z4a40x96gw5sxpp67b0yc5f7hmyx4nwmzg6xx4wpsr3") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.42.0 (c (n "apollo-router") (v "1.42.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1xg917ny0n8c6mr1gdpgzrz6qbpgqyc76p07ms4x754329q61z3x") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.43.0-rc.0 (c (n "apollo-router") (v "1.43.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.8") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1d9cbs0phck674vyyygw2w7brd0d0ay7y5p0d0jqwgiimpsamxar") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.43.0-rc.1 (c (n "apollo-router") (v "1.43.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.8") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1yzkkqynxmfrcjr46jj5rn6ch4rrnncl246imga7xq8v0cmfwkrm") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.43.0 (c (n "apollo-router") (v "1.43.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.8") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0ddc4ym35wgm0x468l1aky0af7xi77lbcz1jbq9cvmn46035i4dg") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.43.1 (c (n "apollo-router") (v "1.43.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.8") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0yl97gr2al07nv7rgijvjrxqjbr8lccl6z2l8x8i0kb1hj7lhxs8") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.43.2 (c (n "apollo-router") (v "1.43.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.13") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.8") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.16") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0ryilp0ppngw1sahbcqly6v1f3v1z4ybhy49qqqp7gkfxv4p2vz4") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.44.0 (c (n "apollo-router") (v "1.44.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.14") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.9") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.17") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1nzair3lns921z0mwbwnrsqj3z6922r9s18sp3m8g9yzpjw7yzm7") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (y #t) (r "1.72.0")))

(define-public crate-apollo-router-1.45.0-alpha.4 (c (n "apollo-router") (v "1.45.0-alpha.4") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "01mx0apz5aa83wr3v6mji4ypqw945mqd0qfm8mm037yv3181fkxs") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.45.0-rc.0 (c (n "apollo-router") (v "1.45.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.10") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1gakfhb7k3v6b0m1qrrf1pahs82akrh6wd8m4ckgy2619h3ccizi") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.45.0-rc.1 (c (n "apollo-router") (v "1.45.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "12ljgda5an6dfqmvdk44ng4jc85w2bpim182zabqyjdvbn4hrsxz") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.45.0 (c (n "apollo-router") (v "1.45.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "180chmaw7bs2bg0xx90abppmk1la2yd8cxq39jyrsqfnym8535zp") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (y #t) (r "1.72.0")))

(define-public crate-apollo-router-1.45.1-rc.0 (c (n "apollo-router") (v "1.45.1-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0p516niyhnlpl4a8dqdm5bhdpm6p5xiv2wsvshdsga3fzl6yhikl") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.45.1-rc.1 (c (n "apollo-router") (v "1.45.1-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1r3ryphpiq0vr2fqh0vq825qpda57yls9s2w25f24k9czm1z3741") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.45.1 (c (n "apollo-router") (v "1.45.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.18") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1k7lyinp0d4hhq8i8hkc56m3xi7qfqvf93sf5sd3vy62vb9mhskd") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.46.0-rc.0 (c (n "apollo-router") (v "1.46.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.20") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "06hgw4kpj48lx3pwihb1fq7kx7h9cx4vcx7v1d4098sbs19bbhm0") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.46.0-rc.1 (c (n "apollo-router") (v "1.46.0-rc.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.20") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1xl94r2mwfhsaw0hs1ikpq4kwrzjjl65s4l7d07igsvs2gqy8izj") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.46.0-rc.3 (c (n "apollo-router") (v "1.46.0-rc.3") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0c2a9vcd37vn53s68wma2y6p8fpmp1nq6hwxhygrlndq5b28snns") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.46.0 (c (n "apollo-router") (v "1.46.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0cpnhsk2infid7zpv456wnqs11fw5frimv63mxkx62i6ag29zizn") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-apollo-router-1.47.0-rc.0 (c (n "apollo-router") (v "1.47.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=1.47.0-rc.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1yydxr5pvq7ccy8xpm9ii9gzdx66wvqp2fy5bnclkpd16mm0lb71") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber") ("ci")))) (r "1.72.0")))

(define-public crate-apollo-router-1.47.0 (c (n "apollo-router") (v "1.47.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=1.47.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.2") (d #t) (k 2)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0ycg3qx1gb2yi70y34svywmy9241c9mwbyxi8n0dsmi95yx53nvp") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber") ("ci")))) (r "1.72.0")))

(define-public crate-apollo-router-1.48.0-rc.0 (c (n "apollo-router") (v "1.48.0-rc.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=1.48.0-rc.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.2") (d #t) (k 2)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.25") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (f (quote ("include-exclude"))) (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "06xxd427w0hghcbzmmpxinrk8r4w79dvl26sfvpanngkc4zgjhc7") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber") ("ci")))) (r "1.72.0")))

(define-public crate-apollo-router-1.48.0 (c (n "apollo-router") (v "1.48.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=1.48.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.7.2") (d #t) (k 2)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.25") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (f (quote ("include-exclude"))) (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.5") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "1fxnjs2w7sqm30fk65v5dsyrpmbcqx104p8vwpsn4q3nbwyx4mg2") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber") ("ci")))) (r "1.72.0")))

