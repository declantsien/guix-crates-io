(define-module (crates-io ap to aptos-parallel-executor) #:use-module (crates-io))

(define-public crate-aptos-parallel-executor-0.1.0 (c (n "aptos-parallel-executor") (v "0.1.0") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "0p6i4y28zaacqcfb4jypxizy5rrs3q037c1wpkrahxpknmggxgvq") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.1 (c (n "aptos-parallel-executor") (v "0.1.1") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "0iwvnf24lpg55pglcjkf3h4hi8663mqsjqq9jz2glqz0m0xfqc0z") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.2 (c (n "aptos-parallel-executor") (v "0.1.2") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "106lj45j2dbhr0pgdkxydalqs755ancnm0km6p0nnlwdwbh9ydzh") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.3 (c (n "aptos-parallel-executor") (v "0.1.3") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "145n1kxavpxkvnan1rc0anqlc8ghclhwmmgkzwg8ln1llyda4n9r") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.4 (c (n "aptos-parallel-executor") (v "0.1.4") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "03mvpcml8g2kdmn1hgkijn0l503a093dilzxlvfqp9cv8nf7zmm3") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.5 (c (n "aptos-parallel-executor") (v "0.1.5") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "04j0c0881lxhkyr8ma2n86pqicmf52jwbpcsxjq0ya17zbgvpr4h") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.6 (c (n "aptos-parallel-executor") (v "0.1.6") (d (list (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "11z7rbqinybyxg3x203j2r7bs0qjq85qhyrawiisqkpjrmkzyxad") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.1.7 (c (n "aptos-parallel-executor") (v "0.1.7") (d (list (d (n "aptos-infallible") (r "^0.1.7") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.1.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "1x9rddxr8zvnnxlbx4ypr5a4kqbwmv4n2wvbq5a5yz8wavx1yjxf") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.2.1 (c (n "aptos-parallel-executor") (v "0.2.1") (d (list (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.2.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "04ybd6vqggcadvl4wm2l5n6bsnprabs5rpbqa2908wd4adxv5w1r") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.2.2 (c (n "aptos-parallel-executor") (v "0.2.2") (d (list (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.2.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "1mcgsbr2l2mz5z3l2y902hfhrq3xkiccm04sjwhgx49vplqbrkjf") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.2.6 (c (n "aptos-parallel-executor") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.2.0") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.2.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "11192pl25xy6nh88s93ds51l5zqn9l4hc78bkpdn4mm66lycbrxk") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

(define-public crate-aptos-parallel-executor-0.2.7 (c (n "aptos-parallel-executor") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.2.0") (d #t) (k 0)) (d (n "mvhashmap") (r "^0.2.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)))) (h "1f92825m3aw2bjg9h7pmi94gw9qn7202h80lc9qnpyr48wlciz4y") (f (quote (("fuzzing" "criterion" "proptest" "proptest-derive")))) (y #t)))

