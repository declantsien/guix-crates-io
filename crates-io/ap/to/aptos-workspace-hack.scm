(define-module (crates-io ap to aptos-workspace-hack) #:use-module (crates-io))

(define-public crate-aptos-workspace-hack-0.1.0 (c (n "aptos-workspace-hack") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1fi6lfxcck8gplrc7kfqdrbdrkhk9mxb8lklxilwwnqd4g3yrgxn") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.1 (c (n "aptos-workspace-hack") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1x09bk8y7ki0z6pqglb6qv08xcpm329ga4g707sb64zpxl2v9v9x") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.2 (c (n "aptos-workspace-hack") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1v12br46733mcyi9cr0kmwabix8a8gxdfnl2qh3i57s0h42x9s9c") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.3 (c (n "aptos-workspace-hack") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1aln43cmzvhn9mvya1kih5k0hldimxfbkyg5cj238ycz6irfjzgy") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.4 (c (n "aptos-workspace-hack") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1wchwqfmg8vi5r2nivjaa0x4976709l46by12wk1yh0w23rfgpza") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.5 (c (n "aptos-workspace-hack") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "0v9c0b6725fsa67hkld5ifribbnrshcc309v0rn450nb7i6a603a") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.6 (c (n "aptos-workspace-hack") (v "0.1.6") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1nlq6s95aqwdi5v161a7l1s0ayykgygm6g8qnbl6ff8yp7n80xzh") (y #t)))

(define-public crate-aptos-workspace-hack-0.1.7 (c (n "aptos-workspace-hack") (v "0.1.7") (d (list (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (d #t) (k 1)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde" "std"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("jobserver" "parallel"))) (k 1)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "libc" "oldtime" "serde" "std" "time" "winapi"))) (d #t) (k 1)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (f (quote ("ansi_term" "atty" "color" "strsim" "suggestions" "vec_map"))) (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (f (quote ("crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.1") (f (quote ("crossbeam-epoch" "crossbeam-utils" "std"))) (d #t) (k 1)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.8") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1.3") (f (quote ("std"))) (k 1)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 0)) (d (n "diesel") (r "^1.4.8") (f (quote ("32-column-tables" "bigdecimal" "bitflags" "chrono" "num-bigint" "num-integer" "num-traits" "numeric" "postgres" "pq-sys" "r2d2" "serde_json" "with-deprecated"))) (d #t) (k 1)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (f (quote ("alloc" "block-buffer" "core-api" "std"))) (d #t) (k 1)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "either") (r "^1.6.1") (f (quote ("use_std"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (f (quote ("alloc" "futures-sink" "sink" "std"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.21") (f (quote ("std"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.21") (f (quote ("alloc" "std"))) (d #t) (k 1)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (k 1)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash" "inline-more" "raw"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("client" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp"))) (d #t) (k 1)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (f (quote ("glob"))) (d #t) (k 1)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (f (quote ("use_alloc" "use_std"))) (d #t) (k 1)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("std"))) (d #t) (k 1)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (k 1)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (f (quote ("std" "use_std"))) (d #t) (k 1)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("std"))) (d #t) (k 1)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 1)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("send_guard"))) (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom" "libc" "rand_chacha" "small_rng" "std" "std_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("aho-corasick" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (f (quote ("unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment"))) (d #t) (k 1)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("__tls" "blocking" "cookie_crate" "cookie_store" "cookies" "default-tls" "hyper-tls" "json" "native-tls-crate" "proc-macro-hack" "serde_json" "stream" "tokio-native-tls" "tokio-util"))) (d #t) (k 1)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 0)) (d (n "rusty-fork") (r "^0.3.0") (f (quote ("timeout" "wait-timeout"))) (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("alloc" "derive" "rc" "serde_derive" "std"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("indexmap" "preserve_order" "std"))) (d #t) (k 1)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (f (quote ("std"))) (d #t) (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-apple-darwin") (k 1)) (d (n "standback") (r "^0.2.17") (f (quote ("std"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "syn") (r "^1.0.95") (f (quote ("clone-impls" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("bytes" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "test-util" "time" "tokio-macros"))) (d #t) (k 1)) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-apple-darwin") (k 1) (p "tokio-util")) (d (n "tokio-util-3b31131e45eafb45") (r "^0.6.10") (f (quote ("codec" "io"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 0) (p "tokio-util")) (d (n "tokio-util-ca01ad9e24f5d932") (r "^0.7.2") (f (quote ("codec" "compat" "futures-io" "tracing"))) (d #t) (k 1) (p "tokio-util")) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 1)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("attributes" "log" "std" "tracing-attributes"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.26") (f (quote ("lazy_static" "std"))) (d #t) (k 1)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (f (quote ("multipart" "tls" "tokio-rustls" "tokio-tungstenite" "websocket"))) (d #t) (k 1)))) (h "1z2zq603s2wq2zi4ap63v72ws1v6xnw0pqgvxdy8qwssqmljfjji") (y #t)))

