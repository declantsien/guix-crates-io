(define-module (crates-io ap to aptos-types) #:use-module (crates-io))

(define-public crate-aptos-types-0.1.0 (c (n "aptos-types") (v "0.1.0") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "0i5wkcfz63s2wj12hdz1qvn5nxld2x7hga8vr0k7pwrq1jwldbpi") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.1 (c (n "aptos-types") (v "0.1.1") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "1ycvgm2x04rz98m3dcyazdbjv2ybrhy853apyb2x6pz1r53mhghw") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.2 (c (n "aptos-types") (v "0.1.2") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "0hlwshh7hw6gycwjx3v99yz5d0rd988z80dh8icfwidmvnvllgsa") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.3 (c (n "aptos-types") (v "0.1.3") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "02d19q0zwacsjb8znsj16mblmnyqg9m0cz52hz4q80aaxqr5xjp0") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.4 (c (n "aptos-types") (v "0.1.4") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.0") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "0nggawfln40n4f5xakqwhc14d4igppia4mc9h2cqqn8pkc3spjli") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.5 (c (n "aptos-types") (v "0.1.5") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.4") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.4") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "0jf89g3imykg2s6zk67ilnc84lps4kj0gnlvpyrj6p79knb85z4r") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.6 (c (n "aptos-types") (v "0.1.6") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.4") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.4") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "0hci2x7m8d4vdr8d2l0xghrz60xn0y827a7qh76gaahf27dx59qw") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.1.7 (c (n "aptos-types") (v "0.1.7") (d (list (d (n "aes-gcm") (r "^0.9.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.7") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.7") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.1.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.1.7") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.1.7") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "00q8hrwv2m1vhdgw859cp2xyhbdq74zprd3936pc3n0kqmwf371x") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.2.1 (c (n "aptos-types") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "1994iqyzryfhiyhafnzbzxhmjfzpfwv6ks0r6j6mgwqyzda0fhml") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.2.2 (c (n "aptos-types") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "1rl118np464zmnlpw0aqwzvaagl682qxbkzr1qgmv21kw824wgi4") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.2.6 (c (n "aptos-types") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "00b6ravr7y1fiaqw162d5896h26c19xwpanskq0kc3bc4d1qw5qy") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

(define-public crate-aptos-types-0.2.7 (c (n "aptos-types") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32"))) (d #t) (k 0)) (d (n "move-deps") (r "^0.2.1") (f (quote ("address32" "fuzzing"))) (d #t) (k 2)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "1rzcdkl4ah0xij8spb263h4gh78skdhf9yyvh0i0p90669qhvzqq") (f (quote (("fuzzing" "proptest" "proptest-derive" "aptos-crypto/fuzzing" "move-deps/fuzzing") ("default")))) (y #t)))

