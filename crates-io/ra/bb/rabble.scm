(define-module (crates-io ra bb rabble) #:use-module (crates-io))

(define-public crate-rabble-0.1.0 (c (n "rabble") (v "0.1.0") (d (list (d (n "amy") (r "^0.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.7") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0mhgx81zdmg9khfzbk78qjs5hvqs28c7k4ly4q8dydl0rwnhcxg1")))

(define-public crate-rabble-0.1.1 (c (n "rabble") (v "0.1.1") (d (list (d (n "amy") (r "^0.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.7") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1wzjs0n9dwzcglijxnpa241jnq1bk5n4w6g8cixs8nkmbi8fm04a")))

(define-public crate-rabble-0.1.2 (c (n "rabble") (v "0.1.2") (d (list (d (n "amy") (r "^0.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.7") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1ycspmf59p8mg64kfhb7p0bcxd5jk28c8ay04pbdhiycwhlm202c")))

(define-public crate-rabble-0.2.0 (c (n "rabble") (v "0.2.0") (d (list (d (n "amy") (r "^0.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.8") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "12cvh5rdlylq70c567fhl34zy3qzd2s9xjwylflq59378ixads9g")))

(define-public crate-rabble-0.2.1 (c (n "rabble") (v "0.2.1") (d (list (d (n "amy") (r "^0.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.8") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0hg2120dc1lsw1pzh5g9h207bqzy3hhvpl7nkag2acp99biqzba4")))

(define-public crate-rabble-0.3.0 (c (n "rabble") (v "0.3.0") (d (list (d (n "amy") (r "^0.7") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.1") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serialize") (r "^0.8") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1mrigk9nw8nvqa7vllk587hc56inp8kdxk9kglva1mwwaycdxkbv") (f (quote (("no_timerfd" "amy/no_timerfd"))))))

(define-public crate-rabble-0.4.0 (c (n "rabble") (v "0.4.0") (d (list (d (n "amy") (r "^0.7.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.2") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "165lv80yjgijfvswflr2w59yfw1syyypdfns44mlmdd7c2sdc524") (f (quote (("no_timerfd" "amy/no_timerfd"))))))

(define-public crate-rabble-0.4.1 (c (n "rabble") (v "0.4.1") (d (list (d (n "amy") (r "^0.7.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "ferris") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "orset") (r "^0.2") (d #t) (k 0)) (d (n "protobuf") (r "^1.0.24") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^1") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-envlogger") (r "^0.5") (d #t) (k 0)) (d (n "slog-stdlog") (r "^1") (d #t) (k 0)) (d (n "slog-term") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0njxh7ilblxv54vv3ynr3pnx919d0kwaxnpsbnfi5cdci4nc5l1a") (f (quote (("no_timerfd" "amy/no_timerfd"))))))

