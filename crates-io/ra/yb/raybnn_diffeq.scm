(define-module (crates-io ra yb raybnn_diffeq) #:use-module (crates-io))

(define-public crate-RayBNN_DiffEq-0.1.0 (c (n "RayBNN_DiffEq") (v "0.1.0") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "0r3k7bn73kbsdgc7jk1x4rnrf5yl5m9xxlysfz7rbmylr9z43i83")))

(define-public crate-RayBNN_DiffEq-0.1.1 (c (n "RayBNN_DiffEq") (v "0.1.1") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)))) (h "05vr3ln4aw07pfwh0kfjhpbahcxh2d7is803hfma0fn7iymdc3jq")))

(define-public crate-RayBNN_DiffEq-0.1.2 (c (n "RayBNN_DiffEq") (v "0.1.2") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)))) (h "0sj94mdn7675fn7jl6chsxkz99n7jf3pgcqnnfa825w8prfpqcbm")))

(define-public crate-RayBNN_DiffEq-0.1.3 (c (n "RayBNN_DiffEq") (v "0.1.3") (d (list (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 0)) (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 1)) (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)))) (h "1rqniqmy0x4yq2ccwiy5jpwszjpnkhm4b0blfji540cr7bsd0318")))

(define-public crate-RayBNN_DiffEq-0.1.4 (c (n "RayBNN_DiffEq") (v "0.1.4") (d (list (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 0)) (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 1)) (d (n "RayBNN_DataLoader") (r "^0.1.2") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)))) (h "1cawfh9rhm2bk82smvlzxx6k7xqw5mlaamjwj8ww87wmfw0qvvxp")))

(define-public crate-RayBNN_DiffEq-0.1.5 (c (n "RayBNN_DiffEq") (v "0.1.5") (d (list (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 0)) (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 1)) (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)))) (h "11p3fihws129m5b12dkabhnb51qz048im5gyf0cmn8b76fvhzd0g")))

(define-public crate-RayBNN_DiffEq-2.0.1 (c (n "RayBNN_DiffEq") (v "2.0.1") (d (list (d (n "RayBNN_DataLoader") (r "^2.0.2") (d #t) (k 0)) (d (n "RayBNN_DataLoader") (r "^2.0.2") (d #t) (k 1)) (d (n "RayBNN_DataLoader") (r "^2.0.2") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.4.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.4.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.4.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.3") (d #t) (k 0)) (d (n "num") (r "^0.4.3") (d #t) (k 1)) (d (n "num") (r "^0.4.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.19") (d #t) (k 2)))) (h "11654i2fai60d4jigp28nz8lkm1wv2v2w923wb6cjrrpbfbj6m4s")))

