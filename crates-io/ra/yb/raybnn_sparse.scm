(define-module (crates-io ra yb raybnn_sparse) #:use-module (crates-io))

(define-public crate-RayBNN_Sparse-0.1.0 (c (n "RayBNN_Sparse") (v "0.1.0") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "01jm2b6aipfp0fb4xln509bnz2ggz5xx2rna0sqj5q50mifjkll2")))

(define-public crate-RayBNN_Sparse-0.1.1 (c (n "RayBNN_Sparse") (v "0.1.1") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "1mlccd2lnnf040ba2w44p2c9vd2hszjr256n4wwg6kbn4zvrpkkc")))

(define-public crate-RayBNN_Sparse-0.1.2 (c (n "RayBNN_Sparse") (v "0.1.2") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "0vbs1x9pcq7irv5imanjdbm7g5nzcagjmx598sgvfffzl60gn0vp")))

(define-public crate-RayBNN_Sparse-0.1.4 (c (n "RayBNN_Sparse") (v "0.1.4") (d (list (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "1svc96dr0l5bisbqbd8bb0p1m40icsbs1n3pl4wwc5nwkwr0k3v6")))

(define-public crate-RayBNN_Sparse-0.1.5 (c (n "RayBNN_Sparse") (v "0.1.5") (d (list (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 0)) (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 1)) (d (n "RayBNN_DataLoader") (r "^0.1.3") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 0) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 1) (p "arrayfire_fork")) (d (n "arrayfire") (r "^3.8.1") (d #t) (k 2) (p "arrayfire_fork")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 1)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (d #t) (k 2)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 1)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 2)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 1)) (d (n "num") (r "^0.4.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 1)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)))) (h "0p0w49xi5zqjbgyxck0q361fll03ha7hvq09w9kh007635mrnymv")))

