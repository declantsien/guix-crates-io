(define-module (crates-io ra ur raur) #:use-module (crates-io))

(define-public crate-raur-0.1.0 (c (n "raur") (v "0.1.0") (d (list (d (n "reqwest") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "0fd293lhwfizrg62d0x0gmgr9098n41l6csgr3yjygy7jyflwdcf")))

(define-public crate-raur-0.2.0 (c (n "raur") (v "0.2.0") (d (list (d (n "display_derive") (r "^0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "0141gqd44alnkh15zhywd4lh7bhcavj2x1l27cvb1cphx2w1b9rp")))

(define-public crate-raur-0.3.0 (c (n "raur") (v "0.3.0") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "16m8xxnm186nghw3fln80c213vbdijrcdxs7nryw27n09p6iq7w6")))

(define-public crate-raur-0.3.1 (c (n "raur") (v "0.3.1") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1y3vmi8sa2fshxcmrbyxnrdapg916ilsag9l4k64a9qlfv9lwr6j")))

(define-public crate-raur-0.3.2 (c (n "raur") (v "0.3.2") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "19d0736dggxfp985fpn0k1m3188pn6zm9jl36na5d08wrj4pyppb")))

(define-public crate-raur-1.0.0 (c (n "raur") (v "1.0.0") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "02flbsb3f7nzcwlpncdc9z5jpangzpif1v55wjyvkycacqwaxxy1")))

(define-public crate-raur-1.0.1 (c (n "raur") (v "1.0.1") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "0dfq8zggm892miyjng7jbzw418n1cv8cgww8jnj221f4ml8npq81")))

(define-public crate-raur-1.0.2 (c (n "raur") (v "1.0.2") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1fkjkpizfy51mmyach4yfgy8nwq8n9lg24603fj57pcnwll3fl81")))

(define-public crate-raur-2.0.0 (c (n "raur") (v "2.0.0") (d (list (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "0y5y888vmp3m92fn0yysd401k8ysdrhki7yaixqr9n7w468i6bpw") (f (quote (("rustls" "reqwest/rustls-tls"))))))

(define-public crate-raur-2.0.1 (c (n "raur") (v "2.0.1") (d (list (d (n "reqwest") (r "^0.9") (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "038nfm40d4aayw8317nyy2hznks2kacra062xz9bp8r5xyc2ckdi") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default"))))))

(define-public crate-raur-2.0.2 (c (n "raur") (v "2.0.2") (d (list (d (n "reqwest") (r "^0.9") (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1psbai49wfnpd1b494difnabrx97vhhfg5f9m97pfmlhnqml89z6") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default"))))))

(define-public crate-raur-3.0.0 (c (n "raur") (v "3.0.0") (d (list (d (n "reqwest") (r "^0.10.7") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1al576zy8x1wsayvjw6sbd3bw20qy91wynsq8ss7kp04ryp6cng8") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default"))))))

(define-public crate-raur-3.0.1 (c (n "raur") (v "3.0.1") (d (list (d (n "reqwest") (r "^0.10.7") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "16mhqn5qxwxjwwbfwqlvw993a5axv3qnn5hdryi9dgibq4rqw726") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default"))))))

(define-public crate-raur-4.0.0 (c (n "raur") (v "4.0.0") (d (list (d (n "async-trait") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.8") (f (quote ("blocking" "json"))) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^0.2.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0v3gwrkd5g57qfirmvyrh4km5a9paxjncnz2dcyd6zn9nkzyyd7k") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default" "async") ("blocking") ("async" "async-trait"))))))

(define-public crate-raur-4.0.1 (c (n "raur") (v "4.0.1") (d (list (d (n "async-trait") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.8") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^0.2.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "00la384s621abrfmax0cvng62aqz89xhwdjkljl84yzcj0k1lk8r") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default" "async") ("blocking" "reqwest/blocking") ("async" "async-trait"))))))

(define-public crate-raur-5.0.0 (c (n "raur") (v "5.0.0") (d (list (d (n "async-trait") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1bxg5kyk0mpv8mvf41qvas7y48cm4c4fsxq8nyzc8x6iyr0x4wh8") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default" "async") ("blocking" "reqwest/blocking") ("async" "async-trait"))))))

(define-public crate-raur-5.0.1 (c (n "raur") (v "5.0.1") (d (list (d (n "async-trait") (r "^0.1.50") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0.125") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.125") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 0)))) (h "1kc5zmwilky3d15hhk01zpqg0c296xxpq7swv798nnlh42nzkzgx") (f (quote (("rustls" "reqwest/rustls-tls") ("default" "reqwest/default" "async") ("blocking" "reqwest/blocking") ("async" "async-trait"))))))

(define-public crate-raur-6.0.0 (c (n "raur") (v "6.0.0") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.136") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "09yj9cx70pfglwz4mv65cjfmqnhkicma7gpqsbc7fhy1x0awprw6") (f (quote (("trait" "async-trait") ("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "reqwest/default" "async") ("blocking-trait") ("blocking" "reqwest/blocking" "blocking-trait") ("async" "reqwest" "async-trait" "trait"))))))

(define-public crate-raur-7.0.0 (c (n "raur") (v "7.0.0") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.136") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "05yc47d5z7q5mga3bylnc5qipbbi04icnybsqnw6ifzdbqvkzyys") (f (quote (("trait" "async-trait") ("rustls-tls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "reqwest/default" "async") ("blocking-trait") ("blocking" "reqwest/blocking" "blocking-trait") ("async" "reqwest" "async-trait" "trait"))))))

