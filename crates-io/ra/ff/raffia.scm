(define-module (crates-io ra ff raffia) #:use-module (crates-io))

(define-public crate-raffia-0.1.0 (c (n "raffia") (v "0.1.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "insta") (r "^1.19") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "lightningcss") (r "^1.0.0-alpha.35") (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.9") (f (quote ("const_generics" "serde"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 2)) (d (n "swc_css_ast") (r "^0.114.0") (d #t) (k 2)) (d (n "swc_css_parser") (r "^0.123.0") (d #t) (k 2)))) (h "0bcfh8lvvp5j4hn6khqa1ijkxlnaji56zapq1fq8jlfhhbg8q1a4") (f (quote (("serialize" "serde"))))))

(define-public crate-raffia-0.2.0 (c (n "raffia") (v "0.2.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.26") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "040d2sja2nnhh0rhpprzvwam3327d81czlnkg556f9z625zavgh1") (f (quote (("serialize" "serde"))))))

(define-public crate-raffia-0.3.0 (c (n "raffia") (v "0.3.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "04azfc7bf3wml79yrg9ffzgzqaidpbdpy179vrcfx4r0sz43yyhb") (f (quote (("serialize" "serde"))))))

(define-public crate-raffia-0.4.0 (c (n "raffia") (v "0.4.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "0hna2iyvdcqvsw613smw38x9hs9kbzls0ngb4amfvhpmhs664d4g") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.5.0 (c (n "raffia") (v "0.5.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "0pqc8ld98j014vw29l38ssi61glfmrbjm1y8ilaq5zf5iqbhbnpw") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.5.1 (c (n "raffia") (v "0.5.1") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "17ijfpq9nnmca5zr3aqaqrdsz5v4lwpqi5igpr53m1bg42yrwsi5") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.6.0 (c (n "raffia") (v "0.6.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "1dxjl2f2zd1x49rv3g51jjyxqx2f0r84ihavs9lpcvbvgd2isdfr") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.7.0 (c (n "raffia") (v "0.7.0") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "1fxcj6d6r99sk79z8f0v4dgibk373v9gmb36i8snqc7sccrbxpri") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.7.1 (c (n "raffia") (v "0.7.1") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "1ah0yp9wc6jkzij6gddannplr3k35sqiss5mzwxwwlpf4r3vabw6") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.7.2 (c (n "raffia") (v "0.7.2") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.29") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "1cavp1dpc48y5i8jww5sbcfzbzy71npzgbbjqaa0dfdb8vrdnk82") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

(define-public crate-raffia-0.7.3 (c (n "raffia") (v "0.7.3") (d (list (d (n "codespan-reporting") (r "^0.11") (d #t) (k 2)) (d (n "insta") (r "^1.38") (f (quote ("glob" "ron"))) (d #t) (k 2)) (d (n "raffia_macro") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.13") (f (quote ("const_generics" "serde"))) (d #t) (k 0)))) (h "16ar7z70i3s3ycw7rr2f3jm3ma6xg7x47ijgwc9km70xqpnhxng6") (f (quote (("serialize" "serde") ("config_serde" "serde"))))))

