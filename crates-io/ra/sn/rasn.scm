(define-module (crates-io ra sn rasn) #:use-module (crates-io))

(define-public crate-rasn-0.0.0 (c (n "rasn") (v "0.0.0") (h "1knh7amqrb4jlgkyydlaxvpclav6yy8nbmpqjcpi5wv57ynjiz28")))

(define-public crate-rasn-0.2.0 (c (n "rasn") (v "0.2.0") (d (list (d (n "bitvec") (r "^0.18.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^0.5.6") (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("alloc"))) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "rasn-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1r7x05ig8lk1vjjfh2cvmqn4b2qhp6mjwmnf4azqsiclc3hdh5xh") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.2.1 (c (n "rasn") (v "0.2.1") (d (list (d (n "bitvec") (r "^0.19.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^0.5.6") (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("alloc"))) (k 0)) (d (n "nom") (r "^6.0.0-beta1") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "rasn-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "15rrd8pk7ll5ha77xwbwnm31yj2gw3h6rbrzaq23qryd5wzdlzgw") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.2.2 (c (n "rasn") (v "0.2.2") (d (list (d (n "bitvec") (r "^0.19.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^0.5.6") (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("alloc"))) (k 0)) (d (n "nom") (r "^6.0.0-beta1") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "rasn-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0xv7s6rdy3s3f85i6i5kw35i7as8lj9yfrbf8xhm3rkjyk4fcm88") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.3.0 (c (n "rasn") (v "0.3.0") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.0.1") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "nom") (r "^7.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0wv2vacx2816d01nvz9cfnfwspbwsq3kzb6fk58lp56clfm9wzf7") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.3.1 (c (n "rasn") (v "0.3.1") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.0.1") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "nom") (r "^7.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1ybcnipibwmp0dyxr6hsy2dpz0nsx0vs1abmbk1jgh79irqq5wcr") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.4.0 (c (n "rasn") (v "0.4.0") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.12.0") (d #t) (k 2)))) (h "043yrnc6687nby03hlv4sir2kxczgrpsy36qv3wbcv6iddcxrx4g") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.4.1 (c (n "rasn") (v "0.4.1") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.12.0") (d #t) (k 2)))) (h "10g32kh35hlwb7xhmndrlvw3mfj171jk9m4flfgf11lcjwfp5mgi") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.4.2 (c (n "rasn") (v "0.4.2") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.12.0") (d #t) (k 2)))) (h "0z4sbg330sv998zgrf7ffxcf3phn2pk516ckjp5byq9y3hrb9rpd") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.4.3 (c (n "rasn") (v "0.4.3") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.12.0") (d #t) (k 2)))) (h "08qnr8skdl9kkkf5ndwzxxk89dd58r2m51bglqj69mp5c3yfi4bd") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.5.0 (c (n "rasn") (v "0.5.0") (d (list (d (n "bitvec") (r "^0.22.3") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.6.10") (k 0)) (d (n "x509-parser") (r "^0.12.0") (d #t) (k 2)))) (h "036zrgm5zc03fmc7abnz8drjpfdlj66d6gx7kbzaz1crqniz75yb") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.5.1 (c (n "rasn") (v "0.5.1") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0l05lhx8w11fxmwjdq210i195gz2xqqndnvfk7d986hp8f96xjf5") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.5.2 (c (n "rasn") (v "0.5.2") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0aanan0fjhx2d34hpsk3nmkgci60538afcnkq96lzpbiyzkjsi1k") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.5.3 (c (n "rasn") (v "0.5.3") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0p6rg6qy367yw6k2yy48axiqc3sld3d3gd9k9bm765hvdggn509m") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.6.0 (c (n "rasn") (v "0.6.0") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0nypv95i5zmsknc2q2fw3ypravxrqvfgmklkcxiid38acai7n4h8") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.6.1 (c (n "rasn") (v "0.6.1") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0iziznjkbyy9nnffiajc6xzra2n7adk08zrh4zykf9hc8z296z21") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.7.0 (c (n "rasn") (v "0.7.0") (d (list (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "1jny6nd0gfm28bw2006kgn99ai3sbgiqrnm3bv7p0qi56yigb0q4") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.8.0 (c (n "rasn") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "either") (r "^1.8.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom")) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.16.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "0pihvf0w1jq33drv18icgfq82mqwkd7vlwdjwwpss536zc25zid0") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.8.2 (c (n "rasn") (v "0.8.2") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "either") (r "^1.8.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.2.13") (k 0)) (d (n "nom") (r "^7.0.0") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "once_cell") (r "^1.16.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.13.0") (d #t) (k 2)))) (h "01304zz4bsfavgb8gynmcbk8zakzhrncqywbvq1cgllf1qm6v3cv") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.0 (c (n "rasn") (v "0.9.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "04nyxkgsw45n6ybpklkmaicdb5df7mbbakbgckwzkbq4m19sf7g3") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.1 (c (n "rasn") (v "0.9.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1g4ay9srlamnn84c5y0gc59mi7ng36d92l9s30awzc6f5n3id4cj") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.2 (c (n "rasn") (v "0.9.2") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "04kngbjqh14mw9h3y2mv0q1bva2s3pxy7z7wcqbm8cqxp6a6hbpq") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.3 (c (n "rasn") (v "0.9.3") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "028nsfnkcjmshavm7ankk774s56cpnziwp2j8rjbndwpgsklj471") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.4 (c (n "rasn") (v "0.9.4") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1mmvpa8nvyg56lmz2zakyr4m05gwjfjil6akwgi9587300m9jzpm") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.9.5 (c (n "rasn") (v "0.9.5") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0lzbjnzygd96a5n9vql83lm2vkh2pjm3dgwagbacsh2khc9cxrgv") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.0 (c (n "rasn") (v "0.10.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0sw7sb1klw4xwdiks4qbbx6mckq33fhyawbynl1lzzfvc54igx9c") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.1 (c (n "rasn") (v "0.10.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1cmxxyvh9pn3v3phgpx0lx6kxdnj6g4cd1pnq8qv3g2njyjd3paa") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.2 (c (n "rasn") (v "0.10.2") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1kizphb89hklhn7jlwnav94zs44mmv16kvfqdq3fwcpjhxd7mdgs") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.3 (c (n "rasn") (v "0.10.3") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0vavrx9pi51p0s2sql0b14iqbf1fyc1gwsdyw5iax3ahy1zpyay2") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.4 (c (n "rasn") (v "0.10.4") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "10mxdz44fnc4rlq6g1aw4cp5dl1qs05rybsb9x48ymxn1k70n0xv") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.5 (c (n "rasn") (v "0.10.5") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "14dnr139imimzbgy9siqhcgsqmmryimm9wgsvd6s4bnw0xc0gxhf") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.10.6 (c (n "rasn") (v "0.10.6") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1vs3w47a0s0nxpx43q5bgn60zmrfdw8fnkhyw3d40ph8fajg7pkn") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.11.0 (c (n "rasn") (v "0.11.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0yzc4hqvr44vixvd7h23djxaxfxq10fck1jmmcrcdvyg07g7k3fh") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.11.1 (c (n "rasn") (v "0.11.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "143m708m1bci0m97jraf0bkhml0p5zxkjf2kpc3n7nk4bpnppawk") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.0 (c (n "rasn") (v "0.12.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "03bs7paiyz4v127kx93inj6ryi9iiyd387pjx9dmyh92hzk2c3sh") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.1 (c (n "rasn") (v "0.12.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0lbg755ki92sg34b0qslnsr0v3im6wzz4byrbdcy3q2423x79gbg") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.2 (c (n "rasn") (v "0.12.2") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "01px3wqqm1zw1dcwarzl7g11vsdfybqr1d4n98n1qw7r4k05ych5") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.3 (c (n "rasn") (v "0.12.3") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "173m6004d9lf4rgq1c09mxypfx5rygsgg0nbqdsf3gjs2pzdk94x") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.4 (c (n "rasn") (v "0.12.4") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "125mgp8cjgaarj3a94v0rsxjw17vq197nz8bdngiq4xxmlmhiw2g") (f (quote (("macros" "rasn-derive") ("default" "macros"))))))

(define-public crate-rasn-0.12.5 (c (n "rasn") (v "0.12.5") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0ahf5dd9kwplwjbl7zvyxmigzi8awcyc91jhsgyxrln7zc1hv6yg") (f (quote (("macros" "rasn-derive") ("default" "macros" "backtraces") ("backtraces"))))))

(define-public crate-rasn-0.12.6 (c (n "rasn") (v "0.12.6") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0iin7kqv3ivibw25cqw379gngy8l3r191hhrka0f1cyq77phjp2i") (f (quote (("macros" "rasn-derive") ("default" "macros" "backtraces") ("backtraces")))) (y #t)))

(define-public crate-rasn-0.13.0 (c (n "rasn") (v "0.13.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "118h7gacbg78smqsga4azj550nxnkb3p25ayzyvjp13v8l7jwnji") (f (quote (("macros" "rasn-derive") ("default" "macros" "backtraces") ("backtraces"))))))

(define-public crate-rasn-0.13.1 (c (n "rasn") (v "0.13.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "1hvarlha8wlg68qj9b2a4rfmq61s9qm5hc0qpsl55z3yndhvxdd9") (f (quote (("macros" "rasn-derive") ("default" "macros" "backtraces") ("backtraces"))))))

(define-public crate-rasn-0.14.0 (c (n "rasn") (v "0.14.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "0l8hchizdz0jz9ds8si39aqkdfjqgh8z94bykbxjm2dsvdpr3prr") (f (quote (("macros" "rasn-derive") ("default" "macros" "backtraces") ("backtraces"))))))

(define-public crate-rasn-0.15.0 (c (n "rasn") (v "0.15.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "jzon") (r "^0.12.5") (d #t) (k 0)) (d (n "konst") (r "^0.3.5") (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (f (quote ("i128"))) (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("race" "alloc"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "rasn-derive") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "snafu") (r "^0.7.5") (f (quote ("backtraces"))) (k 0)) (d (n "x509-parser") (r "^0.15.0") (d #t) (k 2)))) (h "05ckvsfgalsy2wdypvrr98v25jyx2zcn9bi119gj0wz8abcndx0k") (f (quote (("macros" "rasn-derive") ("default" "macros") ("backtraces"))))))

