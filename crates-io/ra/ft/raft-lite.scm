(define-module (crates-io ra ft raft-lite) #:use-module (crates-io))

(define-public crate-raft-lite-0.1.0 (c (n "raft-lite") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)))) (h "1clhfsk62xmjrxncsr3md4nh5c3jqxidz65v9h45qh04prqd81ax")))

(define-public crate-raft-lite-0.2.0 (c (n "raft-lite") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)))) (h "1hb9zi0kmxds4x2rz2z3yxmrdvg3gw3k5zghm7w7ilfmjhr8drmw")))

(define-public crate-raft-lite-0.2.1 (c (n "raft-lite") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)))) (h "1i5gvxwd531wi16shfrplw1nzc4za96mnp85spd6170c412yf1xy")))

(define-public crate-raft-lite-0.2.2 (c (n "raft-lite") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)))) (h "0r0d4y0aq6fw2hpdar3drmgd9rc3dxic5bb9rvv2j5qw4ax5169b")))

(define-public crate-raft-lite-0.2.4 (c (n "raft-lite") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "ansi" "std" "registry"))) (d #t) (k 0)))) (h "1j5pxyygdnkm4kf1yqq36032ikcycg945qr1j67fbn88a2hb81p3")))

(define-public crate-raft-lite-0.2.5 (c (n "raft-lite") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "ansi" "std" "registry"))) (d #t) (k 0)))) (h "1baypl10zzwjfwmhhbxk2m9r1fwfjs9j4wwshw9ycf5lc0d3b8rc")))

(define-public crate-raft-lite-0.2.6 (c (n "raft-lite") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "ansi" "std" "registry"))) (d #t) (k 0)))) (h "00k1lp97rlahk1j8rlyzz721fhfz9fxd4nrcvs0kg7dc9ihf7dhh")))

(define-public crate-raft-lite-0.2.7 (c (n "raft-lite") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.16") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stateright") (r "^0.30.1") (d #t) (k 0)) (d (n "stubborn-io") (r "^0.3") (d #t) (k 0)) (d (n "tarpc") (r "^0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt-multi-thread" "fs" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "ansi" "std" "registry"))) (d #t) (k 0)))) (h "1f41pq4aa3p13kg2mv70vk2v88kb21dp4gcd3a1mxs0pz2r6cd96")))

