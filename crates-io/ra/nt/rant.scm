(define-module (crates-io ra nt rant) #:use-module (crates-io))

(define-public crate-rant-0.0.0 (c (n "rant") (v "0.0.0") (h "13g475dl5kd2h00nx4j1s7apcqj9mw5yma7896kn9ax7za4b7l10") (y #t)))

(define-public crate-rant-4.0.0-alpha.1 (c (n "rant") (v "4.0.0-alpha.1") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.3") (d #t) (k 0)))) (h "11yj5qpbl6jr9nfwg3fkg9la61fxrppq69cyzna6l6jg8qz2jsi5") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.2 (c (n "rant") (v "4.0.0-alpha.2") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.3") (d #t) (k 0)))) (h "0m9z85y31lhnqb0sva9jd0vl5yic0m8igv466rjmg7gky723c9sv") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.3 (c (n "rant") (v "4.0.0-alpha.3") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.3") (d #t) (k 0)))) (h "0jbyb9vds72rhzfx66rpq922crjwpni2n9n4mrbrnbh8lzw3h78i") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.4 (c (n "rant") (v "4.0.0-alpha.4") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.4") (d #t) (k 0)))) (h "1f2gddhcg1zinwgsgc0lb1khwzcb3ydxm731sg0pyan39jjlkscx") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.5 (c (n "rant") (v "4.0.0-alpha.5") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.4") (d #t) (k 0)))) (h "17ywy921aznzin41v5nnl0s220zk7pgsingjnyfn7v900rw14l1z") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.6 (c (n "rant") (v "4.0.0-alpha.6") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.4") (d #t) (k 0)))) (h "16v42y291wsx56x7vyyhcvpjnw92kxa55ja4inpgf84d8l5pllaz") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.7 (c (n "rant") (v "4.0.0-alpha.7") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "0d6d0z9kcaxb94r2mpdyg136swrdwgspx7nmhxvbhxdw83kwzcb4") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.8 (c (n "rant") (v "4.0.0-alpha.8") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "03vbzjp46ba5jd82rfq7m6nvcyf5rxdfzrqzb3jw0v2x6m23j7d0") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.9 (c (n "rant") (v "4.0.0-alpha.9") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "10yxl365nx81c8w49qlf7xb9j715fdbfr5bh7yz9ilckqih5xgi7") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.10 (c (n "rant") (v "4.0.0-alpha.10") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "1sa7ag7w56lz7b5p9zmnm4r3wikis8hc4dkpmkyy9y53dpv50pkp") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.11 (c (n "rant") (v "4.0.0-alpha.11") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "1dldyc8ihidbcd2y3h0n0q5p7232jrwv7pi5spl8q1s98dj20rfm") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.12 (c (n "rant") (v "4.0.0-alpha.12") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "0j9jd5ldpng7xx1z9lii6bj9f80ymp64nq5g8y61x3lwaibsffca") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (y #t)))

(define-public crate-rant-4.0.0-alpha.13 (c (n "rant") (v "4.0.0-alpha.13") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)))) (h "1ahpgyrnzq1arfdxs9f9avx56b4wvg7hyi50p6lf8r7kaq3j1zm9") (f (quote (("cli-deps" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.14 (c (n "rant") (v "4.0.0-alpha.14") (d (list (d (n "argh") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)))) (h "0173jcrq7nviqyczz89k8sn09qimyvyzjy39z1vz6c62pjd23wks") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.15 (c (n "rant") (v "4.0.0-alpha.15") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1ix575hhnws3c695b3xsgg4xmvj4ah90sms9cn27dn0g5x6nyc79") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.16 (c (n "rant") (v "4.0.0-alpha.16") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1vdvms69hasm0c616qsh1n0ky2gbncx7idzhvz6gb2qds87iks38") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.17 (c (n "rant") (v "4.0.0-alpha.17") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1ksy6by36r887vxz6wwmrvajg7hcxhxbpis3k98hv597vynbk05r") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.18 (c (n "rant") (v "4.0.0-alpha.18") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "11rfh205vpvjq5pcygq0256s6iylkxds88s966ndq15ils7a53l4") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.19 (c (n "rant") (v "4.0.0-alpha.19") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1pwr8ssrh3s8nkqwp55xqnpws217xyz8mby6jk9zw2g58avwawq2") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.20 (c (n "rant") (v "4.0.0-alpha.20") (d (list (d (n "argh") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "13fpd3qg5lff1d778hvnibk22w9za4gpvk1i7y2j7n054gy8nq15") (f (quote (("vm-trace") ("cli" "argh" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.21 (c (n "rant") (v "4.0.0-alpha.21") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "02wnbgawvpin3l0hrf1jkx3nx3r6br8ldi6xrjwaw5xia4hsiqnf") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.22 (c (n "rant") (v "4.0.0-alpha.22") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.3") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1xvbzxxa8nyh1ri4d8kqpmljngbh5b8a3fd2vll1l5ss1rfbagjp") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode"))))))

(define-public crate-rant-4.0.0-alpha.23 (c (n "rant") (v "4.0.0-alpha.23") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "11g89hl7hyn4624xbx2rlk1ikrava3618m5zjb184q3rqz45hx4c") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.57")))

(define-public crate-rant-4.0.0-alpha.24 (c (n "rant") (v "4.0.0-alpha.24") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "19wzzqijdxilfzi3cbx0fj9iq1vl03v4kp026wk9cl0s9q7dj1m0") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.57")))

(define-public crate-rant-4.0.0-alpha.25 (c (n "rant") (v "4.0.0-alpha.25") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0m2app2j1rjfd5hbx7p7mfyp5m121qkkxcj5mk30gjjaini5xl5p") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.57")))

(define-public crate-rant-4.0.0-alpha.26 (c (n "rant") (v "4.0.0-alpha.26") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1jy7nsdl36g4y6gkj1cxim8ddy99p99hp0qyv10fgwhbjsn0rhsk") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.57")))

(define-public crate-rant-4.0.0-alpha.27 (c (n "rant") (v "4.0.0-alpha.27") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0w95y0l46ms8d24birg03124xsragdvh3l9s57rnkqfbffpc353j") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.28 (c (n "rant") (v "4.0.0-alpha.28") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0lshachgwy888rcr7cdbrnzqj9r1sr5f65gg0n6pk7r89yddas15") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.29 (c (n "rant") (v "4.0.0-alpha.29") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0jpbwz0j379v8pjs76iai27n03d0cifysna0z04li5s1d8asjwx3") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.30 (c (n "rant") (v "4.0.0-alpha.30") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1s91bygpja71cw959bvjhx6z174k3yc67wd1p4h6lb1m5vcawa7d") (f (quote (("vm-trace") ("cli" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.31 (c (n "rant") (v "4.0.0-alpha.31") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0jg3avvnr4l4i063fzhv302ybms3hjcfhgwzyk76hz20pg1xdsm9") (f (quote (("vm-trace") ("cli" "atty" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.32 (c (n "rant") (v "4.0.0-alpha.32") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "1zbbxsfyhzim7q1ijsf561q13qnb46jc394j34h1psrc561dzhqz") (f (quote (("vm-trace") ("cli" "atty" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (y #t) (r "1.58.1")))

(define-public crate-rant-4.0.0-alpha.33 (c (n "rant") (v "4.0.0-alpha.33") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.3.0") (d #t) (k 0)) (d (n "cervine") (r "^0.0.6") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "codemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "codemap-diagnostic") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (o #t) (d #t) (k 0)) (d (n "embedded-triple") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "quickscope") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)))) (h "0i2lyi7pk1nzijd1srdyyp4rzzpwiah1d8b0lzf4b8lzyq3jnhjf") (f (quote (("vm-trace") ("cli" "atty" "clap" "codemap" "codemap-diagnostic" "colored" "ctrlc" "embedded-triple" "exitcode")))) (r "1.61.0")))

