(define-module (crates-io ra ng range-set-blaze) #:use-module (crates-io))

(define-public crate-range-set-blaze-0.1.0 (c (n "range-set-blaze") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "0ah1rqi540441wb65ghagsjxirpspzskl3czq3yfnjyvqknv5sdg")))

(define-public crate-range-set-blaze-0.1.1 (c (n "range-set-blaze") (v "0.1.1") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "1m4qyasb2qfql62czkd5m4h4pjdrspwywc864x3h50rms15wbidj")))

(define-public crate-range-set-blaze-0.1.2 (c (n "range-set-blaze") (v "0.1.2") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "1fh4dibzrvp7lxmh00s513bb9xkhfd0vlhnbf7p3xv35zfazawb7")))

(define-public crate-range-set-blaze-0.1.3 (c (n "range-set-blaze") (v "0.1.3") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "0q2hxic5587z2h5ly85i71p8ii15a6mv51n7h19lfzfm4r732p44")))

(define-public crate-range-set-blaze-0.1.4 (c (n "range-set-blaze") (v "0.1.4") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "1l76h2pnmcygw1iwp14zllgf4783wvwflrryfmjxp7pqxp2z0fg1")))

(define-public crate-range-set-blaze-0.1.5 (c (n "range-set-blaze") (v "0.1.5") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "0r7cyq5b6cfcz4bd4caxjd1hqkwcqvqlmd8i8wpwj66j7rpmclgg")))

(define-public crate-range-set-blaze-0.1.6 (c (n "range-set-blaze") (v "0.1.6") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gen_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "range-collections") (r "^0.4.0") (d #t) (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (k 2)))) (h "00r2kldkv31h92vfhq2pdp25acixcz4021ahqipwlkqfy05kli45")))

(define-public crate-range-set-blaze-0.1.7 (c (n "range-set-blaze") (v "0.1.7") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.10.1") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "07ys51905q4l2mmkm9v0kx9b7b00x85xaxh4isxp53fpdrbj5fj9") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.8 (c (n "range-set-blaze") (v "0.1.8") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.10.1") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "17c3ljkawyx6b65kjdj52ajv9g6jl03br2qqiwxqpmbhrd0r5w1s") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.9 (c (n "range-set-blaze") (v "0.1.9") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.10.1") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "08zzwfaw35cdq891xxqmqjknmr0csqbarvk6rniwvla3hhd16dng") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.13-beta (c (n "range-set-blaze") (v "0.1.13-beta") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.11.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "15qhqwpp65vi2nwzdhra11da033k6q5za9g8hmaci0vi119yzds5") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.13-beta.2 (c (n "range-set-blaze") (v "0.1.13-beta.2") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.11.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ysd73w9jrf9a4dinr6xz3hchp51gx32v3rapazsfk4rpiavhw86") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.13-beta.3 (c (n "range-set-blaze") (v "0.1.13-beta.3") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.11.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1w6qcjxhaqms94q4b42i9km6ih11dim9722nnk0mkk13jvglcp6h") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.13 (c (n "range-set-blaze") (v "0.1.13") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.11.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "130qk20alhvajsmzkw0aq54kahygwgim8vl1p6vi28ig7rvkff8i") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.14-beta.1 (c (n "range-set-blaze") (v "0.1.14-beta.1") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "02577fnx65d7wj1gpg01w98k3z1m37cc1n9xjdnf2i7a0fpzk52n") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.14-beta.2 (c (n "range-set-blaze") (v "0.1.14-beta.2") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1qsbsjgijgdp03pyx3virsvlfazhc2rixc0pvphxy32bqba0m96h") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.14-beta.4 (c (n "range-set-blaze") (v "0.1.14-beta.4") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0mww686lxxbngd6pl9wyh8c7dddihv4jhyflpgjycwabaaayfl7z") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.14 (c (n "range-set-blaze") (v "0.1.14") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11ly9z6mj8g6rq7xdzppg213n9sywrqwb2imb570i72b92an3gy7") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.15 (c (n "range-set-blaze") (v "0.1.15") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ilfy6i2h2az5frnjzmalsp9ah3x0djspczj9frjhf7n9f7wh6sm") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.16-alpha1 (c (n "range-set-blaze") (v "0.1.16-alpha1") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0iy7lfzvsdrryqj1iqphmb6i0yqqchmqz5jnkm911abx0wi9mcna") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.1.16 (c (n "range-set-blaze") (v "0.1.16") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lhk1wpwnshx6kz6rb2fnhq3hgpzjwl3d38496zanbi6b7aba8c4") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

(define-public crate-range-set-blaze-0.2.0-alpha1 (c (n "range-set-blaze") (v "0.2.0-alpha1") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "gen_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "itertools") (r "^0.12.0") (o #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-collections") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "range-set") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rangemap") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "roaring") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (k 0)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "syntactic-for") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "thousands") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "trybuild") (r "^1.0.53") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1nh5pqyp7015qyknz2fxy9wdz431aaxxg7hhq9xhqp0p2gz34k1j") (f (quote (("std" "itertools/use_std" "num-traits/std" "num-integer/std") ("rog-experimental") ("from_slice") ("default" "std") ("alloc" "itertools/use_alloc" "num-traits" "num-integer"))))))

