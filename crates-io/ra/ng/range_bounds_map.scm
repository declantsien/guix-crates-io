(define-module (crates-io ra ng range_bounds_map) #:use-module (crates-io))

(define-public crate-range_bounds_map-0.0.1 (c (n "range_bounds_map") (v "0.0.1") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1yf9mmc4i59f5ghn409c04c40bs02b34q0xdlxgb6iynbaqh2fyk")))

(define-public crate-range_bounds_map-0.0.2 (c (n "range_bounds_map") (v "0.0.2") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0s1ph730cfh8fvl37x4xkhyh5j4iymyv3z0ipfp7lpprhdxj3gbw")))

(define-public crate-range_bounds_map-0.0.3 (c (n "range_bounds_map") (v "0.0.3") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1axnffhpl98h2kdq7qp3hf92iklwfsaq9hz3qxjwjyq2nyk3j5v0")))

(define-public crate-range_bounds_map-0.0.4 (c (n "range_bounds_map") (v "0.0.4") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1q9rw6r0j3b505gxyfddxfrc17qv8b8f50kwi7r22bl7kirakywb")))

(define-public crate-range_bounds_map-0.0.5 (c (n "range_bounds_map") (v "0.0.5") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1q2chyfmmcjb40j4y9yzjb87i2nvj40m1a68xxkyvr6rf5yg2lz3")))

(define-public crate-range_bounds_map-0.0.6 (c (n "range_bounds_map") (v "0.0.6") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0k3fwqaawzfhqhhvg9wgv079nnsqcfh6m84vc783lz6za8wiijal")))

(define-public crate-range_bounds_map-0.1.0 (c (n "range_bounds_map") (v "0.1.0") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0hpaypnxbbzfwsy56y143506g9q74xa8kv9zi6bvifqvpn2gjnh3")))

(define-public crate-range_bounds_map-0.1.1 (c (n "range_bounds_map") (v "0.1.1") (d (list (d (n "either") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "labels") (r "^0.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1vi12imgrhdzbwfj1dy9rbxg4mypy16ni7ynnwbhvzyarbyf7z13")))

(define-public crate-range_bounds_map-0.2.0 (c (n "range_bounds_map") (v "0.2.0") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0v4pc8b44123ajcjh40i41q69ajyppkf493nvp69bp3gpkmwk6g1")))

(define-public crate-range_bounds_map-0.2.1 (c (n "range_bounds_map") (v "0.2.1") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0bg467cs7xdyczxsfsxbqs02sl289k12k2327hp55bq73zzqfgcj")))

(define-public crate-range_bounds_map-0.2.2 (c (n "range_bounds_map") (v "0.2.2") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0n58rjm961jwwkg962hymqw9mlq16s798cmiln08clqkc7a70p91")))

(define-public crate-range_bounds_map-0.3.0 (c (n "range_bounds_map") (v "0.3.0") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "10j48686v07ql120mfbh6hqsl4m1p0mfhls5f3jkxp6d0iwnqgw9")))

(define-public crate-range_bounds_map-0.3.1 (c (n "range_bounds_map") (v "0.3.1") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter" "btree_cursors"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0sg17nhnqlvd0z0mqkv434iwsncmccmigcanw5flrdznrxrlz8xc")))

(define-public crate-range_bounds_map-0.3.2 (c (n "range_bounds_map") (v "0.3.2") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter" "btree_cursors"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "1rgyhhcs09qlg5v06khqn89vy1b8kyw0ccb4nrk47vf45nh63hly")))

(define-public crate-range_bounds_map-0.4.0 (c (n "range_bounds_map") (v "0.4.0") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter" "btree_cursors"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "07gc32d9abwna17ga0m85rsab1bsfy9wly7jkv46qnrzgib5yrrj") (y #t)))

(define-public crate-range_bounds_map-0.3.3 (c (n "range_bounds_map") (v "0.3.3") (d (list (d (n "btree_monstrousity") (r "^0.0.4") (f (quote ("btree_drain_filter" "btree_cursors"))) (d #t) (k 0)) (d (n "either") (r "^1.8.1") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vkp0v3xiqyrlgarxw70g84an3a1jfgwq5dbzd156kw1mc8v3arm")))

