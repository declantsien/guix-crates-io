(define-module (crates-io ra ce race-facade) #:use-module (crates-io))

(define-public crate-race-facade-0.0.4 (c (n "race-facade") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.16.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "race-core") (r ">=0.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "fast-rng" "v4" "fast-rng"))) (d #t) (k 0)))) (h "0mxfgz189x1l66hjpy7m1hlgy2jbfic0vpjf6kck1pndj0kbh6d9") (r "1.65.0")))

