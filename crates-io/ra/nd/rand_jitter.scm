(define-module (crates-io ra nd rand_jitter) #:use-module (crates-io))

(define-public crate-rand_jitter-0.1.0 (c (n "rand_jitter") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zpsk8mk6faygdi8xr9yffa162lf692i7pbba0xq1g8k3s2l4y7l") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.1.1 (c (n "rand_jitter") (v "0.1.1") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1phh8x4v58dw10s23gygdqcijd7slsxbi6mv3cxry928qf5ppzi9") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.1.2 (c (n "rand_jitter") (v "0.1.2") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1h5kihc2sm4q4r8g8l5l3i9wajp1abr03y1448x50dsy2k3261q8") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.1.3 (c (n "rand_jitter") (v "0.1.3") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cmqy4za1wjlllcljiky4abihblx4vdjv58d7s115zif51cag7kv") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.1.4 (c (n "rand_jitter") (v "0.1.4") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.2.0 (c (n "rand_jitter") (v "0.2.0") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mnjbfzj97g788jslz0k77bpsg6qjhz676cibk82ibbvgqp4sy43") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.3.0 (c (n "rand_jitter") (v "0.3.0") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zim90jmspwa602l8inyrlw519pz0wibmfai6cfgq5zqw24gs154") (f (quote (("std" "rand_core/std"))))))

(define-public crate-rand_jitter-0.4.0 (c (n "rand_jitter") (v "0.4.0") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("profileapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1x7jw7anxc6skvzx1r18mx0dh0vf9f62irg8wvs2xifm070s8jw1") (f (quote (("std" "rand_core/std")))) (r "1.51")))

