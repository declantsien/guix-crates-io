(define-module (crates-io ra nd rand_distr) #:use-module (crates-io))

(define-public crate-rand_distr-0.2.0 (c (n "rand_distr") (v "0.2.0") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r ">= 0.5, <= 0.7.0-pre.9") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)))) (h "1j26bqsyljmzmryqwq9lm9dgx6m8w5d50wr6gyxg376dlv443i5y") (y #t)))

(define-public crate-rand_distr-0.2.1 (c (n "rand_distr") (v "0.2.1") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r ">= 0.5, <= 0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)))) (h "08drhcw9k4a79pri3rd1vkv7v9cbm6cf4i342nai39f527c58zn3") (y #t)))

(define-public crate-rand_distr-0.2.2 (c (n "rand_distr") (v "0.2.2") (d (list (d (n "average") (r "^0.10.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)))) (h "1cpz577qid09lirjjhhn98yqdwsv0c01jf973pxpcr9svp5pm5wn")))

(define-public crate-rand_distr-0.3.0 (c (n "rand_distr") (v "0.3.0") (d (list (d (n "average") (r "^0.10.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand") (r "^0.7") (f (quote ("std"))) (k 2)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)))) (h "0mlxzzzbwpxxnvy79w0kb332r6vcw38jiglx5s5zna9rv8m57sf9") (f (quote (("std" "alloc" "rand/std") ("default" "std") ("alloc" "rand/alloc"))))))

(define-public crate-rand_distr-0.4.0 (c (n "rand_distr") (v "0.4.0") (d (list (d (n "average") (r "^0.10.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng" "std"))) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)))) (h "0f7hk2k4kzqrh7w4vjxqca5dcc4brsiaj8r3gp881yr4mlr8z7ns") (f (quote (("std" "alloc" "rand/std") ("default" "std") ("alloc" "rand/alloc"))))))

(define-public crate-rand_distr-0.4.1 (c (n "rand_distr") (v "0.4.1") (d (list (d (n "average") (r "^0.13") (f (quote ("std"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng" "std" "small_rng"))) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)))) (h "0hpi5r2mnnigqrr6db23qn1a7l2mwf0qzv6r9b89qaz40s43j6q5") (f (quote (("std_math" "num-traits/std") ("std" "alloc" "rand/std") ("default" "std") ("alloc" "rand/alloc"))))))

(define-public crate-rand_distr-0.4.2 (c (n "rand_distr") (v "0.4.2") (d (list (d (n "average") (r "^0.13") (f (quote ("std"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng" "std" "small_rng"))) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 2)))) (h "0brd2946xfapm2bmhmczfbwck041x7khsfhqxw1f24kxis7m8kcn") (f (quote (("std_math" "num-traits/std") ("std" "alloc" "rand/std") ("serde1" "serde" "rand/serde1") ("default" "std") ("alloc" "rand/alloc"))))))

(define-public crate-rand_distr-0.4.3 (c (n "rand_distr") (v "0.4.3") (d (list (d (n "average") (r "^0.13") (f (quote ("std"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng" "std" "small_rng"))) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 2)))) (h "0cgfwg3z0pkqhrl0x90c77kx70r6g9z4m6fxq9v0h2ibr2dhpjrj") (f (quote (("std_math" "num-traits/std") ("std" "alloc" "rand/std") ("serde1" "serde" "rand/serde1") ("default" "std") ("alloc" "rand/alloc"))))))

(define-public crate-rand_distr-0.5.0-alpha.0 (c (n "rand_distr") (v "0.5.0-alpha.0") (d (list (d (n "average") (r "^0.13") (f (quote ("std"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "=0.9.0-alpha.0") (k 0)) (d (n "rand") (r "=0.9.0-alpha.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_pcg") (r "=0.9.0-alpha.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (o #t) (d #t) (k 0)) (d (n "special") (r "^0.10.3") (d #t) (k 2)))) (h "1zwfr4d7ak9ry2ccjabl76q9jzfz98faji4r9d08m9d18ss3sh6w") (f (quote (("std_math" "num-traits/std") ("std" "alloc" "rand/std") ("serde1" "serde" "rand/serde1") ("default" "std") ("alloc" "rand/alloc")))) (r "1.60")))

(define-public crate-rand_distr-0.5.0-alpha.1 (c (n "rand_distr") (v "0.5.0-alpha.1") (d (list (d (n "average") (r "^0.14") (f (quote ("std"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "=0.9.0-alpha.1") (k 0)) (d (n "rand") (r "=0.9.0-alpha.1") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_pcg") (r "=0.9.0-alpha.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (o #t) (d #t) (k 0)) (d (n "special") (r "^0.10.3") (d #t) (k 2)))) (h "074d5r4krkncj8ljdih6kj82dnfcc4fvrq8r6r0w1zjlzsg32cjp") (f (quote (("std_math" "num-traits/std") ("std" "alloc" "rand/std") ("serde1" "serde" "rand/serde1") ("default" "std") ("alloc" "rand/alloc")))) (r "1.60")))

