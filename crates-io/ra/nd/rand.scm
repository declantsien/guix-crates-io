(define-module (crates-io ra nd rand) #:use-module (crates-io))

(define-public crate-rand-0.1.1 (c (n "rand") (v "0.1.1") (h "0kf52kgb37wfr0ncbzn0w1s03sy5qc9mn85imm487hx8q935p928")))

(define-public crate-rand-0.1.2 (c (n "rand") (v "0.1.2") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.2.1") (d #t) (k 0)))) (h "1xsc5nlj3lg1n0vzpfij0ljp86vygccqs0bn3lyajbw4jb9rw8kf")))

(define-public crate-rand-0.1.3 (c (n "rand") (v "0.1.3") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "0zlqjciy3wwwi8j64sj5b6hph2i3nh23pq5zmr1ha9zsi5wiwcwx")))

(define-public crate-rand-0.1.4 (c (n "rand") (v "0.1.4") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "04x1vpymidczygvbz71qglj09a5xma57faybfd8r5whqc45djdrd")))

(define-public crate-rand-0.2.0 (c (n "rand") (v "0.2.0") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "1vi1xj65jdxdk6ns4cmsxa2xc20d2ksd0grbq4gyh64r9lc0isl4")))

(define-public crate-rand-0.2.1 (c (n "rand") (v "0.2.1") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.2.1") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "1qs2gq4glxx9s67r8pm0dixd6lrcbwmkshyhcwk1xkrbhwg61jr8")))

(define-public crate-rand-0.3.0 (c (n "rand") (v "0.3.0") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "1gp0ciigvwmfqjcz84zf1sb4z4wjdg7fl2amps9r4ws3jddpgx1w")))

(define-public crate-rand-0.3.1 (c (n "rand") (v "0.3.1") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "0pyxz74xrh4mvzg25x6gyyqfdka7w0wmh4aay6jbpp5lam5jb8c4")))

(define-public crate-rand-0.3.2 (c (n "rand") (v "0.3.2") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "0awxj7bwb6n0522li96s167flji0nfljzjr8jn90jj5s9pjx02bm")))

(define-public crate-rand-0.3.3 (c (n "rand") (v "0.3.3") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "1k2drdbv6743pfy9vpkg0xd4jp667dx18cg613z915jcr1fv6yhr")))

(define-public crate-rand-0.3.4 (c (n "rand") (v "0.3.4") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "13kdhx3wqmwhxkxi3k71pjpwijzvx7m16c5d0n490w4p1xkzi5q7")))

(define-public crate-rand-0.3.5 (c (n "rand") (v "0.3.5") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "0kvdjr6zq2dj0a5jqjsh3hwlk6y7a9iw975sfndpndmm72sxd6as")))

(define-public crate-rand-0.3.6 (c (n "rand") (v "0.3.6") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "1y8xr29rdwrxfsi3r3jj4h8ghj9cfryc65fv8ryyk75a12pjhval")))

(define-public crate-rand-0.3.7 (c (n "rand") (v "0.3.7") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 0)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "19rymssymxcgqq4smmr42q7fg0v6l9i2zkfxy2ngxi6nz0nc9h5w")))

(define-public crate-rand-0.3.8 (c (n "rand") (v "0.3.8") (d (list (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_macros") (r "*") (d #t) (k 2)))) (h "15n5sj9jqwyzslpsab2ivq53r15bjlpkzfb46w9rc3qyh5x0hx5n")))

(define-public crate-rand-0.3.9 (c (n "rand") (v "0.3.9") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "1v6psci6a3fkslwkpvf7zbdlb1v40bxnbfcn31d73lll09qjam17")))

(define-public crate-rand-0.3.10 (c (n "rand") (v "0.3.10") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "186dyzn1zmlcxrbydyxdpzj5hmg8s2250p5aq6qi8wy9qacn2xpa")))

(define-public crate-rand-0.3.11 (c (n "rand") (v "0.3.11") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "1zqvx17336zmqihliz8bn9ymsbqmliqp2ksrkjl7dy51m137lz4z")))

(define-public crate-rand-0.3.12 (c (n "rand") (v "0.3.12") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "0ph19az59i2qwm4bvc76apjb76hx8zjlgawhhijf34yjyfyl1vjy")))

(define-public crate-rand-0.3.13 (c (n "rand") (v "0.3.13") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "0mrndfh2i2g8mr9s3mrml9bnmiwc6fkzrrpr5wf32dk3v6xvh5i4")))

(define-public crate-rand-0.3.14 (c (n "rand") (v "0.3.14") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "1984zvj8572ig28fz6idc4r96fx39h4lzmr07yf7kb7gdn6di497")))

(define-public crate-rand-0.3.15 (c (n "rand") (v "0.3.15") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "178qgglinqawwsw6l8imgnplxkmxcj404jqm92pds695xhv0cbh2")))

(define-public crate-rand-0.3.16 (c (n "rand") (v "0.3.16") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)) (d (n "magenta") (r "^0.1.1") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)))) (h "1pxwxj7kv8cjjkdck8dm99iivgn9i6v3vl4lcybrqwm40z90y9gb") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.3.17 (c (n "rand") (v "0.3.17") (d (list (d (n "fuchsia-zircon") (r "^0.2.1") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "1bmjqzn5g53fib9rls29nivz27way654mqw4gjqgpn58kz6wpvv1") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.3.18 (c (n "rand") (v "0.3.18") (d (list (d (n "fuchsia-zircon") (r "^0.2.1") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "1pcy5d9n5zljwdv98rkibpk2n80wrjhvgm0z5svswmc6zl6i8xb4") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.4.0-pre.0 (c (n "rand") (v "0.4.0-pre.0") (d (list (d (n "fuchsia-zircon") (r "^0.3") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "1y6mski09hv8mhj7bg2c1xfck7v88f7gsw3gicisjg1xk2yl41dd") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.4.1 (c (n "rand") (v "0.4.1") (d (list (d (n "fuchsia-zircon") (r "^0.3") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.0") (d #t) (k 2)))) (h "0cgfbhicd4vyyrncy1p5zs2n2xr0rx09c7k1c8l08vba5q47hpwx") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc"))))))

(define-public crate-rand-0.3.19 (c (n "rand") (v "0.3.19") (d (list (d (n "fuchsia-zircon") (r "^0.3") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3, <= 0.3.8") (d #t) (k 2)))) (h "0n9fyyxpg4c4n6hl6k3m8v3f85z5ih3cffnsfzryib15bpcl8ycy") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.3.20 (c (n "rand") (v "0.3.20") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "1cg9md3k0c0wkdlwkrfgdi7q3nkk4ldsm2zn3ci8rfs20q170a2i") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.4.2 (c (n "rand") (v "0.4.2") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1if28m0hk13qqrmifkir4syxkgwnnk3sb048prbfsl6cb75zi9gb") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc"))))))

(define-public crate-rand-0.3.21-pre.0 (c (n "rand") (v "0.3.21-pre.0") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)))) (h "0cp172n52l86r3mpnhqx7rxa0ml121q26wwf1g427bk82w614r90") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.3.22 (c (n "rand") (v "0.3.22") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)))) (h "1caf1gs520x7nq10irg10sd2swk8d2zhkydnxvc0l3yjz6mk59qm") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.5.0-pre.0 (c (n "rand") (v "0.5.0-pre.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.1.0-pre.0") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1wgkhkk9zswmrjv14w8a3x5xb347v0yb5pd914s304n49xjyiaxx") (f (quote (("std" "rand_core/std" "winapi" "libc" "alloc") ("serde-1" "serde" "serde_derive") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.0-pre.1 (c (n "rand") (v "0.5.0-pre.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1mdazdfjrsav3fnv6ffizzjh0gbwg2778gkidv69zz8bq8l7fykx") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.0-pre.2 (c (n "rand") (v "0.5.0-pre.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2.0-pre.0") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0ah38wj151vvxp5agz35y46v90wq4xk9wa6hhhxaca4n3mqf959p") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.0 (c (n "rand") (v "0.5.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "11bi97rqgv01cg5nra7chkx84vnwpjkxr4i3d61rgbsgsgwap2bs") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.1 (c (n "rand") (v "0.5.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "00ywrb3c290sh1pfcx8kihdqvwwrhn84s31a00rj8gqhcpwlab28") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.2 (c (n "rand") (v "0.5.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0w9nvc7nnln71fflamay3p489b5q4r1vdggjw3cqgqrjmxlzinfh") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.3 (c (n "rand") (v "0.5.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1xlh7scg59v52gfbdj2pf99ffp9x68hpqyqlgrvq6qvihglc00k8") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.4 (c (n "rand") (v "0.5.4") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1skhwkxba2agnj83sz8mwl485gi99dk4zz2gcvk96bsb4837af8j") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.5.5 (c (n "rand") (v "0.5.5") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.2") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "070kw1zcd62vixh9a1kh2vayvir33pilwakrx35dv746gs4csr74") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.4.3 (c (n "rand") (v "0.4.3") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gfgnqfj2pyh27dcb720jpawskllwnbvxh816ddyykv269xz8ml3") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc"))))))

(define-public crate-rand-0.6.0-pre.0 (c (n "rand") (v "0.6.0-pre.0") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc128") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen") (r "^0.2.12") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0i3ibhkpl1fa6kxxbzj61m01xqkvr2hj53hb4dd4bjx1kvn4spg3") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.6.0-pre.1 (c (n "rand") (v "0.6.0-pre.1") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen") (r "^0.2.12") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0bp3qsxkb6cz882smw1pbr2p1mm888l0vjn3gw7dfjb8ajnnc01d") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.6.0 (c (n "rand") (v "0.6.0") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen") (r "^0.2.12") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1305pp1g280sf75bizns0bdrb51jcp2c8wqfnwcvv5akkcqhhgyy") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.6.1 (c (n "rand") (v "0.6.1") (d (list (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-zircon") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen") (r "^0.2.12") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0spnnr9858kisqrkblncjvr5s5pc6ihfqm3yrwrilhdfa8yj57df") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.6.2 (c (n "rand") (v "0.6.2") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "16vz2xizcg6i5jmfdkbflrw94dkffr9q6rcvqj3l3gnbhkvba5qv") (f (quote (("std" "rand_core/std" "alloc") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std" "rand_os") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.6.3 (c (n "rand") (v "0.6.3") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1q7wgj1372vvrb4zz9c81qs58pw92nh00cfj3f24ya560lqicpmn") (f (quote (("wasm-bindgen" "rand_os/wasm-bindgen") ("stdweb" "rand_os/stdweb") ("std" "rand_core/std" "alloc" "rand_os") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std" "rand_os") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.4.4 (c (n "rand") (v "0.4.4") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand_core") (r "^0.3.0") (d #t) (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "rdrand") (r "^0.4.0") (d #t) (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0b707kngvsy3wslfv9c2n0a94zk5zqxni72c6r5z021w41a6h41l") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc")))) (y #t)))

(define-public crate-rand-0.6.4 (c (n "rand") (v "0.6.4") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1dcnmlf49hihn8mwkj274xz4vwkkwjl3z5y2nanbqv5ch0z501ir") (f (quote (("wasm-bindgen" "rand_os/wasm-bindgen") ("stdweb" "rand_os/stdweb") ("std" "rand_core/std" "alloc" "rand_os") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std" "rand_os") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.4.5 (c (n "rand") (v "0.4.5") (d (list (d (n "fuchsia-zircon") (r "^0.3.2") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand_core") (r "^0.3") (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "rdrand") (r "^0.4.0") (d #t) (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18id1ikfwp5fz2s7b6gq1fmljdzr2rpd7j10rq4byxlddpk9gr6y") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc"))))))

(define-public crate-rand-0.5.6 (c (n "rand") (v "0.5.6") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cloudabi") (r "^0.0.3") (o #t) (d #t) (t "cfg(target_os = \"cloudabi\")") (k 0)) (d (n "fuchsia-cprng") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1fdcgja9167hlzkf4g5daqwp498lwiyq7aqm05whklpbsdyc8666") (f (quote (("std" "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-cprng") ("serde1" "serde" "serde_derive" "rand_core/serde1") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.4.6 (c (n "rand") (v "0.4.6") (d (list (d (n "fuchsia-cprng") (r "^0.1.0") (d #t) (t "cfg(target_os = \"fuchsia\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand_core") (r "^0.3") (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "rdrand") (r "^0.4.0") (d #t) (t "cfg(target_env = \"sgx\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14qjfv3gggzhnma20k0sc1jf8y6pplsaq7n1j9ls5c8kf2wl0a2m") (f (quote (("std" "libc") ("nightly" "i128_support") ("i128_support") ("default" "std") ("alloc"))))))

(define-public crate-rand-0.3.23 (c (n "rand") (v "0.3.23") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)))) (h "0v679h38pjjqj5h4md7v2slsvj6686qgcn7p9fbw3h43iwnk1b34") (f (quote (("nightly" "i128_support") ("i128_support"))))))

(define-public crate-rand-0.6.5 (c (n "rand") (v "0.6.5") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "average") (r "^0.9.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 0)) (d (n "rand_jitter") (r "^0.1") (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "ntsecapi" "profileapi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd") (f (quote (("wasm-bindgen" "rand_os/wasm-bindgen") ("stdweb" "rand_os/stdweb") ("std" "rand_core/std" "alloc" "rand_os" "rand_jitter/std") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("i128_support") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.0-pre.0 (c (n "rand") (v "0.7.0-pre.0") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.1") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.1") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.2") (d #t) (k 2)))) (h "1jg0nr77ibbazk6w3ys1yr3qd4hvpjkypbibjafkf8g3gac5g29z") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.0-pre.1 (c (n "rand") (v "0.7.0-pre.1") (d (list (d (n "autocfg") (r "^0.1") (d #t) (k 1)) (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)))) (h "1v0fj06a2n5hfyqsimr0h14cv2kwgb99kbg6l42dl4v6pg4k2rc6") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1" "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.0-pre.2 (c (n "rand") (v "0.7.0-pre.2") (d (list (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)))) (h "07m5rvp9mbh7qvdamqfh7afkqhci8js0bxz2i5fjwg35nd7d1mqv") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.0 (c (n "rand") (v "0.7.0") (d (list (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)))) (h "0b05gwx8nnxr9bydyjxd1rszdvqnm946ky15z103ssfrhc7anznl") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.1 (c (n "rand") (v "0.7.1") (d (list (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "0l8x1hw60a2g94cq20sgzdm4inzbsqpr959yhshlf8xk8kcs1kjr") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc")))) (y #t)))

(define-public crate-rand-0.7.2 (c (n "rand") (v "0.7.2") (d (list (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "04l4rkm4clpkp9ykl3rp88hf91d3y2cajxc4kdsn3bry4ilv3q9s") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.7.3 (c (n "rand") (v "0.7.3") (d (list (d (n "getrandom_package") (r "^0.1.1") (o #t) (d #t) (k 0) (p "getrandom")) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (f (quote ("into_bits"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.2") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 2)))) (h "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva") (f (quote (("wasm-bindgen" "getrandom_package/wasm-bindgen") ("stdweb" "getrandom_package/stdweb") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng" "rand_pcg") ("simd_support" "packed_simd") ("serde1") ("nightly" "simd_support") ("getrandom" "getrandom_package" "rand_core/getrandom") ("default" "std") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.0 (c (n "rand") (v "0.8.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_hc") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "04jgsfz4abrppp2fkgf40m0205lypixi23v7wfnb8yb693xk0qx7") (f (quote (("std_rng" "rand_chacha" "rand_hc") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.1 (c (n "rand") (v "0.8.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_hc") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0d7fxnq3j2807qsjciyfbv362ym22x7slr95ff9bb8iz1m2wsky2") (f (quote (("std_rng" "rand_chacha" "rand_hc") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.2 (c (n "rand") (v "0.8.2") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_hc") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "07lb17qj02bi17mhqxlmsiyf4g8cmplm6hbiw5hxc900li19nl8q") (f (quote (("std_rng" "rand_chacha" "rand_hc") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.3 (c (n "rand") (v "0.8.3") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_hc") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0zldxfx4gi551n2fna4zz9ab22zsnzw1mj5hzi5nfs24dgkfgy8f") (f (quote (("std_rng" "rand_chacha" "rand_hc") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.4 (c (n "rand") (v "0.8.4") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.5") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_hc") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rand_hc") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1n5wska2fbfj4dsfz8mc0pd0dgjlrb6c9anpk5mwym345rip6x9f") (f (quote (("std_rng" "rand_chacha" "rand_hc") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde" "rand_core/serde1") ("nightly") ("min_const_gen") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.8.5 (c (n "rand") (v "0.8.5") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.7") (f (quote ("into_bits"))) (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "rand_chacha") (r "^0.3.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "013l6931nn7gkc23jz5mm3qdhf93jjf0fg64nz2lp4i51qd8vbrl") (f (quote (("std_rng" "rand_chacha") ("std" "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc") ("small_rng") ("simd_support" "packed_simd") ("serde1" "serde" "rand_core/serde1") ("nightly") ("min_const_gen") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng") ("alloc" "rand_core/alloc"))))))

(define-public crate-rand-0.9.0-alpha.0 (c (n "rand") (v "0.9.0-alpha.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2.22") (o #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.9.0-alpha.0") (o #t) (k 0)) (d (n "rand_core") (r "=0.9.0-alpha.0") (k 0)) (d (n "rand_pcg") (r "=0.9.0-alpha.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "=0.8.0-alpha.5") (f (quote ("simd"))) (k 0)))) (h "0bh6lkvfl0q9ayj2g7dir3y9kwjxi1b56imrpcny1v6bp5i7hyw0") (f (quote (("unbiased") ("std_rng" "rand_chacha") ("small_rng") ("simd_support" "zerocopy/simd-nightly") ("serde1" "serde" "rand_core/serde1") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng" "getrandom") ("alloc" "rand_core/alloc")))) (s 2) (e (quote (("std" "rand_core/std" "rand_chacha?/std" "alloc" "libc")))) (r "1.60")))

(define-public crate-rand-0.9.0-alpha.1 (c (n "rand") (v "0.9.0-alpha.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.9.0-alpha.1") (o #t) (k 0)) (d (n "rand_core") (r "=0.9.0-alpha.1") (k 0)) (d (n "rand_pcg") (r "=0.9.0-alpha.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "=0.8.0-alpha.6") (f (quote ("simd"))) (k 0)))) (h "0gk96drr82fx57h3w81hxlzdbvx3d0p8zfjj7r11rravm0zfcccd") (f (quote (("unbiased") ("std_rng" "rand_chacha") ("small_rng") ("simd_support" "zerocopy/simd-nightly") ("serde1" "serde" "rand_core/serde1") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "std_rng" "getrandom") ("alloc" "rand_core/alloc")))) (s 2) (e (quote (("std" "rand_core/std" "rand_chacha?/std" "alloc")))) (r "1.60")))

