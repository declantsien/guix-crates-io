(define-module (crates-io ra si rasi-ext) #:use-module (crates-io))

(define-public crate-rasi-ext-0.1.8 (c (n "rasi-ext") (v "0.1.8") (d (list (d (n "boring") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 2)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor" "thread-pool"))) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "quiche") (r "^0.20.0") (f (quote ("boringssl-boring-crate"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rasi") (r "^0.1") (d #t) (k 0)) (d (n "rasi-default") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)))) (h "1insi0w5dabpmq9wmz4l9ybgd466szsp4g5bsr5pzkmq693r9fjy") (f (quote (("udp_group" "bytes" "rand") ("tls" "boring") ("sync_parking_lot" "parking_lot") ("quic" "udp_group" "quiche" "ring" "event_map") ("event_map") ("default" "quic" "sync_parking_lot" "tls"))))))

(define-public crate-rasi-ext-0.1.9 (c (n "rasi-ext") (v "0.1.9") (d (list (d (n "boring") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 2)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor" "thread-pool"))) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "quiche") (r "^0.20.0") (f (quote ("boringssl-boring-crate"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rasi") (r "^0.1") (d #t) (k 0)) (d (n "rasi-default") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)))) (h "1l9xq42wb14qspz9mdfsclm22ssz7cx8jvavrayva81w23l2zpnm") (f (quote (("udp_group" "bytes" "rand") ("tls" "boring") ("sync_parking_lot" "parking_lot") ("quic" "udp_group" "quiche" "ring" "event_map") ("event_map") ("default" "quic" "sync_parking_lot" "tls"))))))

(define-public crate-rasi-ext-0.1.10 (c (n "rasi-ext") (v "0.1.10") (d (list (d (n "boring") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 2)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "quiche") (r "^0.20.0") (f (quote ("boringssl-boring-crate"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rasi") (r "^0.1") (d #t) (k 0)) (d (n "rasi-default") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)))) (h "11yvs76516skjk56663wh5nvxvhbx7cjdk17yq41q38mkimz42l3") (f (quote (("udp_group" "bytes" "rand") ("tls" "boring") ("sync_parking_lot" "parking_lot") ("quic" "udp_group" "quiche" "ring" "event_map") ("event_map") ("default" "quic" "sync_parking_lot" "tls"))))))

(define-public crate-rasi-ext-0.1.11 (c (n "rasi-ext") (v "0.1.11") (d (list (d (n "boring") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 2)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "quiche") (r "^0.20.0") (f (quote ("boringssl-boring-crate"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rasi") (r "^0.1") (d #t) (k 0)) (d (n "rasi-default") (r "^0.1") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (o #t) (d #t) (k 0)))) (h "1j2swzgvimaq4gqpg3nvaisqq7z8ipsa1izgz1csng4wcdddh44z") (f (quote (("udp_group" "bytes" "rand") ("tls" "boring") ("sync_parking_lot" "parking_lot") ("quic" "udp_group" "quiche" "ring" "event_map") ("http_support" "http" "thiserror" "serde_json" "serde") ("event_map") ("default" "quic" "sync_parking_lot" "tls" "http_support"))))))

