(define-module (crates-io ra fx rafx-framework) #:use-module (crates-io))

(define-public crate-rafx-framework-0.0.3 (c (n "rafx-framework") (v "0.0.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.3") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.3") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1955kdxcsly8r0x0ljzd7fznw82pljifnmfj0vc1gf41xmfw0978") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracing" "profiling/profile-with-tracing") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.4 (c (n "rafx-framework") (v "0.0.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.4") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.4") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0mc0d7k4n00qkb0s7xrc8lgvgzayi64jj15q0cpl0xczgbyvicxk") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.5 (c (n "rafx-framework") (v "0.0.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.5") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.5") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "152p5rb4z2v678ckhfsscmx5hpx8zkb338rc4289m5kssgj6b13w") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.6 (c (n "rafx-framework") (v "0.0.6") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.6") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.6") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "11446ynrzd35zzj8i4xrh2bwmyxm1dazsv16jzkpzysgxyd01xxv") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.7 (c (n "rafx-framework") (v "0.0.7") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.7") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.7") (d #t) (k 0)) (d (n "rafx-nodes") (r "=0.0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "02d6dr0cnr3mdg6i254lj5p9dk8jr63qp4kamslbqqf2ax2qkm6n") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.8 (c (n "rafx-framework") (v "0.0.8") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.8") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "140pw7ashah072gfwxamljzxmj09n4jqcmjc3sbq40a8szdgakhc") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.9 (c (n "rafx-framework") (v "0.0.9") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.9") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1rflpcpi66djxrwa2p9bj4adwxg9ik3s3qgdlwbipwaghcsnpbx4") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.10 (c (n "rafx-framework") (v "0.0.10") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.10") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1ihxfnn2fm4wg3rp08382w20x850vz88ijrjfnpvjd4khnwpj339") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.11 (c (n "rafx-framework") (v "0.0.11") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.11") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.11") (d #t) (k 0)) (d (n "rafx-visibility") (r "^0.0.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "1s1c57jh0p9xvn39szkdm5zq1ck7r8pwixwwk7c60kxpjbibpg9a") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.12 (c (n "rafx-framework") (v "0.0.12") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.12") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.12") (d #t) (k 0)) (d (n "rafx-visibility") (r "=0.0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "157vflcbz4id0fa425sq38kjnph07i5bbdfwh4n7dihjm8f12avb") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-framework-0.0.13 (c (n "rafx-framework") (v "0.0.13") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.13") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.13") (d #t) (k 0)) (d (n "rafx-visibility") (r "=0.0.13") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "014x6pdr18r898nrf8qzbk1gqmsi2mlda24xr1rwcxinknkzi14j") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("rafx-gles3" "rafx-api/rafx-gles3") ("rafx-gles2" "rafx-api/rafx-gles2") ("default"))))))

(define-public crate-rafx-framework-0.0.14 (c (n "rafx-framework") (v "0.0.14") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.14") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.14") (d #t) (k 0)) (d (n "rafx-visibility") (r "^0.0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "0ippq5z8fc6dlskzsvbw5ck2sdvag8nvgv3x39zv5k2b1wxqvkss") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("rafx-gles3" "rafx-api/rafx-gles3") ("rafx-gles2" "rafx-api/rafx-gles2") ("default"))))))

(define-public crate-rafx-framework-0.0.15 (c (n "rafx-framework") (v "0.0.15") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.15") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.15") (d #t) (k 0)) (d (n "rafx-visibility") (r "^0.0.15") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "0f0ljmfkl6cq6pnsdyd7fi6fyjyi4d71k9s2b9gjcfckybdcwb9g") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("rafx-gles3" "rafx-api/rafx-gles3") ("rafx-gles2" "rafx-api/rafx-gles2") ("rafx-empty" "rafx-api/rafx-empty") ("default"))))))

(define-public crate-rafx-framework-0.0.16 (c (n "rafx-framework") (v "0.0.16") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glam") (r "^0.13.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.16") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.16") (d #t) (k 0)) (d (n "rafx-visibility") (r "^0.0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)))) (h "0fzbzmcvm8zfcrhh1kmi4l7f4l2dd0n1sj1y2l715prsh35b4b54") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("rafx-gles3" "rafx-api/rafx-gles3") ("rafx-gles2" "rafx-api/rafx-gles2") ("rafx-empty" "rafx-api/rafx-empty") ("rafx-dx12" "rafx-api/rafx-dx12") ("default"))))))

