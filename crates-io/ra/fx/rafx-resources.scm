(define-module (crates-io ra fx rafx-resources) #:use-module (crates-io))

(define-public crate-rafx-resources-0.0.2 (c (n "rafx-resources") (v "0.0.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.2") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.2") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)))) (h "1yl7vjliwim9p0bpashwrksmslrmvkw94cfh3hv3qlzm8mcgdww4") (f (quote (("static-vulkan" "rafx-api/static-vulkan") ("rafx-vulkan") ("rafx-metal") ("profile-with-tracing" "profiling/profile-with-tracing") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default" "rafx-vulkan"))))))

