(define-module (crates-io ra fx rafx-assets) #:use-module (crates-io))

(define-public crate-rafx-assets-0.0.1 (c (n "rafx-assets") (v "0.0.1") (h "18lkjd0pl07a9fzqarw9p5afmlflmwihmgxf851fpnd0yhqlrvc1")))

(define-public crate-rafx-assets-0.0.5 (c (n "rafx-assets") (v "0.0.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.5") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.5") (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.5") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.5") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "1rd8dgz6j4j8l35h3aj2qdrwj1pa9kqg3na2n9p90xm7wc0i1fwa") (f (quote (("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.6 (c (n "rafx-assets") (v "0.0.6") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.6") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.6") (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.6") (d #t) (k 0)) (d (n "rafx-nodes") (r "^0.0.6") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "10n5qjrs6fxx3zan299pad480w1rv0lgf0g45i9yiwv4dq8ndl08") (f (quote (("rafx-vulkan" "rafx-api/rafx-vulkan") ("rafx-metal" "rafx-api/rafx-metal") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.7 (c (n "rafx-assets") (v "0.0.7") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.7") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.7") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.7") (d #t) (k 0)) (d (n "rafx-nodes") (r "=0.0.7") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0v6x8m8zcm8vm17l60rnh6c5px2xyvz17b8hhp801y60prpmf6ir") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.8 (c (n "rafx-assets") (v "0.0.8") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "=0.0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.8") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.8") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.8") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "1icgzlp1rbid1h7lay6rw92mri5cxhnlbzf81za58fy07jq0f0b2") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.9 (c (n "rafx-assets") (v "0.0.9") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "=0.0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.9") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.9") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.9") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "09c2k92hplfyi2il1ll0mixsq2f5i6jwmg907vd6jihjn178v05b") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.10 (c (n "rafx-assets") (v "0.0.10") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.2") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.10") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.10") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.10") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "12smnzlapgw2rn5yw2hmy9p5z9fvdgybd2raa4fgkyzrh72qdrgs") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.11 (c (n "rafx-assets") (v "0.0.11") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.3") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.11") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.11") (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.11") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0n3ns16z86344kk523a8qsy3hf6mlcc0q5a79i3c2301a2mmahk8") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.12 (c (n "rafx-assets") (v "0.0.12") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.3") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.12") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.12") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.12") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "03n7hh6ckhvqycckqk484bybwa193r4imz2y83fr72y5mzcfw9rx") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick"))))))

(define-public crate-rafx-assets-0.0.13 (c (n "rafx-assets") (v "0.0.13") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.3") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "image2") (r "^0.11") (f (quote ("ser"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.13") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.13") (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.13") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0y57kh4dyqlhsf0lwzf1fw9380pd1q1j0k20j24hvjfa3kr02msl")))

(define-public crate-rafx-assets-0.0.14 (c (n "rafx-assets") (v "0.0.14") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "distill") (r "=0.0.3") (f (quote ("serde_importers"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.14") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.14") (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.14") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0wqxy2fps3rv99bjgglq9g1fapw8i5r1z2a5m98yg40j84kjwhy2")))

(define-public crate-rafx-assets-0.0.16 (c (n "rafx-assets") (v "0.0.16") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "basis-universal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "ddsfile") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.3.0") (d #t) (k 0)) (d (n "hydrate-base") (r "^0.0.2") (d #t) (k 0)) (d (n "hydrate-data") (r "^0.0.2") (d #t) (k 0)) (d (n "hydrate-loader") (r "^0.0.2") (d #t) (k 0)) (d (n "hydrate-pipeline") (r "^0.0.2") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("gif" "jpeg" "ico" "png" "pnm" "tga" "tiff" "bmp"))) (k 0)) (d (n "image_dds") (r "^0.3.0") (f (quote ("ddsfile" "image" "decode" "bcndecode-sys"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.16") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.16") (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.16") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "type-uuid") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "1z9gm87q3px0bdslfpp6lawc49n23q93d1gz8q5nw6m2gk9kq047") (f (quote (("rafx-vulkan" "rafx-framework/rafx-vulkan") ("rafx-metal" "rafx-framework/rafx-metal") ("rafx-gles3" "rafx-framework/rafx-gles3") ("rafx-gles2" "rafx-framework/rafx-gles2") ("rafx-empty" "rafx-framework/rafx-empty") ("rafx-dx12" "rafx-framework/rafx-dx12") ("dds" "ddsfile" "image_dds"))))))

