(define-module (crates-io ra fx rafx-api) #:use-module (crates-io))

(define-public crate-rafx-api-0.0.2 (c (n "rafx-api") (v "0.0.2") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.2") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0wr0d3za9w95v5q6hzb0dms47vjnfi889gn5iwb6q8d7zxifms8m") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal" "objc" "raw-window-metal" "cocoa-foundation") ("profile-with-tracing" "profiling/profile-with-tracing") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default" "rafx-vulkan" "serde-support"))))))

(define-public crate-rafx-api-0.0.3 (c (n "rafx-api") (v "0.0.3") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.3") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1gjnn8dd18mh91xih9svhyf33hx9plbgj7n43nnbii41mx2daz3j") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("profile-with-tracing" "profiling/profile-with-tracing") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.4 (c (n "rafx-api") (v "0.0.4") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.4") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1n6rvlgrcna8m1z4ziw1k34dfpaqcfagy8hvwflnvf6z1ybzj588") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.5 (c (n "rafx-api") (v "0.0.5") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.5") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1w28f1afmi07agxkzh1iskfsdanr0f9sc377vr7d2kxk4z8h1i41") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.6 (c (n "rafx-api") (v "0.0.6") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.6") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "18rzy8zi9gw540ylfqbf5gk5ab1qpb3p6l839h2y0pb2vf47wx38") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.7 (c (n "rafx-api") (v "0.0.7") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.7") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0gbcpq7w5clag93v97dyjcp4b26vk8sgm9kxk07nsn78fcqdn7xd") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.8 (c (n "rafx-api") (v "0.0.8") (d (list (d (n "ash") (r ">=0.30") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0fvcb4jsvlxx9fvhjzkxyym8vnm5z5xla9bavfhh8sq32q2i3cb4") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.9 (c (n "rafx-api") (v "0.0.9") (d (list (d (n "ash") (r ">=0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1gz2wnnp75kvhxwhxyk961bgcaxa4jzbm7ld3dvnddrfyblmwgcg") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.10 (c (n "rafx-api") (v "0.0.10") (d (list (d (n "ash") (r ">=0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.4") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.10") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0kwkc7iav000jiv1wh33g2zc9qr0js0yi09xvhyz13xny5gy93fn") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.11 (c (n "rafx-api") (v "0.0.11") (d (list (d (n "ash") (r ">=0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "11ci1vnraarzqabffwbngmv1d8wvrl6xwnxv7qy4gcp3402fywh7") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.12 (c (n "rafx-api") (v "0.0.12") (d (list (d (n "ash") (r ">=0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (k 0)) (d (n "profiling") (r "^0.1.9") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0wnh2n5j08rbazpid7i24kxncp67sp32cq500qg85p15ssdbcb4i") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-empty") ("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-rafx-api-0.0.13 (c (n "rafx-api") (v "0.0.13") (d (list (d (n "ash") (r ">=0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-base") (r "=0.0.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "vk-mem") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.4") (f (quote ("Document" "Element" "HtmlCanvasElement" "WebGlBuffer" "WebGlTexture" "WebGlRenderingContext" "WebGlProgram" "WebGlShader" "WebGlRenderbuffer" "Window" "WebGlFramebuffer"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "minwindef" "windef" "wingdi" "winuser"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"windows\"))") (k 0)) (d (n "x11") (r "^2.3") (f (quote ("xlib" "glx"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"linux\"))") (k 0)))) (h "1camz5mwyx3lhaisfhjcvhx39sgmmqq4c1ha1mz8dmy0z9izhpwx") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "vk-mem" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-gles3" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-gles2" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-empty") ("default"))))))

(define-public crate-rafx-api-0.0.14 (c (n "rafx-api") (v "0.0.14") (d (list (d (n "ash") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gpu-allocator") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.21") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.14") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.4") (f (quote ("Document" "Element" "HtmlCanvasElement" "WebGlBuffer" "WebGlTexture" "WebGlRenderingContext" "WebGlProgram" "WebGlShader" "WebGlRenderbuffer" "Window" "WebGlFramebuffer"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "minwindef" "windef" "wingdi" "winuser"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"windows\"))") (k 0)) (d (n "x11") (r "^2.3") (f (quote ("xlib" "glx"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"linux\"))") (k 0)))) (h "0cghw52n1kimm9dvmxabk36209arggl3syg76284czvb4ikh31li") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "gpu-allocator" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block") ("rafx-gles3" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-gles2" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-empty") ("default"))))))

(define-public crate-rafx-api-0.0.15 (c (n "rafx-api") (v "0.0.15") (d (list (d (n "ash") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22.3") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics-types") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gpu-allocator") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.23.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"macos\"))") (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.15") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.4") (f (quote ("Document" "Element" "HtmlCanvasElement" "WebGlBuffer" "WebGlTexture" "WebGlRenderingContext" "WebGlProgram" "WebGlShader" "WebGlRenderbuffer" "Window" "WebGlFramebuffer"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "minwindef" "windef" "wingdi" "winuser"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"windows\"))") (k 0)) (d (n "x11") (r "^2.3") (f (quote ("xlib" "glx"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os = \"linux\"))") (k 0)))) (h "09i5plp1j81wiax4jqavp4lmqc9zkb374cld1dpcaq6rlc1jsrxn") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "gpu-allocator" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block" "core-graphics-types" "core-graphics" "core-foundation" "cocoa") ("rafx-gles3" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-gles2" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-empty") ("default"))))))

(define-public crate-rafx-api-0.0.16 (c (n "rafx-api") (v "0.0.16") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "ash-window") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os=\"macos\"))") (k 0)) (d (n "cocoa-foundation") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os=\"macos\"))") (k 0)) (d (n "core-graphics") (r "=0.22.3") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "core-graphics-types") (r "^0.1") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "gpu-allocator") (r "^0.22.0") (o #t) (k 0)) (d (n "hassle-rs") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal_rs") (r "^0.25") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0) (p "metal")) (d (n "objc") (r "^0.2.4") (f (quote ("exception"))) (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os=\"macos\"))") (k 0)) (d (n "profiling") (r "^1.0.1") (d #t) (k 0)) (d (n "rafx-base") (r "^0.0.16") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "raw-window-metal") (r "^0.3.1") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.4") (f (quote ("Document" "Element" "HtmlCanvasElement" "WebGlBuffer" "WebGlTexture" "WebGlRenderingContext" "WebGlProgram" "WebGlShader" "WebGlRenderbuffer" "Window" "WebGlFramebuffer"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "minwindef" "windef" "wingdi" "winuser"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os=\"windows\"))") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation" "Win32_Graphics_Dxgi_Common" "Win32_Security" "Win32_System" "Win32_System_Threading" "Win32_Graphics_Direct3D" "Win32_Graphics_Direct3D12" "Win32_Graphics_Dxgi" "Win32_Graphics_Direct3D_Dxc"))) (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3") (f (quote ("xlib" "glx"))) (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), target_os=\"linux\"))") (k 0)))) (h "08qv466fx80wn3dmr6gbblw8cz2cdm14rlhzzy857pqnbr6vzpcw") (f (quote (("track-device-contexts" "backtrace") ("static-vulkan") ("serde-support" "serde" "serde_bytes") ("rafx-vulkan" "ash" "gpu-allocator" "gpu-allocator/vulkan" "ash-window") ("rafx-metal" "metal_rs" "objc" "raw-window-metal" "cocoa-foundation" "dispatch" "foreign-types-shared" "block" "core-graphics-types" "core-graphics" "core-foundation" "cocoa") ("rafx-gles3" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-gles2" "winapi" "cocoa" "objc" "core-foundation" "x11") ("rafx-empty") ("rafx-dx12" "windows" "gpu-allocator" "gpu-allocator/d3d12" "hassle-rs") ("default"))))))

