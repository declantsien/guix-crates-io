(define-module (crates-io ra fx rafx-shader-processor) #:use-module (crates-io))

(define-public crate-rafx-shader-processor-0.0.5 (c (n "rafx-shader-processor") (v "0.0.5") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.5") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.5") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1xp4xp2dj3j2bc0k76rnqs6xp6gxzcf5v9x819r526xy9dbc4rgk")))

(define-public crate-rafx-shader-processor-0.0.6 (c (n "rafx-shader-processor") (v "0.0.6") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.6") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.6") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0d1ihyd9dm3xk72zw33mgflxsdpl0ka6h048xfa31g2r141yf5v1")))

(define-public crate-rafx-shader-processor-0.0.7 (c (n "rafx-shader-processor") (v "0.0.7") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.7") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.7") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0g1iy2qx6f363wi220cg4087zss8jc6lij42kzsv6yrn62xq5a1f")))

(define-public crate-rafx-shader-processor-0.0.8 (c (n "rafx-shader-processor") (v "0.0.8") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.8") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.8") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1cdckijwqrdmzyr6sm57bg2f6a9y6jbhh2kvcpacapjnx1wlrlsi")))

(define-public crate-rafx-shader-processor-0.0.9 (c (n "rafx-shader-processor") (v "0.0.9") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.9") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.9") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0ywx33lkfsb2626bi7bg5l4r2p9ky1izmp585mjxlf1x81k4pd08")))

(define-public crate-rafx-shader-processor-0.0.10 (c (n "rafx-shader-processor") (v "0.0.10") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.10") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.10") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1gl1qafr2xnz676ms3gc7piynvv4nwv5w2fa71nzqs6aps1zlx63")))

(define-public crate-rafx-shader-processor-0.0.11 (c (n "rafx-shader-processor") (v "0.0.11") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.11") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.11") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "02jp1q2hp4h4gcbdbh66q30gs92l0fbd9pdcm0mdyjjgqmrchmqj")))

(define-public crate-rafx-shader-processor-0.0.12 (c (n "rafx-shader-processor") (v "0.0.12") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.12") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.12") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0smz1rw9f06sdxyb0d89fm4m5jw9b0419naibmdw6zch3qx7w11b")))

(define-public crate-rafx-shader-processor-0.0.13 (c (n "rafx-shader-processor") (v "0.0.13") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "=0.0.13") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "=0.0.13") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0hnr07k60y9wsj6ax16yy5vhf3g62wglxl7zxanqr262y6kp93vs")))

(define-public crate-rafx-shader-processor-0.0.14 (c (n "rafx-shader-processor") (v "0.0.14") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.14") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.14") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1qgr8blny7xndyrh0hy7z4v0gn4zab77dnv48b8syh5zzdf00d2f")))

(define-public crate-rafx-shader-processor-0.0.15 (c (n "rafx-shader-processor") (v "0.0.15") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.15") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "rafx-framework") (r "^0.0.15") (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1f5ghwhjv6cxq7vd6yx5jsw615qyn90dp0a86xr794kli3fcdz0k")))

(define-public crate-rafx-shader-processor-0.0.16 (c (n "rafx-shader-processor") (v "0.0.16") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rafx-api") (r "^0.0.16") (f (quote ("serde-support"))) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shaderc") (r "^0.8") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 2)) (d (n "spirv_cross") (r "^0.0.1") (f (quote ("glsl" "hlsl" "msl"))) (d #t) (k 0) (p "aclysma_spirv_cross")) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1apqc13n33zpbgll46qr7p1r5xjvpgqi5kp520zrckl0qxql43i3")))

