(define-module (crates-io ra di radix-engine-interface) #:use-module (crates-io))

(define-public crate-radix-engine-interface-1.2.0-dev (c (n "radix-engine-interface") (v "1.2.0-dev") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0-dev") (k 0)) (d (n "radix-common") (r "^1.2.0-dev") (k 0)) (d (n "radix-common-derive") (r "^1.2.0-dev") (k 0)) (d (n "radix-rust") (r "^1.2.0-dev") (k 0)) (d (n "regex") (r "=1.9.3") (k 0)) (d (n "sbor") (r "^1.2.0-dev") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)))) (h "0zl0hyw614sjfwmkbxmzzii3qz0dycn0wlx94ga7hgrq9wbqaf0p") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "hex/std" "serde_json/std" "sbor/std" "radix-blueprint-schema-init/std" "radix-common/std" "radix-common-derive/std" "strum/std" "radix-rust/std" "serde?/std") ("fuzzing" "arbitrary" "sbor/fuzzing" "radix-common/fuzzing" "radix-rust/fuzzing" "dep:serde") ("alloc" "hex/alloc" "serde_json/alloc" "sbor/alloc" "radix-blueprint-schema-init/alloc" "radix-common/alloc" "radix-common-derive/alloc" "radix-rust/alloc" "serde?/alloc"))))))

(define-public crate-radix-engine-interface-1.2.0 (c (n "radix-engine-interface") (v "1.2.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0") (k 0)) (d (n "radix-common") (r "^1.2.0") (k 0)) (d (n "radix-common-derive") (r "^1.2.0") (k 0)) (d (n "radix-rust") (r "^1.2.0") (k 0)) (d (n "regex") (r "=1.9.3") (k 0)) (d (n "sbor") (r "^1.2.0") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)))) (h "1w2zc8apxvwa3py8lvg6q6945253mzm9570rrw9ky883x18nmab9") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "hex/std" "serde_json/std" "sbor/std" "radix-blueprint-schema-init/std" "radix-common/std" "radix-common-derive/std" "strum/std" "radix-rust/std" "serde?/std") ("fuzzing" "arbitrary" "sbor/fuzzing" "radix-common/fuzzing" "radix-rust/fuzzing" "dep:serde") ("alloc" "hex/alloc" "serde_json/alloc" "sbor/alloc" "radix-blueprint-schema-init/alloc" "radix-common/alloc" "radix-common-derive/alloc" "radix-rust/alloc" "serde?/alloc"))))))

