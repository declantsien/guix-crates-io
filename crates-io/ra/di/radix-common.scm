(define-module (crates-io ra di radix-common) #:use-module (crates-io))

(define-public crate-radix-common-1.2.0-dev (c (n "radix-common") (v "1.2.0-dev") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "blst") (r "^0.3.11") (k 0)) (d (n "bnum") (r "^0.7.0") (f (quote ("numtraits" "numtraits"))) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports" "html_reports"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("u64_backend" "u64_backend"))) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-rust") (r "^1.2.0-dev") (k 0)) (d (n "radix-sbor-derive") (r "^1.2.0-dev") (k 0)) (d (n "rug") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "sbor") (r "^1.2.0-dev") (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("recovery" "recovery"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)))) (h "1cp188w5x6sz3hs3hlh7038d8yv0pqwsrppcnc99h130y4dv944v") (f (quote (("secp256k1_sign_and_validate" "secp256k1") ("resource_tracker") ("fuzzing" "arbitrary" "serde" "bnum/arbitrary" "bnum/serde" "sbor/fuzzing" "radix-rust/fuzzing") ("default" "std") ("coverage")))) (s 2) (e (quote (("std" "hex/std" "sbor/std" "radix-rust/std" "radix-sbor-derive/std" "serde_json/std" "ed25519-dalek/std" "secp256k1?/std" "blake2/std" "sha3/std") ("serde" "dep:serde" "radix-rust/serde" "sbor/serde" "hex/serde") ("full_math_benches" "dep:rug" "dep:ethnum") ("alloc" "hex/alloc" "sbor/alloc" "radix-rust/alloc" "radix-sbor-derive/alloc" "serde_json/alloc" "ed25519-dalek/alloc" "secp256k1?/alloc" "lazy_static/spin_no_std" "blst/no-threads"))))))

(define-public crate-radix-common-1.2.0 (c (n "radix-common") (v "1.2.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "blst") (r "^0.3.11") (k 0)) (d (n "bnum") (r "^0.11.0") (f (quote ("numtraits" "numtraits"))) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports" "html_reports"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("u64_backend" "u64_backend"))) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-rust") (r "^1.2.0") (k 0)) (d (n "radix-sbor-derive") (r "^1.2.0") (k 0)) (d (n "rug") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "sbor") (r "^1.2.0") (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("recovery" "recovery"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)) (d (n "zeroize") (r "^1.3.0") (d #t) (k 0)))) (h "0sa9nnjqfj79l0j6hxmsxjqgnhz411lfq1hpcns2hii6czp9gkni") (f (quote (("secp256k1_sign_and_validate" "secp256k1") ("resource_tracker") ("fuzzing" "arbitrary" "serde" "bnum/arbitrary" "bnum/serde" "sbor/fuzzing" "radix-rust/fuzzing") ("default" "std") ("coverage")))) (s 2) (e (quote (("std" "hex/std" "sbor/std" "radix-rust/std" "radix-sbor-derive/std" "serde_json/std" "ed25519-dalek/std" "secp256k1?/std" "blake2/std" "sha3/std") ("serde" "dep:serde" "radix-rust/serde" "sbor/serde" "hex/serde") ("full_math_benches" "dep:rug" "dep:ethnum") ("alloc" "hex/alloc" "sbor/alloc" "radix-rust/alloc" "radix-sbor-derive/alloc" "serde_json/alloc" "ed25519-dalek/alloc" "secp256k1?/alloc" "lazy_static/spin_no_std" "blst/no-threads"))))))

