(define-module (crates-io ra di radix-engine) #:use-module (crates-io))

(define-public crate-radix-engine-1.2.0-dev (c (n "radix-engine") (v "1.2.0-dev") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports" "html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (k 0)) (d (n "moka") (r "^0.9.9") (f (quote ("sync" "sync"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "perfcnt") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0-dev") (k 0)) (d (n "radix-common") (r "^1.2.0-dev") (f (quote ("secp256k1_sign_and_validate"))) (k 0)) (d (n "radix-common-derive") (r "^1.2.0-dev") (k 0)) (d (n "radix-engine-interface") (r "^1.2.0-dev") (k 0)) (d (n "radix-engine-profiling") (r "^1.2.0-dev") (o #t) (k 0)) (d (n "radix-engine-profiling-derive") (r "^1.2.0-dev") (k 0)) (d (n "radix-native-sdk") (r "^1.2.0-dev") (k 0)) (d (n "radix-rust") (r "^1.2.0-dev") (k 0)) (d (n "radix-substate-store-interface") (r "^1.2.0-dev") (k 0)) (d (n "radix-transactions") (r "^1.2.0-dev") (k 0)) (d (n "radix-wasm-instrument") (r "^1.0.0") (f (quote ("ignore_custom_section" "ignore_custom_section"))) (k 0)) (d (n "radix-wasmi") (r "^1.0.0") (d #t) (k 0)) (d (n "sbor") (r "^1.2.0-dev") (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)) (d (n "syn") (r "^1.0.93") (f (quote ("full" "extra-traits" "full" "extra-traits"))) (d #t) (k 0)) (d (n "wabt") (r "^0.10.0") (d #t) (k 2)) (d (n "wasmer") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^2.2.1") (d #t) (k 2)) (d (n "wasmer-compiler-singlepass") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.2.1") (d #t) (k 2)) (d (n "wasmparser") (r "^0.107.0") (k 0)))) (h "1fp0a382bgbk00gh70l8p179ialmxn90nm2fjqhf1zkzggw0njf6") (f (quote (("resource_tracker" "radix-common/resource_tracker" "radix-engine-profiling/resource_tracker" "radix-engine-profiling-derive/resource_tracker" "radix-common/resource_tracker") ("radix_engine_tests") ("fuzzing" "radix-common/fuzzing" "radix-engine-interface/fuzzing" "sbor/fuzzing" "radix-transactions/fuzzing" "radix-rust/fuzzing") ("full_wasm_benchmarks") ("default" "std" "moka") ("db_checker") ("cpu_ram_metrics" "std" "perfcnt" "radix-engine-profiling/ram_metrics") ("coverage" "radix-common/coverage")))) (s 2) (e (quote (("wasmer" "dep:wasmer" "dep:wasmer-compiler-singlepass") ("std" "sbor/std" "radix-native-sdk/std" "radix-wasmi/std" "radix-transactions/std" "radix-blueprint-schema-init/std" "radix-engine-interface/std" "radix-substate-store-interface/std" "radix-common-derive/std" "radix-rust/std" "serde_json?/std" "radix-wasm-instrument/std") ("moka" "dep:moka") ("lru" "dep:lru") ("alloc" "sbor/alloc" "radix-native-sdk/alloc" "radix-transactions/alloc" "radix-blueprint-schema-init/alloc" "radix-engine-interface/alloc" "radix-substate-store-interface/alloc" "radix-common-derive/alloc" "radix-rust/alloc" "lru?/hashbrown" "serde_json?/alloc"))))))

(define-public crate-radix-engine-1.2.0 (c (n "radix-engine") (v "1.2.0") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports" "html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (o #t) (k 0)) (d (n "moka") (r "^0.9.9") (f (quote ("sync" "sync"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "perfcnt") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0") (k 0)) (d (n "radix-common") (r "^1.2.0") (f (quote ("secp256k1_sign_and_validate"))) (k 0)) (d (n "radix-common-derive") (r "^1.2.0") (k 0)) (d (n "radix-engine-interface") (r "^1.2.0") (k 0)) (d (n "radix-engine-profiling") (r "^1.2.0") (o #t) (k 0)) (d (n "radix-engine-profiling-derive") (r "^1.2.0") (k 0)) (d (n "radix-native-sdk") (r "^1.2.0") (k 0)) (d (n "radix-rust") (r "^1.2.0") (k 0)) (d (n "radix-substate-store-interface") (r "^1.2.0") (k 0)) (d (n "radix-transactions") (r "^1.2.0") (k 0)) (d (n "radix-wasm-instrument") (r "^1.0.0") (f (quote ("ignore_custom_section" "ignore_custom_section"))) (k 0)) (d (n "radix-wasmi") (r "^1.0.0") (d #t) (k 0)) (d (n "sbor") (r "^1.2.0") (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "derive"))) (k 0)) (d (n "syn") (r "^1.0.93") (f (quote ("full" "extra-traits" "full" "extra-traits"))) (d #t) (k 0)) (d (n "wabt") (r "^0.10.0") (d #t) (k 2)) (d (n "wasmer") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^2.2.1") (d #t) (k 2)) (d (n "wasmer-compiler-singlepass") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.2.1") (d #t) (k 2)) (d (n "wasmparser") (r "^0.107.0") (k 0)))) (h "0r016bkkkl6jzf0jcc39f04dfwjnx1hf6irj8wj2a8n58zwyp47g") (f (quote (("radix_engine_tests") ("fuzzing" "radix-common/fuzzing" "radix-engine-interface/fuzzing" "sbor/fuzzing" "radix-transactions/fuzzing" "radix-rust/fuzzing") ("full_wasm_benchmarks") ("default" "std" "moka") ("db_checker") ("cpu_ram_metrics" "std" "perfcnt" "radix-engine-profiling/ram_metrics") ("coverage" "radix-common/coverage")))) (s 2) (e (quote (("wasmer" "dep:wasmer" "dep:wasmer-compiler-singlepass") ("std" "sbor/std" "radix-native-sdk/std" "radix-wasmi/std" "radix-transactions/std" "radix-blueprint-schema-init/std" "radix-engine-interface/std" "radix-substate-store-interface/std" "radix-common-derive/std" "radix-rust/std" "serde_json?/std" "radix-wasm-instrument/std") ("resource_tracker" "dep:radix-engine-profiling" "radix-engine-profiling/resource_tracker" "radix-engine-profiling-derive/resource_tracker" "radix-common/resource_tracker") ("moka" "dep:moka") ("lru" "dep:lru") ("alloc" "sbor/alloc" "radix-native-sdk/alloc" "radix-transactions/alloc" "radix-blueprint-schema-init/alloc" "radix-engine-interface/alloc" "radix-substate-store-interface/alloc" "radix-common-derive/alloc" "radix-rust/alloc" "lru?/hashbrown" "serde_json?/alloc"))))))

