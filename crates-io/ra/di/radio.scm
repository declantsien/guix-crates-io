(define-module (crates-io ra di radio) #:use-module (crates-io))

(define-public crate-radio-0.1.0 (c (n "radio") (v "0.1.0") (h "1ggypzhr3v4mq6jf00cpaa2cix2iqc2lyshy8p9adjj5j0z4yivi")))

(define-public crate-radio-0.2.0 (c (n "radio") (v "0.2.0") (h "0i6yqv54spskgf3k801vfnxym9mg9i59lfgdisjfdl0kq4lawy5i")))

(define-public crate-radio-0.3.0 (c (n "radio") (v "0.3.0") (h "00pny3xqy4bnl8ayv762d4lf4c9br9lqsp1g7jdqx7gx7l468mdg")))

(define-public crate-radio-0.3.1 (c (n "radio") (v "0.3.1") (d (list (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "06f2y9d496fk1sz31wsy2386yr5fbqg3a0xck197ba8jfjcr0cy9")))

(define-public crate-radio-0.4.0 (c (n "radio") (v "0.4.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0zxp9vkgbyx6zxg43m9s90dh1xpycwkmap2mglz9ycmlj4427v5d")))

(define-public crate-radio-0.4.1 (c (n "radio") (v "0.4.1") (d (list (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1w8s2pvlfy9pisjjs1i9p6r2ck53bycmkkc4yqf22spp2wa05nh1")))

(define-public crate-radio-0.4.2 (c (n "radio") (v "0.4.2") (d (list (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "core") (r "^0.1.0") (o #t) (d #t) (k 0) (p "core-futures-tls")) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1k3xwvgsmd1vghyvnlkjsyy3yn108d76k4s77hz2sqysdrnyvglw") (f (quote (("default") ("async-await" "core"))))))

(define-public crate-radio-0.4.3 (c (n "radio") (v "0.4.3") (d (list (d (n "async-std") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "core") (r "^0.1.0") (o #t) (d #t) (k 0) (p "core-futures-tls")) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "11maibvw6zqrpzdhkmly11ymsxh6yprwh0bd4ffkgy40qdrfjyzy") (f (quote (("mock" "embedded-hal-mock") ("default") ("async-await" "core"))))))

(define-public crate-radio-0.4.4 (c (n "radio") (v "0.4.4") (d (list (d (n "async-std") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "core") (r "^0.1.0") (o #t) (d #t) (k 0) (p "core-futures-tls")) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1k6anl7c35jwimf26v9djx7af1zc0ags2bxjlywy3v0gkz78rj7l") (f (quote (("mock" "embedded-hal-mock") ("default") ("async-await" "core"))))))

(define-public crate-radio-0.5.0 (c (n "radio") (v "0.5.0") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "core") (r "^0.1.0") (o #t) (d #t) (k 0) (p "core-futures-tls")) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "04wf4cdjcamsk8ia4y4mvr7255g1rb0v5ggs4zqw01601k5j1frp") (f (quote (("mock" "embedded-hal-mock") ("default") ("async-await" "core" "async-std"))))))

(define-public crate-radio-0.6.0 (c (n "radio") (v "0.6.0") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "core") (r "^0.1.0") (o #t) (d #t) (k 0) (p "core-futures-tls")) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0rvazwffv3imk8f93x2hv2z6f8lmvvkbiwd7a9vkw40vja57lpaw") (f (quote (("mock" "embedded-hal-mock") ("default") ("async-await" "core" "async-std"))))))

(define-public crate-radio-0.7.0 (c (n "radio") (v "0.7.0") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1i8dqymwm9vz0gqh32g1g8kb0p4w3vslpcv9s5wcc9iws8cybky2") (f (quote (("mock" "embedded-hal-mock") ("default") ("async-await" "async-std"))))))

(define-public crate-radio-0.8.0 (c (n "radio") (v "0.8.0") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)))) (h "1wc9g2wj228m5kc53wqvmyz5kswgaxc848pgv7vd3a2lw7mn0847") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.8.1 (c (n "radio") (v "0.8.1") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)))) (h "1hlxqnvv7yrrdwp7dh3x7cahxwq4jyblsbch7zh9cav8asjw33l6") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.9.0 (c (n "radio") (v "0.9.0") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)))) (h "1pjm612zdvns5944g1k6c90hm8siyq4b1nq059clv8rdr18vxcn5") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.9.1 (c (n "radio") (v "0.9.1") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)))) (h "12aymvf0kivrp4v46szjzdp0a8fkmc94gjkbjwcgmy43ixw61aid") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.10.0 (c (n "radio") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "0lrx2r8k1c2h2dsygbigzrl5f0yr0rwr9g2cj7fy72wq8246vyni") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.10.1 (c (n "radio") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "03m65cpk7c8j3yn6j6cqnqw3sipcqxxp0yd5qfnf2ffg2f62n747") (f (quote (("std" "log") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.11.0 (c (n "radio") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "179b81f5b3knhfqlryq8nq9jhq0rxbfscdzr9q71izgx18gyldqk") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats" "log") ("default"))))))

(define-public crate-radio-0.11.1 (c (n "radio") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "1xrdpfyg4argfbda745x8hnbygxigrffcdf4l111h1syzv8bhpcv") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "structopt" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.12.0 (c (n "radio") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "071ivh6f1a9ngify7flqs529v05lkgjq1z34i47g2j9jlxvj6g2d") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "clap" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

(define-public crate-radio-0.12.1 (c (n "radio") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "rolling-stats") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)))) (h "0kqh3drszgwbjwpwwk0b5fcgj5yqpdygyqqahhq7c1n70mn6hk5a") (f (quote (("std") ("nonblocking") ("mock" "embedded-hal-mock") ("helpers" "clap" "humantime" "std" "pcap-file" "libc" "byteorder" "rolling-stats") ("default"))))))

