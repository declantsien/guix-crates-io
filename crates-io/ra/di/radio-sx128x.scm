(define-module (crates-io ra di radio-sx128x) #:use-module (crates-io))

(define-public crate-radio-sx128x-0.2.1 (c (n "radio-sx128x") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.2.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1y73aqplww9mhdp3srzq474zgwmzsm0vabm8adq7c3qm3ag29iy4") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.2 (c (n "radio-sx128x") (v "0.2.2") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.2.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1axqmbdpjlb9h2ycmi54532b6skza1hya2a1h6qgl0jws58jgl7b") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.3 (c (n "radio-sx128x") (v "0.2.3") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0wdn4ykqdih5lr5lv1dzmb6qgsjx7lw88v7qnc3vb3nh05sipwzx") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.4 (c (n "radio-sx128x") (v "0.2.4") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0yf4b2yyp5ks6mzak5q1hz0dc48qrd2x1vlw9la9z20cwjmqscff") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.5 (c (n "radio-sx128x") (v "0.2.5") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0iq54nydkpna0ybrlzfrqr9q84dn9v9srq5aqw2g55iicz8hpxbb") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.6 (c (n "radio-sx128x") (v "0.2.6") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1zkaa14ilbr4qg5y1mgmhs28kyrmlbbjdbkarfrqcj24kiy04s5c") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.7 (c (n "radio-sx128x") (v "0.2.7") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0vbg8w013gcq1xrh3k4aaj6zd5w8ppyrsk5inbar9v9wac3nm2s5") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.8 (c (n "radio-sx128x") (v "0.2.8") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "16f6k08kwvy8aad788bqbsnghy8bk61swlzbm3xpn6lnhaw1fs30") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.2.9 (c (n "radio-sx128x") (v "0.2.9") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0vl7f57wlr8rm2br150fr0jybs7p9gfrannjba3z4xdldw2sajl8") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.3.0 (c (n "radio-sx128x") (v "0.3.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1nq5ah9br81qyi0bimlpjpsvqayayl8bqsl22b4vivzhfbzmj7z9") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.3.1 (c (n "radio-sx128x") (v "0.3.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0p7kgm1z029b2xb3vba5lp4f0pkjrc2n5w4a74mqm7dnb25d8ylw") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.4.0 (c (n "radio-sx128x") (v "0.4.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1qp63mlpml0jij7cxvl78s5ha8wj3191ssgzq3f59gxipycw4z90") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.4.1 (c (n "radio-sx128x") (v "0.4.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0r516a6qhzs6f4v6nl9n767892d57q50kxa1c5xi9b9dz28wwwcp") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.5.0 (c (n "radio-sx128x") (v "0.5.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1bff4y1742kyhv4r6d2fc1qsg7lbib9gxxxlcpkbaa6af5apbqxn") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.6.0 (c (n "radio-sx128x") (v "0.6.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0w7bi1kdyjk556pws2fslxg81739i1y429y4ann5x8m77ly3vzi8") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.6.1 (c (n "radio-sx128x") (v "0.6.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "0l5512rz475y920il74mq2h6hhhr3185sxamkrqbr7b6ldc95xgj") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.7.0 (c (n "radio-sx128x") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1jhyxxksjd2zp4996p9ap0yjbmmj4hqn4krbh7mlq86s1crxbplf") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-radio-sx128x-0.8.0 (c (n "radio-sx128x") (v "0.8.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0vxiq749vcj77pm3yggjnjmcl5wz9dfhkhgbj44g3mkg3xd70479") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.8.1 (c (n "radio-sx128x") (v "0.8.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1d3361gm785bvzvq1x3ww4267g0svxr80c0zb6lzp99pdas5q0rq") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.8.2 (c (n "radio-sx128x") (v "0.8.2") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0yjp9g8lkl9vy0vla1w8q4r287wv9ws6bmdiwxw5aj15faq4mqg0") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.8.3 (c (n "radio-sx128x") (v "0.8.3") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1bsz4v34h5yb4rwbi4cv9fq9n7valpq5wfbvsg9xq7mms319g1hf") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.10.0 (c (n "radio-sx128x") (v "0.10.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0ax94yvbvrm1j4wlg8ynimzdy1gfbkl37q6ajn45f1xhlpj288r5") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.11.0 (c (n "radio-sx128x") (v "0.11.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0lrjzrfd2zfipwpad3p7gi14dn528mbgaxr3hccbxxld7iyjrf3j") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.11.2 (c (n "radio-sx128x") (v "0.11.2") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.5.5") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0i2sdhsdcxynq5ls12yijag4xw0wlhvg45v99l5hjq3abfhhilqq") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.11.3 (c (n "radio-sx128x") (v "0.11.3") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.6.0") (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1p638c1kdl5h4vxb1fzw9kf514wb3j0cqh1yi2wcrbh1w8z8bw26") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.12.1 (c (n "radio-sx128x") (v "0.12.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.6.0") (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1llvyf1v4rbydqnvjv2wkn56fwzixbsva3a3kklg36sq05pds9lg") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime" "embedded-spi/utils") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.13.0 (c (n "radio-sx128x") (v "0.13.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-spi") (r "^0.6.0") (k 0)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "radio") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "0mrl3f9lac8wzqrnyw48sawv85l6vzqhxg8pbzxffzw5k5idg41m") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime" "embedded-spi/utils") ("default" "util" "serde"))))))

(define-public crate-radio-sx128x-0.14.1-alpha.5 (c (n "radio-sx128x") (v "0.14.1-alpha.5") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.1") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.0") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "1pik92ppjkx10r6qyr76gkvbyn9f2bfjygfzqvya1sp4i60a5xqg") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex") ("tests" "driver-pal/mock") ("poll-irq") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux"))))))

(define-public crate-radio-sx128x-0.15.0 (c (n "radio-sx128x") (v "0.15.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.1") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.0") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "1ww35ir7cgmapgjbbparwi27qyvyz4gpp5s9sij8wb98yml67xyn") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex") ("tests" "driver-pal/mock") ("poll-irq") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux") ("atures" "util"))))))

(define-public crate-radio-sx128x-0.16.0 (c (n "radio-sx128x") (v "0.16.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.2") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.0") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (o #t) (d #t) (k 0)))) (h "1c77qscy561x5lvvlp6ikfz6xl4mj585bchdvwm227swzcnjjypi") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex") ("tests" "driver-pal/mock") ("poll-irq") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux"))))))

(define-public crate-radio-sx128x-0.17.0 (c (n "radio-sx128x") (v "0.17.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.5") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.4") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.95") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (o #t) (d #t) (k 0)))) (h "1vhj46qqc0na4aclf1mgcblbgkcfnyahwm42nb7p9xc965ix0zzy") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex" "thiserror") ("tests" "driver-pal/mock") ("poll-irq") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux"))))))

(define-public crate-radio-sx128x-0.17.1 (c (n "radio-sx128x") (v "0.17.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.5") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.4") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.95") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (o #t) (d #t) (k 0)))) (h "0lg7hf4lc3pv7h9ih4y1kjl2ng2w674mndrvmxf6li3bq3xb7brq") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex" "thiserror") ("tests" "driver-pal/mock") ("poll-irq") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux"))))))

(define-public crate-radio-sx128x-0.17.2 (c (n "radio-sx128x") (v "0.17.2") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.5") (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.4") (f (quote ("mock" "hal"))) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.95") (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pcap-file") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "radio") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (o #t) (d #t) (k 0)))) (h "07xhdlqdgfgkl5f1pgwpdcvxbbwr0j3m5pnk6yv05p0vibfc7g98") (f (quote (("util" "structopt" "tracing" "tracing-subscriber" "humantime" "pcap-file" "crc16" "driver-pal/hal" "failure/std" "hex" "thiserror") ("tests" "driver-pal/mock") ("poll-irq") ("patch-unknown-state") ("default" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux" "patch-unknown-state"))))))

(define-public crate-radio-sx128x-0.18.0 (c (n "radio-sx128x") (v "0.18.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.5.0") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.8.0-alpha.6") (o #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.95") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "radio") (r "^0.11.0") (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (o #t) (d #t) (k 0)))) (h "0mi8hfwyy70r06kygw3a67swwf6gz0szmr45gbpilcwc2p76vnk6") (f (quote (("util" "std" "structopt" "tracing" "tracing-subscriber" "humantime" "crc16" "driver-pal" "driver-pal/hal" "radio/helpers") ("tests" "driver-pal/mock") ("std" "radio/std" "driver-pal/mock" "failure/std" "hex" "thiserror") ("poll-irq") ("patch-unknown-state") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "std" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux" "patch-unknown-state"))))))

(define-public crate-radio-sx128x-0.19.0 (c (n "radio-sx128x") (v "0.19.0") (d (list (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "color-backtrace") (r "^0.6.1") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "driver-pal") (r "^0.9.0") (o #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.123") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "radio") (r "^0.12.1") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)))) (h "0fzxb0r4zijywgyzx80sflp2hxm4gd8r2hxnp00q505ywyib1lfx") (f (quote (("util" "std" "clap" "tracing" "tracing-subscriber" "humantime" "crc16" "driver-pal" "driver-pal/hal" "radio/helpers") ("tests" "driver-pal/mock") ("std" "radio/std" "driver-pal/mock" "failure/std" "hex" "thiserror") ("poll-irq") ("patch-unknown-state") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "std" "util" "serde" "driver-pal/hal-cp2130" "driver-pal/hal-linux" "patch-unknown-state"))))))

