(define-module (crates-io av en avenger-wgpu) #:use-module (crates-io))

(define-public crate-avenger-wgpu-0.0.1-a1 (c (n "avenger-wgpu") (v "0.0.1-a1") (d (list (d (n "avenger") (r "^0.0.1-a1") (d #t) (k 0)) (d (n "avenger-glyphon") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "avenger-vega") (r "^0.0.1-a1") (f (quote ("image-request"))) (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.6.2") (d #t) (k 0)) (d (n "dssim") (r "^3.2.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "etagere") (r "^0.2.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "0dqmz5y5k2h4r6bhc1yy4gmsv23l0fffvbkrbz9gi7g16cbyd6qh") (f (quote (("text-glyphon" "avenger-glyphon") ("default" "text-glyphon"))))))

(define-public crate-avenger-wgpu-0.0.2 (c (n "avenger-wgpu") (v "0.0.2") (d (list (d (n "avenger") (r "^0.0.2") (d #t) (k 0)) (d (n "avenger-glyphon") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "avenger-vega") (r "^0.0.2") (f (quote ("image-request" "svg"))) (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.6.2") (d #t) (k 0)) (d (n "dssim") (r "^3.2.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "etagere") (r "^0.2.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "1q426kz6xhc8gw1b3bkw3i6v5by3dpw82a1vgrz68wsyhl7ixm4r") (f (quote (("text-glyphon" "avenger-glyphon") ("default" "text-glyphon"))))))

(define-public crate-avenger-wgpu-0.0.3 (c (n "avenger-wgpu") (v "0.0.3") (d (list (d (n "avenger") (r "^0.0.3") (d #t) (k 0)) (d (n "avenger-vega") (r "^0.0.3") (f (quote ("image-request" "svg"))) (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.6.2") (d #t) (k 0)) (d (n "cosmic-text") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "dssim") (r "^3.2.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "etagere") (r "^0.2.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "1jd04z6r7q7palnhhrss9d952avgzjprymbhkza8aizj801x034v") (f (quote (("default" "cosmic-text" "rayon"))))))

(define-public crate-avenger-wgpu-0.0.7 (c (n "avenger-wgpu") (v "0.0.7") (d (list (d (n "avenger") (r "^0.0.7") (d #t) (k 0)) (d (n "avenger-vega") (r "^0.0.7") (f (quote ("image-request" "svg"))) (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.6.2") (d #t) (k 0)) (d (n "cosmic-text") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "dssim") (r "^3.2.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "etagere") (r "^0.2.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.67") (f (quote ("Document" "Window" "Element" "HtmlCanvasElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.3") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "0mjbrwzq31x7ckb0iamwh3p732l3y668jq0xmjgv55nfl41lcnsw") (f (quote (("deno") ("default" "cosmic-text" "rayon")))) (s 2) (e (quote (("cosmic-text" "dep:cosmic-text" "lazy_static"))))))

(define-public crate-avenger-wgpu-0.0.8 (c (n "avenger-wgpu") (v "0.0.8") (d (list (d (n "avenger") (r "^0.0.8") (d #t) (k 0)) (d (n "avenger-vega") (r "^0.0.8") (f (quote ("image-request" "svg"))) (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.6.2") (d #t) (k 0)) (d (n "cosmic-text") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "dssim") (r "^3.2.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "etagere") (r "^0.2.10") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.67") (f (quote ("Document" "Window" "Element" "HtmlCanvasElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.20.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.20.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "0f5fpad6f3jybxw14nackzq581mc8lchqs6l06bkayzrq9hh7hik") (f (quote (("deno") ("default" "cosmic-text" "rayon")))) (s 2) (e (quote (("cosmic-text" "dep:cosmic-text" "lazy_static"))))))

