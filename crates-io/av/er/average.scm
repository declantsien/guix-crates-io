(define-module (crates-io av er average) #:use-module (crates-io))

(define-public crate-average-0.1.0 (c (n "average") (v "0.1.0") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)))) (h "0mmfk8xy645xhvnsz8kmpz3lgibib51rclhyfwblqympn58s31n2")))

(define-public crate-average-0.2.0 (c (n "average") (v "0.2.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "1s8z67r5yv3kkjms4ffsak9zvij4kfqm6jmhhfclslr7nmv72xc6")))

(define-public crate-average-0.3.0 (c (n "average") (v "0.3.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "0l0hlpyg488xax5a5lz6bn7kcd50wq9lfzmbzclkmkl3fhnrrc1h")))

(define-public crate-average-0.4.0 (c (n "average") (v "0.4.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "06advlj81l957kmqnsg6qy3681my8lqbx7d3n8ynj6mm7nv6hw8l")))

(define-public crate-average-0.5.0 (c (n "average") (v "0.5.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "1czv1l5nsi6mm7lqgiszd1h2vwmhkccdcm2pq2qib4h67lrwwlg1")))

(define-public crate-average-0.6.0 (c (n "average") (v "0.6.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "quickersort") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "0qlncnwakly630alw2ggcphw43vwn7nhgl034xf40d5w6h6ghbvn")))

(define-public crate-average-0.6.1 (c (n "average") (v "0.6.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "quickersort") (r "^3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "0896jx7r5m0w2lkh9miyms91aj816m5lpwa9rf6msmmcq9wv62v1")))

(define-public crate-average-0.6.2 (c (n "average") (v "0.6.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "quickersort") (r "^3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "1jqjzzm8dcsqdwcszr6gn23ab2fb63mjg8vx5jyicghr5h468kjy")))

(define-public crate-average-0.6.3 (c (n "average") (v "0.6.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "quickersort") (r "^3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "1sr10hykhy15jnr7xr4i99s8rag011daw3s95rxgpvwl402f6hxj")))

(define-public crate-average-0.7.0 (c (n "average") (v "0.7.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "quickersort") (r "^3") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.1") (d #t) (k 2)))) (h "1w4ib75bcpgrkacvsq2vfsqr4l19ywlcbc0m7fyxvc3d0arpxg9x")))

(define-public crate-average-0.8.0 (c (n "average") (v "0.8.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "09yabiqq3nswap9jkb67ddj072fc6jw8n2lls8y1hykmcr9xn9ax")))

(define-public crate-average-0.9.0 (c (n "average") (v "0.9.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1k5b3iqigmnrnf2famanpr6n29mspikpmss49mda693s5kggq4nd") (f (quote (("serde1" "serde" "serde_derive"))))))

(define-public crate-average-0.9.1 (c (n "average") (v "0.9.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "08vna8vqjgmhc4zcr9v911lc7v40bg9nr7vz5wplkflkwnv7brcm") (f (quote (("serde1" "serde" "serde_derive"))))))

(define-public crate-average-0.9.2 (c (n "average") (v "0.9.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "046zhzw30d86c3krr3fv4skq0zs28xspxymwgbf10byk2figg3al") (f (quote (("serde1" "serde" "serde_derive"))))))

(define-public crate-average-0.9.3 (c (n "average") (v "0.9.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1nnrriiddar4d9b7770m8lib7nvfrrlf21mr4ss33rqffdq8jyn8") (f (quote (("serde1" "serde" "serde_derive"))))))

(define-public crate-average-0.9.4 (c (n "average") (v "0.9.4") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1f8ya00bv6qki9m7b4lb3bn845rj473mx02qpm7wgy5qc1yp75xs") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.0 (c (n "average") (v "0.10.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1ahs966x2kfdrh75iccw40mw2zp445vb8ps7jm86h3g2ma1kghgp") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.1 (c (n "average") (v "0.10.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "077wbjzn2hwdjnglp8pjvirvsjgfgbgnlirwh5g2hk14xqx7f57l") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.2 (c (n "average") (v "0.10.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "16ib3vlfp3akpflha1m6598x3jfrgrh9qgrf9vvv11rfqirp22dx") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.3 (c (n "average") (v "0.10.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3.2") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "040i7gzx83djpqqcqlpynsd2nskc4qk6vk0w8kyr6cm03hc5mfb7") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.4 (c (n "average") (v "0.10.4") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3.2") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1dmsxqcr1n0i20qr9g2g6j89kkx8dy6w18dbqzx1wi42wj1chgvh") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.5 (c (n "average") (v "0.10.5") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3.2") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1ib184yksn2b8nb096spr12v3kkny7zb2qkb0idm54ankccqwms6") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.10.6 (c (n "average") (v "0.10.6") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "conv") (r "^0.3.2") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1npcsgksxa8c03cam1zyxgaw9rsifwbzbflf4pjrq55b0a01cg1j") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.11.0 (c (n "average") (v "0.11.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "=1.3") (d #t) (k 2)) (d (n "conv") (r "^0.3.2") (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1sf6qirfwzvhj29fd5wgzm7zscmnfa3481s35vc400p24mnmc2vb") (f (quote (("serde1" "serde" "serde_derive" "serde-big-array"))))))

(define-public crate-average-0.12.0 (c (n "average") (v "0.12.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "=1.3") (d #t) (k 2)) (d (n "easy-cast") (r "^0.3") (o #t) (k 0)) (d (n "float-ord") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "0np1rqglyb17mby26lm7nn4lxmrx9pwxcv3h47hw179ffwsqxgxw") (f (quote (("std" "easy-cast/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm") ("default" "libm"))))))

(define-public crate-average-0.13.0 (c (n "average") (v "0.13.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "=1.3") (d #t) (k 2)) (d (n "easy-cast") (r "^0.4") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "0gj5cng9bfvsdzxvy7p7442ps5zgqs45qggahg96qs5cx2w84ylx") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm"))))))

(define-public crate-average-0.13.1 (c (n "average") (v "0.13.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "=1.3") (d #t) (k 2)) (d (n "easy-cast") (r "^0.4") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1c97m8yagvq8r6qgd3harm5vnkdbld4mxg9byyxh6igjsf8wfgl4") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm"))))))

(define-public crate-average-0.14.0 (c (n "average") (v "0.14.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "easy-cast") (r "^0.5") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "=1.0") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "=1.6") (o #t) (d #t) (k 0)) (d (n "rayon-core") (r "=1.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "18rhl440kp4xlfskpp5bb8cg19kxbaa4rfprb0m77lahy1prgr7y") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm")))) (r "1.56")))

(define-public crate-average-0.14.1 (c (n "average") (v "0.14.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "easy-cast") (r "^0.5") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "=1.0") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "=1.6") (o #t) (d #t) (k 0)) (d (n "rayon-core") (r "=1.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1m28830b1lxfy75i0r26sbbkgjgiy0dd4n3n0jvyjridpds4r03d") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm")))) (r "1.56")))

(define-public crate-average-0.14.2 (c (n "average") (v "0.14.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "=1.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "=0.8.16") (o #t) (d #t) (k 0)) (d (n "easy-cast") (r "^0.5") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "=1.0") (d #t) (k 2)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "=1.6") (o #t) (d #t) (k 0)) (d (n "rayon-core") (r "=1.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)) (d (n "tempfile") (r "=3.6") (d #t) (k 2)))) (h "002sav5a1n5ligv4sl6gii2wp95k2ylrx8nb7vnbwbm1zk3v22f3") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm")))) (r "1.56")))

(define-public crate-average-0.15.0 (c (n "average") (v "0.15.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "easy-cast") (r "^0.5") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "=1.7") (o #t) (d #t) (k 0)) (d (n "rayon-core") (r "=1.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "13y4xh563phj815rr0fnzri40xc32dpl96sv14b7j4bprc465xq5") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm")))) (r "1.61")))

(define-public crate-average-0.15.1 (c (n "average") (v "0.15.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "easy-cast") (r "^0.5") (o #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quantiles") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "=1.7") (o #t) (d #t) (k 0)) (d (n "rayon-core") (r "=1.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "streaming-stats") (r "^0.2") (d #t) (k 2)))) (h "1p1ifhmp0i8jjhkx5f6w4isind7bjfrbav8bf27ckhz149l7l8rs") (f (quote (("std" "easy-cast/std" "num-traits/std") ("serde1" "serde" "serde_derive" "serde-big-array") ("nightly") ("libm" "easy-cast/libm" "num-traits/libm") ("default" "libm")))) (r "1.61")))

