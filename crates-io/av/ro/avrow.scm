(define-module (crates-io av ro avrow) #:use-module (crates-io))

(define-public crate-avrow-0.1.0 (c (n "avrow") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "crc") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "flate2") (r "^1") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "fstrings") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "integer-encoding") (r "^2") (d #t) (k 0)) (d (n "mdfive") (r "^0.7.0") (o #t) (d #t) (k 0) (p "md5")) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shatwo") (r "^0.9.1") (o #t) (d #t) (k 0) (p "sha2")) (d (n "snap") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zstdd") (r "^0.5.3") (o #t) (d #t) (k 0) (p "zstd")))) (h "16px5xgbwhi3p24gg1p82kwr5jbdjj26mqr5shqgddyv719m0cwh") (f (quote (("zstd" "zstdd") ("xz" "xz2") ("snappy" "snap") ("sha2" "shatwo") ("md5" "mdfive") ("fingerprint" "sha2" "md5") ("deflate" "flate2") ("codec" "snappy" "deflate" "zstd" "bzip2" "xz") ("bzip" "bzip2") ("all" "codec" "fingerprint"))))))

(define-public crate-avrow-0.2.0 (c (n "avrow") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "crc") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "flate2") (r "^1") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "fstrings") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "integer-encoding") (r "^2") (d #t) (k 0)) (d (n "mdfive") (r "^0.7.0") (o #t) (d #t) (k 0) (p "md5")) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shatwo") (r "^0.9.1") (o #t) (d #t) (k 0) (p "sha2")) (d (n "snap") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zstdd") (r "^0.5.3") (o #t) (d #t) (k 0) (p "zstd")))) (h "1ywhjyp4hs9nflzs5fbd5gx3mbsswkq3vdqvcs28g1pbs94vpxyl") (f (quote (("zstd" "zstdd") ("xz" "xz2") ("snappy" "snap") ("sha2" "shatwo") ("md5" "mdfive") ("fingerprint" "sha2" "md5") ("deflate" "flate2") ("codec" "snappy" "deflate" "zstd" "bzip2" "xz") ("bzip" "bzip2") ("all" "codec" "fingerprint"))))))

(define-public crate-avrow-0.2.1 (c (n "avrow") (v "0.2.1") (d (list (d (n "anyhow") (r ">=1.0.32, <2.0.0") (d #t) (k 2)) (d (n "byteorder") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "bzip2") (r ">=0.4.1, <0.5.0") (o #t) (d #t) (k 0)) (d (n "crc") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "criterion") (r ">=0.2.0, <0.3.0") (d #t) (k 2)) (d (n "env_logger") (r ">=0.4.0, <0.5.0") (d #t) (k 2)) (d (n "flate2") (r ">=1.0.0, <2.0.0") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "fstrings") (r ">=0.2.0, <0.3.0") (d #t) (k 2)) (d (n "indexmap") (r ">=1.0.0, <2.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "integer-encoding") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "mdfive") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0) (p "md5")) (d (n "once_cell") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r ">=0.4.0, <0.5.0") (d #t) (k 2)) (d (n "rand") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shatwo") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0) (p "sha2")) (d (n "snap") (r ">=0.2.0, <0.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "xz2") (r ">=0.1.0, <0.2.0") (o #t) (d #t) (k 0)) (d (n "zstdd") (r ">=0.5.3, <0.6.0") (o #t) (d #t) (k 0) (p "zstd")))) (h "1gk217pkw9ykb4279k8g5pksk5kf80jmh1g73iz09zna3lkx3v74") (f (quote (("zstd" "zstdd") ("xz" "xz2") ("snappy" "snap") ("sha2" "shatwo") ("md5" "mdfive") ("fingerprint" "sha2" "md5") ("deflate" "flate2") ("codec" "snappy" "deflate" "zstd" "bzip2" "xz") ("bzip" "bzip2") ("all" "codec" "fingerprint"))))))

