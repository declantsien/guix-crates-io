(define-module (crates-io ed #{25}# ed25519-dalek-blake3) #:use-module (crates-io))

(define-public crate-ed25519-dalek-blake3-1.0.1 (c (n "ed25519-dalek-blake3") (v "1.0.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^0.3.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.1.1") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.126") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "1f8y9ckkaq3dgf4nyfkp42l277xs611x60kqh7aym1f02k5an4i6") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.2 (c (n "ed25519-dalek-blake3") (v "1.0.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^0.3.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.1.1") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.126") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "0km4dswhlkgc3bfyw0pkyvx9hdqiz00vp38p2mx4pc8lwgzdx5di") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.3 (c (n "ed25519-dalek-blake3") (v "1.0.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^0.3.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.1.1") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.126") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "08nda5l0jkvrnw23ia73df37pkqd75hhg5sqb0avxnlp74qq3z4v") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.4 (c (n "ed25519-dalek-blake3") (v "1.0.4") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^0.3.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.1.1") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.126") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.3.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "1qpzgh886ppvvrlqn6m0m95qnnkvfcmylnldkdiqnkmv13q6s7iz") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.5 (c (n "ed25519-dalek-blake3") (v "1.0.5") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "x25519-dalek") (r "^1.2.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3") (k 0)))) (h "1fqrnxx538d8hmmw7zzjfp6iyldrsxk0ddrky4ks0ha568zcvkjv") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.6 (c (n "ed25519-dalek-blake3") (v "1.0.6") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^1.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.69") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.4.3") (k 0)))) (h "0x6h7vz2cg47iyx4j3r1j76q91v0rngxj1dsc7ygc8ayx6316mfz") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.8 (c (n "ed25519-dalek-blake3") (v "1.0.8") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.2") (k 0)))) (h "0n6lq306f455vpa8n38d62rv0393mh17w6zf1k4973kn3i4jp1wk") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake3-1.0.11 (c (n "ed25519-dalek-blake3") (v "1.0.11") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.2.0") (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.0") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.3") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.137") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "toml") (r "^0.5.9") (d #t) (k 2)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.5") (k 0)))) (h "0rh3bcdy29d9qlx47sisain60x3a06785d0b1gscf2wi82j8xd9i") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

