(define-module (crates-io ed #{25}# ed25519-dalek) #:use-module (crates-io))

(define-public crate-ed25519-dalek-0.1.0 (c (n "ed25519-dalek") (v "0.1.0") (d (list (d (n "arrayref") (r "^0.3.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)))) (h "0xpav6pzmbvxliicmkjhm4fkbahs25bjimw4xsvg106k05248fks")))

(define-public crate-ed25519-dalek-0.2.0 (c (n "ed25519-dalek") (v "0.2.0") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.3") (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "19wdrm4ksi23aaq28n9yn6c7bbsqmknmzr6szkbh18b1rmxs2jby") (f (quote (("std" "rand") ("default" "std"))))))

(define-public crate-ed25519-dalek-0.2.1 (c (n "ed25519-dalek") (v "0.2.1") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.4") (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "1ilndl9v5ib8094szzm6niybi0glfya0p5jfzvpaj47jf57c7h7m") (f (quote (("std" "rand") ("default" "std"))))))

(define-public crate-ed25519-dalek-0.2.2 (c (n "ed25519-dalek") (v "0.2.2") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.4") (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "0v2mac7872mfi8xjjprvdhzrspwhhl090wj4h0jgzlj36c2r917i") (f (quote (("std" "rand") ("default" "std"))))))

(define-public crate-ed25519-dalek-0.2.3 (c (n "ed25519-dalek") (v "0.2.3") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.6") (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 0)))) (h "0zmzzr5r03z8ybjp0ic48h021idpz674c7rhxpjzpi8bvksnq73i") (f (quote (("std" "rand") ("default" "std"))))))

(define-public crate-ed25519-dalek-0.3.0 (c (n "ed25519-dalek") (v "0.3.0") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.6") (k 0)) (d (n "digest") (r "^0.4") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 2)))) (h "1gn37595irs39vdwd52zgrccgqxnh3y26sjcl4y7rci6878d4sf8") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench"))))))

(define-public crate-ed25519-dalek-0.3.1 (c (n "ed25519-dalek") (v "0.3.1") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.6") (k 0)) (d (n "digest") (r "^0.4") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.4") (d #t) (k 2)))) (h "122lr0r9w4jha0sq3s11z3q91ghlnwnvyhdpwhzli16mgkf7mfcj") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench"))))))

(define-public crate-ed25519-dalek-0.3.2 (c (n "ed25519-dalek") (v "0.3.2") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.7") (k 0)) (d (n "digest") (r "^0.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.5") (d #t) (k 2)))) (h "1jxgdp3qcr21h52jyimfwfz841a9yx6xlcykj8wshpqhm7jiphzn") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench"))))))

(define-public crate-ed25519-dalek-0.4.0 (c (n "ed25519-dalek") (v "0.4.0") (d (list (d (n "arrayref") (r "^0.3.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.10") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.2") (k 0)))) (h "1nya709qjhyd8cwd16aaacxx2kvybfk28ycbjxjwjns84mvwhsym") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.4.1 (c (n "ed25519-dalek") (v "0.4.1") (d (list (d (n "arrayref") (r "^0.3.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.11") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.2") (k 0)))) (h "0g70c5dbq411gr3a1rjkwr0ygn34qg0w87gblm2l2jfwffsjfz96") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.4.2 (c (n "ed25519-dalek") (v "0.4.2") (d (list (d (n "arrayref") (r "^0.3.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.11") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.2") (k 0)))) (h "0q98zgb9wmxkxdgr4fr5gr43kp2l4b78p61gvmr1dj3vbj282ask") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.4.3 (c (n "ed25519-dalek") (v "0.4.3") (d (list (d (n "arrayref") (r "^0.3.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^0.12") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.3") (k 0)))) (h "1v6s0mm7ys6bbdp1hjymlj0km95q4ls81mnm2q745323d2378wdn") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm")))) (y #t)))

(define-public crate-ed25519-dalek-0.5.0 (c (n "ed25519-dalek") (v "0.5.0") (d (list (d (n "arrayref") (r "^0.3.4") (d #t) (k 0)) (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.12") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "generic-array") (r "^0.8") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.3") (k 0)))) (h "1d5q1s23g8qrmxh077n5cdwzw61fh2jx3c3glr9mmqg39vwifxv1") (f (quote (("std" "rand" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.6.0 (c (n "ed25519-dalek") (v "0.6.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.14") (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 2)) (d (n "subtle") (r "^0.5") (k 0)))) (h "1sy8l1sdgffd612c14n630nryiv9clnbij3a3sa0rjfrydl6i825") (f (quote (("std" "rand" "curve25519-dalek/std" "failure/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.6.1 (c (n "ed25519-dalek") (v "0.6.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.14") (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 2)) (d (n "subtle") (r "^0.5") (k 0)))) (h "0g5cafmsmgs0cxx609v2r7ay9rcl2ywz03hj75m265y6ikrjwsg3") (f (quote (("std" "rand" "curve25519-dalek/std" "failure/std") ("nightly" "curve25519-dalek/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.6.2 (c (n "ed25519-dalek") (v "0.6.2") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.16") (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 2)) (d (n "subtle") (r "^0.6") (k 0)))) (h "10f8cl9vvay9w7agnzjj6y6gmshg4pyppkxjps7xhc4gzwrfchcc") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("std" "rand" "subtle/std" "curve25519-dalek/std" "failure/std") ("nightly" "curve25519-dalek/nightly" "subtle/nightly") ("default" "std") ("bench") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.7.0 (c (n "ed25519-dalek") (v "0.7.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.18") (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 2)))) (h "1y0nx5bgr85q2x2xl9wrpg60ili88h22bxf0z4a8zw1qx8sniajp") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm"))))))

(define-public crate-ed25519-dalek-0.8.0 (c (n "ed25519-dalek") (v "0.8.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.19") (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.5") (f (quote ("i128_support"))) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 2)))) (h "0mq1j1gjwqdkdzss82h8i7m55hrm0qhfc885bkljb6ppqwmgwkyg") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-ed25519-dalek-0.8.1 (c (n "ed25519-dalek") (v "0.8.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.20") (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.5") (f (quote ("i128_support"))) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 2)))) (h "07ng7y9plfcknl26izf7qrbk8afdsgc408gbbv7j677pdshxhrnd") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-ed25519-dalek-1.0.0-pre.0 (c (n "ed25519-dalek") (v "1.0.0-pre.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0.0-pre.0") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.5") (f (quote ("i128_support"))) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "0wic5qbhrdivp9nga6qg3wcw8ffyj66l61z6mmgrid8545qxs5yn") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-ed25519-dalek-0.9.0 (c (n "ed25519-dalek") (v "0.9.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0.0-pre.0") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "1fgjgby86166wa4d7pd3j7jz47s9gnd5gi5w0wsg617ri8jhc2pf") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-ed25519-dalek-0.9.1 (c (n "ed25519-dalek") (v "0.9.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "09p4af995lrxpkmy5sa54pg4bdaczbyjkcx4ly4knv1qm2wfh1rd") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-ed25519-dalek-1.0.0-pre.1 (c (n "ed25519-dalek") (v "1.0.0-pre.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)))) (h "11jbh8cr33x0hysmb5ybrck0v2imh6hkzpl83m7gnqgpgv7np5c1") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std" "sha2/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-ed25519-dalek-1.0.0-pre.2 (c (n "ed25519-dalek") (v "1.0.0-pre.2") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.3") (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)))) (h "0mb4scdrfdgf9l7pymsymaay1knhxj9ckrs96grph4gh2v6alnl4") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand_os" "sha2/std") ("nightly" "curve25519-dalek/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("batch" "rand") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_os"))))))

(define-public crate-ed25519-dalek-1.0.0-pre.3 (c (n "ed25519-dalek") (v "1.0.0-pre.3") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^1") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)))) (h "18lrlnx1jni2bvckv1iz165dbpxi5wzikzrbgg4k6x23aari11wp") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "sha2/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("nightly" "curve25519-dalek/nightly" "clear_on_drop/nightly" "rand/nightly") ("legacy_compatibility") ("default" "std" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand/alloc"))))))

(define-public crate-ed25519-dalek-1.0.0-pre.4 (c (n "ed25519-dalek") (v "1.0.0-pre.4") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2") (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^2") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "sha2") (r "^0.8") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0nh3y3ss29c1z126abzrlg548qvsgs4y7dbd3sbsydcb9rzs7a11") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "ed25519/serde") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("legacy_compatibility") ("default" "std" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-1.0.0 (c (n "ed25519-dalek") (v "1.0.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^2") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "sha2") (r "^0.9") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0lb8xzjj921lx531xx9c8n7srl6zlkvxvrqqs4b9qx3xhczykljk") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "ed25519/serde") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("legacy_compatibility") ("default" "std" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-1.0.1 (c (n "ed25519-dalek") (v "1.0.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3") (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^2") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "17bsriciv93nkm39z22w7mr0h2a3hnbmgf378v4c895gvkkblqn7") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-2.0.0-pre.0 (c (n "ed25519-dalek") (v "2.0.0-pre.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r "^2.1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "signature") (r ">=2.0, <2.1") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "1vcpqg9gayhd40ncjgja0bkkiiijzpc06066r91v9jjbknx7gmbv") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "serde_bytes" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

(define-public crate-ed25519-dalek-2.0.0-rc.2 (c (n "ed25519-dalek") (v "2.0.0-rc.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r ">=2.2, <2.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "signature") (r ">=2.0, <2.1") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "0nk6367y9f77kbsxxib13nh39jglwc49nj53c4k96445296p13vr") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

(define-public crate-ed25519-dalek-2.0.0-rc.3 (c (n "ed25519-dalek") (v "2.0.0-rc.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.3") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.3") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r ">=2.2, <2.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "signature") (r ">=2.0, <2.1") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "0k5b4b55yw1dkxg1jbsykgvj4lqvfca5kh6b5b0vywjxkl2fka7s") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility" "curve25519-dalek/legacy_compatibility") ("hazmat") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

(define-public crate-ed25519-dalek-2.0.0 (c (n "ed25519-dalek") (v "2.0.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r ">=2.2, <2.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "signature") (r ">=2.0, <2.1") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "10392mr5pwr4pcaxzxbmszz54v3vwyqxwzyvjs1yz0v34qmkjxvj") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility" "curve25519-dalek/legacy_compatibility") ("hazmat") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

(define-public crate-ed25519-dalek-2.1.0 (c (n "ed25519-dalek") (v "2.1.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r ">=2.2, <2.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "signature") (r ">=2.0, <2.3") (o #t) (k 0)) (d (n "subtle") (r "^2.3.0") (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets"))) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "1h13qm789m9gdjl6jazss80hqi8ll37m0afwcnw23zcbqjp8wqhz") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility" "curve25519-dalek/legacy_compatibility") ("hazmat") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

(define-public crate-ed25519-dalek-2.1.1 (c (n "ed25519-dalek") (v "2.1.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest"))) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("digest" "rand_core"))) (k 2)) (d (n "ed25519") (r ">=2.2, <2.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^3") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "signature") (r ">=2.0, <2.3") (o #t) (k 0)) (d (n "subtle") (r "^2.3.0") (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets"))) (k 2)) (d (n "zeroize") (r "^1.5") (o #t) (k 0)))) (h "0w88cafwglg9hjizldbmlza0ns3hls81zk1bcih3m5m3h67algaa") (f (quote (("pkcs8" "ed25519/pkcs8") ("pem" "alloc" "ed25519/pem" "pkcs8") ("legacy_compatibility" "curve25519-dalek/legacy_compatibility") ("hazmat") ("fast" "curve25519-dalek/precomputed-tables") ("digest" "signature/digest") ("default" "fast" "std" "zeroize") ("batch" "alloc" "merlin" "rand_core") ("asm" "sha2/asm")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "curve25519-dalek/zeroize") ("std" "alloc" "ed25519/std" "serde?/std" "sha2/std") ("serde" "dep:serde" "ed25519/serde") ("rand_core" "dep:rand_core") ("alloc" "curve25519-dalek/alloc" "ed25519/alloc" "serde?/alloc" "zeroize/alloc")))) (r "1.60")))

