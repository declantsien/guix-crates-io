(define-module (crates-io ed #{25}# ed25519-dalek-blake2b) #:use-module (crates-io))

(define-public crate-ed25519-dalek-blake2b-1.0.1 (c (n "ed25519-dalek-blake2b") (v "1.0.1") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.0.2") (k 0)) (d (n "ed25519") (r "^1.0.3") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.123") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.62") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "0b6dcfcjp56ycslfc981pj84qx8pf9zdylahvqyfs21y5f3jy154") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek/nightly") ("legacy_compatibility") ("default" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc"))))))

(define-public crate-ed25519-dalek-blake2b-1.0.2 (c (n "ed25519-dalek-blake2b") (v "1.0.2") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek-ng") (r "^4.0.1") (k 0)) (d (n "ed25519") (r "^1.0.3") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.123") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0.62") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "08nd8ac6al5iasfacmic4gcj0lf0wsg8d8mb5nsnfwfqzb52jxjp") (f (quote (("u64_backend" "curve25519-dalek-ng/u64_backend") ("u32_backend" "curve25519-dalek-ng/u32_backend") ("simd_backend" "curve25519-dalek-ng/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek-ng/nightly") ("legacy_compatibility") ("default" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("alloc" "curve25519-dalek-ng/alloc" "rand/alloc" "zeroize/alloc"))))))

