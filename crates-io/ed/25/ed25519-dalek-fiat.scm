(define-module (crates-io ed #{25}# ed25519-dalek-fiat) #:use-module (crates-io))

(define-public crate-ed25519-dalek-fiat-0.1.0 (c (n "ed25519-dalek-fiat") (v "0.1.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek-fiat") (r "^0.1.0") (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "merlin") (r "^2") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (o #t) (k 0) (p "serde")) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "183z0dkcsm6bycg0y6wpdwyrw8rfs25gxknjacf8qmxs5qasrilp") (f (quote (("u64_backend" "curve25519-dalek-fiat/u64_backend") ("u32_backend" "curve25519-dalek-fiat/u32_backend") ("std" "curve25519-dalek-fiat/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std") ("simd_backend" "curve25519-dalek-fiat/simd_backend") ("serde" "serde_crate" "serde_bytes" "ed25519/serde") ("nightly" "curve25519-dalek-fiat/nightly") ("legacy_compatibility") ("fiat_u64_backend" "curve25519-dalek-fiat/fiat_u64_backend") ("default" "std" "rand" "u64_backend") ("batch_deterministic" "merlin" "rand" "rand_core") ("batch" "merlin" "rand") ("asm" "sha2/asm") ("alloc" "curve25519-dalek-fiat/alloc" "rand/alloc" "zeroize/alloc"))))))

