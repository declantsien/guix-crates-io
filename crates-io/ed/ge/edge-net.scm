(define-module (crates-io ed ge edge-net) #:use-module (crates-io))

(define-public crate-edge-net-0.1.0 (c (n "edge-net") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^1") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3") (k 0)) (d (n "embedded-nal-async") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23") (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.5") (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)))) (h "1zx2s656n0x68hhp5vq3klqr04paarkfrxn5kn71cavpp3sm8k6a") (f (quote (("embassy-util" "embassy-futures" "embassy-sync") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embedded-svc?/std" "async-io" "futures-lite" "httparse/std" "domain?/std") ("nightly" "embedded-io/async" "embedded-svc?/nightly" "embedded-svc?/experimental") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc")))) (r "1.61")))

(define-public crate-edge-net-0.1.1 (c (n "edge-net") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^1") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (k 0)) (d (n "embedded-io") (r "^0.3") (k 0)) (d (n "embedded-nal-async") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23") (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.5") (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)))) (h "0ihjcz3vxzg155v6m654j4l4ii7zz3470ghl6rs7nvidkvlsnpxa") (f (quote (("embassy-util") ("default" "std") ("chain")))) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embassy-sync/std" "embedded-svc?/std" "async-io" "futures-lite" "httparse/std" "domain?/std") ("nightly" "embedded-io/async" "embassy-sync/nightly" "embedded-svc?/nightly" "embedded-svc?/experimental") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc")))) (r "1.61")))

(define-public crate-edge-net-0.2.0 (c (n "edge-net") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^1") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (k 0)) (d (n "embedded-io") (r "^0.3") (k 0)) (d (n "embedded-nal-async") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.24") (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.5") (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)))) (h "1alp1j973vcb0n137wawbwg39y3m0nyba99afwba2mig9y04m79p") (f (quote (("embassy-util") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embassy-sync/std" "embedded-svc?/std" "async-io" "futures-lite" "httparse/std" "domain?/std") ("nightly" "embedded-io/async" "embassy-sync/nightly" "embedded-svc?/nightly" "embedded-svc?/experimental") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc")))) (r "1.61")))

(define-public crate-edge-net-0.3.0 (c (n "edge-net") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^1") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (k 0)) (d (n "embedded-io") (r "^0.4") (k 0)) (d (n "embedded-nal-async") (r "^0.4") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25") (f (quote ("embedded-io-async"))) (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.6") (k 0)) (d (n "rumqttc") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)))) (h "1i9h91d703nvxh3s7mx3hcv8h9a6dl9ip48hblzpw07g9v08hgdi") (f (quote (("embassy-util") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embassy-sync/std" "embedded-svc?/std" "async-io" "futures-lite" "httparse/std" "domain?/std") ("nightly" "embedded-io/async" "embassy-sync/nightly" "embedded-svc?/nightly") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc")))) (r "1.67")))

(define-public crate-edge-net-0.4.0 (c (n "edge-net") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^1") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (k 0)) (d (n "embedded-io") (r "^0.6") (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-nal-async") (r "^0.6") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26") (f (quote ("embedded-io-async"))) (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.6") (k 0)) (d (n "rumqttc") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)))) (h "1h5kgqs81s0cb2yl8c3hlhxjzkpklzjj28z5igcnyp0w8ginjsjc") (f (quote (("embassy-util") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embassy-sync/std" "embedded-svc?/std" "async-io" "futures-lite/std" "httparse/std" "domain?/std") ("nightly" "embedded-io-async" "embassy-sync/nightly" "embedded-svc?/nightly") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc" "embedded-io-async?/alloc")))) (r "1.71")))

(define-public crate-edge-net-0.5.0 (c (n "edge-net") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^2") (o #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "domain") (r "^0.7") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (k 0)) (d (n "embedded-io") (r "^0.6") (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-nal-async") (r "^0.6") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26") (f (quote ("embedded-io-async"))) (o #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "httparse") (r "^1.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "no-std-net") (r "^0.6") (k 0)) (d (n "rumqttc") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "sha1_smol") (r "^1") (k 0)) (d (n "simple_logger") (r "^2.2") (d #t) (k 2)))) (h "0rxp4j2fqjil9wj7f2nrx0rh264avv3qcq6d6jrg73jybmd3q959") (f (quote (("embassy-util") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io/std" "embassy-sync/std" "embedded-svc?/std" "async-io" "futures-lite/std" "httparse/std" "domain?/std") ("nightly" "embedded-io-async" "embassy-sync/nightly" "embedded-svc?/nightly") ("alloc" "embedded-io/alloc" "embedded-svc?/alloc" "embedded-io-async?/alloc")))) (r "1.71")))

(define-public crate-edge-net-0.6.0 (c (n "edge-net") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "edge-captive") (r "^0.1.0") (k 0)) (d (n "edge-dhcp") (r "^0.1.0") (k 0)) (d (n "edge-http") (r "^0.1.0") (k 0)) (d (n "edge-mdns") (r "^0.1.0") (k 0)) (d (n "edge-mqtt") (r "^0.1.0") (o #t) (k 0)) (d (n "edge-raw") (r "^0.1.0") (k 0)) (d (n "edge-std-nal-async") (r "^0.1.0") (o #t) (k 0)) (d (n "edge-ws") (r "^0.1.0") (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 2)) (d (n "embassy-time") (r "^0.3") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6") (d #t) (k 2)) (d (n "embedded-nal-async") (r "^0.7") (d #t) (k 2)) (d (n "embedded-nal-async-xtra") (r "^0.1.0") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.27") (f (quote ("std"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (d #t) (k 2)))) (h "0cy5z94sd1j47n4f4rjr7nn1npw5r2m7wx816jdmr1wp6089z1bb") (f (quote (("std" "io" "edge-captive/std" "edge-dhcp/std" "edge-http/std" "edge-mdns/std" "edge-raw/std" "edge-mqtt" "edge-ws/std" "edge-std-nal-async") ("nightly") ("io" "edge-captive/io" "edge-dhcp/io" "edge-http/io" "edge-mdns/io" "edge-raw/io" "edge-ws/io" "embedded-nal-async-xtra") ("embedded-svc" "edge-http/embedded-svc" "edge-mqtt/embedded-svc" "edge-ws/embedded-svc") ("default" "io")))) (r "1.75")))

(define-public crate-edge-net-0.7.0 (c (n "edge-net") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "edge-captive") (r "^0.2.0") (k 0)) (d (n "edge-dhcp") (r "^0.2.0") (k 0)) (d (n "edge-http") (r "^0.2.0") (k 0)) (d (n "edge-mdns") (r "^0.2.0") (k 0)) (d (n "edge-mqtt") (r "^0.2.0") (o #t) (k 0)) (d (n "edge-raw") (r "^0.2.0") (k 0)) (d (n "edge-std-nal-async") (r "^0.2.0") (o #t) (k 0)) (d (n "edge-ws") (r "^0.2.0") (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 2)) (d (n "embassy-time") (r "^0.3") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6") (d #t) (k 2)) (d (n "embedded-nal-async") (r "^0.7") (d #t) (k 2)) (d (n "embedded-nal-async-xtra") (r "^0.2.0") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.27") (f (quote ("std"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (d #t) (k 2)))) (h "19w8sv747qiric2h1i8hf116nm8gsflmwrbq9fi7yls0jqpq3ybg") (f (quote (("std" "io" "edge-captive/std" "edge-dhcp/std" "edge-http/std" "edge-mdns/std" "edge-raw/std" "edge-mqtt" "edge-ws/std" "edge-std-nal-async") ("nightly") ("io" "edge-captive/io" "edge-dhcp/io" "edge-http/io" "edge-mdns/io" "edge-raw/io" "edge-ws/io" "embedded-nal-async-xtra") ("embedded-svc" "edge-http/embedded-svc" "edge-mqtt/embedded-svc" "edge-ws/embedded-svc") ("default" "io")))) (r "1.75")))

(define-public crate-edge-net-0.7.1 (c (n "edge-net") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "edge-captive") (r "^0.2.0") (k 0)) (d (n "edge-dhcp") (r "^0.2.0") (k 0)) (d (n "edge-http") (r "^0.2.1") (k 0)) (d (n "edge-mdns") (r "^0.2.0") (k 0)) (d (n "edge-mqtt") (r "^0.2.0") (o #t) (k 0)) (d (n "edge-raw") (r "^0.2.0") (k 0)) (d (n "edge-std-nal-async") (r "^0.2.0") (o #t) (k 0)) (d (n "edge-ws") (r "^0.2.0") (k 0)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 2)) (d (n "embassy-time") (r "^0.3") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6") (d #t) (k 2)) (d (n "embedded-nal-async") (r "^0.7") (d #t) (k 2)) (d (n "embedded-nal-async-xtra") (r "^0.2.0") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.27") (f (quote ("std"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-lite") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (d #t) (k 2)))) (h "1zxrzzxh1j5qfd5vhbl642rg1nd7mnlnp4szq5ppgx5wic992mcb") (f (quote (("std" "io" "edge-captive/std" "edge-dhcp/std" "edge-http/std" "edge-mdns/std" "edge-raw/std" "edge-mqtt" "edge-ws/std" "edge-std-nal-async") ("nightly") ("io" "edge-captive/io" "edge-dhcp/io" "edge-http/io" "edge-mdns/io" "edge-raw/io" "edge-ws/io" "embedded-nal-async-xtra") ("embedded-svc" "edge-http/embedded-svc" "edge-mqtt/embedded-svc" "edge-ws/embedded-svc") ("default" "io")))) (r "1.75")))

