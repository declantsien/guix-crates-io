(define-module (crates-io ed ge edge-schema) #:use-module (crates-io))

(define-public crate-edge-schema-0.0.1 (c (n "edge-schema") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sparx") (r "^0.1.2") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting" "serde" "formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wcgi-host") (r "^0.1.1") (f (quote ("schema"))) (d #t) (k 0)))) (h "0rfiac0pq9rp057n0020aj0mrhzxfq4mkhlgq8860sl6mq4x1x1p")))

(define-public crate-edge-schema-0.0.2 (c (n "edge-schema") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.0") (f (quote ("draft201909" "draft201909"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sparx") (r "^0.1.2") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting" "serde" "formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wcgi-host") (r "^0.1.1") (f (quote ("schema"))) (d #t) (k 0)))) (h "1wr4lh2k9nxayvq6vc3zi66447i116vbfmqrzi573czsyi8rpgpr")))

(define-public crate-edge-schema-0.0.3 (c (n "edge-schema") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.0") (f (quote ("draft201909" "draft201909"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sparx") (r "^0.1.2") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting" "serde" "formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wcgi-host") (r "^0.1.1") (f (quote ("schema"))) (d #t) (k 0)))) (h "0a7i4r7bpgmw27d8ixn4w2cbm02r2cr0d1rwijfvwh945jsxyg8q")))

(define-public crate-edge-schema-0.1.0 (c (n "edge-schema") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.0") (f (quote ("draft201909" "draft201909"))) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sparx") (r "^0.1.2") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting" "serde" "formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wcgi-host") (r "^0.1.1") (f (quote ("schema"))) (d #t) (k 0)))) (h "0apa0356b8pmbqy3hd5aw42638q09pxyc92ihdxcc33197yz2rh9")))

