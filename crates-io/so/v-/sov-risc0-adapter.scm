(define-module (crates-io so v- sov-risc0-adapter) #:use-module (crates-io))

(define-public crate-sov-risc0-adapter-0.2.0 (c (n "sov-risc0-adapter") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "risc0-zkp") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.16") (f (quote ("std"))) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "sov-rollup-interface") (r "^0.2") (d #t) (k 0)) (d (n "sov-zk-cycle-utils") (r "^0.2") (d #t) (k 0)))) (h "19x2pbw3r0jbi62n9dwq52x9bnxdnzylc6wsxkcybdf2k0c52v5s") (f (quote (("default") ("bench" "once_cell" "parking_lot")))) (s 2) (e (quote (("native" "risc0-zkvm/prove" "dep:risc0-zkp" "dep:risc0-circuit-rv32im")))) (r "1.66")))

(define-public crate-sov-risc0-adapter-0.3.0 (c (n "sov-risc0-adapter") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "risc0-zkp") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.18") (f (quote ("std"))) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "sov-rollup-interface") (r "^0.3") (d #t) (k 0)) (d (n "sov-zk-cycle-utils") (r "^0.3") (d #t) (k 0)))) (h "16fkviky5xwq4c5h3rg4bsi1vygrsb27k9z1a0s09hfqadpbazxx") (f (quote (("default") ("bench" "once_cell" "parking_lot" "native" "sov-zk-cycle-utils/native")))) (s 2) (e (quote (("native" "risc0-zkvm/prove" "dep:risc0-zkp" "dep:risc0-circuit-rv32im"))))))

