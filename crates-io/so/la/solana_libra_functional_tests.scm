(define-module (crates-io so la solana_libra_functional_tests) #:use-module (crates-io))

(define-public crate-solana_libra_functional_tests-0.0.0-sol15 (c (n "solana_libra_functional_tests") (v "0.0.0-sol15") (d (list (d (n "bytecode_verifier") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_bytecode_verifier")) (d (n "config") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_config")) (d (n "datatest") (r "^0.3.5") (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "filecheck") (r "^0.4.0") (d #t) (k 0)) (d (n "ir_to_bytecode") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_ir_to_bytecode")) (d (n "language_e2e_tests") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_language_e2e_tests")) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.9") (d #t) (k 0)) (d (n "stdlib") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_stdlib")) (d (n "termcolor") (r "^1.0.4") (d #t) (k 0)) (d (n "transaction_builder") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_transaction_builder")) (d (n "types") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_types")) (d (n "vm") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_vm")))) (h "1dh6d2wgqhmihxn3w00iv64r1nsvdjgvs1qank7x6k8gnflx47q0")))

