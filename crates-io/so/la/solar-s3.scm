(define-module (crates-io so la solar-s3) #:use-module (crates-io))

(define-public crate-solar-s3-0.1.0 (c (n "solar-s3") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.60") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.18") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mocktopus") (r "^0.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.27.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "xattr") (r "^1.0.0") (d #t) (k 0)))) (h "0a74c35gqf8kyyp3w02sb2j80hbg32slh8bx9wi1by1px506854c")))

(define-public crate-solar-s3-0.1.1 (c (n "solar-s3") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.60") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.18") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mocktopus") (r "^0.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.27.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "xattr") (r "^1.0.0") (d #t) (k 0)))) (h "019sgr1rimkg10vhd1g934mjsahyaap2myc4gf3qsk0m6mg2s8xy")))

