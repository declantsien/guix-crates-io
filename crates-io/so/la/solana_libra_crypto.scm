(define-module (crates-io so la solana_libra_crypto) #:use-module (crates-io))

(define-public crate-solana_libra_crypto-0.0.0-sol10 (c (n "solana_libra_crypto") (v "0.0.0-sol10") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto-derive") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "16k22gskbfp51n3951wxv0bypy4lznfnhpdsa55x1lnzy4ap3162") (y #t)))

(define-public crate-solana_libra_crypto-0.0.0-sol13 (c (n "solana_libra_crypto") (v "0.0.0-sol13") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto-derive") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "0zhcnfrkw6kwradm447s8xlhz7fwqcl2m8xx8ifl2xv519amwkia") (y #t)))

(define-public crate-solana_libra_crypto-0.0.0-sol14 (c (n "solana_libra_crypto") (v "0.0.0-sol14") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto-derive") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "1rmgizmzg0r6b9zpbcz8667swfwq7c59f20qv56vk428qiy0in6g") (y #t)))

(define-public crate-solana_libra_crypto-0.0.0-sol15 (c (n "solana_libra_crypto") (v "0.0.0-sol15") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto-derive") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "0zbld9x1syiixm1bgzz7svv4jbxl445zfp5ksb686ip5247g0d70")))

(define-public crate-solana_libra_crypto-0.0.0 (c (n "solana_libra_crypto") (v "0.0.0") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto-derive") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "1x0a8i7si2jkn35l1crqa30hgc178wgk1ni0lax1wx7vm1zj8x7a")))

(define-public crate-solana_libra_crypto-0.0.1-sol4 (c (n "solana_libra_crypto") (v "0.0.1-sol4") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1.2.3") (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (f (quote ("serde"))) (k 0)) (d (n "failure") (r "^0.0.1-sol4") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "solana_libra_canonical_serialization") (r "^0.0.1-sol4") (d #t) (k 0)) (d (n "solana_libra_crypto-derive") (r "^0.0.1-sol4") (d #t) (k 0)) (d (n "solana_libra_nibble") (r "^0.0.1-sol4") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (k 0)))) (h "02mzyw28qxm9yq570ffnsvcli3aixz07vs23khb8inhmspp8pg4k") (f (quote (("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("testing" "std" "u64_backend") ("std" "curve25519-dalek/std" "ed25519-dalek/std" "x25519-dalek/std") ("default" "std" "u64_backend"))))))

(define-public crate-solana_libra_crypto-0.0.1-sol5 (c (n "solana_libra_crypto") (v "0.0.1-sol5") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.17.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1.2.3") (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (f (quote ("serde"))) (k 0)) (d (n "failure") (r "^0.0.1-sol5") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "solana_libra_canonical_serialization") (r "^0.0.1-sol5") (d #t) (k 0)) (d (n "solana_libra_crypto-derive") (r "^0.0.1-sol5") (d #t) (k 0)) (d (n "solana_libra_nibble") (r "^0.0.1-sol5") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (k 0)))) (h "1j9yxcbcp8zi8nqkb2b32ilb9cx7nzvf33s033860kg1fm74ixhb") (f (quote (("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("testing" "std" "u64_backend") ("std" "curve25519-dalek/std" "ed25519-dalek/std") ("default" "std" "u64_backend"))))))

