(define-module (crates-io so la solana_libra_nextgen_crypto) #:use-module (crates-io))

(define-public crate-solana_libra_nextgen_crypto-0.0.0-sol10 (c (n "solana_libra_nextgen_crypto") (v "0.0.0-sol10") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_crypto")) (d (n "crypto-derive") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol10") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "14byxfsdp0q3snvf5ahqhkzbkpz1z36mlq43dsn368ggb0j43kdd") (f (quote (("testing") ("default")))) (y #t)))

(define-public crate-solana_libra_nextgen_crypto-0.0.0-sol13 (c (n "solana_libra_nextgen_crypto") (v "0.0.0-sol13") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_crypto")) (d (n "crypto-derive") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol13") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "0yd3khbwf1xjblq5a39s5qxqc1qxvxaqbm16fwyy2c3licb0dp06") (f (quote (("testing") ("default")))) (y #t)))

(define-public crate-solana_libra_nextgen_crypto-0.0.0-sol14 (c (n "solana_libra_nextgen_crypto") (v "0.0.0-sol14") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_crypto")) (d (n "crypto-derive") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol14") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "1iz4r6gnjf7ih90ylb8ya3kpr1pfcr3vfm4kl2xwnpq9mfgw5ldh") (f (quote (("testing") ("default")))) (y #t)))

(define-public crate-solana_libra_nextgen_crypto-0.0.0-sol15 (c (n "solana_libra_nextgen_crypto") (v "0.0.0-sol15") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_crypto")) (d (n "crypto-derive") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0-sol15") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "18fbgvj3b5ijrcd66pvag22kazshdjwk2gcv1mi4nxxqavicc21d") (f (quote (("testing") ("default"))))))

(define-public crate-solana_libra_nextgen_crypto-0.0.0 (c (n "solana_libra_nextgen_crypto") (v "0.0.0") (d (list (d (n "bincode") (r "^1.1.1") (d #t) (k 0)) (d (n "bitvec") (r "^0.10.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "crypto") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_crypto")) (d (n "crypto-derive") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_crypto-derive")) (d (n "curve25519-dalek") (r "^1.1.3") (d #t) (k 0)) (d (n "derive_deref") (r "^1.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_failure_ext")) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pairing") (r "^0.14.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9.1") (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "proto_conv") (r "^0.0.0") (d #t) (k 0) (p "solana_libra_proto_conv")) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.3") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)))) (h "0w8xfji4zkz0vbspv1czr34k7isp9fbns5cp0dv66q4r3drir1as") (f (quote (("testing") ("default"))))))

