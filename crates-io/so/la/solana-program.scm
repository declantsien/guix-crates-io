(define-module (crates-io so la solana-program) #:use-module (crates-io))

(define-public crate-solana-program-1.4.3 (c (n "solana-program") (v "1.4.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.3") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0bv4xvqp8nkga7rb3shgnwvagw6y44ns0f01kk07lvfav3r22ilx")))

(define-public crate-solana-program-1.4.4 (c (n "solana-program") (v "1.4.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.4") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "029wgva0870rc6xlkllvbqzdsfhsgn9f9c7s2b6gqhqliccqmky8")))

(define-public crate-solana-program-1.4.5 (c (n "solana-program") (v "1.4.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.5") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dx5kjyjaf4rx9gc67n3fda1wh16x54010lk42mvb0mzkw61wy5j")))

(define-public crate-solana-program-1.4.6 (c (n "solana-program") (v "1.4.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.6") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mlwrbm69qvv4m7cqlf2vq1d0ifky5yzayh6c071w9s0fbbwwg2s")))

(define-public crate-solana-program-1.4.7 (c (n "solana-program") (v "1.4.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.7") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dwg50w1l8blvv4q8ynf78h9j9g4qvkh55kr0bafl758fx1yabad")))

(define-public crate-solana-program-1.4.8 (c (n "solana-program") (v "1.4.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.8") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lws406qnnx64x91zrqvbm4s63l5c1d7dr8s8198cwkcbc84zpbr")))

(define-public crate-solana-program-1.4.9 (c (n "solana-program") (v "1.4.9") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.9") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nq4hjc3ikdp4w5v9ykqjl2f027dp842qs07hzcmv6pzi60kfgzm")))

(define-public crate-solana-program-1.4.10 (c (n "solana-program") (v "1.4.10") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (d #t) (k 2)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 2)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (d #t) (k 2)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.10, <2.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "00f6122lnrk2wm2xdz2387kc3jscyj2q9d8gr6idhvz6xx9xqck6")))

(define-public crate-solana-program-1.4.11 (c (n "solana-program") (v "1.4.11") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (d #t) (k 2)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 2)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (d #t) (k 2)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.11, <2.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "12yz5vjq9mwbnd4zbqq4m5a1q7435r8dhi34i1ph2rsqg7w6pix5")))

(define-public crate-solana-program-1.4.12 (c (n "solana-program") (v "1.4.12") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (d #t) (k 2)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 2)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (d #t) (k 2)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.12, <2.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "0299i5rzazfxnka54fs37wim9w8m9z1sg0kvi0ximw7pnqa6n72z")))

(define-public crate-solana-program-1.4.13 (c (n "solana-program") (v "1.4.13") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.13") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1i6kvga42a93742sxkvw00rzm98gy9xlqxw9ygd54lm58qpagk9h")))

(define-public crate-solana-program-1.4.14 (c (n "solana-program") (v "1.4.14") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.14") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mf79yyh50zlmlj9kj6sz6z52x4gc98fry1a1ny8dacadsqnr74f")))

(define-public crate-solana-program-1.4.15 (c (n "solana-program") (v "1.4.15") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.15") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dnwqq20n702zshaq200mp2mvdhqyz165vmzd4mvn4xnavnd63k4")))

(define-public crate-solana-program-1.4.16 (c (n "solana-program") (v "1.4.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.16") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c1jd5hmw52i00jp5l26dckbzpf676d0nyjrjkkm3b9invrp6y8k")))

(define-public crate-solana-program-1.4.17 (c (n "solana-program") (v "1.4.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.17") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "185r68vqaq3ypf7dw69bp5sn1cl9a9x3zy83jwy79sjbi99mq4vq")))

(define-public crate-solana-program-1.5.0 (c (n "solana-program") (v "1.5.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.0") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rp0fwq5id0hk3r1kqhkyda0asgjjjcrn5sx6rkpzfnlhhyzczbs")))

(define-public crate-solana-program-1.4.18 (c (n "solana-program") (v "1.4.18") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.18") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vn12d86hl0kds3akcylhls2vn4xqjvnj0s2w6b68504wv5fnval")))

(define-public crate-solana-program-1.4.19 (c (n "solana-program") (v "1.4.19") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.19") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.19") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "171g0lq2iy3hmgmhcyfvc6mnx9fcipz4yidh19h1aq8kcvxinwh3")))

(define-public crate-solana-program-1.4.20 (c (n "solana-program") (v "1.4.20") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.20") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.20") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0abbfdxnik9n1xzy8n3b2r9pffj4gla2dxn5mhq3xdy6cz07r4d2")))

(define-public crate-solana-program-1.5.1 (c (n "solana-program") (v "1.5.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.1") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kmpmlpag5088hjz7jfzcspww4yan657py0hlqb9fm6ma7bvs5kc")))

(define-public crate-solana-program-1.4.21 (c (n "solana-program") (v "1.4.21") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.21") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.21") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lnzy3qnhksvr95gnyjcx0cv2n6m29v4klhmhr4bhi0d6dnm3psy")))

(define-public crate-solana-program-1.4.22 (c (n "solana-program") (v "1.4.22") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.22") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.22") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1sgwlbhrigfa4j9lph7s79mr7pbbm9p6dkf5ks5a0yjfn3jwn54i")))

(define-public crate-solana-program-1.5.2 (c (n "solana-program") (v "1.5.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.2") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "178ryyvlasgv7frg5p4abhfzpqc7xdwmgby7f8c0gd41id4dx9lq")))

(define-public crate-solana-program-1.4.23 (c (n "solana-program") (v "1.4.23") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.23") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.23") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "176lmvz4vpyil4b49bi2lsd9imx356spdz5zikjh6n7a5dh1ssyp")))

(define-public crate-solana-program-1.5.3 (c (n "solana-program") (v "1.5.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.3") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dc9grafmb7ssw4rv0qawl95fz492b4z3frkpcmmf60hj9khfzqd")))

(define-public crate-solana-program-1.5.4 (c (n "solana-program") (v "1.5.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.4") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bpnvs2lp4fk0y6rfbdjh7p79v5hilkjq2jv2wxfw10wwkh7akvl")))

(define-public crate-solana-program-1.5.5 (c (n "solana-program") (v "1.5.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.5") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1vx04njh2v137dqhhhscn6hdzrg78399839fkdp1zc4krc2hy87v")))

(define-public crate-solana-program-1.4.25 (c (n "solana-program") (v "1.4.25") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.25") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.25") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0z9yxr021fmp9j6bmb3762591yvq6g24csh53lw0hc5smjbvxww0")))

(define-public crate-solana-program-1.4.26 (c (n "solana-program") (v "1.4.26") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.26") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.26") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17gh8h5k12cz60vk0q6c4ccs9x4g4rwnq3rb651m6xv44ld1gz3f")))

(define-public crate-solana-program-1.5.6 (c (n "solana-program") (v "1.5.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.6") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qm5kskpwxhy3dlxamha6n1h407wspbkwq96fyri97f21lq3cfyj")))

(define-public crate-solana-program-1.4.27 (c (n "solana-program") (v "1.4.27") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.27") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.27") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00sf5sv39yl77y77qwziklx4cwyc3p5shwllrdwij3cvk5yq41zh")))

(define-public crate-solana-program-1.5.7 (c (n "solana-program") (v "1.5.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.7") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0liak7knbb475labzwlrc79mgi47d495s6qxkilshjcf10p8aax0")))

(define-public crate-solana-program-1.5.8 (c (n "solana-program") (v "1.5.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.8") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mxiv4y5pxp5487m4nqa154kb0cd5z6hrcln7rw8lzv1hpr7n062")))

(define-public crate-solana-program-1.4.28 (c (n "solana-program") (v "1.4.28") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.28") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.28") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.4.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0z8lqh282gyq3ik590vvdgzb229n2l85whvpyq1f7sghgkrazl3k")))

(define-public crate-solana-program-1.5.9 (c (n "solana-program") (v "1.5.9") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.9") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1hwmfnkg88yfqr8c9py9nlg7s3gh2lvam46nr1zb5w2kqi9hh83p") (y #t)))

(define-public crate-solana-program-1.5.10 (c (n "solana-program") (v "1.5.10") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.10") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1pddaj91gz4dv914w7nzz5sfq551xjh0vzgyxr6jjw8g1ac46fmr")))

(define-public crate-solana-program-1.5.11 (c (n "solana-program") (v "1.5.11") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.11") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1p7p29isli1qc4x2ybchb6hvwg7772qcwcbz11rmf35f5ln5205l")))

(define-public crate-solana-program-1.5.12 (c (n "solana-program") (v "1.5.12") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.12") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dr0i6clv61b7k2x5wawq0z7k53qv3wa019pgmfach0nn31p9idi")))

(define-public crate-solana-program-1.5.13 (c (n "solana-program") (v "1.5.13") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.13") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1g1zcqc51pgql8m72903z0plvkr54cd1wgqrliag1fzmzxgzmk54")))

(define-public crate-solana-program-1.5.14 (c (n "solana-program") (v "1.5.14") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.14") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.5.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kdjydvhcxh5x5plfappsybcj60c1afin1zgp8sjh1304pngys0k")))

(define-public crate-solana-program-1.6.0 (c (n "solana-program") (v "1.6.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.6.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.6.0") (d #t) (k 0)) (d (n "solana-logger") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1spldcfdxqjndn3wxlvzqzcj682w0ximavcqj0r6br1jk17n2zps") (y #t)))

(define-public crate-solana-program-1.5.15 (c (n "solana-program") (v "1.5.15") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.5.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xnm5yd8dzwmi9h399mvmbn9lsh6l15fsp4ik7fvicjb32510486")))

(define-public crate-solana-program-1.6.1 (c (n "solana-program") (v "1.6.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1d7jifna7x1nk6yfcdwswl4mwhx5p6h955nq1cwz072n3n1z4rdz")))

(define-public crate-solana-program-1.5.16 (c (n "solana-program") (v "1.5.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.5.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qrhv1rgwpx6sarhswb3cvm1h63spqxfwrdawi70cds0dmfps957")))

(define-public crate-solana-program-1.5.17 (c (n "solana-program") (v "1.5.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.5.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qawf6b6fq5bfvvcr4874mx86rm294liv70hhwj73wkpv1wsh57x")))

(define-public crate-solana-program-1.6.2 (c (n "solana-program") (v "1.6.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15005w3sg5s9rm78hk9a82qfghg1z5syyk9b2ya03c5w73ixyx3y")))

(define-public crate-solana-program-1.6.3 (c (n "solana-program") (v "1.6.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0sqyxcibfwxw7636lqrsi1zf776rcjq6jid8pscp98qcrv9fs0cw")))

(define-public crate-solana-program-1.6.4 (c (n "solana-program") (v "1.6.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0yv6zi4dl8h9b8xgqqinv1pq3s51x14i8jn7wws6yywr8b6z86r3")))

(define-public crate-solana-program-1.6.5 (c (n "solana-program") (v "1.6.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0i9r7b088bmps2r2nnp3fch414a4ps91nbalr49s7h663i1ajlp4")))

(define-public crate-solana-program-1.6.6 (c (n "solana-program") (v "1.6.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1h1rlz6q8gxqmi9hy6g0wpk5sp7p9qmvyx52zl9wzwp98g754mc8")))

(define-public crate-solana-program-1.5.19 (c (n "solana-program") (v "1.5.19") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.19") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.5.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lc01r4i5z0d37jmr8zlm8s94hav4fvb2xmxhiy79z3ab0vkrc70")))

(define-public crate-solana-program-1.6.7 (c (n "solana-program") (v "1.6.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kgynknghr2xrsl294g9z1nigsfysq1xyk83wgjza0vypfz5bngr")))

(define-public crate-solana-program-1.6.8 (c (n "solana-program") (v "1.6.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0bjqlngp9m8cvv8spm6pyy8wx8mp49xy6jv9fy8zh01jzvvpd8f0")))

(define-public crate-solana-program-1.6.9 (c (n "solana-program") (v "1.6.9") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gg5cyffc0x0w7zz8sq2ji7vn6l13jgmkszahld9klwc0zdx5aav")))

(define-public crate-solana-program-1.6.10 (c (n "solana-program") (v "1.6.10") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mljl6mn2kfndsg24dyfb5hjd96gj39pywv7864b3nxqd7kw8bb3")))

(define-public crate-solana-program-1.6.11 (c (n "solana-program") (v "1.6.11") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13n11jfagdnsdmiaqcdwb8l2wac5n5jhwq1r91j7045r7gzcmila")))

(define-public crate-solana-program-1.7.0 (c (n "solana-program") (v "1.7.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1rz462l95w0sy9700v45bml5d93mc3g1zbhz8sv9vh2qsgwmjpcw")))

(define-public crate-solana-program-1.7.1 (c (n "solana-program") (v "1.7.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gisgrd8zdxgvkggs3s7018xvs6mprspcbh1w9c5n772cffg6bbs")))

(define-public crate-solana-program-1.6.12 (c (n "solana-program") (v "1.6.12") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v5rjm6abj7af66jxp2hfwc42mza7vqji9q3mghr1ykx0phri416")))

(define-public crate-solana-program-1.6.13 (c (n "solana-program") (v "1.6.13") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b7nzh0x5fw5vwi20q27y9n2wlyab5g30zb2z8pxami97pwyw45x")))

(define-public crate-solana-program-1.7.2 (c (n "solana-program") (v "1.7.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0c3g4sggcdpf1kqy42lib2zax0qdrvvx972srs0fg24lsavgcq7a")))

(define-public crate-solana-program-1.6.14 (c (n "solana-program") (v "1.6.14") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1iphw0nr759y3vs8crdarm2c5sw5cs526p4l06zxvlzqfk4kfaw2")))

(define-public crate-solana-program-1.7.3 (c (n "solana-program") (v "1.7.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xszf10jqav63ix4n76ss5wizyps6mcf6sb351vsqsj3fi14b74z")))

(define-public crate-solana-program-1.6.15 (c (n "solana-program") (v "1.6.15") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dchyhkb55wcd4mcbj6sjr41xylpihb0zhzi5j1cq7jq1a6n73z6")))

(define-public crate-solana-program-1.7.4 (c (n "solana-program") (v "1.7.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14gi8kalplrpfsc0gyh03h0j3j8jl5gmmpibb9sdc5ddpwhlcjbx")))

(define-public crate-solana-program-1.6.16 (c (n "solana-program") (v "1.6.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09z8h9gnkkcdpglzkm0xrxyjpaz9f4zl7cfwsy7m6afwzg04qw4n")))

(define-public crate-solana-program-1.6.17 (c (n "solana-program") (v "1.6.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0chvkv5fd48si51rxrkg1iyd05fhwpzmv66syj27l92vs1r8lms6")))

(define-public crate-solana-program-1.7.5 (c (n "solana-program") (v "1.7.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1awh6i5sr8d57rx0m4fji12n1lrcziyd2ml66kddlnvsydpdwhvx")))

(define-public crate-solana-program-1.7.6 (c (n "solana-program") (v "1.7.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cqzddf10gfg92n5n9x8rrwayf2y27ccv3h18slw0wjkzifnmziv")))

(define-public crate-solana-program-1.6.18 (c (n "solana-program") (v "1.6.18") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11z2wcdlv1zf70snm8fplqgqdx4hp4czqdn6klvvdb7yi81ch46j")))

(define-public crate-solana-program-1.6.19 (c (n "solana-program") (v "1.6.19") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.19") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0hd346qr2cfnh88p075q6xf0ziq33z341bh98ggn79yn3784lwb3")))

(define-public crate-solana-program-1.7.7 (c (n "solana-program") (v "1.7.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0aj1n7rk9nqxpm1s2b58sjj34byj8sch221d8zrjacpbhan1f0n5")))

(define-public crate-solana-program-1.7.8 (c (n "solana-program") (v "1.7.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0inna2y2z83kwij7rrj4pw6z48rw1hqmf15jxs4mwav4kpcmsppy")))

(define-public crate-solana-program-1.6.20 (c (n "solana-program") (v "1.6.20") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.20") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1a80lm4l6k2m5zq4mmkdl7jqymdmwkhjj130cnp6bzqizlpdz4ip")))

(define-public crate-solana-program-1.7.9 (c (n "solana-program") (v "1.7.9") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08nvx4r0bagsym1y99g3d5r75anr2q9nnpks4zgms54dwnm4qkgz")))

(define-public crate-solana-program-1.7.10 (c (n "solana-program") (v "1.7.10") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ywcl4xi7ikwfsq18rvnf5zymc96szs475rrah40f1pfa21kkl8d")))

(define-public crate-solana-program-1.6.21 (c (n "solana-program") (v "1.6.21") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.21") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h392jk7zj1w0lm6x0iy5bx14ysz1zlr5jkqvgnd1gvd88zwkg98")))

(define-public crate-solana-program-1.6.22 (c (n "solana-program") (v "1.6.22") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.22") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wbsq5486ffq28ymj2avrfvjhsc6abwkygaf5qy3dwijhh9qjwpq")))

(define-public crate-solana-program-1.7.11 (c (n "solana-program") (v "1.7.11") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1hdfwx5sa8463icvkjklcdzk4xhj9zzjhbg4h83306536c6wdzs9")))

(define-public crate-solana-program-1.6.24 (c (n "solana-program") (v "1.6.24") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.24") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03zsc7pdadm596kaqhjmdvmxn501bwh1a1gicp6d6193fnbhnmhj")))

(define-public crate-solana-program-1.6.25 (c (n "solana-program") (v "1.6.25") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.25") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1q3xjri3ncc7scaxfx3x8k7x9d9h5i0jgd1j8gqk7gich7g43dqv")))

(define-public crate-solana-program-1.7.12 (c (n "solana-program") (v "1.7.12") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1k2b3cz2b6zaqyb8zk48sbshw18arix3wksyiymbhfj36164vfhz")))

(define-public crate-solana-program-1.6.26 (c (n "solana-program") (v "1.6.26") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.26") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ghvnxgaxs21qqkvr8nwprv39fv7imn819856f96lmhvg49fkrrq")))

(define-public crate-solana-program-1.6.27 (c (n "solana-program") (v "1.6.27") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.27") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rsjpbbd1zzln9yhz3whac41v8bkxgmmjjjqxwi9wqyvn1dr7zik")))

(define-public crate-solana-program-1.7.13 (c (n "solana-program") (v "1.7.13") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "04g7lq8mpbhgavy284785acarv9n3amhlnzfgplv7qpgzjy6s0px")))

(define-public crate-solana-program-1.7.14 (c (n "solana-program") (v "1.7.14") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y3456r5aiplwqgdn7p8zsd52zbxyc5kjypspwv0j7h88blds4l4")))

(define-public crate-solana-program-1.8.0 (c (n "solana-program") (v "1.8.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vqs4v09waf3qvamrcpwksbgx8xzfmsqi0v2lzvy10d0awj6fgr8")))

(define-public crate-solana-program-1.6.28 (c (n "solana-program") (v "1.6.28") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.28") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qirf4rd8g6x0hlwr6d69wz032xjc92ghv9smwgk1cvdmd4g2wcf")))

(define-public crate-solana-program-1.7.15 (c (n "solana-program") (v "1.7.15") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1sgdhbvzim9gd5aa2qwgww6iwbfgk9s9s2vw8w4d39il19ybvd01")))

(define-public crate-solana-program-1.8.1 (c (n "solana-program") (v "1.8.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "149fqgj7c5rdavbaqs4fncavjzq6fs1938kyfidbpdknsaq67fgk")))

(define-public crate-solana-program-1.7.16 (c (n "solana-program") (v "1.7.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1r5a5d9sgxibrfl10i9qf9dmdw1s299jh6hrdrm3jjwmv1bgx1lx")))

(define-public crate-solana-program-1.7.17 (c (n "solana-program") (v "1.7.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qb2apd3d99h8xcmki1d4lc5p47d5hzyg2zdd0j0iyzy667yhdyd")))

(define-public crate-solana-program-1.8.2 (c (n "solana-program") (v "1.8.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13rcv4sypnf2h7hc93jnmiyvvcqa48a8z5w9j9yvr5230a4wxsx6")))

(define-public crate-solana-program-1.8.3 (c (n "solana-program") (v "1.8.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03h2v7abbw7db3b9b0awfpsmygp3lb0319xi0x388mcjl3yajh4d")))

(define-public crate-solana-program-1.8.4 (c (n "solana-program") (v "1.8.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xh1rmihg8irlfdvyhwn6725bwhbmi19mwgfp17h4bbn13gay91w")))

(define-public crate-solana-program-1.8.5 (c (n "solana-program") (v "1.8.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0idpnyyyqxja73lnbl87g6nncrka5qm15d6qihvmwqi6qfpwq5fi")))

(define-public crate-solana-program-1.8.6 (c (n "solana-program") (v "1.8.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0x2wqb7ddhrh52gd38nn3rd9xkhiadzhbwcsvpqxbdm5b91ikhal")))

(define-public crate-solana-program-1.8.7 (c (n "solana-program") (v "1.8.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0371lx2hnixrk2k6slp7lp31a4jn23a0h3wjq6cny5fhi16pdc6l")))

(define-public crate-solana-program-1.8.8 (c (n "solana-program") (v "1.8.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00dxn6ymd1zhv1sz3gzr7xqxdfzgg1j296d71m0a293vgz2182h4")))

(define-public crate-solana-program-1.8.9 (c (n "solana-program") (v "1.8.9") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1k2iiklxhdywhmzrpm83y3mci6kqvhqf8xflrsbdfj61ix1046cd")))

(define-public crate-solana-program-1.9.0 (c (n "solana-program") (v "1.9.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1j9b5yx3ad4cg47kmih7y2g60q4lldlndg5f910lbsxasjly9xck")))

(define-public crate-solana-program-1.8.10 (c (n "solana-program") (v "1.8.10") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0wrdcq7cd839l4km87b9qjf7bvz3xnp4cp0g2yvr8hw83li9rh9z")))

(define-public crate-solana-program-1.8.11 (c (n "solana-program") (v "1.8.11") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "19sv48vh6hh1q50n2xa4yf86vi2l7ml3ykmvf9g5d265adjj2z4b")))

(define-public crate-solana-program-1.9.1 (c (n "solana-program") (v "1.9.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "04r2z2ba137vl3vgrx9y92c0qlm55vz8hxdrbm1s8yskkyapgm9j")))

(define-public crate-solana-program-1.9.2 (c (n "solana-program") (v "1.9.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0hnigcqldw8qvw4wwn5sslvfh23vh7d51ddyk3sfnmc5ysd9cb49")))

(define-public crate-solana-program-1.9.3 (c (n "solana-program") (v "1.9.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "08h52svrlkswxbgj71yh27l01h2f76cmrh20q0jg4cvjc43dz3ra")))

(define-public crate-solana-program-1.8.12 (c (n "solana-program") (v "1.8.12") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qix9lyj3rdxac0x35x1qvp1grz1mc2n5246x170pvb525ph6g74")))

(define-public crate-solana-program-1.9.4 (c (n "solana-program") (v "1.9.4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0ab37xxwysb3wyl5z9q24xlsrn6k1g1iqskdl2ys6jd6pahdgi1g")))

(define-public crate-solana-program-1.8.13 (c (n "solana-program") (v "1.8.13") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15n7mzhgsdwzkxdmc2p2ri0q0p6rv4xd677svq7a7j4avr2p2acs")))

(define-public crate-solana-program-1.9.5 (c (n "solana-program") (v "1.9.5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1sm4d1162smv21bc20kw3ndpzs96l2l2cjf7aac07z741fpv4h8c")))

(define-public crate-solana-program-1.8.14 (c (n "solana-program") (v "1.8.14") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1fq8bmik26szw8mcgiirm70s7gdzn95j0wmc3w7lzczlgxshdxvl")))

(define-public crate-solana-program-1.9.6 (c (n "solana-program") (v "1.9.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1da7pakv7qj30rk51ak9ia2cp81vz4si221kqa0whyrya4n3pywq")))

(define-public crate-solana-program-1.9.7 (c (n "solana-program") (v "1.9.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0gkggdm5rx7z2hz85qjynh17k3y6b6vh65f400n093hwb3w75hns")))

(define-public crate-solana-program-1.8.16 (c (n "solana-program") (v "1.8.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.8.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0hvxh28rx4csqw94bss2m8p0z0jvszm616nnx9sjjrjwkgcvdch0")))

(define-public crate-solana-program-1.9.8 (c (n "solana-program") (v "1.9.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1y3qnh9799q422dcbznacb6kga7jbilp1ashvs044qqx3v2mhnw1")))

(define-public crate-solana-program-1.9.9 (c (n "solana-program") (v "1.9.9") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1nfb783jyzqazajkny46mqqgh5hs3z8gzp53p9b150jizvdcvasi")))

(define-public crate-solana-program-1.10.0 (c (n "solana-program") (v "1.10.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0qqbq0fdvwdz7vcmjcb47pxfc7v0azk61y9xns654nn43p3m13w8")))

(define-public crate-solana-program-1.9.10 (c (n "solana-program") (v "1.9.10") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1m7cqdg8l7gshiv5jfb4hdzgmps75jpjf8hwppwd3qixrcvlprhv")))

(define-public crate-solana-program-1.9.11 (c (n "solana-program") (v "1.9.11") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1c5ih778g1wvbgsdyi31c4cqn01yfliki5qs4lqvq135hlkzv464")))

(define-public crate-solana-program-1.9.12 (c (n "solana-program") (v "1.9.12") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "075h6djpf571hw0rv3aj2lkl94lm8rp5l453qgzqrd1ic6davgin")))

(define-public crate-solana-program-1.10.1 (c (n "solana-program") (v "1.10.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0bcxdg5pyws9w9a7j4s2573ayiz5hs2vylb5lgchpk2ml76v04k2")))

(define-public crate-solana-program-1.10.2 (c (n "solana-program") (v "1.10.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0z2rqhl8bc08a2l3hhwjwjl40r2pgd9m1iq5fmmpzpzxfdqg8w0g")))

(define-public crate-solana-program-1.9.13 (c (n "solana-program") (v "1.9.13") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "04f7d3xjw5j5xnd9yv7hclhj85fldx45xpyacrghy189pzx8p0wv")))

(define-public crate-solana-program-1.10.3 (c (n "solana-program") (v "1.10.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1l1vr4x21q760v0n91l9bsjkpnrwd24l8sjhbh0ybhlrkgfgh4x9")))

(define-public crate-solana-program-1.9.14 (c (n "solana-program") (v "1.9.14") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1wzysjz9prix2prc8y1a51zq0z9prh39yvbl4ljxcr5ijg8r8f4s")))

(define-public crate-solana-program-1.10.4 (c (n "solana-program") (v "1.10.4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "19jnqd2yij3s2b89clw9slkbg3kz8s7v0844csx9g6zf9ykr0g3m")))

(define-public crate-solana-program-1.10.5 (c (n "solana-program") (v "1.10.5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0pf00w118sgxic7x1q9rv2dd68c2q3sz17wp944hf5h1pv6h6iql")))

(define-public crate-solana-program-1.10.6 (c (n "solana-program") (v "1.10.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1la2yikjr5g5a9z86djkwl5g0p10gl9hj77a3yxl0mcbrlya74g5")))

(define-public crate-solana-program-1.9.15 (c (n "solana-program") (v "1.9.15") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1irj79fnrl5yrr7z0il9psfqsg44jwrynnpcw73vxc08nzbih895")))

(define-public crate-solana-program-1.10.7 (c (n "solana-program") (v "1.10.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "140zdvyfw4s5dpq6k405ynjiz49yvzsksxsck1dcpnx3g1rg8mph")))

(define-public crate-solana-program-1.10.8 (c (n "solana-program") (v "1.10.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.8") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0yfj0i56c68milfjbgwby0p72pidr7x05a629cbnz89i837jfc6p")))

(define-public crate-solana-program-1.9.16 (c (n "solana-program") (v "1.9.16") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0pkcml5ii0y6czv3l4393jpr75iq7dl9djf3d07xiinlym5j4m4n")))

(define-public crate-solana-program-1.9.17 (c (n "solana-program") (v "1.9.17") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "04892wi16scrjk05fnmc32j6gp8rap0iciwdspky4lqhqicmd5ab")))

(define-public crate-solana-program-1.10.9 (c (n "solana-program") (v "1.10.9") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0kfsm9lhr6qlp6w1v1xh7zv1m1knnrs49nly9sqkl3h8xgk1mr40")))

(define-public crate-solana-program-1.9.18 (c (n "solana-program") (v "1.9.18") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1fpfxcwz8c2w5f05m6zsl05i80gz3q1xanxpb2q1rzjqq963k09r")))

(define-public crate-solana-program-1.10.10 (c (n "solana-program") (v "1.10.10") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.10") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "12514bscmfl0vx63a39gdm8n9iyggmdkl6ccbsp0d65niqjgf9b4")))

(define-public crate-solana-program-1.10.11 (c (n "solana-program") (v "1.10.11") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.11") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "158l31vrl4y7mc6q6ilnd2nrnr5qchypi6p44qm2safan3b4sswi")))

(define-public crate-solana-program-1.9.19 (c (n "solana-program") (v "1.9.19") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.19") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "05p1237m8gs2kncs9jg2nabgkq6lgvv8lxzy0m6x78qb97kswhag")))

(define-public crate-solana-program-1.10.12 (c (n "solana-program") (v "1.10.12") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1s9v7dl9z2j4sxpxcmls9sch33smkrh1qsfd1gxn545ljrn3lm5h")))

(define-public crate-solana-program-1.9.20 (c (n "solana-program") (v "1.9.20") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.20") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "04afrvv26dvp1x2dn97chmkyvvawms8ldgblb79l4n1gd9a3yiha")))

(define-public crate-solana-program-1.10.13 (c (n "solana-program") (v "1.10.13") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0l9d6rpihw2y8nywn6h4q8cgdj1fk6krwprcfnqfwl6wmr6g6lll")))

(define-public crate-solana-program-1.9.21 (c (n "solana-program") (v "1.9.21") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.21") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0h5ah3aynjy58pv1igwzn5bz0wb9sg0nwpph3jf72zg962nflwnn")))

(define-public crate-solana-program-1.10.14 (c (n "solana-program") (v "1.10.14") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.14") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "19ahrv62b23ma3h1qp3m4fgqw0nbgf4lja6b8ns4yxs9m0am6iwd")))

(define-public crate-solana-program-1.9.22 (c (n "solana-program") (v "1.9.22") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.22") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0q455yr6nbrqgls6a17v1mayizdiygm03fgq9f4yn3lpql8sdwi2")))

(define-public crate-solana-program-1.10.15 (c (n "solana-program") (v "1.10.15") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.15") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "08vfksj518jmys6nfsjp1pkxmg2cc8pqb6xb72mw01z4ydxy9ifz")))

(define-public crate-solana-program-1.10.16 (c (n "solana-program") (v "1.10.16") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1qvhmlylpb4a9252yprhzc9av3sawkb4n4vadmhfs4irw26f031i")))

(define-public crate-solana-program-1.10.17 (c (n "solana-program") (v "1.10.17") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0asn9z3gpa5ygkxwq53nib0jgbqxgkhgyaxp2y5xriacsym73q8x")))

(define-public crate-solana-program-1.10.18 (c (n "solana-program") (v "1.10.18") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1z2rxyj4c8p6adjwdvxqd4x3l2vppvjljn710ggff5mjhqjn14nj")))

(define-public crate-solana-program-1.9.23 (c (n "solana-program") (v "1.9.23") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.23") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "09m29k2p0fh70pcflym2ly0kd9hy76rb08m5zqxqjf9mysh5ip9b")))

(define-public crate-solana-program-1.10.19 (c (n "solana-program") (v "1.10.19") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.19") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0v8kw0kgq2h2lz44nx79cwy9x0kj5p2w6pmffz5lmg6shv4cjx7z")))

(define-public crate-solana-program-1.9.24 (c (n "solana-program") (v "1.9.24") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.24") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0xani4r3sr240h6fp02a6mkxzx4xrjzhl6hzn0c9v2cji4c6z0qd")))

(define-public crate-solana-program-1.9.25 (c (n "solana-program") (v "1.9.25") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.25") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1sdfn9ff5xf2a4n2q7shh707nlsn3pgv4c8lnwb9h1wvxwyy7l5r")))

(define-public crate-solana-program-1.10.20 (c (n "solana-program") (v "1.10.20") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.20") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1ykrckxc6i344xs08164y1j0na567dd2x97wpxxc4w436ckg3qnb")))

(define-public crate-solana-program-1.9.26 (c (n "solana-program") (v "1.9.26") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.26") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0jg54592rkkqrw5zb8k9b28lrhwmpiqvxmnr1aaihmkvj4aavprn")))

(define-public crate-solana-program-1.10.21 (c (n "solana-program") (v "1.10.21") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.21") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "165bz4nsmpswhi0v7i6hs392mykqmy7ygfnh8bpaz9gxs8iskncv")))

(define-public crate-solana-program-1.10.22 (c (n "solana-program") (v "1.10.22") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.22") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "06dhywqxl6iw92w2alwbqznyhr315zgah0adp22b0j3335iw46mf")))

(define-public crate-solana-program-1.9.28 (c (n "solana-program") (v "1.9.28") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.28") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0q8w7q89s3cxk6rq63wvyv2rpl91xxmnqxsgqhzwp85rxplnpj34")))

(define-public crate-solana-program-1.10.23 (c (n "solana-program") (v "1.10.23") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.23") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "05mmvi27h043ysg2gkgr3b71ddcndzvf56pnhblgkfm8mr8nx1z4")))

(define-public crate-solana-program-1.10.24 (c (n "solana-program") (v "1.10.24") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.24") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0saw2p307gqsmawqzsvqki83l3z7wrb68n5y9kidcsrnc08h9i0h")))

(define-public crate-solana-program-1.10.25 (c (n "solana-program") (v "1.10.25") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.25") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "06m41aibmjv0dz03yq0al5arwgm68rjz7wxzjgg3qzbavjzb4l4p")))

(define-public crate-solana-program-1.9.29 (c (n "solana-program") (v "1.9.29") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.29") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "100nw2vwwmmvq4cdbzz4g2q21p800dj6chgpjw0x8994j32azppm")))

(define-public crate-solana-program-1.10.26 (c (n "solana-program") (v "1.10.26") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.26") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0ydqxi5s2nrgby8y326pdy6wpnyl10x9k5gx2sxsh8kny57hcxng")))

(define-public crate-solana-program-1.11.0 (c (n "solana-program") (v "1.11.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0cmsby8bdyxkq21w7v83inl4rjz1171qzsmyz9pdkliisjkbm96x") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.27 (c (n "solana-program") (v "1.10.27") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.27") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0vxii6y3l0a02rnf8yvcgs5gf09g9ddmia1077cn407n2zqaa4d5")))

(define-public crate-solana-program-1.11.1 (c (n "solana-program") (v "1.11.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1kindj2wf97w2mkd2ldg8ijjxaww8rmf8bddqm9ghyz4n0n2xqas") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.28 (c (n "solana-program") (v "1.10.28") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.28") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1c6n85v12sv7fyyc3issfwhcis2abpavnz8rsfvlpr29bancpbrv")))

(define-public crate-solana-program-1.10.29 (c (n "solana-program") (v "1.10.29") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.29") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1bkfq4s6hpmjfnqgajb1my5zc5zhiznrxv1smqaykp3xbaxfw9nk")))

(define-public crate-solana-program-1.10.30 (c (n "solana-program") (v "1.10.30") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.30") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.30") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.30") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.30") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "149cija6ifpp33ncmg5sd6i42rzpjb1kj8g3nyywflk2fr2jh5zc")))

(define-public crate-solana-program-1.11.2 (c (n "solana-program") (v "1.11.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0bz0ilw6vwdzcarmgp2kpkq7mpaaqry30pwj5x7a42mzgy735zsy") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.31 (c (n "solana-program") (v "1.10.31") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.31") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.31") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.31") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.31") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1rfv5c2w89y05mmlp0vwq24q8qnr7w2m0dhm6sh4mcl5zshq5gip")))

(define-public crate-solana-program-1.11.3 (c (n "solana-program") (v "1.11.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0sxnfwxlsv03jn9xipc00japlx5w7kmfb87al15mwpqjaiqz6zdm") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.32 (c (n "solana-program") (v "1.10.32") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.32") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.32") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "01jghggm02q6awbddnki7875nx9ncxscv8ss52jf10865wvfrca1")))

(define-public crate-solana-program-1.11.4 (c (n "solana-program") (v "1.11.4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "10ppldk0r02jl2fyil0mlvl1phb8gjgk4bm47m72m96pfhy962fc") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.33 (c (n "solana-program") (v "1.10.33") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.33") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.33") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.33") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.33") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1w3hcihgwxjrmyg2bpyf2kwibnsl3xx0xxvid001p0p2rq2gbv7f")))

(define-public crate-solana-program-1.10.34 (c (n "solana-program") (v "1.10.34") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.34") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.34") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0ql8dmhlv0c5vgxapw1fcp3qwgf6if9j9q4rmxxmi4kpwahdc8gf")))

(define-public crate-solana-program-1.11.5 (c (n "solana-program") (v "1.11.5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1y7y0b817232y034fkyq20mh2anmm5377w6arl6b46qpbgc19lxx") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.35 (c (n "solana-program") (v "1.10.35") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.35") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.35") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.35") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.35") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1bbf3ksp3zbjg9jy2c8w7l6mgl6g82ry9zcqbvs3kiwgc62s6b1m")))

(define-public crate-solana-program-1.11.6 (c (n "solana-program") (v "1.11.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1z17ixw6lfixyrk77klamb9s5wn707vgarac5lbf3jprmk4nx5hi") (f (quote (("default"))))))

(define-public crate-solana-program-1.11.7 (c (n "solana-program") (v "1.11.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0pkp16c7s9q4y6z6xchmzharvs8jh9qjzm1qy4b8z4k7v6fq7hyb") (f (quote (("default"))))))

(define-public crate-solana-program-1.11.8 (c (n "solana-program") (v "1.11.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.8") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0qf34psgr9c18yhq745bq1y0r3yajsgrj8np5ggd85nj41n7s3y3") (f (quote (("default"))))))

(define-public crate-solana-program-1.11.10 (c (n "solana-program") (v "1.11.10") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.10") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.11.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "123183gh1bs7pawnw64s014bxjgba0w6vv162lginxclnbhwsfj1") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.38 (c (n "solana-program") (v "1.10.38") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.38") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.38") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.38") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.38") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "15mv89944s7dqcsk3nhrpbnbxjdvrh829b2hr7vpv77c9q7krjky")))

(define-public crate-solana-program-1.13.0 (c (n "solana-program") (v "1.13.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "158yam5m1c76ljn0h2gzb84zh2v9s5qwh8pnxvmlf24lam89yb9f")))

(define-public crate-solana-program-1.14.0 (c (n "solana-program") (v "1.14.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0mrah7blx37m8x168wclf0lkd784pknsqmpjn15x5jrgcwm44di8") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.1 (c (n "solana-program") (v "1.14.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1jwwd2bzgdv3ligly55hqsi30g73v14q5h5wnkrb6cvmjacxcxkl") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.39 (c (n "solana-program") (v "1.10.39") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.39") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.39") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.39") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.39") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "03nq82mxd1jjb1kh04rqgi4gf42wy6m2js8kc62l5mr1c29kga8q")))

(define-public crate-solana-program-1.14.2 (c (n "solana-program") (v "1.14.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0r8bnpfl386l944w3ygnbw3ph43q2r183c5mjvig7javnl3hnvd8") (f (quote (("default"))))))

(define-public crate-solana-program-1.13.1 (c (n "solana-program") (v "1.13.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1x3w3qikr97fn19z38xh18q7xqgsqp51v7x3rxzsp49y88sv1i2z")))

(define-public crate-solana-program-1.14.3 (c (n "solana-program") (v "1.14.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0nx64lwclxlbv2k0k8rmyan1whyqr79sa77n6jsz8s6ga8wd4nzq") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.40 (c (n "solana-program") (v "1.10.40") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.40") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.40") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.40") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.40") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0fp9bdjm2f9jkr2bphisz0l56zfdbq5g0xqzff1zmzq28wz0msqi")))

(define-public crate-solana-program-1.14.4 (c (n "solana-program") (v "1.14.4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1jczja50qcjws96gvxk7zzk423w244n586hws2ydgvvwdd2fizfy") (f (quote (("default"))))))

(define-public crate-solana-program-1.13.2 (c (n "solana-program") (v "1.13.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "15ga6xs8xhkpgf0lcvi1vd9jny145f3mv38vh15zlishfkvzfs9w")))

(define-public crate-solana-program-1.14.5 (c (n "solana-program") (v "1.14.5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "05vv8h670n2nwqbcyrfama7b620w8m3dy71472aj0wp141xbwdgq") (f (quote (("default"))))))

(define-public crate-solana-program-1.10.41 (c (n "solana-program") (v "1.10.41") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.41") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.41") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.41") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.10.41") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1vv26rsscvcqrpzczmj58zb28djjx8rsb6gyy44449gy2zqjlqpr")))

(define-public crate-solana-program-1.13.3 (c (n "solana-program") (v "1.13.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0573w3bq66n71nf1q9668af0vv0phmbm3kg37aj5isp83az18a3r")))

(define-public crate-solana-program-1.13.4 (c (n "solana-program") (v "1.13.4") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "17m73biyfgak9pk5z4vs1bfl7rcliy39q8xdvhzpkkyj2q661ppv")))

(define-public crate-solana-program-1.14.6 (c (n "solana-program") (v "1.14.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0gc3f691pcgqyg56cwnlnh2i6nfrzspfwdcbsij1iqbiw8bxmvp0") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.7 (c (n "solana-program") (v "1.14.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0kjspanzjd92rllfffy7hnj3314ssyr93l3flxmzj4vyrg67a92i") (f (quote (("default"))))))

(define-public crate-solana-program-1.13.5 (c (n "solana-program") (v "1.13.5") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.5") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0wv8bwv6bw3423y9izpjfg7r229fq6yca91zs8hhwp27j2ldlz67")))

(define-public crate-solana-program-1.14.8 (c (n "solana-program") (v "1.14.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.8") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "10c6nd4qj69kivyab874v9wmkc8wa00srjg1dm1xh5ga82ja107l") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.9 (c (n "solana-program") (v "1.14.9") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0nhk6q098vbhv1fgj8jay3al8ld0nswk2qwvc7an5ygxjssyggjq") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.10 (c (n "solana-program") (v "1.14.10") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.10") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1zj082b0rjx6i2x3w6w736w9y1cqjr5dx7m824c60gh995z3szcj") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.11 (c (n "solana-program") (v "1.14.11") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.11") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0amnfd2a75bx4dbjhj5c221rcgmpdpnksai9071pm8ffy9v26q3m") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.12 (c (n "solana-program") (v "1.14.12") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.12") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "11v8l2g7x1pil6fph57c8czw6ksk37xvcirip2551zi8c5kzzbqd") (f (quote (("default"))))))

(define-public crate-solana-program-1.13.6 (c (n "solana-program") (v "1.13.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1bl2q7sjd5rbjslmm5y45ni7h7cx52fmw37qglmgsgbribsxc65j")))

(define-public crate-solana-program-1.14.13 (c (n "solana-program") (v "1.14.13") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1ma6whi9d2nb5nqapzdm1zrsqywaf6a6qidfbx4xvxc0y20p94yh") (f (quote (("default"))))))

(define-public crate-solana-program-1.15.0 (c (n "solana-program") (v "1.15.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1zinankpybbwbd9vzrwnfr5icdahq2i2fc114s2zs67dbmkanhil") (f (quote (("default")))) (y #t)))

(define-public crate-solana-program-1.14.14 (c (n "solana-program") (v "1.14.14") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.14") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "12i7dk86j5f07rg54ry298izsi3dxzm3iw91i9bjwa1p6rra3i9j") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.15 (c (n "solana-program") (v "1.14.15") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.15") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0g30fp3906chqmmy7rrl91f8hwv8k6f0lm7g4dmcai0fh8s2v9g5") (f (quote (("default"))))))

(define-public crate-solana-program-1.15.1 (c (n "solana-program") (v "1.15.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.15.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0cbr4q5pflc9q05n63d6q9sdzjsmh5c2hs03a41s31gkipcjbzs6") (f (quote (("default")))) (y #t)))

(define-public crate-solana-program-1.15.2 (c (n "solana-program") (v "1.15.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.3.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.15.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "096rps48qnmwh01ws2gikibjw15wijn269yzl07yk95kgpxg1s8s") (f (quote (("default")))) (y #t)))

(define-public crate-solana-program-1.14.16 (c (n "solana-program") (v "1.14.16") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.16") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0lddrflibflpza3mx4i8714aalgjizi953nb2f4zd7b1fcl0b69z") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.17 (c (n "solana-program") (v "1.14.17") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "17w4552k1x8j642h4fz47r6rdrrg6lbdsvn97s8fgyq2c2nh4v6n") (f (quote (("default"))))))

(define-public crate-solana-program-1.13.7 (c (n "solana-program") (v "1.13.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.13.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1na1ccvmjhsy0dzszz007cwb6cxa2i436vf20pqygnkn5vbv8cg8")))

(define-public crate-solana-program-1.14.18 (c (n "solana-program") (v "1.14.18") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.18") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1hs8raz34j4njngfclydqizkvb68dkq9sa9jrybmb6872j4dzry3") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.0 (c (n "solana-program") (v "1.16.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1dpgwz93af6h4782v2jnkn7d1cbazh5zvlfbfr59na0i97b11wma") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.1 (c (n "solana-program") (v "1.16.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0qjybm8an7rs0qybicb5s1lisqzbqsndyxpcrl925zyybb82ib0r") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.19 (c (n "solana-program") (v "1.14.19") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.19") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "04310zaw7xygayq1c4nqpwwm0psq3jxyf4b1fzi5n8qirmhak6zl") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.2 (c (n "solana-program") (v "1.16.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "172r0vaw59vmpjq559dg07xk5k4vf1zcmh0ggqr97qmsi4s3jpjx") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.3 (c (n "solana-program") (v "1.16.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0c54wjql4wd64xs0p26k54cs3k594dg8yy426mwjlq5rhv5i0ra7") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.20 (c (n "solana-program") (v "1.14.20") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.20") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1y3xp4x0ghk1svz30wns2bprss6wxh5f41ws2gv0br9wfi45zbai") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.4 (c (n "solana-program") (v "1.16.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0mmj645ppm8bmma3jyiah2fcz1i7y0qm9v0va77si3kr5qvvspiq") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.5 (c (n "solana-program") (v "1.16.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0b41dbf8s4qbnn790sq8l5m9qwmqb269in7kpgrg7x3bgsbz3lrs") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.21 (c (n "solana-program") (v "1.14.21") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.21") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "05a447l02881lsya5v6anqbpzq6anj44av1lzwblg8wsmjgz2yxd") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.22 (c (n "solana-program") (v "1.14.22") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.22") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1jzkiswqvz2c59r9kmbg8yzk7giklrc1pm942scawig4dkjmawzk") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.6 (c (n "solana-program") (v "1.16.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "164nzvgda78g94giw5jy38vhjmsjd2slcvhkvwknkwn36w3siyis") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.7 (c (n "solana-program") (v "1.16.7") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0ql5s1rb00l1z6nhmqiwrnfbiyjd478rsifvqly40nxns2gcb09g") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.23 (c (n "solana-program") (v "1.14.23") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.23") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0y0s974ia6izlgavfwl7233r8c5kz5188fxs24ahanicq90r49q2") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.8 (c (n "solana-program") (v "1.16.8") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.8") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0s9a56rmgq8hshrqhrd8ilqy42aw1ab3x7m99930jxya0if7iw17") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.24 (c (n "solana-program") (v "1.14.24") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.24") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1jij2b7zbsgsls5c9jq83zqsnavb0wck6j466r10qig8idkv10c4") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.9 (c (n "solana-program") (v "1.16.9") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0aaz9abq0hmxnlkfbqqrqbk9idvq9jfbdjfxx2m435a04f3pk2n3") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.10 (c (n "solana-program") (v "1.16.10") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.10") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1wf2i0vhxmyfnjc0qdid9c2ydpg0kfqk9b7p6aavjdsjwsi814xx") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.25 (c (n "solana-program") (v "1.14.25") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.25") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0sp6kmkbw8l9l7a7aqgy4fji7mkmf4pxvmzvwnkf79jidjy5irlk") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.11 (c (n "solana-program") (v "1.16.11") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.11") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0y9n1i9np3zgcs8ihvm11qs0w7lb9rvci2giyvd63c20zb21p0xd") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.26 (c (n "solana-program") (v "1.14.26") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.26") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0cnm5dq72j6cls57khlf8nynkwlnaw8j7sfgqvihpzxd4d1kdby0") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.12 (c (n "solana-program") (v "1.16.12") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.12") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0z7dnshicndaq4zbh7bbclwvnx6nadriz6g8j610pn1vc9c1915k") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.27 (c (n "solana-program") (v "1.14.27") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.27") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1dw4qynz9mcpiyqr1lj6brnmhsviphf5i9kl1ps37mljgr1ahbjg") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.13 (c (n "solana-program") (v "1.16.13") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0dlkh9jj4cvnivvrgxcrmj366va47cr3s58nvf1f550yrzxs25rg") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.14 (c (n "solana-program") (v "1.16.14") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.14") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1di5jxrj2iqc1xcaharng0fd3mlgz8wkp7i2g9a4ndcvr2wswbrs") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.14.28 (c (n "solana-program") (v "1.14.28") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.28") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0f7b2h6lkvl068k64ra0cmsci0m2rrws9qb3m1yqnsi1nqc0l010") (f (quote (("default"))))))

(define-public crate-solana-program-1.14.29 (c (n "solana-program") (v "1.14.29") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "=1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.29") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.14.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0i4fai49drmxm67609jvh6bnvs251ss9r2bcsn96z31f66chcd8r") (f (quote (("default"))))))

(define-public crate-solana-program-1.16.15 (c (n "solana-program") (v "1.16.15") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.15") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0iivx6rw7lkqw3kq5rlv98k2lda87ssnzhiiqfz1b042drfgyqwq") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.0 (c (n "solana-program") (v "1.17.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0cd858wpxzlzzwyd2shzpjnsqs69gkb3dl8z6dk27735f2nl1j85") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.16 (c (n "solana-program") (v "1.16.16") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.16") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "09awc2iar15n4md3dh5vx3r07c5x8zmir5ryskli6x576iaamwng") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.1 (c (n "solana-program") (v "1.17.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1jy0jwajnrn2grjzgdszij1xs9hijv2iyxxplxssz1sdl9q1cjcw") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.17 (c (n "solana-program") (v "1.16.17") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "05hwifa7c95j684ccbd9p8sksl44gvj3ql7ggqqdx4k4k2c6kc8v") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.2 (c (n "solana-program") (v "1.17.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "08cr2cr2ck5wgiif2y6s152bdfzyzqg2cjyfgxg3fwrprpzk923f") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.18 (c (n "solana-program") (v "1.16.18") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.18") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0717qq1hfyb1rhfm969hcbchkny24blya2z2v957622in4nc3xg1") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.3 (c (n "solana-program") (v "1.17.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0x0ka9bfsydfqfkf8f0w1vifswy74rzn1663hhap1v98lygs36jy") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.4 (c (n "solana-program") (v "1.17.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1awd6glnpfmfgh4nd271r4igi0gzzbn62miyfz1v1i623s0lmzm1") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.19 (c (n "solana-program") (v "1.16.19") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.19") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1b1fgkyahk7w25jbzwg4lfk81lk9nkc4ak5r7q923kkl1sniipxf") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.5 (c (n "solana-program") (v "1.17.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0zsj0295b6h29iw89acbmfxawq8bxdwj629n8g71a20dif6ahv4j") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.6 (c (n "solana-program") (v "1.17.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0ygs8b0v25yq7fb3l59mzqa8yxlcjma4wd4fic9xcn3jf5qrh43i") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.20 (c (n "solana-program") (v "1.16.20") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.20") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1gihcvb8kkh7fivk93zxwvhgsjgpywmg7m5j2ihpv4jv1h8w4nma") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.7 (c (n "solana-program") (v "1.17.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.1.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1rdwbrs69vj6bf2wrgj34i7m11n5dsgr6db98h7pn9h5il8d6wnk") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.21 (c (n "solana-program") (v "1.16.21") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.21") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1bj9vg6460f2xr7v91jhvdpj0vfjb1gkwsgd4l8j0qm4c4q2rf8i") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.8 (c (n "solana-program") (v "1.17.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.8") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "18k6sn9lpss1nyp7wxfmif0bhas6dljg46llxbvzbhw9p229sixg") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.22 (c (n "solana-program") (v "1.16.22") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.22") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1ak6djdp3y7ljq9vc6lx0qczfgrr7b490z79lssmk6chshd7rql7") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.23 (c (n "solana-program") (v "1.16.23") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.23") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1rk8531qcbc8hywvbjafnqxp5nfrphs4l1cw470h20xnj90x4q15") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.9 (c (n "solana-program") (v "1.17.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1g0x8c40pahz2pl0xbp7hp5d35yhs6kbsxf8k54ky4qb9vmih1sh") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.10 (c (n "solana-program") (v "1.17.10") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.10") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "05wmdy80xg03gr8y21yzkfxl68lv872s0lmr39fm66vscrnsjh3w") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.11 (c (n "solana-program") (v "1.17.11") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.11") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1dzsnfzfbwmr34dmgxmsxn4qdbbw6x3qayfphqpqs17izm3jx8a3") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.12 (c (n "solana-program") (v "1.17.12") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.12") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0ya6y8hgz9mx6gl0lm6cxvw3fbx6sxminpni3s68s6sm69jzvgap") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.24 (c (n "solana-program") (v "1.16.24") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.24") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0lzqcfxhjjm9y1lnkif5vm5dz2yhyda8r1gznscn59pd0wxnflny") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.13 (c (n "solana-program") (v "1.17.13") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0b0r7a5ygky3pyggnxg4jajljih9yn491cx4b4mwww6x2rlx30y1") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.14 (c (n "solana-program") (v "1.17.14") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.14") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1s0w0rj4xm0vg4cpbz6h9xhzhdm0sy99q4jf1d42r7ph4fb3nflf") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.15 (c (n "solana-program") (v "1.17.15") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.15") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1fw0mz5r7fw1xdjfpzngbrqwplm58cycrfzp50hqas5yzwfis561") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.25 (c (n "solana-program") (v "1.16.25") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.25") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "01bckazgn7klnkp7qcfy8aj9jp4x1dz1wcsm2rl689dlll53b4iy") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.16.27 (c (n "solana-program") (v "1.16.27") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.27") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "010823m1hkmx73mgkp7wiqidi2sv2m7950bfgy888hrxyibngh90") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.16 (c (n "solana-program") (v "1.17.16") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.16") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "18bl8k8yw3ykkg7r6knzykccazi0qk5vn7r9k3a9qy3dvl50kv5i") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.17 (c (n "solana-program") (v "1.17.17") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "12jc040abbc37z37ww2bfn5y4skxl5818qaz2n4gw3wj2axsnpm7") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.18 (c (n "solana-program") (v "1.17.18") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.18") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1xidkywsjcix1minaqvyh0pbb82km4kk0gllf5w7xz62cgjgnah2") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.0 (c (n "solana-program") (v "1.18.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0gp6avjnlb8p1jgkh94cnxc1ypk398xrmfkl57g7h8f8hrkfmvay") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.18.1 (c (n "solana-program") (v "1.18.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0vmihkpvy9gqx6m1la25j431g3amgv0yh41nwpjvkc478hghmkph") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.17.20 (c (n "solana-program") (v "1.17.20") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.20") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "15snikp6zy60mhwsm829ixfiacm5rfbmh1qqgmjwibh396pd50p8") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.22 (c (n "solana-program") (v "1.17.22") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.22") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "07pax8i2i6q8j7hg1m9by9mp24qsa13rmzfmbnd2sha1ffw3i02b") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.2 (c (n "solana-program") (v "1.18.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "063mhc50cvqyxvl02q44cs9wq8ayk7w9rw2amvljwyfwjhk8lp8b") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.17.23 (c (n "solana-program") (v "1.17.23") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.23") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "10lm3d0iz0f4jr70gvhk9q5vm9n7a4ymnixnp07pdp304xh11xbv") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.3 (c (n "solana-program") (v "1.18.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1246aaxhzidj2r5f9xl3km13ffn6mm9b9bvs04ksl0r4a9a5b3qd") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.18.4 (c (n "solana-program") (v "1.18.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0v0z90r06msqzxkqz6l2gd4fg11x9bvxx05ibgpk6vvasqqdgyli") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.17.24 (c (n "solana-program") (v "1.17.24") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.24") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "185ajl4lh5qph1xs2vjdkgn5h4j3n80zx8p6pw1niqgrggr6nvvf") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.25 (c (n "solana-program") (v "1.17.25") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.25") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "025cwf69h5nrxyk0k9y6sp265x4dlrd0ysi38n6pwga3gg1vrlwx") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.5 (c (n "solana-program") (v "1.18.5") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0znq7vgfwqskflh9gy4g3r0akb0sr4x8zlvggcxyjnri2djqm1kj") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.17.26 (c (n "solana-program") (v "1.17.26") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.26") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "04aakskh9b67aw29wrf0bc34s4rlbrkr24dy5whddiciv9661iy0") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.6 (c (n "solana-program") (v "1.18.6") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "01910kgfgwnrd1ygs813n3k9ym9m4a35d7fj5hc39q4lbwfsf3ff") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.17.27 (c (n "solana-program") (v "1.17.27") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.27") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0pibvrx1qay0hil7gj6jvcid416yqfyhgxhsl6m77pjpd4l0j7yq") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.7 (c (n "solana-program") (v "1.18.7") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0hybhm3m5cx5gwvsvb5flr5bs4liqh2xxjdwbgcj4xv304grrx79") (f (quote (("default")))) (r "1.72.0")))

(define-public crate-solana-program-1.18.8 (c (n "solana-program") (v "1.18.8") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.8") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "12jwnnc3sdfvc3ci6gp24xzwjkmrx187w7qdcv8wj42m1064xy0a") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.17.28 (c (n "solana-program") (v "1.17.28") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.28") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0ll6rqidwd3iklqb7gsvlggzhwa6k1wqbih0v4iydyxzf2l3h7sq") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.9 (c (n "solana-program") (v "1.18.9") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0nq826dl5dy59nkqpgaf973yg6p03yxckbjrl41hzwsh6299w3kn") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.17.29 (c (n "solana-program") (v "1.17.29") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.29") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0s9jzh7x0gkw5z67chbarsfw50kmxc7l6ig6w4nm6dwlpwqfx5d9") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.30 (c (n "solana-program") (v "1.17.30") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.30") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.30") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.30") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.30") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "05bzil5vj3g74l0ip3hpb8r29xiwv913klll5hh7dz6nkpnf8ajb") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.10 (c (n "solana-program") (v "1.18.10") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.10") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1bicq8b57d68npxs10p1vs1prg1zg1xp45yy571vmwkfffm7a0ad") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.18.11 (c (n "solana-program") (v "1.18.11") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.11") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1blzjkx2m9plcg153979pi4437cn9wfn99prp150p29w21rzbpcb") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.17.31 (c (n "solana-program") (v "1.17.31") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.31") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.31") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.31") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.31") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1p3644kqskjqbjn925s85r3kn295hdr0cnb54rsyz8zqjdvl84k4") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.12 (c (n "solana-program") (v "1.18.12") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.12") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "01p04f7pppfnn09fvz13qv1c485f4nfv9x5sfsgahav25nh16m9a") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.17.32 (c (n "solana-program") (v "1.17.32") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.32") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.32") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.32") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.32") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "0f7dysl5pg93yjbva3jfmcbnf68gxgl8bry875wc7zmri1zgbn3i") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.17.33 (c (n "solana-program") (v "1.17.33") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.33") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.33") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.33") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.33") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "12jjndkyavzbr78gmklwkf0zx30apf1scaf5hn957kyhfpq9vxw5") (f (quote (("default")))) (r "1.68.0")))

(define-public crate-solana-program-1.18.13 (c (n "solana-program") (v "1.18.13") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.13") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1f0p9m8hd0i1xgmhaifcvw3rqp8a0dn80lrdbh7clc4x9dis3scx") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.18.14 (c (n "solana-program") (v "1.18.14") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "borsh0-10") (r "^0.10.3") (d #t) (k 0) (p "borsh")) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.152") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.14") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.18.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1kngskbl9frjz85ml3dj190q2s6rzgsj92giisc46jcdbi6zywxd") (f (quote (("default")))) (r "1.75.0")))

(define-public crate-solana-program-1.17.34 (c (n "solana-program") (v "1.17.34") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.5.0") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "borsh0-9") (r "^0.9.3") (d #t) (k 0) (p "borsh")) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("jobserver" "parallel"))) (d #t) (t "cfg(any(unix, windows))") (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "light-poseidon") (r "^0.2.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.34") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.34") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.34") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.17.34") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "03ri5ppd6c9wvlqhfxga1nsr5k899czkiagaci23rhj94m10zp4k") (f (quote (("default")))) (r "1.68.0")))

