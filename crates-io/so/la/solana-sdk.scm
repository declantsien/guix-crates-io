(define-module (crates-io so la solana-sdk) #:use-module (crates-io))

(define-public crate-solana-sdk-0.10.0-pre1 (c (n "solana-sdk") (v "0.10.0-pre1") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "1nb3b5nrag150xvgkm2swvsy9qd98cxpmi7xgizc0lzgr3fdbcr5") (y #t)))

(define-public crate-solana-sdk-0.10.0-pre2 (c (n "solana-sdk") (v "0.10.0-pre2") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "0jj6rr1arkqzbm8fi5qi5y7dfw0d5qafsdna0hp7way9jlrlkx3v")))

(define-public crate-solana-sdk-0.10.0 (c (n "solana-sdk") (v "0.10.0") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "1ni0y7k61vrhgvdvdnxmdydkqzlw8nr31848ixqhlvgcgg77vlk9")))

(define-public crate-solana-sdk-0.10.1 (c (n "solana-sdk") (v "0.10.1") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "15dzhkfcsgwbvas1mxxdavcxg3izmagfqrm713jv7b56ys71f8a9")))

(define-public crate-solana-sdk-0.10.2 (c (n "solana-sdk") (v "0.10.2") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "1m8rps3yik36gcmz6dy0rfn1gh4zi97jkih2ik11axd5cqiqjsqv")))

(define-public crate-solana-sdk-0.10.3 (c (n "solana-sdk") (v "0.10.3") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "1iprphnwr4vpkkapjk3g571bk4ik8qglxwma4r48bv9i8xsxxv1k")))

(define-public crate-solana-sdk-0.10.4 (c (n "solana-sdk") (v "0.10.4") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)))) (h "0f2s1k23nmg1blm29mc0cc481mj3makn4swmwr1bpxvmfxdfgbac")))

(define-public crate-solana-sdk-0.11.0 (c (n "solana-sdk") (v "0.11.0") (d (list (d (n "bincode") (r "^1.0.0") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.82") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.82") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1dj1p9fsphy4w3pnzniva9q8vcvjz6av8qf70ngyiizyah7cwfhp")))

(define-public crate-solana-sdk-0.12.0 (c (n "solana-sdk") (v "0.12.0") (d (list (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1znlarj9dmx7ds64wvravyfff8wk29yp6v0yyn1qpk79saqvw9fx")))

(define-public crate-solana-sdk-0.12.1 (c (n "solana-sdk") (v "0.12.1") (d (list (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "06r2ypali998j6i7b3lmraj90d91cxpshfkhcgg7i4qcfz8v0zab")))

(define-public crate-solana-sdk-0.13.1 (c (n "solana-sdk") (v "0.13.1") (d (list (d (n "bincode") (r "^1.1.3") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "18n0kw1c6gslcpr2bcd9xm5i8gavgh7qw7884w3bi347p229sqhi")))

(define-public crate-solana-sdk-0.13.2 (c (n "solana-sdk") (v "0.13.2") (d (list (d (n "bincode") (r "^1.1.3") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "0wm8mn73l6zchr4d9n7jg4f7s3n803w5kq2g2927mgjk8hyy825r")))

(define-public crate-solana-sdk-0.14.0 (c (n "solana-sdk") (v "0.14.0") (d (list (d (n "bincode") (r "^1.1.3") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.90") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "03bwh984hlxgr8y3pgliw94nk1426n0yhxxg76r28wzcyfmbjdd0")))

(define-public crate-solana-sdk-0.15.0 (c (n "solana-sdk") (v "0.15.0") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1081y47aqhj1lrbh4ajsasd9m2p8gcip0jsgam0zarb7ayfc2h3p")))

(define-public crate-solana-sdk-0.15.1 (c (n "solana-sdk") (v "0.15.1") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "0yj6l02khzc6w9jb5v2qvz82d4xgxwmg3pv1ydikxm595dcaafn3")))

(define-public crate-solana-sdk-0.15.3 (c (n "solana-sdk") (v "0.15.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "0hvfyzrqh0clhlz1gfdh88nf0i0jwx01pwgw8dr0ks9l52mr9k55")))

(define-public crate-solana-sdk-0.16.0 (c (n "solana-sdk") (v "0.16.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1cjam26akrajbhslx8sxl9by841406wwikhxd2r579imprnj55qq")))

(define-public crate-solana-sdk-0.16.1 (c (n "solana-sdk") (v "0.16.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "12xz3plqkivd1bjcc9g50pskfkf030qv2a1dh0p4xyz8qzsyda1n")))

(define-public crate-solana-sdk-0.16.2 (c (n "solana-sdk") (v "0.16.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.2") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "0r0lya80f341zcc4fsp9ghw3h91pfb7nmjnjv7y5phfyawiigf9m")))

(define-public crate-solana-sdk-0.16.3 (c (n "solana-sdk") (v "0.16.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.3") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1mik6b1ffx9848g1frx3x7ggw06pf43fz7b22kzkpmp07mbni42j")))

(define-public crate-solana-sdk-0.16.4 (c (n "solana-sdk") (v "0.16.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.4") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "02lpmh2sr7nzgmrbm9hjjm5zg6gfskkmq48jz1rr5549r81i5i93")))

(define-public crate-solana-sdk-0.16.5 (c (n "solana-sdk") (v "0.16.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.5") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1p613v2ggy3wj29dv8fvqzibyl2gig9xms49n9728016p4myidmi")))

(define-public crate-solana-sdk-0.16.6 (c (n "solana-sdk") (v "0.16.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.92") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.16.6") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "08xwbm3bmjj53ryl6v3a5rhcab49gbxjd565rfkybhh3kip8ih75")))

(define-public crate-solana-sdk-0.17.0 (c (n "solana-sdk") (v "0.17.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.17.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "0r2zk0mqszz166h9dlcxd0cbrszsw36y8298ay7ki859p0ckgjhp")))

(define-public crate-solana-sdk-0.17.1 (c (n "solana-sdk") (v "0.17.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.17.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "1k2alhv2c52lakrcz5yg69m62zxakgr5iy1bwybmmgvyzr1x0jjp")))

(define-public crate-solana-sdk-0.18.0-pre0 (c (n "solana-sdk") (v "0.18.0-pre0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.98") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.98") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.18.0-pre0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "18kg20cbr6jnzb6asjr3dci9lcvmaa8difmmwj4kr9yf3d0w0fby")))

(define-public crate-solana-sdk-0.18.0-pre1 (c (n "solana-sdk") (v "0.18.0-pre1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.98") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.98") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.18.0-pre1") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "0f03xndxmnb5cdx8mfysz8ijkrs83swkp1sqgmjgxpp8kljyjkgc")))

(define-public crate-solana-sdk-0.17.2 (c (n "solana-sdk") (v "0.17.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.97") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.17.2") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "16pri9499ds7prwqda7lz7k32pjc66nw6pl5man4qwz22m2rp6ny")))

(define-public crate-solana-sdk-0.18.0-pre2 (c (n "solana-sdk") (v "0.18.0-pre2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.18.0-pre2") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "086w7k3pvl1s5z7y28w5m2a1l23hd4brygmzrhvf9ks7q2iz9rjm")))

(define-public crate-solana-sdk-0.18.0 (c (n "solana-sdk") (v "0.18.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.18.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "1i2ddf642jrb3awyxk5v9hwrx38cx9r3r8bgxcisfmdz7rza1jv8")))

(define-public crate-solana-sdk-0.18.1 (c (n "solana-sdk") (v "0.18.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.2.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (d #t) (k 0)) (d (n "solana-logger") (r "^0.18.1") (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0)))) (h "1cd019w905ka5x0x38h3mavh3ii1gqvh80ny46hq1m8jhc87y8d5")))

(define-public crate-solana-sdk-0.19.1 (c (n "solana-sdk") (v "0.19.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1khs7yqx6j3vnb7678rqy46q2rc3rpzhqjvy8gfdz9qny8cg69dc") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.20.1 (c (n "solana-sdk") (v "0.20.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "02k6ivlaqh0v2jx0h98cm84kkvkym0gmmdnb8mg6qzrxhwv6c0n2") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.20.2 (c (n "solana-sdk") (v "0.20.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1srx0n2g44w71xbhdiynwil2imixs2dzk4qqrjb6ifn8mqnmwc4a") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.20.3 (c (n "solana-sdk") (v "0.20.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1cl2wg65iphpjzs1x0146xa8kmgdrdi3ap6gmrb7l95ivrpivhpj") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.20.4 (c (n "solana-sdk") (v "0.20.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "08lw4d2signfyshabngfvfy3mj006pa1v6a6pmln93hhxrnvbb14") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.20.5 (c (n "solana-sdk") (v "0.20.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.101") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "solana-ed25519-dalek") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1pr51jyb647hky5v4snq6ignp0i0jdjdxxvjsqzggyr4xd1qca2w") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "rayon" "serde_json" "solana-ed25519-dalek" "solana-logger" "untrusted" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.21.0 (c (n "solana-sdk") (v "0.21.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.102") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0inial1k52yq6crv5pqn9n1g52mb9ndf1ljfp9wkkghhkcpv0q62") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.0 (c (n "solana-sdk") (v "0.22.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0cy52r4a5x12ajr0zi9nn3lm9z7yhgxfn3ffms6nfbpd3yxp235d") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.1 (c (n "solana-sdk") (v "0.22.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "1z539cs2div5gdqx2wja2i1bzz37hyfrf1gf5wv54xhgjjqxnyk0") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.2 (c (n "solana-sdk") (v "0.22.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0azwa4nik3lg5pa96a4na5gvi4f3j2804p3iaj07z2p2qx3npch2") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.3 (c (n "solana-sdk") (v "0.22.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0c5nq4pb990dwqjma6af0yxjhd1mq9wnmls0676dzxb83agfx269") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.4 (c (n "solana-sdk") (v "0.22.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0m0fn1yj0ns40d3x94w0xy6wk17yhr8b0qz6inxplkay36yj6l20") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.0 (c (n "solana-sdk") (v "0.23.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "11phbqg1fanylj6y3wxihk3617vavxg0dz1xjbajpx3k1p7fhadn") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.5 (c (n "solana-sdk") (v "0.22.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "1am6pmbfw6ymmb7fnjif0x3bg7hl6fc4i86ykhbcazpd4rc4ivg6") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.6 (c (n "solana-sdk") (v "0.22.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0ynp9nj07jczccdb8i06nb1vsrjbzaq0x4rihnbbqn9rpjkffns2") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.1 (c (n "solana-sdk") (v "0.23.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1mfpgf2i2598k0rqh5wk8mpw6xm110xx8x80fjjddxqab3q90l08") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.2 (c (n "solana-sdk") (v "0.23.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.2") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.2") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0cxj7sc3gns43k59k63vn9flggzm5kv7zb3v7886gjgr4n22pnm8") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.7 (c (n "solana-sdk") (v "0.22.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "0h1r5k6y1kdpc6n0ms1axibbd6sdpba9ghx41zc8nbjsag981jrh") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.3 (c (n "solana-sdk") (v "0.23.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0g8ai7ycwb20wpv1ll465ldh4vb6a6rqx59yqa7kvxcjl82kvhwi") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.4 (c (n "solana-sdk") (v "0.23.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.4") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.4") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0iyxhfckw2g6iqlrqxzrsmlvwc5fj67ww9nz89sxh7xz5mx31spd") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.22.8 (c (n "solana-sdk") (v "0.22.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.22.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.22.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.22.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.6.2") (d #t) (k 2)))) (h "1nshmr4nzxwhlx98kmg83qhhxs2yh0pwqs3fxzspls83czk7cx6a") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.5 (c (n "solana-sdk") (v "0.23.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16jhyx00c9gi3r1j0nnmdnh9q1v1cwlhky7b0z3c3m0rwq5kpprp") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.6 (c (n "solana-sdk") (v "0.23.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0hvq1wd3y7bpzw3yhkcb8hhbjkgsn92cppjdx6ak5nvywi1gjyqa") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.0 (c (n "solana-sdk") (v "1.0.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1dmh46ril3vdiw7habdk8i8gbxdkk9qs5sj1ja2094a1qi7fm1aq") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.7 (c (n "solana-sdk") (v "0.23.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0342c9hhrfbqqyfignkcvxwh73g9xc1cmqhhx2by6zmqdjc8606l") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-0.23.8 (c (n "solana-sdk") (v "0.23.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^0.23.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^0.23.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^0.23.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "04k4f0ch5gaazg34kiki9xzga19h15891xv4wpxg15ji54gaisci") (f (quote (("program") ("default" "assert_matches" "byteorder" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.1 (c (n "solana-sdk") (v "1.0.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0ln0dcjn4j9z5bs2ga68ykxc2cv1ap1fcnrbz3jpnhf72gv4achv") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.2 (c (n "solana-sdk") (v "1.0.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0y4z7nm8kcr1xn2l3inj8aknsr43b51qlkc3xgyn5x008csqg8gk") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.3 (c (n "solana-sdk") (v "1.0.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0h46ld653lnqrxikg7x3l6wvz5h39llwch6ra65nn7ins4f51kn2") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.4 (c (n "solana-sdk") (v "1.0.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16hglp61vcvjpchwq5a4f6m9pwmhvfqi2411ccqpy8hqxvvzp733") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.5 (c (n "solana-sdk") (v "1.0.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0n3sjwvinl08m0yg7yzr0bka915m6vra7hm79pw1y5vx8h5z0byq") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.6 (c (n "solana-sdk") (v "1.0.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0al1v70d7ys1bswji5jxws5ygh16dg5m6sdhgjlycpqmslmwih8f") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.7 (c (n "solana-sdk") (v "1.0.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0g75xjgqfhlbaqcrilhvzsch5f8pdxjpkn78qn8xw083f8n3x1ii") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.8 (c (n "solana-sdk") (v "1.0.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1rr7w70ksbmhjcibra1r5wb59ksvh9x6zb7q8rn1sidz71zdjqcg") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.9 (c (n "solana-sdk") (v "1.0.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "19jgnnpp6mncnzhz58k0x221g831b0zf1wlkh8s8mxsc0snlmzrk") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.10 (c (n "solana-sdk") (v "1.0.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "12wcpxzc4xg8z0cl5xvpahpwnlf1amczyrhnmwm03n24yfwcn3r6") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.11 (c (n "solana-sdk") (v "1.0.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1z38axi28w1mvmhgh9zx6ax2zplbmlv3gljblnbppb07q4xpgr2n") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.12 (c (n "solana-sdk") (v "1.0.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.12") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.12") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1mybgj6qb94lk2fvwqkc1gys7sggf631qc08d2z7cgl5970vqj0s") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.0 (c (n "solana-sdk") (v "1.1.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07h7xjv8i5x27lf60ac6fk2pgspv60r89nadi6srz6d1vpjy3iqb") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.1 (c (n "solana-sdk") (v "1.1.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1r5qhywx2ms0w8jrwmxapwfw9zkgqj4dl97hwg7r7w4xhibkcd6q") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.13 (c (n "solana-sdk") (v "1.0.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "08zpwr3gm7hwlgkj7z87hhgch7h0icxh6g0hv8ylg05ci8q69qyl") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.2 (c (n "solana-sdk") (v "1.1.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "14hjycs61s14r1c97s6falf20ifwvf2s92slkrqy9lg6695304lr") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.14 (c (n "solana-sdk") (v "1.0.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "09clnz7zb2cb1jykr40nqm3bs3sldfvxkajx02k9gv4gnjgnd03g") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.15 (c (n "solana-sdk") (v "1.0.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.15") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.15") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0giybgbyk7dz25lhajf7d92rx77f3p8ig8ix17sfwgfnz9rl8c0z") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.16 (c (n "solana-sdk") (v "1.0.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.16") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.16") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1bzgiljlqy0fqhf6x51a0f2zmyp7m3fnyj9zv8s9qbxq749qfa84") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.3 (c (n "solana-sdk") (v "1.1.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0zqv502jxcykac5jir1b9s112bk2nk6fjd1vjg73qsv7q3jyyqr5") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.17 (c (n "solana-sdk") (v "1.0.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1ixq43fwgqmwslgcazbmq24ac6qxhmxjjz2s8bzxra307l441ld2") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.18 (c (n "solana-sdk") (v "1.0.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.18") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.18") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0my9wl3sfpfxv8di0rmx2hmkj5j6ybn8wc203si0rx2595ynhc48") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.5 (c (n "solana-sdk") (v "1.1.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "11k42d2n1xqp0h0sjipmz98v8fz5g6sjhwjsxg2pz47g7v35k5gg") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.6 (c (n "solana-sdk") (v "1.1.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0daa66pywc9cdl9yga3gadhkgpkj6nfak7lh93vrm03vbr76gi6l") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.7 (c (n "solana-sdk") (v "1.1.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16dqkq0c7y2v1armp14q1ifrbpfkjk3kibkly0yf5laz1hns5ar0") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.20 (c (n "solana-sdk") (v "1.0.20") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "04mz3crvzy5iwp6vwkxh2fyb5klfar48bnkb4ir1i9vh45wkazyd") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.21 (c (n "solana-sdk") (v "1.0.21") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1y7c1454jb0yfwwsh2jy3ah5d9pp1kzcz84bgg9yh8m6xc3ghimw") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.8 (c (n "solana-sdk") (v "1.1.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07jw2h3ifmqg9jgk16n2m5gf5dq0k5vqk92zckgp17glczj6197f") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.9 (c (n "solana-sdk") (v "1.1.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.9") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.9") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "03c8z5dnzjy3hwqg10qv0phsgmdrqzmp7c18rz6d49mjp7zp612f") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.10 (c (n "solana-sdk") (v "1.1.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.10") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.10") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1cy5dprdvkp10z0fq3w82d90blh1x1zc4p07q4hspj0zzwlbmvmp") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.11 (c (n "solana-sdk") (v "1.1.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.11") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.11") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07mqdqf7z6w7ayyn3pkf8ccmps7fkbmnhrd7hr41dw7j78rhs4al") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.12 (c (n "solana-sdk") (v "1.1.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.12") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.12") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "18jwcy0si3g1dg0qvfr8m20q47ncx75ihd7ppmwjy7j89rddh3w6") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.13 (c (n "solana-sdk") (v "1.1.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.13") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.13") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1zyrar6g01g9z60z5wxzpdk0ijg97sjaidh9rinpmwna90gzjhs8") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.23 (c (n "solana-sdk") (v "1.0.23") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.23") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.23") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "11wwvd44hwsalnfr64h7z87xpr5a872j50n6abz7bp69qpc37nx7") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.0.24 (c (n "solana-sdk") (v "1.0.24") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1c5nyixlyhmcvs06srqij4qixlrjbwnjbz99l0maxccpbdlqh5h1") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.0 (c (n "solana-sdk") (v "1.2.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1mlz9b9kkq0sx6p52drlad4y4a2761ry3wlxf7alm1f6g4by4k3b") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.15 (c (n "solana-sdk") (v "1.1.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.15") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.15") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1pf9a7fnh8jyiiq7f57xr4bp507s590r3nlpx983zqqmdbjlzl3q") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.17 (c (n "solana-sdk") (v "1.1.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.17") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.17") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0mwl7igbxzfp418bp323c2w567hfcl38gxk416kmgkjrkqyq304m") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.1 (c (n "solana-sdk") (v "1.2.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0gsp3qgr20lgnrkrvhfgfjzbcknsz7fgxm4rfk5p5bcj8f0shr39") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.18 (c (n "solana-sdk") (v "1.1.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.18") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.18") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0yivk51zn3qx66h7xsgkxip5y4c2qy7jahdgczbwnjsg386zba1n") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.3 (c (n "solana-sdk") (v "1.2.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "13w02w9xavx1czzh6wa2wgdkj8gv41yz13w65qswp8bk2ik9wffq") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.4 (c (n "solana-sdk") (v "1.2.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.4") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.4") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1m5g91j3w9vmjh8c5wclm50qi3crvhhwrxwn7vgq62qfa3x2idhl") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.19 (c (n "solana-sdk") (v "1.1.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.19") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.19") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1mgj8plmqjcvm7dxja2basiphaxn8b2q244dj84zqnlyiw96ar62") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.5 (c (n "solana-sdk") (v "1.2.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0lgzk74fi89xy1z7j8xgchsy7pbd0gsmwpv8j2cpba5kz9rjcpa5") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.6 (c (n "solana-sdk") (v "1.2.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1im76y8qczpqz2mwdld2inbv3pwn4x4449yvigfjnvl5fxvl37qv") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.7 (c (n "solana-sdk") (v "1.2.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0sarllr3v1lgg48xrr9spb0zqqky4664y31l4k659bjsfmiis9x7") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.8 (c (n "solana-sdk") (v "1.2.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0db1ngdcqaap1n0gi5rlqjfa04asz9zhjkhqgsbhsp2dv9gzrmi6") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.9 (c (n "solana-sdk") (v "1.2.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.9") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.9") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0y1fj1vxbc3xqrsbsrbv1ys3lnz4i3666vgrzdqjrc23cqwxg1k2") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.10 (c (n "solana-sdk") (v "1.2.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.10") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.10") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0zqmz2vs7xcd69yf6dj6wx3zs5mrrjkndihzp46zq42dg2jd8s9q") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.20 (c (n "solana-sdk") (v "1.1.20") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.20") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.20") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1iba2xz577bzp3m0wy534rpr55f3wpv6y1zlablz0ws6qp2hcnz3") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.12 (c (n "solana-sdk") (v "1.2.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.12") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.12") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0ylpgaddh01awbwvhrxj37rxzd2x7nj9wlvsz9l97lyiysdq18yn") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.13 (c (n "solana-sdk") (v "1.2.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.13") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.13") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1p5k04ss6yqb77s382cc6z9rvnndbk66wrfzj7zf5jzi2bwpkrya") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.14 (c (n "solana-sdk") (v "1.2.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.14") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.14") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1pl2fpm1lzq82mp6wc2rrwk89ywxhk9fv5ss1w0w8f45vdr4qnby") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.1.23 (c (n "solana-sdk") (v "1.1.23") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (f (quote ("serde" "more_lengths"))) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.1.23") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.1.23") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.1.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "10vxampjfrxwzr5cs336lv4pspwa3kq9dmp26kmprxl3qavdfhw7") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.15 (c (n "solana-sdk") (v "1.2.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.15") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.15") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1l0slbglfn6y67ihgwdd9gxf9sqjhs04313b67gh612z2rnm81ik") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.16 (c (n "solana-sdk") (v "1.2.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.16") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.16") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07mcnlmy2ksw5301iijrqz4f4h49glxsblmnaqsirb4dsksnqpi3") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.17 (c (n "solana-sdk") (v "1.2.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.17") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.17") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07lqbcpw050hpi68d4hnka5flqvmy893k4vvyh7pd6v0assc2mm5") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.18 (c (n "solana-sdk") (v "1.2.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.18") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.18") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0sdrxsga068p4lblik4ll16j1fqff675bxjhbyf2k0nx6n4m6psk") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.19 (c (n "solana-sdk") (v "1.2.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.19") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.19") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1a5kyc69adhjk9g3wslr6wf5679ngagzzbj3qvwh9j3azsgck2s1") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.20 (c (n "solana-sdk") (v "1.2.20") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.20") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.20") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1gf9sfqw7ihy9rfmzyixd7bd9iy20ic908qfkpbjghv39yhfcph3") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.0 (c (n "solana-sdk") (v "1.3.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.0") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "09fz4mplyhcl27b9npjpaksjqqzjvc91zajpyyyrz9ig0jl31ixg") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.1 (c (n "solana-sdk") (v "1.3.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.1") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "15hd5n2dyml2dqpnxgk7qbrmj7r7kkzmqllv50msqdrl0vccy0jm") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.21 (c (n "solana-sdk") (v "1.2.21") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.21") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.21") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "01gyv966rihs7hcil2d5vpch6kg5rldbrl7ra9ccj56yv1z3wfyl") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.22 (c (n "solana-sdk") (v "1.2.22") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.22") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.22") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "04y74hvaa94kaf5djs3k7n2bi3fdnv89ikig4pyw66zlzka5jhlm") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.2 (c (n "solana-sdk") (v "1.3.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.2") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0nwyq25h4znjqd3blgc929y8j328an8mlwcl45klajxxbw7i2phh") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.23 (c (n "solana-sdk") (v "1.2.23") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.23") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.23") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0yylqga21g35i4hf944afl30xmzm57bx02q5rn7jr2yww5kddcyc") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.3 (c (n "solana-sdk") (v "1.3.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.3") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "17c0dv3b0x6drjrk3s4kfyig6xfw5xgg8dsfrs2qr3rprybvfvyr") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.24 (c (n "solana-sdk") (v "1.2.24") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.24") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.24") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0lpl86k7ml8n73sc47w7d2xjfq0603r5qkj1bmlf715jr1pv144q") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.25 (c (n "solana-sdk") (v "1.2.25") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.25") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.25") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0gf26gvizx5y1ziy2s3k1wfl3svr4yxxrlgbqifr6x3m8lxflcg9") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.4 (c (n "solana-sdk") (v "1.3.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.4") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16vv84bs6412l69f22681aghjz664pqfzxgv5nxngv130sy13jhm") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.26 (c (n "solana-sdk") (v "1.2.26") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.26") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.26") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "07f4q8l42mj03irydlyj0fx2w2djdpdk0nsv26zjha9ch6lvvqr0") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.5 (c (n "solana-sdk") (v "1.3.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.5") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0s3yba7nad06ldj3h52grzy75wilpnixq2d120v0pvbd99dnkmqc") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.6 (c (n "solana-sdk") (v "1.3.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.6") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.6") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.6") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0z2909c6g1v5kvsbydis2v4dd8x7rz3xh620w7cy0zdgdjdlvcm6") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.7 (c (n "solana-sdk") (v "1.3.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.7") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.7") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.7") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1g2sqzgcn1yysbvfxyff67xdfcgq2ny8v8adwwnqyqs6nf43aspc") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.27 (c (n "solana-sdk") (v "1.2.27") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.27") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.27") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0nz043ikgyrg36zhjri4dmqjczj8ngx2fwfanrx65izxpbihbd0v") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.8 (c (n "solana-sdk") (v "1.3.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.8") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.8") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.8") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1pdiks8kfm5v3wga0qagwj4bwq528y882m57h3827n3mdzl4gj5m") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.28 (c (n "solana-sdk") (v "1.2.28") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.28") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.28") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0l7nv28nwkqazyrj949hzf3prn357qdv80l806y2vw2xvpwm4bnx") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.9 (c (n "solana-sdk") (v "1.3.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.9") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.9") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.9") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0idah25whzpdxcpj3z5r6df3lv23frw9ixxks41x9rfrz8wzp6pz") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.10 (c (n "solana-sdk") (v "1.3.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.10") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.10") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.10") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0agnakkz49yr5sl1pnmiimms9r4gqc7yizk9sg6p5s0lx3cyfvqr") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.11 (c (n "solana-sdk") (v "1.3.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.11") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.11") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.11") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0rssvq8lwlpa1s2qil5k687xk1f3zl1yzv3p5d98mqyl9idgx7mj") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.29 (c (n "solana-sdk") (v "1.2.29") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.29") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.29") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "08qd9zph54qwqfdyj3rlxdldaa3khw83niak71y71vssrds80qwx") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.12 (c (n "solana-sdk") (v "1.3.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.12") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.12") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.12") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1y8xp2w4x2v1qjx4drx3wjzbgpivxnpdmy3zm7rb4gpllacif70r") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.13 (c (n "solana-sdk") (v "1.3.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.13") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.13") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.13") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1839x0divznm28y2x1mgv2hfzn748hpb58n4wwymswqp71fzhjmf") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.2.30 (c (n "solana-sdk") (v "1.2.30") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.30") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.30") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0s6mvypbykpnlg20a6fk82s87zw8s0kd6v95igjp9570dbgckkhn") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.14 (c (n "solana-sdk") (v "1.3.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.14") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.14") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.14") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0sjy3ldlwpsfabpz6jw946zynlsjrvbr9hg6c9jk7djwcprsfhda") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.2.31 (c (n "solana-sdk") (v "1.2.31") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.31") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.31") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.31") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1p5rj3m9hcs15j147yfppfkp7p42zza77r9bcx92a4p5cjwblyrx") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.2.32 (c (n "solana-sdk") (v "1.2.32") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.2.32") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.2.32") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.2.32") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "09p4fs67vbqx2j2ybpifixh7ilijzdlzb87j7wp1scablvkqss14") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features"))))))

(define-public crate-solana-sdk-1.3.17 (c (n "solana-sdk") (v "1.3.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.17") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.17") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.17") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "019dbqripcnn35g00wfk3sx1qyw3lncww2yadvpsi1w5z7qa2kd4") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.0 (c (n "solana-sdk") (v "1.4.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.0") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0yhgb8n3aa9qk1i7mbc00r55q788vcqbpifywivlw7jb4n2y7sh0") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.1 (c (n "solana-sdk") (v "1.4.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.1") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "03dspfr5v1vjnk3amz66j534w9aqg1rv73jy13kzd7xcvb6451vf") (f (quote (("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.3.18 (c (n "solana-sdk") (v "1.3.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.18") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.18") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.18") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "05j52gas9j16b2jbdmb7aw3nqbgk1qcx0m72pwni0dxh4laz5f1x") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.3.19 (c (n "solana-sdk") (v "1.3.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.19") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.19") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.19") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1zrmpq6qq5ra33v2nhbc71zg4mr7jx42l0c917jaiywqwkvj1v1m") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.3 (c (n "solana-sdk") (v "1.4.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.3") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "15pzg81rc2l1fwvbyijh3fi65dd58m1b3ca6f7nw6bgcsbym2rq9") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.4 (c (n "solana-sdk") (v "1.4.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.4") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "19hjvrnfdcap2iiq2mipqqacrz97ixmsvbir4va8gq263c0qpfgi") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.5 (c (n "solana-sdk") (v "1.4.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.5") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.5") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "10yimd5k84ychd2lq66n78fxxf7l2v6kkyjghs8cg22mjaa7q4qb") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.6 (c (n "solana-sdk") (v "1.4.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.6") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0q1y5s83ixyvb2i7djwh867v90mwvhj1v9dq2vzzrrv2l9da68dh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.3.20 (c (n "solana-sdk") (v "1.3.20") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.20") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.20") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.20") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0z09cr5967prgn6n71xcf5sza1a0z25imbpqznkjh4w1aa72b1ms") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.7 (c (n "solana-sdk") (v "1.4.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.7") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.7") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "02f40g7z5mywznpmhn43fd8lg82yv43qvdbx3yraicy80ljx12hx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.3.21 (c (n "solana-sdk") (v "1.3.21") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.21") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.21") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.21") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1cza6hkpx2q6j4lkr2xvf554rdr15lvajifn4i0ap6hi46rm2psn") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.8 (c (n "solana-sdk") (v "1.4.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.8") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.8") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0i2kvq7xjc2f4in4knylr5idjh50r959p1hak85qcmm13hizr569") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.9 (c (n "solana-sdk") (v "1.4.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.9") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.9") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0qb0ynx3wg3iq6vyngwcmc6m0s52vb5mwynp9kaaszaijgm5hmhl") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.10 (c (n "solana-sdk") (v "1.4.10") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.4, <2.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (k 2)) (d (n "digest") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.14.3, <0.15.0") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "hmac") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libsecp256k1") (r ">=0.3.5, <0.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "memmap") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r ">=0.3.0, <0.4.0") (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r ">=0.2.2, <0.3.0") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r ">=1.4.10, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.10, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.10, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tiny-bip39") (r ">=0.7.0, <0.8.0") (d #t) (k 2)))) (h "0xjg7vk5fj0jbl9w1dlw2n0x1sva1p83mssbq2sw3k5fbqzqwadi") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.11 (c (n "solana-sdk") (v "1.4.11") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.4, <2.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (k 2)) (d (n "digest") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.14.3, <0.15.0") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "hmac") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libsecp256k1") (r ">=0.3.5, <0.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "memmap") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r ">=0.3.0, <0.4.0") (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r ">=0.2.2, <0.3.0") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r ">=1.4.11, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.11, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.11, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tiny-bip39") (r ">=0.7.0, <0.8.0") (d #t) (k 2)))) (h "1fgjcfy3344f4m1l39bg2j7n32lhp2lyfpsk8fhbmv5axwpfj696") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.12 (c (n "solana-sdk") (v "1.4.12") (d (list (d (n "assert_matches") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bs58") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "bv") (r ">=0.11.1, <0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.4, <2.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=2.1.0, <3.0.0") (d #t) (k 2)) (d (n "digest") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r ">=0.14.3, <0.15.0") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r ">=0.4.2, <0.5.0") (d #t) (k 0)) (d (n "hmac") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libsecp256k1") (r ">=0.3.5, <0.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "memmap") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r ">=0.3.0, <0.4.0") (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r ">=0.2.2, <0.3.0") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r ">=0.2.0, <0.3.0") (d #t) (k 1)) (d (n "rustversion") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.112, <2.0.0") (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.103, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.56, <2.0.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r ">=0.8.2, <0.9.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r ">=1.4.12, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "solana-logger") (r ">=1.4.12, <2.0.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r ">=1.4.12, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tiny-bip39") (r ">=0.7.0, <0.8.0") (d #t) (k 2)))) (h "02ysl3sya1dkqzdh2ms7dm18xq5q3r1mwpn98xjgrdj6amb5dd2p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.3.23 (c (n "solana-sdk") (v "1.3.23") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.3.23") (o #t) (d #t) (k 0)) (d (n "solana-logger") (r "^1.3.23") (o #t) (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.3.23") (d #t) (k 0)) (d (n "solana-sdk-macro-frozen-abi") (r "^1.3.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1sr812m03fxf1dflfalk81i5mq9axz6zns433wg006g60n0hjav3") (f (quote (("skip-no-mangle") ("program") ("default" "assert_matches" "byteorder" "chrono" "curve25519-dalek" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest"))))))

(define-public crate-solana-sdk-1.4.13 (c (n "solana-sdk") (v "1.4.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.13") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.13") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0lxiv8mg2nai60640j8cfz8ab03na1bsfdwkyq4cn0jph7906a1l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.14 (c (n "solana-sdk") (v "1.4.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.14") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.14") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0rjgl5nj80dvlzrml2ss3hqqwh5i98dmckbarmq20hh1sl18mhw5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.15 (c (n "solana-sdk") (v "1.4.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.15") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.15") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "142l5fiqmwz5wmb8avnxqhdfkq9ci0gfgfsj6mpsgbj892gn7rn3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.16 (c (n "solana-sdk") (v "1.4.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.16") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.16") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0ih1yqwfx6annsglka5hz8zq7c60s3qy4jmfv7b2n1nslc5amp9c") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.17 (c (n "solana-sdk") (v "1.4.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.17") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.17") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "00fr0rxh69ql5dc2qxnk00w3wh6zpfq6kqzalxi1lwc10d9hiq8l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.0 (c (n "solana-sdk") (v "1.5.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.0") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "18lgn2jkhk8npzprc2zx38xi591nflj7spbnav259knddbx72xz3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.18 (c (n "solana-sdk") (v "1.4.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.18") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.18") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1bnplk2kfb8vpcf8y1wlcqbrkbmwr3qwr2bgd5n9fqmk73c60pym") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.19 (c (n "solana-sdk") (v "1.4.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.19") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.19") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "001jnfc0i54pg02ks883a6pigr4j5kgj8ghfd09fh8w8r7x39sri") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.1 (c (n "solana-sdk") (v "1.5.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.1") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1fy1zag2d4qkvcfn3bd46hvmn8blvkpx33jkx97ibfgxyk7aj3r8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.21 (c (n "solana-sdk") (v "1.4.21") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.21") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.21") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1r3xykg02d38pwmd3nlyxdr5kff0gl11b4mjwr6q7pk5ib30fz0y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.22 (c (n "solana-sdk") (v "1.4.22") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.22") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.22") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "153vah79wi3cwp39d1ic3asdx9n72rz9495dxj91vcsr8dymhk0k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.2 (c (n "solana-sdk") (v "1.5.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.2") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0dl5vp7mj518vbjas1l2a6br0k7rz9864p69911igxzvh7pphy0h") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.23 (c (n "solana-sdk") (v "1.4.23") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.23") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.23") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0sg88c57qryg0vlylgkbw7s1szfg3xxl3w4p8smz8bms0rsz0xas") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.3 (c (n "solana-sdk") (v "1.5.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.3") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "03111s9pywlpy0qnyygzig3gj3jpnvd97zf2phphfksy6kficyx1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.4 (c (n "solana-sdk") (v "1.5.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.4") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1rbkfsv60gqn1mm90jpn91qrzwm3a6zwk2if126nihc1dq3f1d0f") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.5 (c (n "solana-sdk") (v "1.5.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.5") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "12kxngfi5c1npmkq8kffsnqx3bdsldma60a9h7kbb6cz2bdnp4bn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.25 (c (n "solana-sdk") (v "1.4.25") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.25") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.25") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "04g0bixjsv37hl66svm6lgmych36lajdfc1a09k7ny1cxd5yfaa4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.26 (c (n "solana-sdk") (v "1.4.26") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.26") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.26") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "084a5g0l7yc8wywwfwndlwyknavxi7hvzxrds3pgdz8955ldcfyv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.6 (c (n "solana-sdk") (v "1.5.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.6") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1i73ii5rlx7mbi5hng6j197gw9a6c3hlzh1c2kdkb0k8w1xfc0mv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.27 (c (n "solana-sdk") (v "1.4.27") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.27") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.27") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1srfq7k5rpkwb1d9lpz91lqlgp712fw1fdb4lsdjxwyswi6fapap") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.7 (c (n "solana-sdk") (v "1.5.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.7") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.7") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0ag6ams2299kfknd1w3fy7s4qf461i2ypxyg286k76m4yrp3mjzz") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.8 (c (n "solana-sdk") (v "1.5.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.8") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.8") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0nj5p18sh18w8bsm37i4iq2w0ikmhh1ykx3wncyv1266p55gm5vm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.4.28 (c (n "solana-sdk") (v "1.4.28") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.4.28") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.4.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.4.28") (d #t) (k 0)) (d (n "solana-logger") (r "^1.4.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.4.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.4.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16w4sg5mnf2sni7nyrl54hka6b93kmcfh8ia3kskd60vb4cm66ag") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.9 (c (n "solana-sdk") (v "1.5.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.9") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.9") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0da51qd4rw9zcfv3bb1zzig8c9m6w6d1kxxwrlqy5sb7j0apf372") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-solana-sdk-1.5.10 (c (n "solana-sdk") (v "1.5.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.10") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.10") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "01gcj45sddc8rsqdh603gbz9vya7dhxz62rran3hf51m64shja8m") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.11 (c (n "solana-sdk") (v "1.5.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.11") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.11") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1ds2y261v8qwjjs7qlv7inwhn0jc06gsvvpwmxi8nzm1s538c3j0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.12 (c (n "solana-sdk") (v "1.5.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.12") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.12") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0ssbpjrn7i0lbgg48745386kqd9ll2fw5lpb8qniyx0wnxkvsv6k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.13 (c (n "solana-sdk") (v "1.5.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.13") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.13") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0c6pga3sn8h91nkcrf7x7yv40ikgfhw0wblv3dj414nrn2imgmjw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.14 (c (n "solana-sdk") (v "1.5.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.5.14") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.5.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.5.14") (d #t) (k 0)) (d (n "solana-logger") (r "^1.5.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.5.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.5.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1gyb1mhj5s6g7wqw9mwppf3rzx7b7fp74ygd27q6c7wy8fa5hma4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.0 (c (n "solana-sdk") (v "1.6.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "^1.6.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "^1.6.0") (d #t) (k 0)) (d (n "solana-logger") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "^1.6.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1knalhyb0bhn25mf0fi6mj3vhy5p7gkk6vyfx63m4fd2a0xdrcfd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-solana-sdk-1.5.15 (c (n "solana-sdk") (v "1.5.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.5.15") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.5.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.5.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "15rhcvrbyb0axrj309ql628i1p72fc0qhmlxl110bchn0niisfm1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.1 (c (n "solana-sdk") (v "1.6.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1cgq6h60dk5zxl3cws2kw0md93vgmvj98rgh3qfbmgnmshcpavw1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.16 (c (n "solana-sdk") (v "1.5.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.5.16") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.5.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.5.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1659n1xzjsz6k55xrqhwp86md11bmy431immsfy6fd8pxrbakmj0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.17 (c (n "solana-sdk") (v "1.5.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.5.17") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.5.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.5.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "05pbjrpqg2n5xgmgi06hw3j0ra38lzpwzap1hxg4m9rh4cd6vjww") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.2 (c (n "solana-sdk") (v "1.6.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.2") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "1xvkd7big3n4yr8gfsj63z2z5ln3bhfhs2zcgphzbh9rmws2h0pv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.3 (c (n "solana-sdk") (v "1.6.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.3") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "00m7dacx45znb29xmb4anx25mkrjyp8xrcmxchjb29xjq46g54n1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.4 (c (n "solana-sdk") (v "1.6.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0dyfs2zbf0rv8fwpdn4vv9qxdv540vzikq50zxz51820jm93h3g0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.5 (c (n "solana-sdk") (v "1.6.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.5") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0qcbgpl9j6dl5wamfyqhwl92b8h0zy8r6sjrqk6q1azaa5a4i659") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.6 (c (n "solana-sdk") (v "1.6.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.6") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "0m1vigjvwnxld35pnrw7lyawk0hip4yxqk29nx24wl4hvv9623r8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.5.19 (c (n "solana-sdk") (v "1.5.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.5.19") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.5.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.5.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.5.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.5.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.5.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)))) (h "16sbsygfr3il9l8qqw9nsksg964n8sk3fmilxjx9y0x83f998s5a") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.7 (c (n "solana-sdk") (v "1.6.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.7") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0p6nlyz1d95614vjpvax45bjs8xwqp7k87wygxf0w465ald0kz1y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.8 (c (n "solana-sdk") (v "1.6.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.8") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1ljz0k6xz040zk0v3yj2l6rap0hbp4ry6ps0h0bf43h7148ak97b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.9 (c (n "solana-sdk") (v "1.6.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.9") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1l53lai6s3xajfcdh3x381z7mjqj8pr8999xm6mfaf08k8y6blmb") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.10 (c (n "solana-sdk") (v "1.6.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.10") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1q6mqq1x04728lsarwfcmqlqdhim99jldmgn1sy28bxg9sryrpsx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.11 (c (n "solana-sdk") (v "1.6.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.11") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0ipmil5jg6vj5d9c5p9xgl29lnnbqvzk5ff50bs5lv8k4gyqp5qa") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.0 (c (n "solana-sdk") (v "1.7.0") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "04lk7d67n55nqgnlhmbbixxvhhsm9x16yj7bxcyw6pj9i6c6a8s2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.1 (c (n "solana-sdk") (v "1.7.1") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "03219smip03xm8qdpwbldkdw2lff2vkg4l0sdw8lhx1ja9j0vj7s") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.12 (c (n "solana-sdk") (v "1.6.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.12") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0ivb1qvy1alqk1xd7b950gq56x64g86ynry2a1spvj58chmsp1wr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.13 (c (n "solana-sdk") (v "1.6.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.13") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0z7zyswag0wxmr4qqq3p4x2l3y0pz1ppvlyf18zp2d0lp2rvmrky") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.2 (c (n "solana-sdk") (v "1.7.2") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.2") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "16j94jv0s6r2j7kgzms4a32bl8l2wkzwra3xlayi3h91slp0nk6b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.14 (c (n "solana-sdk") (v "1.6.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.14") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "16n6ggn6837l1lcx4h3wd5pp9pd82x7p7xayyasfg63kz1xqgsvl") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.3 (c (n "solana-sdk") (v "1.7.3") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.3") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1gc78hlns596fydp3pybaz7sd7niyv47imnj0mgjzbipsjlw371k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.15 (c (n "solana-sdk") (v "1.6.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.15") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1aabh0i4nhifxnkqlarqzk55l7pbq21r6izp6rf2sv18ngmcbxiw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.4 (c (n "solana-sdk") (v "1.7.4") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0fqic3mwslgqbgq280dp6w7b4kc9511qb9kvxh0is2gw23h7cm04") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.16 (c (n "solana-sdk") (v "1.6.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.16") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1nnq263kxrhysyp5wr7d2zdbnaik04z3mj0v7aipwxq4cwdbvy9w") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.17 (c (n "solana-sdk") (v "1.6.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.17") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1g02sp38l9z34i5xa9qh44gz1hg0wz0q54nak2vkh9ffpskiihld") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.5 (c (n "solana-sdk") (v "1.7.5") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.5") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0mlnykgs2xqhpvnp01l8sk335nhmx627dhjmqbbwaph58hin81q3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.6 (c (n "solana-sdk") (v "1.7.6") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.6") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "05bl16fvpcgf4y985n84w09kfhlh75vdrqlw50jw71nbzippscy1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.18 (c (n "solana-sdk") (v "1.6.18") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.18") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0865rhbdg2xiww676q10n8s3i3hkf6nrbdvhdcrmkv2pq3yixpi6") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.19 (c (n "solana-sdk") (v "1.6.19") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.19") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0plb6nljib6s863p47ckinc2m1ld26fx9ss39wm2vdqjfy47xzvl") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.7 (c (n "solana-sdk") (v "1.7.7") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.7") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "18fyi5lwixq177891wapy84d957qrysc3sds1m7qlb8hgzk9y0xf") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.8 (c (n "solana-sdk") (v "1.7.8") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.8") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "19c6ab338gfn3s8idf1j3hlx1a8d69iyvhnc5g59sqpkzm3d6j00") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.20 (c (n "solana-sdk") (v "1.6.20") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.20") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0lbawbfxcxh3x2gxls97mpyhlq7q4lmw6z1rwd3jsnihjd29bpam") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.9 (c (n "solana-sdk") (v "1.7.9") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.9") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "031qc2kjzy8yp02rnd2jncig103ws6rprshdm59zx2xjjnlqz3i5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.10 (c (n "solana-sdk") (v "1.7.10") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.10") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "11njq2cn14hw0j7b5551q88ybk7ag2nb733ll9a335h0mfd90xal") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.21 (c (n "solana-sdk") (v "1.6.21") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.21") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "12lbrxbalykqclia60gk3xdb2pfbgy7drqpvypdn30pl7yb3idnb") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.11 (c (n "solana-sdk") (v "1.7.11") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.11") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0li0b3f20kvfahrksnbk4i1hknd5a97arfrvdz462nvwv33rn5wm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.22 (c (n "solana-sdk") (v "1.6.22") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.22") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1288n3b5l6x2kfk50hal5d0bypjzmw08ccw3bwi6g43gfksx9mqn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.24 (c (n "solana-sdk") (v "1.6.24") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.24") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1qd84n2czpbvxlba2gwdsgbd0snphirk80383vqd3lis89q54agi") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.25 (c (n "solana-sdk") (v "1.6.25") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.25") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0m7494h58mzlyjw73wlxh3l0083a6ygra9cl9pfz79xwk568pfyv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.12 (c (n "solana-sdk") (v "1.7.12") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.12") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1yis2cq02p7iwirs1dbi9m3mc67pfpww9rn9lpmm4a90i66scwwp") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.26 (c (n "solana-sdk") (v "1.6.26") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.26") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.7.0") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0z9qndzqg2hfis2x1h9snh1dqicsswl3hmyp84n19vxi642333w1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.27 (c (n "solana-sdk") (v "1.6.27") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.27") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0i2v0x9qxfxfb4idqhwfnk01v80hmn73gb4ns65zrhmlb48hxxjd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.13 (c (n "solana-sdk") (v "1.7.13") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.13") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "03yfqfr2d8vx67samr5g7i1csk4mzqnwpnbdm742n9scmcrdr6hh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.14 (c (n "solana-sdk") (v "1.7.14") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.14") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0c035malch963dphkhcsdlm598pdvb981y7dr3ifxcaj27jz8jpr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.0 (c (n "solana-sdk") (v "1.8.0") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1g8z98d8kairmv4lxfr88kmy6wcd8k2w06bh4fhqkjbrzyq7wgdk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.6.28 (c (n "solana-sdk") (v "1.6.28") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.6.28") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.6.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.6.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1nvvvjs4fr0i438kyhiyn0sy5gin7vv6bm92hkzk42iq0gk2sxj7") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.15 (c (n "solana-sdk") (v "1.7.15") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.15") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0bvvpkmxy33c67krz0x7ax893dz85d2iby9l92my4125sm7smn5l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.1 (c (n "solana-sdk") (v "1.8.1") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "064bcwg0a7cycspgkxhlycmxwxx67cxia4fq9pq4mbp54byiy0gj") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.16 (c (n "solana-sdk") (v "1.7.16") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.16") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "05xyr1kq3y827nfa0rvda031sg98ajzpj8qp2xpnwxhis5s84a8h") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.7.17 (c (n "solana-sdk") (v "1.7.17") (d (list (d (n "assert_matches") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.7.17") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.7.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.7.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.7.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0xvwy5sq642n3pww9jnhqxyd4l1bl45dp9my423q0znyjn139f0k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.2 (c (n "solana-sdk") (v "1.8.2") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.2") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1rqbc6z9c6jmzkzabb2g2xhzwkvqbp8h2zav4wn7zalajz29p60g") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.3 (c (n "solana-sdk") (v "1.8.3") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.3") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0vc0yzg3wjimfzi39fw7dja5zfz04p8p45dcyd3cn28yki22xvr4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.4 (c (n "solana-sdk") (v "1.8.4") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "0ahdrfnmqjfycg5knfk85p59hw211h6sk9rgh9avm0pi83xfp7zm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.5 (c (n "solana-sdk") (v "1.8.5") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.5") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1wjr1dm0r43qsfn6wm2fd4qgg3f4jbw3qmf4kg03x7m2zwwrrz9m") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.6 (c (n "solana-sdk") (v "1.8.6") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.6") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "02n53xqlxiy7spav2a47csfbk3zxw2xmw8yhymxb9jlj2bgc735l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.7 (c (n "solana-sdk") (v "1.8.7") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.7") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1adbvsfs0wfbk1j6xqqi3a02yrc7w4c7pl849wzirfx8n7fn0s0c") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.8 (c (n "solana-sdk") (v "1.8.8") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.8") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "17nqxmyf75lysixd0518hfaclgmz46v08pf309w0w9rbwzdqs78j") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.9 (c (n "solana-sdk") (v "1.8.9") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.9") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "12ksn3xj8mrmx0gwxwh66sihpnd27pfdq2dk272b5kfvci5db36k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.0 (c (n "solana-sdk") (v "1.9.0") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1a6xiqwim55w32r2yjhyhisgwqifi377f7s6askdjih2nymmwj07") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.10 (c (n "solana-sdk") (v "1.8.10") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.10") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1hzaalwxr31inair098whds0n1xxrj13vacw1pj6mrqnwf0347gr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.11 (c (n "solana-sdk") (v "1.8.11") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.11") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1zp7z6wb1wwf3i324zagy79lv6fxm6mq631yziy9r2n9iyrkcfg3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.1 (c (n "solana-sdk") (v "1.9.1") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ix9j3cq6j977g3g4ma7n9psykjijaxhza5rflk0sfwzwvrndvwh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.2 (c (n "solana-sdk") (v "1.9.2") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0pna0akrrg4nk8xss430yjzhdwn50nvc8wgvj6zhv2kss1wj6nql") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.3 (c (n "solana-sdk") (v "1.9.3") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "10dy9ipfsf0hp3lbbfxsn424ak3zin2drwxy5yzy3vlg53lfsmp9") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.12 (c (n "solana-sdk") (v "1.8.12") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.12") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "06ryi9m8n5wrpkxmanzqrv2wp862x4k84p1hx9nkz3n978zjj4l4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.4 (c (n "solana-sdk") (v "1.9.4") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1bgk1js4my9iqg0zjdd3x1xb255d81p598a8bv8h8s7zxrs2z4qh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.13 (c (n "solana-sdk") (v "1.8.13") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.13") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1sncw3kvha4b1p2aqy4vjwsvphpx7a9dvbh7xc9rqgsinb4xn0qm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.5 (c (n "solana-sdk") (v "1.9.5") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "144ngsk3drlzzcjpwp7xkwp8f75wzq0ld0xvvwwwnv5zwvw3zjkk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.14 (c (n "solana-sdk") (v "1.8.14") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.14") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1s3zifp439q67nwv87da49cn8640wg4lqrx5brg1pv9frnsgi863") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.6 (c (n "solana-sdk") (v "1.9.6") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "00byw2qwdd2ma4a3hk76zbg5i2qhma0m3c9qarmzfi2rvpv509is") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.7 (c (n "solana-sdk") (v "1.9.7") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "01d0zif97bk0fbd0bxfj2ayx5nq19scvcw8d3ddcivxrz48zsdz5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.8.16 (c (n "solana-sdk") (v "1.8.16") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-crate-features") (r "=1.8.16") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.8.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.8.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.8.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.8.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.8.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "04fk8bknpgnj90jwrw6694ppr981x76xnlzcdmzyfplph11zqq6l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "solana-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.8 (c (n "solana-sdk") (v "1.9.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0jn4kkawmihprx86v7nvkkxf8c7scp9xrkkzry8xbjgaazzdhx42") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.9 (c (n "solana-sdk") (v "1.9.9") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13vjbyqm9ivimd3mgvbj1czbrnfpcbwkd0360ldjrcjcpb2gs256") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.0 (c (n "solana-sdk") (v "1.10.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "05dad6gc3kwy7plkpqx1ma8qbxr6m02jfig4p3whrghkf8y4w2fx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.10 (c (n "solana-sdk") (v "1.9.10") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ax10371w2cjav3pskrrlblc5kbiwhv7h6c9yfhnaci8s3k2kk67") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.11 (c (n "solana-sdk") (v "1.9.11") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1agl3b403kkf9251vmqqx0i6klflkyarjli13hm7ahk93f9w89yk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.12 (c (n "solana-sdk") (v "1.9.12") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "11ywpwc3yf98pxdfs2c7qbxzns2x600wk766y2pkmf0xd6naqk5s") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.1 (c (n "solana-sdk") (v "1.10.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1g8i1h9d8g674636pjjvjp0kw38xd3hivydbm348ws4l10r4p5n0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.2 (c (n "solana-sdk") (v "1.10.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1sy6561vcwv23idjp5i4dhqnzzcx65dl3pv63ia6cd2483g8kkpk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.13 (c (n "solana-sdk") (v "1.9.13") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1ikyklsdfxb72ayn0kdrb8mc6ci4cibhp22p1jkr4psab92rjf26") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.3 (c (n "solana-sdk") (v "1.10.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0nzhk7wwgmyknvw113z3y3010hzcxzyhd0ikfrwy9xvbw8xr76m2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.14 (c (n "solana-sdk") (v "1.9.14") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0j2qk4ld3c5xdbxp3559i7pnbps2s796gwd9xfabw5yyrj1v34n2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.4 (c (n "solana-sdk") (v "1.10.4") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0067kjs5dhj2xw01fynycx432mwbxggb7dfc05p59zcmlzfcsqs4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.5 (c (n "solana-sdk") (v "1.10.5") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0w31cfs42phhd1rc429s0x3i8hd88v529k086vyfippskg2nsq29") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.6 (c (n "solana-sdk") (v "1.10.6") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0qq21nhlk1i5afp3c1nkpynr1w9nahlkr89hmp6ybscwybhjlsrr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.15 (c (n "solana-sdk") (v "1.9.15") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "178ihgbg7x5psgsd3k3jrz8s2xsicim6m277y7fpwsxpjcrghcj2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.7 (c (n "solana-sdk") (v "1.10.7") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0yz1694gp10s0kwvb12k9bk05nri8d7adzz0lp3w18apqm6wc3ph") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.8 (c (n "solana-sdk") (v "1.10.8") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "16lz3jp6vn0mszv16mbp36cfgv77nb0zim12p5rq6zi35ffdvi01") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.16 (c (n "solana-sdk") (v "1.9.16") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1xq4cj6vb2zijgiw2x73mcmjvqxlw223aipwv3mn1mfx0l0l3jzc") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.17 (c (n "solana-sdk") (v "1.9.17") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "06a1w2vgbi8m4bdhmx1y4vh1h854s2yygv43bniiv01jvg79zsil") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.9 (c (n "solana-sdk") (v "1.10.9") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "146q0q5xqzpq2q3b4q7wq28bny8khxlxfwvhsdrw3g1mnjfkxxky") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.18 (c (n "solana-sdk") (v "1.9.18") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1dsck38ild6m59gmwdgi47z7padz99crj71c3ym4hispx2vlw2wg") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.10 (c (n "solana-sdk") (v "1.10.10") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1b5pixp50xq0ji603p49hygb2wxzfsmgnxz0w093b982lphq7bgm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.11 (c (n "solana-sdk") (v "1.10.11") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0yssc9y45qmylpbjxca2s4ksy1k0612mx6b23w8c7g8vy04ji91x") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.19 (c (n "solana-sdk") (v "1.9.19") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "06fa1vjwmiza76a0hbzzhj55178bbx9f41prj6sasmxr2az9a4bx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.12 (c (n "solana-sdk") (v "1.10.12") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1qzwywvhkgaxy7f3krw5afy9hn07az3xphmbd4dd8mq2r7l2qv6b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.20 (c (n "solana-sdk") (v "1.9.20") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1hlmnznd0w68l83dv01z33hh5m4ps0lqag4xdbkf78cgqq2ycq35") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.13 (c (n "solana-sdk") (v "1.10.13") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "05m5dsaa0065vgy7say1rgfa3jf564sch8w6d4z26ndjjqnwx0xx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.21 (c (n "solana-sdk") (v "1.9.21") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1pxy700ssizq70acyy9wgxmbjwrf4v1dpca355yvvmfscip50pji") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.14 (c (n "solana-sdk") (v "1.10.14") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1ia07qx8g7qk6icg1l9k9q61gnwbnzg8znbkg53icp0hbk5pb3v5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.22 (c (n "solana-sdk") (v "1.9.22") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "080ddm49kcvgfinky5skvfbl9xk11l3p3hagdb33cm7fyx3sx8g5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.15 (c (n "solana-sdk") (v "1.10.15") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0mcq0r8k26i87ldv429v94cb8alrln3nx37xh3nbya91j66j4dw3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.16 (c (n "solana-sdk") (v "1.10.16") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0r4law2gcsw9v47zb645adsimj4bpqnzmkgiifxx17mdny3w53x9") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.17 (c (n "solana-sdk") (v "1.10.17") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1blkvpmgw6kkm18zk7z8lxa0nv21ikvi2gwyh1gqjqx42pdzl0k0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.18 (c (n "solana-sdk") (v "1.10.18") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13psg1z41bz3bcw1vmgi3j5cqydqajldjjcwb8g5d7qya6c3hczv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.23 (c (n "solana-sdk") (v "1.9.23") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0d5wif72dyn49w0m8miz6yz0z6hwphbxy18iia7g0k8b4f14fnfy") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.19 (c (n "solana-sdk") (v "1.10.19") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0j7y0kla6gnd1vjqmp66sp5xbvpmpw3mk9hn2lrhdjingdn56g90") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.24 (c (n "solana-sdk") (v "1.9.24") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0kw1nfzg1g93npjr3m7lp9dk86vawdghjwhlginzhjbg2zli5jg7") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.25 (c (n "solana-sdk") (v "1.9.25") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "05vm6ddk54l0m3xq357adja5nf55ix2prbl2d6xzavlww7jrv09y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.20 (c (n "solana-sdk") (v "1.10.20") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0b3xh5xngdhqf1la7qz7wjgkidwpa8z566ipwqbzp4mh9ac6ss3f") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.26 (c (n "solana-sdk") (v "1.9.26") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yf9mvcp1hry3kd9swaqvg0jjbh8x9lhbgggxnf15yyv3dssjf4f") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.21 (c (n "solana-sdk") (v "1.10.21") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1l8d3bmcabx44ic8987i70b6xyq9k36lly6kld8a1d5zmi03nj0r") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.28 (c (n "solana-sdk") (v "1.9.28") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yljs962rnihvhglmhqqj31k0gkjb5sacy8qz7qfgv8x9y70mp6i") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.23 (c (n "solana-sdk") (v "1.10.23") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yczdbkqai6fb08ckga78r2ff419hfdyfj3b05gsm6jzy23jwb91") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.24 (c (n "solana-sdk") (v "1.10.24") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1c4azvdvx2y581hznmin7fgm3pljd7y66lvcwd6bfdrmpx46ilf4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.25 (c (n "solana-sdk") (v "1.10.25") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1wpfmgy10xc7mjb1cgi6gb20an1wc83p4q8bhm67rxmw9hrxhrqx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.9.29 (c (n "solana-sdk") (v "1.9.29") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.9.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.9.29") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.9.29") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0rm03767awvc89z2s4k2cdxnp9m6aldwn5r085a6bfykv9c0rrzy") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.26 (c (n "solana-sdk") (v "1.10.26") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1h6djzrlc2dqja6z7ifh00r0nkg7c9mgjm0hhyan6s25mjn0n43z") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.0 (c (n "solana-sdk") (v "1.11.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "117c46q59h8v9br0hhbc2m45bv9xmwz6jj3kk6rw0mvz5w9ki3fc") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.27 (c (n "solana-sdk") (v "1.10.27") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0kixv7p3sq69ljqaynf5i1azyv9bi3v74f0kys2ricdnv9aiynmw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.1 (c (n "solana-sdk") (v "1.11.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0lkr9yxa5z0gjdp62pnj4gg59fz8xs6m342cy720rzyp6a2p0rwi") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.28 (c (n "solana-sdk") (v "1.10.28") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.28") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yii8f3flnqcrs5355f8sn75b1q96q867m5ixf1z20nkjmfz025h") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.29 (c (n "solana-sdk") (v "1.10.29") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.29") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.29") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.29") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0w8wr3m6z9crkxhsmsppzh2mgzcxq5fl57mcwh8xbjy0mav82pl1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.30 (c (n "solana-sdk") (v "1.10.30") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.30") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.30") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.30") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.30") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0sn0rks33xf1dmz910z8wn09hrr44kq2m94v32s268byn2zya2by") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.2 (c (n "solana-sdk") (v "1.11.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "12gi8pknw1ba1s2v9bglhr76dpyr4y9agyrfsw43kgv27ygy0g2b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.31 (c (n "solana-sdk") (v "1.10.31") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.31") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.31") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.31") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.31") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.31") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "06lfd7yjy3ny6mvnzy8sq5rgvd33njasa3q8s41s4yzmhidh9xaj") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.3 (c (n "solana-sdk") (v "1.11.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0jjwmy3y17kpbs1b2x7w1bw3lbmvysl5hkfwj37kcv6aw2bpil89") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.32 (c (n "solana-sdk") (v "1.10.32") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.32") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.32") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.32") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1q8nl2s4s6n59aazpmp4kb7hhjwh2hkcmwnsrlg75wgrdf82030n") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.4 (c (n "solana-sdk") (v "1.11.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0g8fdls1wk1vsyk017ixx4y0aric7l9rn0r7n37cniwg785lzm17") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.33 (c (n "solana-sdk") (v "1.10.33") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.33") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.33") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.33") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.33") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.33") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yag5v7bbnbwsmzb084kgwv797gdzzqfmb3b5gi7avyab9hnqvv3") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.34 (c (n "solana-sdk") (v "1.10.34") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.34") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.34") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.34") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1w0q4qf16mpsld0qahm63qvfla3fx8hwcxglrrq0ijx50jl6a62y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.5 (c (n "solana-sdk") (v "1.11.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1wy28r8cibz53023nr83lwy99qnqrymf6w36w9bph9ivyr6razdd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.35 (c (n "solana-sdk") (v "1.10.35") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.35") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.35") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.35") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.35") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.35") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yll0vwgix9vs204x18qhrzkk7izba4453b1yzncbzmrvfbimfsf") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.6 (c (n "solana-sdk") (v "1.11.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0rqi9dkfrsfhgq0qawjg9l10jwz3fs3a5b95fjrl8q9n11zj0pwl") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.7 (c (n "solana-sdk") (v "1.11.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0h51cghckm0fazja1ad4fd3mjbq09744iqmck3q4b9mk0vqpq0fr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.8 (c (n "solana-sdk") (v "1.11.8") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0znzgsmx4cxvw6mw71hli7ckf73sdgipc7a351b70x63kd355mgd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.11.10 (c (n "solana-sdk") (v "1.11.10") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.11.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.11.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.11.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.11.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.11.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1bcmkd6ag8d0f9d8y1ls86yxc7a183jd9azc4v82waamnjdcpxcp") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.38 (c (n "solana-sdk") (v "1.10.38") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.38") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.38") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.38") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.38") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.38") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "16dd0r31qy5mviz0hg4gnqyl3846hp41xw290alk3msbrc26naff") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.0 (c (n "solana-sdk") (v "1.13.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1cxia5d5ykpdg4a0d7clmc18r8cgn2k04kr1rp3kpn5w19b653p5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.0 (c (n "solana-sdk") (v "1.14.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0i9015ik6pzyl33chfyp0mbvs3rh641lyiv94r6ld63bin3z65bv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.1 (c (n "solana-sdk") (v "1.14.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1j5c1c9wf2jpfq00sjxn120mn5hh8m3nbgi5cfzl9y9zv7s0wfa2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.39 (c (n "solana-sdk") (v "1.10.39") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.39") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.39") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.39") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.39") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.39") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0bhh3p6064jcb0138jrksjia3rfdk02ys0v21sqqcszi3kw0g00s") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.2 (c (n "solana-sdk") (v "1.14.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1i1sn1b0gipks071yv6ihkd8ffqcx6nfapn4k2md06bnca7a1akf") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.1 (c (n "solana-sdk") (v "1.13.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "11mnfcnpd3d6brjp5zq438k95mh9hiy9mq0zz0pgqsyrh9fmk579") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.3 (c (n "solana-sdk") (v "1.14.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1bj82a6qx3nhsim0rrxwilcj6bbf0kwk7ah7pd41hwf2hfwqs7lq") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.40 (c (n "solana-sdk") (v "1.10.40") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.40") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.40") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.40") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.40") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.40") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1gw33j6lsqxsc8mrmgdn9wc65yvi5217ia1wvmx7yk64n2rxhcic") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.4 (c (n "solana-sdk") (v "1.14.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "15g39xpg0p74c6vdfrg4s3w318576d8qmmcjzn6q4rk2skb2p5hl") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.2 (c (n "solana-sdk") (v "1.13.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1xrn0mxrgsfb386j82s9l37lkgfvbplzc82mlrs10migkx714bhq") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.5 (c (n "solana-sdk") (v "1.14.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "07m5cv7ipyqj9dqhl662jm11lp5jfn772k6r1idili1skilqskpp") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.10.41 (c (n "solana-sdk") (v "1.10.41") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.10.41") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.10.41") (d #t) (k 0)) (d (n "solana-logger") (r "=1.10.41") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.10.41") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.10.41") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0sncpfdi4wc7wwrkn0ynrr1qrb9l0w6xd8bn72lzily4wjvdxvyr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.3 (c (n "solana-sdk") (v "1.13.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "03rs65kvq0c5dx3gbqikqf09xnf9kvj5g3qsykv9c1mgbwgkcm4y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.4 (c (n "solana-sdk") (v "1.13.4") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1x0jiqmia40gij2za107mx1nrr4hny6v05ndcclqwvi17jawdflw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.6 (c (n "solana-sdk") (v "1.14.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1ca1m6fk34ldm6kgw15zhsqpvz6gnjahx6yjgr1hg1lkzvvn5zjp") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.7 (c (n "solana-sdk") (v "1.14.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1kh475scg5760vzjrwpphzhpbdi8gaf1p5nx44w3qyfkhbbmzd0c") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.5 (c (n "solana-sdk") (v "1.13.5") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ww8xxiwnqzx7c7mjqnizbkw37y7g94xsnibkhy9zvbcw6p7v3k5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.8 (c (n "solana-sdk") (v "1.14.8") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "106wrpv5z5zraw124i644402hig1spca4q1kcvvvn7x8hwy1qr35") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.9 (c (n "solana-sdk") (v "1.14.9") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1ws7m6jyv2acymwp1aizl95s974aa5268d0vqd3rgac8ls98kawx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.10 (c (n "solana-sdk") (v "1.14.10") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0k8ib59c8pna6hab295rp2x7hg754v0xmb4pb4j3ackvmy35d4kc") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.11 (c (n "solana-sdk") (v "1.14.11") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1vvmkwdayy5dax2ak4dkfw2kaqg3g29v0a0b47kl7fcbak98aq54") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.12 (c (n "solana-sdk") (v "1.14.12") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0jagmhk7x1dlf9cif87qn1rdqg1aiikbbmsanpm1dg1jfk2jqw4w") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.6 (c (n "solana-sdk") (v "1.13.6") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ddl2rngqglgsis6ify6l8ryfmxvl9cdbhj5wbrl1fi3ddrixlfs") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.13 (c (n "solana-sdk") (v "1.14.13") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1mr6v2hjzjgfnhp1m1ilgdkfjcx563dfwav5nbm2rnkdqn0p83ir") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.15.0 (c (n "solana-sdk") (v "1.15.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.15.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0w76a7ikahb078v0x3h5mhnx1gfvchddi7hx9p9a68rsg6hqwy3k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-solana-sdk-1.14.14 (c (n "solana-sdk") (v "1.14.14") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "12jx83xvpl32bhgj2q4wkspry4b7sr4g6h8y9m2hd9bx58iq88kw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.15 (c (n "solana-sdk") (v "1.14.15") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "081028mspz6rgkig109wjdg0fjg41d51haqcgp0f9hvhp6w3mb7r") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.15.1 (c (n "solana-sdk") (v "1.15.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.15.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.15.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0zs2zz53y313ahqzzqi703djp338z72qvrl0a1bqjhvjwy2ijarr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-solana-sdk-1.15.2 (c (n "solana-sdk") (v "1.15.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.15.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.15.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.15.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.15.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0gwmmf6xpbf6f2dvd3w3g5clvsckjs6w68dfj6fzsy6skfgxmvxv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-solana-sdk-1.14.16 (c (n "solana-sdk") (v "1.14.16") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1dx1h6wbxqg1zkvwkq436y87iqhh0vp0rd70mkv6kdlcw6ipvd7d") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.17 (c (n "solana-sdk") (v "1.14.17") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0wwy12w09k421wwsxxkcwx5phjwfr33dwaahw2jkzlh9z9vsvjv0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.13.7 (c (n "solana-sdk") (v "1.13.7") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.10.1") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.13.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.13.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.13.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.13.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.13.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1qdzk6dkyf40fzazx83b8dygszdk80hjy4f536w2q7b0b7hji8ch") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.18 (c (n "solana-sdk") (v "1.14.18") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1b9yxgk12wqbl24p05rkcs1pr1wnsf9fzjg202nk15zjgc25rp2b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.0 (c (n "solana-sdk") (v "1.16.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "16kks9kyrpl48v2ml0c8q438i55bf4lmnjys190y2sda0cf3p970") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.1 (c (n "solana-sdk") (v "1.16.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1fhn8g7jjfcwyybl70c3yxnpf5sjcinxiyyskszx22ci1r6db8is") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.19 (c (n "solana-sdk") (v "1.14.19") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13jd98y98lbw4dfqzamjq2p411i7qs601b2xwxx2g778h84cvhc8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.2 (c (n "solana-sdk") (v "1.16.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13sy2h5hrl4zr7wl7a2wz1idv3pwnsphq3kxd6qp8yciwqlvq395") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.3 (c (n "solana-sdk") (v "1.16.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0yv4dgfwa24ib7369cm021pq3k1svspa2wxahia8v5nq2jxp0arm") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.20 (c (n "solana-sdk") (v "1.14.20") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0s1mpwhhryqqabmyk2yawzsq05h99pmmjff38i813p2wb9d5ll8w") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.4 (c (n "solana-sdk") (v "1.16.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0030rlbnlzk0clg7g4gr2dq6mls9lyhfpg5j6abb29ibjbkkgza0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.5 (c (n "solana-sdk") (v "1.16.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "088n2pgrnf696mc6r87x5d5fh1k0q7dnz2vlqz3i49ps4csnzs12") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.21 (c (n "solana-sdk") (v "1.14.21") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0nzd7w1cnk8yw8cvjnn8w9c7b91jck7k3izci20zcg78sm4qcy2p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.22 (c (n "solana-sdk") (v "1.14.22") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0blzsmjz6c4jyvc9ybvfm0l3jqs8nav1y1r832am8s282xc9bq1i") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.6 (c (n "solana-sdk") (v "1.16.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "01ipwrcfyvrxrghi1bla02dmyfw4b7jb27nwysa2bzg25ky6yg7m") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.7 (c (n "solana-sdk") (v "1.16.7") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0y90cadkw1092fqwwsjk4ac7j2f81m4xi4y6aqcijbaslmnvygfj") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.23 (c (n "solana-sdk") (v "1.14.23") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ky17jbganjqqw222dz9y5ypnsvgkjhsrdjb7ncrh7b4ldi8rxca") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.8 (c (n "solana-sdk") (v "1.16.8") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "09gb3da9p935yrx03bxawpxkidah79p4wbinjyamwni4ci9aj6z0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.24 (c (n "solana-sdk") (v "1.14.24") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ablr203yfv8qq6bb09wm1zr53fs62vmg394z9vdfqlzsb7v6zp6") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.9 (c (n "solana-sdk") (v "1.16.9") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0778yc3khhf4wfhpbqs2bnplrz7mdsnbl2did9asbnsgcwlnciff") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.10 (c (n "solana-sdk") (v "1.16.10") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "01f92mpf1r9m0az0d81lpx80mp9bp4g0cfdq7my4whjh29dbjih0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.25 (c (n "solana-sdk") (v "1.14.25") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "16arig34kkqfpgvvp7k0fvq2fa0jmnpl2vw3641gsiivy1zr1sq2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.11 (c (n "solana-sdk") (v "1.16.11") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0ibfrblm4xgjx98xk2wq8rx7cvln3bmpafs1x98r1i4bgk1cbp2j") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.26 (c (n "solana-sdk") (v "1.14.26") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1k6yx050bnyn079jg24gbqyy95rh151ijkl638mn1n42hrf4i1jg") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.12 (c (n "solana-sdk") (v "1.16.12") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1acwm79my9cxm7g79v3i4sbpzsiw1cr9q5v1zcnggm1rpyf8sq47") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.27 (c (n "solana-sdk") (v "1.14.27") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "18nak8216kqik64xszgvck9jpjawx2cm7sy4lngycwn2x0x1gbzw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.13 (c (n "solana-sdk") (v "1.16.13") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "18h15ifadi1zjjpgdfd21zxjfc4lyyg5h7624b12y0plp4jiz83l") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.14 (c (n "solana-sdk") (v "1.16.14") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "17cqpyphlyrhsg2wnv3fjn9lfj61cffg57w0prwkszj81mnh9x2p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.28 (c (n "solana-sdk") (v "1.14.28") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0l5zrdww5xg5n6wgv46kk7c09hsc9bldcvbh7q4c1733cwj9fqsh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.14.29 (c (n "solana-sdk") (v "1.14.29") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.29") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.29") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0xhi5r58s9fbfdm83kh48cz36xxbcwwvgv60rc9v03r11q5jrpnd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.15 (c (n "solana-sdk") (v "1.16.15") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1ja660kbdc2v1jihsqbi2m3xacixg1s7jvmj84jic834frrnj7k2") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.0 (c (n "solana-sdk") (v "1.17.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "00iizhsv4x2vk0zi2mf9r1919al0lvymaihvii5pwlxsh1yaxdrx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.16 (c (n "solana-sdk") (v "1.16.16") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1gn2ih8frqxi8qcvhw5aiacqn8y57nmgv5kavpbxpkj1i420444b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.1 (c (n "solana-sdk") (v "1.17.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "11jr3rskhrp2y7k39csij72m5p9vx9lf0q4klpmb481mql0iyz9v") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.17 (c (n "solana-sdk") (v "1.16.17") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0jyd9gsicir9b54gby6ch1scmbjh3f2gn9dxgnavlcq8s6iws1j1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.2 (c (n "solana-sdk") (v "1.17.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0hq4zrfr06zhg7q2nv09jdfbvn8rb1m3908si85kb87np3vln7fx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.18 (c (n "solana-sdk") (v "1.16.18") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "09hglfv6ypgmxfr0922capsnkfsjlqsz2x0y1i9zp9rpfzf966q5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.3 (c (n "solana-sdk") (v "1.17.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1szjyhywcir67hprpc4krdkx2qz6sjn0sh99f23vba5az1wj6k3p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.4 (c (n "solana-sdk") (v "1.17.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "002nc7kcvg36805wrsy8xrlrxg6w15vwv1pcm4si3mms8118jycw") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.19 (c (n "solana-sdk") (v "1.16.19") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.19") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.19") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.19") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.19") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.19") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "077cild8z5irapnfgncjlcmbhirm86cc8cbsylgcm03r0vks3bnn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.5 (c (n "solana-sdk") (v "1.17.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1yfi8rqj7ixfacnnvc1hxfqz59gbyh66b9hb298pdkzxlk2ijmym") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.6 (c (n "solana-sdk") (v "1.17.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0cpqicj3zi1l3gbkfwqjdg6328ifhl4aykywj4mx7qkxybnmd67s") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.20 (c (n "solana-sdk") (v "1.16.20") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0d3r9gfw596hlw8jlqll6n3rvqjif3fwmdzzpvkpja88wqf7mqfv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.7 (c (n "solana-sdk") (v "1.17.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0raxldfm0aialh2lbmnjcibzyz12wdp5rrsdn7805cnmli085cnx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.21 (c (n "solana-sdk") (v "1.16.21") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.21") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.21") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.21") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.21") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.21") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "022pm26jw43hj9zajs65zjpkskbq8ip0i30r48nhdfvvpbm76y30") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.8 (c (n "solana-sdk") (v "1.17.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1jmkd9pb45z66l1hz5cqqvwaqcg740ngimj81aw10gn0rmdbika5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.22 (c (n "solana-sdk") (v "1.16.22") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1h6mir3mfbp9sy7niksl4rw7vq588ksvir7cmyzja3mi0dbawran") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.23 (c (n "solana-sdk") (v "1.16.23") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1izpdmw2r6gm8kb1m1w9avr3abls9l478qiqf7d6fnilz20rbz4p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.9 (c (n "solana-sdk") (v "1.17.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0gpy6isn7i0jp9yxfbls5wlqz72flng2izkw49sfjk69lhsbx8ay") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.10 (c (n "solana-sdk") (v "1.17.10") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1xhd4wgiv37gpsl2msclwy72mxvh409lsiyc90whv8a8mn6wp9in") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.11 (c (n "solana-sdk") (v "1.17.11") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0nwapyngfilzsmddsk4diq1m4hn7izwcwz3wk7lsivxc0g4v4256") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.12 (c (n "solana-sdk") (v "1.17.12") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "16cwf806lbf5wmpmjis7wpwkg8vpckb3giljgycc32wnzclaxp5k") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.24 (c (n "solana-sdk") (v "1.16.24") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "10zpl6i5ffg5qkx568yi5avsc0dwf8b0wnvmac9lysgz60dybmcn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.13 (c (n "solana-sdk") (v "1.17.13") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "19j9xhbphkq3alsihpgjp6yc3hczgxnrln31c0dn4mkj1bi8fi98") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.14 (c (n "solana-sdk") (v "1.17.14") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1hjf22dc4prjbxbil3jgc4dx4x6j6grnk3cdml291ry548wmhd6b") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.15 (c (n "solana-sdk") (v "1.17.15") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0pl8zrjx7z936wl8b0n79swzr9nh4gndp7srhm2xsxwkp6n9b2i7") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.25 (c (n "solana-sdk") (v "1.16.25") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0gqk12v31b20h90wqm0az48whha1c7lzn4nwhpqb7mnlj9ff31r0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.16.27 (c (n "solana-sdk") (v "1.16.27") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.16.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.16.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1436yqfwjzvwa3mkqmz1b8xrqd54vxc8vniibwp9hxaplv6pkwfd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.16 (c (n "solana-sdk") (v "1.17.16") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.16") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.16") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.16") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "09qm0k4jmj9ccgi3i5p1b4wyd4bb63p51cxki74kjd8f37hy85r8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.17 (c (n "solana-sdk") (v "1.17.17") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.17") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.17") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.17") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.17") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.17") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0avl7hwidnh7m6m5k3ylw7l4x7nkpnzmdadifskb0a03qmaqcqpi") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.18 (c (n "solana-sdk") (v "1.17.18") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.18") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.18") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.18") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.18") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.18") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1gdb1nsni48bpa2c5n5mhs3n6yilz6yfc5s2sh0j1g4n1bpivxfn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.0 (c (n "solana-sdk") (v "1.18.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.0") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.0") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.0") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0jp61k3gd3nlqilh2bn16wdpb0rrj5kwwnqxwxwmwawf8kjah8z9") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.1 (c (n "solana-sdk") (v "1.18.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.1") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.1") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.1") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0g350zgy5mhschh6bq4ifliwxdzi89i7vsbsv2hygck94ww4n4wh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.20 (c (n "solana-sdk") (v "1.17.20") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.20") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.20") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.20") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.20") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.20") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1md7w4crhzwpzznfxbp2m28zi2cfgj2h4fsinc41nqhxg19166ab") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.22 (c (n "solana-sdk") (v "1.17.22") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.22") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.22") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.22") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.22") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.22") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "14f835n47i4vmd2ba21r3scvlz8m5cdahkjp66g0pqys5l5jdyn4") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.2 (c (n "solana-sdk") (v "1.18.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.2") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.2") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.2") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1cq7dmqkxlqf3iq42sjn9273adcvrqp57syzbfcy5zm0zap13abc") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.23 (c (n "solana-sdk") (v "1.17.23") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.23") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.23") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.23") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.23") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.23") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "01l14ahmc2nxagi6k8xxcq3m5g5bbk3nypv7435f5zavks5wjkc0") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.3 (c (n "solana-sdk") (v "1.18.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.3") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.3") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1x84q2q82h5sy6a2df81a3dv9wdj7ajl5wgzw3rk7f3nzxn1wfpz") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.4 (c (n "solana-sdk") (v "1.18.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.4") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.4") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.4") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.4") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.4") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "03v1nxzlhnnyq2jy2jcj65sqb439yj5aqszg9hm0q4n2nk814dkd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.24 (c (n "solana-sdk") (v "1.17.24") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.24") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.24") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.24") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.24") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.24") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1k8h0l7immah7vmv3sa0xi968x4yjxyl9rxwlsy44mshrclrl55a") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.25 (c (n "solana-sdk") (v "1.17.25") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.25") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.25") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.25") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.25") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.25") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "012cysyz99v1c9hi8gdaasww901wxyijl2vj1nwy82gsqjw7ipm1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.5 (c (n "solana-sdk") (v "1.18.5") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.5") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.5") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.5") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.5") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "19rqccvb7ysbc2kr4n4p54z0wlxflpmkwzjnq6vb8gcaqmmpsqyv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.26 (c (n "solana-sdk") (v "1.17.26") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.26") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.26") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.26") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.26") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.26") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1j3wca3880a6wfbg405mvyvsl8cfdj4jwdbqz6626sy1qvqyfjwy") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.6 (c (n "solana-sdk") (v "1.18.6") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.6") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.6") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.6") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.6") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "02gycmmjl30fp9imbp1jrpbgawg5arzd449n67z5381f4mgfcsbx") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.27 (c (n "solana-sdk") (v "1.17.27") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.27") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.27") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.27") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.27") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.27") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1s71jvrjvp1lh7cpx52gpz80yy3wddihyb4gb5g8db1xp3r2dvbn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.7 (c (n "solana-sdk") (v "1.18.7") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.7") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.7") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.7") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.7") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0a9v1wczjnjcbyx13scabdjgawrymi03myy2a0n487cix11pl1ij") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.8 (c (n "solana-sdk") (v "1.18.8") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.8") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.8") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.8") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.8") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "05v0m6d4qyi6a2a75453qdclmm90rq9krp0qvwiialli939z3jk8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.28 (c (n "solana-sdk") (v "1.17.28") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.28") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.28") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.28") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.28") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.28") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1bcb9684p1pla2vmf1qblvmg2i6mzzqlbcgxyryxd7n7gj1snw0d") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.9 (c (n "solana-sdk") (v "1.18.9") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.9") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.9") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.9") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.9") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1sla782cia8df1lxff1jcpzw2nal5yvv9y38i0l75c7b4hwh520p") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.29 (c (n "solana-sdk") (v "1.17.29") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.29") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.29") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.29") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.29") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.29") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1fgxlam64887xwih89r54p1dzf105pyfwsgxi5hw17y4ab7ix8pc") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.30 (c (n "solana-sdk") (v "1.17.30") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.30") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.30") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.30") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.30") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.30") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "06n21762m3b26rl3mbf3i08nv60h5liij3arixpyhczhr7b3111n") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.10 (c (n "solana-sdk") (v "1.18.10") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.10") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.10") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.10") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.10") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1gj1c3wr6xbrrqhbkmj05xfayv4rng04azkvsbbyc1q8mccl9kyh") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.11 (c (n "solana-sdk") (v "1.18.11") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1w8zs5mcxcqykz2bz7r230xqlzmh00m1gy52nbfhjqhpz834pch8") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.31 (c (n "solana-sdk") (v "1.17.31") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.31") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.31") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.31") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.31") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.31") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1a64wkbgimc0cx8gybxwxj3fvc82pr944mz4qydqy6g4in2fh76y") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.12 (c (n "solana-sdk") (v "1.18.12") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.12") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.12") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.12") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.12") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.12") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1pb4z06d13z72dajdx48yd6iy69j05cbq8dlyqsi5839jb4cll4g") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.32 (c (n "solana-sdk") (v "1.17.32") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.32") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.32") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.32") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.32") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.32") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "057kwqd1vhvi47y8pwwi5af2wrbkhlzx3yh1d9i3a2f0kzc5m1wz") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.33 (c (n "solana-sdk") (v "1.17.33") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.33") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.33") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.33") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.33") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.33") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1db90hvkpi9b0f0w8v8cms5qxcyncpin2n3i0ykjp9rhag0249wy") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.13 (c (n "solana-sdk") (v "1.18.13") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.13") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.13") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.13") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.13") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.13") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1pk2kfvxwwv7vy929f5zfs0vq2i3msjj8fnbzg62hzihrgq22g9j") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.14 (c (n "solana-sdk") (v "1.18.14") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.14") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.14") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.14") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.14") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.14") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0yhi4w1crysrylszb18y78qi2jnx7basnqpvl04kn8h9f8vqllag") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.17.34 (c (n "solana-sdk") (v "1.17.34") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.17.34") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.17.34") (d #t) (k 0)) (d (n "solana-logger") (r "=1.17.34") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.17.34") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.17.34") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1lf45nyp8w4mwmykfhxrvqqlcf2ncg2wgdjx67kymyyd587fx4iq") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

(define-public crate-solana-sdk-1.18.15 (c (n "solana-sdk") (v "1.18.15") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "borsh") (r "^1.2.1") (f (quote ("derive" "unstable__schema"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "qualifier_attr") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand0-7") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3.11") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.18.15") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.18.15") (d #t) (k 0)) (d (n "solana-logger") (r "=1.18.15") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.18.15") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.18.15") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1kfizil3p38vjzsdkbml31v7xrm8fj6gjbq53fbx8lq9hlqc63n5") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand0-7" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("dev-context-only-utils") ("default" "full"))))))

