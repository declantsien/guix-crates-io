(define-module (crates-io so la solana-program-ed25519-dalek-bump) #:use-module (crates-io))

(define-public crate-solana-program-ed25519-dalek-bump-1.16.3 (c (n "solana-program-ed25519-dalek-bump") (v "1.16.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "ark-bn254") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ec") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-ff") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "array-bytes") (r "=1.4.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.3") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.10.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^4.1.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"solana\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "solana-logger") (r "=1.16.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "solana-sdk-macro") (r "=1.16.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("default" "zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1wyd3d3hlcv5a8ibkpfr5yydz59jm1jljghis4dldpn703q2y3h4") (f (quote (("default")))) (r "1.68.0")))

