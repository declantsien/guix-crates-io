(define-module (crates-io so li solitaire_cypher_cli) #:use-module (crates-io))

(define-public crate-solitaire_cypher_cli-0.1.0 (c (n "solitaire_cypher_cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "0m6yvsahfqr76k2j8j2yy823g97mgcb9xr6qncn9daqsdj3mc3dw")))

(define-public crate-solitaire_cypher_cli-0.1.1 (c (n "solitaire_cypher_cli") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "0pa53ggmgbjxrmhvi9vwjr2samk6cmcly9wfd89mb1rjrm7zp7ds")))

(define-public crate-solitaire_cypher_cli-0.1.2 (c (n "solitaire_cypher_cli") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "1alkffy7hljj1f5ih422lbvjffna3znf0ir5bi8mgjsfbczwx72i")))

(define-public crate-solitaire_cypher_cli-0.1.3 (c (n "solitaire_cypher_cli") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "0wxqyxs9brq96xxx1lxij9f3qx3lhg90sc337h3r8f7aj8h89j9n")))

(define-public crate-solitaire_cypher_cli-0.1.4 (c (n "solitaire_cypher_cli") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "1ylwmpbzp7rs8nff5lq0x9sajwiw1sryk3ahbdjl9lvm9snjpnri")))

(define-public crate-solitaire_cypher_cli-0.1.5 (c (n "solitaire_cypher_cli") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "1q7dd5cimik5ii4jv5fcz1fbzldvmizak4j1mm1m9qa904i6g949")))

(define-public crate-solitaire_cypher_cli-0.1.6 (c (n "solitaire_cypher_cli") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "040slv142k574ggr8b0yqslh20ddbsw6kyl83zzmzi0j02askzvz")))

(define-public crate-solitaire_cypher_cli-0.1.7 (c (n "solitaire_cypher_cli") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "0brw7f2p9gkm0fsgbksqd4khzsizps0gxny13xfxy80l0g49f2ys")))

(define-public crate-solitaire_cypher_cli-0.1.8 (c (n "solitaire_cypher_cli") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "1midai8wy46n66wdnpfg7fmh55hpdxqs1jr2gvh4lw9628kzm77w")))

(define-public crate-solitaire_cypher_cli-0.1.9 (c (n "solitaire_cypher_cli") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5.7") (f (quote ("std" "types"))) (d #t) (k 0)) (d (n "card_play") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "solitaire_cypher") (r "^0.1.0") (d #t) (k 0)))) (h "0cvyv0fyj3rd1c37rc474v1chhnwf3b3a5zw3lkd3anpn052ajrn")))

