(define-module (crates-io so ft softbuffer) #:use-module (crates-io))

(define-public crate-softbuffer-0.1.0 (c (n "softbuffer") (v "0.1.0") (d (list (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 2)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.26.1") (d #t) (k 2)) (d (n "x11-dl") (r "^2.19.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "19r79a0xyl8k0py4r6ha77vcycq46b6a9bqkwpi68468dlm1yrlx")))

(define-public crate-softbuffer-0.1.1 (c (n "softbuffer") (v "0.1.1") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "foreign-types") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.26.1") (d #t) (k 2)) (d (n "x11-dl") (r "^2.19.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "12p6rmvqz7f18f27kaqyjic8ha3ckwdz5fdww0b819v20wqxl73d")))

(define-public crate-softbuffer-0.2.0 (c (n "softbuffer") (v "0.2.0") (d (list (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fastrand") (r "^1.8.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\", target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "foreign-types") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-backend") (r "^0.1.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.30.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.30.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.42.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (k 2)) (d (n "x11-dl") (r "^2.19.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "x11rb") (r "^0.11.0") (f (quote ("allow-unsafe-code" "dl-libxcb" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "0zq7a1cawxwrpqcdwxx7dz7v20022lalj35pp5af4cshq6ifqxri") (f (quote (("x11" "bytemuck" "nix" "x11rb" "x11-dl") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "nix" "fastrand") ("default" "x11" "wayland" "wayland-dlopen")))) (r "1.60.0")))

(define-public crate-softbuffer-0.2.1 (c (n "softbuffer") (v "0.2.1") (d (list (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fastrand") (r "^1.8.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\", target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "foreign-types") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-backend") (r "^0.1.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.30.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.30.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (k 2)) (d (n "x11-dl") (r "^2.19.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "x11rb") (r "^0.11.0") (f (quote ("allow-unsafe-code" "dl-libxcb" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "17smsr3hhfw0bnxa7pc11czgbnldpnm4idqy2fpz11bjpbv57ff2") (f (quote (("x11" "bytemuck" "nix" "x11rb" "x11-dl") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "nix" "fastrand") ("default" "x11" "wayland" "wayland-dlopen")))) (r "1.64.0")))

(define-public crate-softbuffer-0.3.0 (c (n "softbuffer") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "fastrand") (r "^1.8.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\", target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "foreign-types") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.6.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "nix") (r "^0.26.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.1.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.30.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.30.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11-dl") (r "^2.19.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "dl-libxcb" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "1i2d5hinc0wsfrk7kmr2w1q0zcypkq05vwl4wcbgxxl2cx6f7ivw") (f (quote (("x11" "bytemuck" "nix" "x11rb" "x11-dl") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "nix" "fastrand") ("default" "x11" "wayland" "wayland-dlopen")))) (r "1.64.0")))

(define-public crate-softbuffer-0.3.1 (c (n "softbuffer") (v "0.3.1") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.9.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "drm-sys") (r "^0.4.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\", target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "nix") (r "^0.26.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.3") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.1.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.30.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.30.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "1j0f45h6wsm3hyyzq3cpkila7i2axz57mlrbmld8iwf6wvjnzmcb") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "nix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "nix" "fastrand") ("kms" "bytemuck" "drm" "drm-sys" "nix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.64.0")))

(define-public crate-softbuffer-0.3.2 (c (n "softbuffer") (v "0.3.2") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.10.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.4") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "1ldvmynp98v9g8k3pwdk667fyzpf6zr8v30zvx2nx8h4qnp53imh") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.3.3 (c (n "softbuffer") (v "0.3.3") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.10.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.4") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "0j199d8zg964324sppk1gnkq2361ivay7ykrlm71npg8v3ma4vc2") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.4.0 (c (n "softbuffer") (v "0.4.0") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.10.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw_window_handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0) (p "raw-window-handle")) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.4") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29.2") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "0plw9z1gjws44jdpfdkiqbqxrmjv8kq689vs1zy2p99lw2a7bafz") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.4.1 (c (n "softbuffer") (v "0.4.1") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.11.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw_window_handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0) (p "raw-window-handle")) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.4") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29.2") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.13.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "1n9hg085ad7xy6vfp0kzmqvdhsxnmwa3mbspxns79chxbnl1c687") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.3.4 (c (n "softbuffer") (v "0.3.4") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.11.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.4") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.12.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "0qiv299v034hq7v4d79mkyvhzl05snal9m4ffm7amaiyl8mcwrpj") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.4.2 (c (n "softbuffer") (v "0.4.2") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.11.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.24.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw_window_handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0) (p "raw-window-handle")) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.5") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29.2") (d #t) (k 2)) (d (n "winit-test") (r "^0.1.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.13.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "0vqnvkkwdngg54kg9m8g8acncrmgydrjya5gn3cy0vrj4dzx3mb1") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.65.0")))

(define-public crate-softbuffer-0.4.3 (c (n "softbuffer") (v "0.4.3") (d (list (d (n "as-raw-xcb-connection") (r "^1.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("extern_crate_alloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "bytemuck") (r "^1.12.3") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "colorous") (r "^1.0.12") (d #t) (k 2)) (d (n "core-graphics") (r "^0.23.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "drm") (r "^0.12.0") (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "fastrand") (r "^2.0.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "foreign-types") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.25.0") (f (quote ("jpeg"))) (k 2)) (d (n "image") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "objc2") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-app-kit") (r "^0.2.0") (f (quote ("NSResponder" "NSView" "NSWindow"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "^0.2.0") (f (quote ("NSThread"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-quartz-core") (r "^0.2.0") (f (quote ("CALayer" "CATransaction"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw_window_handle") (r "^0.6") (f (quote ("std"))) (d #t) (k 0) (p "raw-window-handle")) (d (n "rayon") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "redox_syscall") (r "^0.5") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.38.19") (f (quote ("fs" "mm" "shm" "std"))) (o #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("event"))) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 2)) (d (n "tiny-xlib") (r "^0.2.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wayland-backend") (r "^0.3.0") (f (quote ("client_system"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-client") (r "^0.31.0") (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "wayland-sys") (r "^0.31.0") (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "web-sys") (r "^0.3.55") (f (quote ("CanvasRenderingContext2d" "Document" "Element" "HtmlCanvasElement" "ImageData" "OffscreenCanvas" "OffscreenCanvasRenderingContext2d" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.0.0") (d #t) (k 2)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Graphics_Gdi" "Win32_UI_WindowsAndMessaging" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.30.0") (d #t) (k 2)) (d (n "x11rb") (r "^0.13.0") (f (quote ("allow-unsafe-code" "shm"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))") (k 0)))) (h "1f3w021kxhhrljclzcdpmf1pswsq1brhzni9ff8vy05klsjmg7nh") (f (quote (("x11-dlopen" "tiny-xlib/dlopen" "x11rb/dl-libxcb") ("x11" "as-raw-xcb-connection" "bytemuck" "fastrand" "rustix" "tiny-xlib" "x11rb") ("wayland-dlopen" "wayland-sys/dlopen") ("wayland" "wayland-backend" "wayland-client" "memmap2" "rustix" "fastrand") ("kms" "bytemuck" "drm" "rustix") ("default" "kms" "x11" "x11-dlopen" "wayland" "wayland-dlopen")))) (r "1.70.0")))

