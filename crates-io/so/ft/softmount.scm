(define-module (crates-io so ft softmount) #:use-module (crates-io))

(define-public crate-softmount-0.1.0 (c (n "softmount") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "fc-blackbox") (r "^0.1.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "itertools-num") (r "^0.1") (d #t) (k 0)) (d (n "kv") (r "^0.22") (f (quote ("json-value"))) (d #t) (k 0)) (d (n "linreg") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "measure_time") (r "^0.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "opencv") (r "^0.53") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "statrs") (r "^0.14") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "008y9k225gk8q5l3rdjxgfhwizskwyzbffbp55l217vc0i8nrvji")))

