(define-module (crates-io so me somedoc) #:use-module (crates-io))

(define-public crate-somedoc-0.1.0-pre (c (n "somedoc") (v "0.1.0-pre") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "19xx7b5glpms78r03nzs398vpn1950l0nwvcnwybq584i0nlbxna")))

(define-public crate-somedoc-0.1.0 (c (n "somedoc") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "1kvxap4xpgniphb3674fgbgxbnzbnm9xmyha5cyxlyrbw16c0v0f")))

(define-public crate-somedoc-0.1.1 (c (n "somedoc") (v "0.1.1") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "0jfdfgviacbliwqbf3kj6569jd2y2hid8xbrrvlpvpay6jhn32c5")))

(define-public crate-somedoc-0.1.2 (c (n "somedoc") (v "0.1.2") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "1srsb6fxjqw0xqnyjk83diikz57y99gil682nq6hc5xqr95rk91q")))

(define-public crate-somedoc-0.1.3 (c (n "somedoc") (v "0.1.3") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "1bhl50y5sa8bba5nzsi5frd5mxnkvnw2bl5vyq5dgn3gm0sp64xl")))

(define-public crate-somedoc-0.1.4 (c (n "somedoc") (v "0.1.4") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)))) (h "0pylb2rqsg5yivplzgqpil34bxmafsh2w7f6q09zkvhcg39h8pgx")))

(define-public crate-somedoc-0.1.6 (c (n "somedoc") (v "0.1.6") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)))) (h "1adg3wmn3asg833d0vjq5w1p1z50zff9ymrkx5gh2kmcb3rblr3b") (f (quote (("emoji_names"))))))

(define-public crate-somedoc-0.1.7 (c (n "somedoc") (v "0.1.7") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)))) (h "0a7rfsj4s85yjcpyyj5bnzkhw8j144zz3n207052h1x2phpa4gz2") (f (quote (("emoji_names"))))))

(define-public crate-somedoc-0.2.0 (c (n "somedoc") (v "0.2.0") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)))) (h "1zz9qk1s6qnmwakc3yi489s8c7n5dm5cd67iagbcskjf94x6yjxd") (f (quote (("math_builder") ("emoji_names"))))))

(define-public crate-somedoc-0.2.1 (c (n "somedoc") (v "0.2.1") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)))) (h "0ggb4i6rgn34cd0bxa098rw3gz2vpkv54g5dsal4d4a8nznnr3d0") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.2 (c (n "somedoc") (v "0.2.2") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)))) (h "0kygb2kni4rnbn5nymy5l754w9h8rvrmbamcn0hw5psq2alh94fs") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.3 (c (n "somedoc") (v "0.2.3") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "1s9lq80z71q1dc8lk3ki62vk4z9fwvxx0c912frk9ynfdmnr21cn") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.4 (c (n "somedoc") (v "0.2.4") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "0cs7ny0aqikcwdz5pgcrb57xyvg0al3xlli8bs7y8s8ha7kg36kh") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.5 (c (n "somedoc") (v "0.2.5") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "17rwfnjiwlk5xwrws0nws143riwxh3zvavzvgcap6pci78f9vnwm") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.6 (c (n "somedoc") (v "0.2.6") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "0i8bzgvcgq6rb7dybz1wdgc96ifn9c95xll7kydf6vkhh5j9226l") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.7 (c (n "somedoc") (v "0.2.7") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "1sf9nqsm1hlimic5civbrzc8wyscsz8qp3qvy1lrfxb4qznvz64s") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.8 (c (n "somedoc") (v "0.2.8") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "1j3k79qlz7y6rkgk31abv67j3sv261kmg094db5cdn49qgagx91j") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.9 (c (n "somedoc") (v "0.2.9") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "0ag66l55js8zycqw6dh3wr6dxvshzra26n7mrrnfip2sp7b3k1xv") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

(define-public crate-somedoc-0.2.10 (c (n "somedoc") (v "0.2.10") (d (list (d (n "blob-uuid") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (o #t) (d #t) (k 0)))) (h "0bpldabiqm0ibnrzzyi41bnndldkczhjn113n8f2wyvpzw3dpcrf") (f (quote (("math_builder") ("fmt_markdown") ("fmt_latex") ("fmt_json" "serde" "serde_json") ("fmt_html") ("emoji_names") ("default" "fmt_html" "fmt_json" "fmt_latex" "fmt_markdown"))))))

