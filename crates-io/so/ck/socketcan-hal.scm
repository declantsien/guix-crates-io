(define-module (crates-io so ck socketcan-hal) #:use-module (crates-io))

(define-public crate-socketcan-hal-2.0.0 (c (n "socketcan-hal") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 0)))) (h "09g6rcjxijyn0hx8idb8drdn47wv644ryzd6f6v84iz3m5cb5n9w") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink" "neli") ("default" "netlink"))))))

(define-public crate-socketcan-hal-3.0.0 (c (n "socketcan-hal") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 0)))) (h "0vln2zxv56330i8g86vcbzcjx3ynx584jv8bhs0i1fpblgzdjp99") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink" "neli") ("default" "netlink")))) (y #t)))

(define-public crate-socketcan-hal-3.0.0-alpha.2 (c (n "socketcan-hal") (v "3.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 0)))) (h "04r6r44z9aa66ng08mxg2r4fmaim80jadnf86nh64gzag0ifn7p1") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink" "neli") ("default" "netlink"))))))

