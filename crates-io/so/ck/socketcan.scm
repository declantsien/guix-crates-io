(define-module (crates-io so ck socketcan) #:use-module (crates-io))

(define-public crate-socketcan-1.1.0 (c (n "socketcan") (v "1.1.0") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "0z56vl93yw0sl0b9hry8g97yqklcvdivmhhjr5anr845mdjmwnbb")))

(define-public crate-socketcan-1.1.1 (c (n "socketcan") (v "1.1.1") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1zs1sbra3l733cw0s0cg25dvigmm61r1m1kx0fpwa7y5jynnayqr")))

(define-public crate-socketcan-1.1.2 (c (n "socketcan") (v "1.1.2") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1gqphl5nbx17zv698bprdw5fw9fb330bm4ih5bhh6kyddz8l5nz7") (y #t)))

(define-public crate-socketcan-1.1.3 (c (n "socketcan") (v "1.1.3") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "0vn21ivgn6hcz51r61c3cl0h7k9rl68a2bv3wbgvm2fhjnrh8k76") (y #t)))

(define-public crate-socketcan-1.2.0 (c (n "socketcan") (v "1.2.0") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1sf1ywv9c9625zibcqv12pbqzvpqlqn7ih4p20c64khy3yv1vpi9")))

(define-public crate-socketcan-1.2.1 (c (n "socketcan") (v "1.2.1") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "04wlky509mq8wirfw8x0l25ps7y68bigbff9xm51hacv13fw2npj")))

(define-public crate-socketcan-1.1.4 (c (n "socketcan") (v "1.1.4") (d (list (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "0n4il70mql03f8mk2h7bkhxsdq01a34n403p8sf0manflqd4wyz5")))

(define-public crate-socketcan-1.3.0 (c (n "socketcan") (v "1.3.0") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1d0pzcwaf6vnw90wm0y4fj68b2kmlbncjw6lzxbdfb4qg8vzjnb6")))

(define-public crate-socketcan-1.4.0 (c (n "socketcan") (v "1.4.0") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1vgrss1p4x3cravgh0rqda85flfby27vsanzcgh545h8fki8f13y")))

(define-public crate-socketcan-1.5.0 (c (n "socketcan") (v "1.5.0") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "0jsym0wv0x18rir09r6gbx5bf6iyaqw8x4giaiag3g4giry4jq1w")))

(define-public crate-socketcan-1.5.1 (c (n "socketcan") (v "1.5.1") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)))) (h "1aiikw69d7dip8agkgvq8mpcs90gyfswv8pwimhr583dzbh7dpnh")))

(define-public crate-socketcan-1.6.0 (c (n "socketcan") (v "1.6.0") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "0ygffpwcng36032npppv80g9g1pwmxpycx0m0vjx17gfsdfkasn5") (f (quote (("vcan_tests"))))))

(define-public crate-socketcan-1.7.0 (c (n "socketcan") (v "1.7.0") (d (list (d (n "hex") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.5") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "103c8jb4c3nrijasyqyapa1s3dspjx31n948lk0z3xjsxz3fy09i") (f (quote (("vcan_tests"))))))

(define-public crate-socketcan-2.0.0 (c (n "socketcan") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ly01g2dkk8z82v59knfxnclczpisifs3pir9anjq48wkqnw5x57") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (r "1.64")))

(define-public crate-socketcan-2.1.0 (c (n "socketcan") (v "2.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "~4.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "~4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1afrzfhgpa4nq5dbr8axna2rjcgj5m01bf8ib0mw0y9az78y4i46") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (r "1.65")))

(define-public crate-socketcan-3.0.0 (c (n "socketcan") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-io") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (f (quote ("async"))) (d #t) (k 2)) (d (n "smol") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)))) (h "128zqkz1shxcn27vqhkv61wk8nc3m133z3ysyqy4lc30l9wqwg0y") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (s 2) (e (quote (("tokio" "dep:tokio" "mio" "futures") ("async-std" "dep:async-std" "dep:async-io")))) (r "1.65")))

(define-public crate-socketcan-3.1.0 (c (n "socketcan") (v "3.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-io") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (f (quote ("async"))) (d #t) (k 2)) (d (n "smol") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)))) (h "1zjrjhxczdgh24qrn5cm089nryzcr1qzlawn4xk0g8jbpjlq6s9j") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (s 2) (e (quote (("tokio" "dep:tokio" "mio" "futures") ("async-std" "dep:async-std" "dep:async-io")))) (r "1.65")))

(define-public crate-socketcan-3.2.0 (c (n "socketcan") (v "3.2.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-io") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (f (quote ("async"))) (d #t) (k 2)) (d (n "smol") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)))) (h "11jcbnajrk41p20cm7ly5rmppwl2yma7xzygzcvdyz4mjkpsmyzi") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (s 2) (e (quote (("tokio" "dep:tokio" "mio" "futures") ("async-std" "dep:async-std" "dep:async-io")))) (r "1.65")))

(define-public crate-socketcan-3.3.0 (c (n "socketcan") (v "3.3.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-io") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte_conv") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 2)) (d (n "neli") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (f (quote ("async"))) (d #t) (k 2)) (d (n "smol") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)))) (h "1dij8naywdplpn3f0vlsjawsjcqn8zbzw9jr7xfnrpyynyfyyphp") (f (quote (("vcan_tests" "netlink") ("utils" "clap" "anyhow") ("netlink_tests" "netlink") ("netlink" "neli") ("dump") ("default" "netlink" "dump")))) (s 2) (e (quote (("tokio" "dep:tokio" "mio" "futures") ("async-std" "dep:async-std" "dep:async-io")))) (r "1.65")))

