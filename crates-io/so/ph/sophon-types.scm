(define-module (crates-io so ph sophon-types) #:use-module (crates-io))

(define-public crate-sophon-types-0.5.2 (c (n "sophon-types") (v "0.5.2") (d (list (d (n "crunchy") (r "^0.2.1") (k 0)) (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "fixed-hash") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sophon-types-serialize") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.5") (k 0)))) (h "0g6r65b82ckgnqypr6ipvykz3w2wvx3hh981jbiakvg39h28yxrh") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "crunchy/std") ("serialize" "std" "sophon-types-serialize" "serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize" "fixed-hash/byteorder" "fixed-hash/rustc-hex"))))))

(define-public crate-sophon-types-0.4.2 (c (n "sophon-types") (v "0.4.2") (d (list (d (n "crunchy") (r "^0.1") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5") (k 0)) (d (n "fixed-hash") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sophon-types-serialize") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.4") (k 0)))) (h "0h9pycdxqnx8cf8l10l9yz8w4hbv0vbpdsr37h49llxhnmyyzip8") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "sophon-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

