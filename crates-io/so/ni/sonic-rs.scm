(define-module (crates-io so ni sonic-rs) #:use-module (crates-io))

(define-public crate-sonic-rs-0.0.1 (c (n "sonic-rs") (v "0.0.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1bnf6x69iibb24md8i9lhcw45d85smc499gc9lw9wv33s11jqbsa") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.1.0 (c (n "sonic-rs") (v "0.1.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1bbx3ii2qyx8km6dnx3mswqxvgkgf2ibxaiif37hycibvgjl8gwr") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.1.1 (c (n "sonic-rs") (v "0.1.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1xlpf0hhnrzc0lsw5p8pssbf1bjxxqlsd8qmiqd0bijlaj5gpggl") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.1.2 (c (n "sonic-rs") (v "0.1.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "0jqvnwv3abvba6qhlaf6rjq5dsglzq2lw60qpycy0bn8zzclwza1") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.1.3 (c (n "sonic-rs") (v "0.1.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17i0qm68h5hix9zxvz3bdh2ycb7jlalkrxqk1mcg1yxqkmmmczqn") (f (quote (("utf8" "simdutf8") ("default"))))))

(define-public crate-sonic-rs-0.1.4 (c (n "sonic-rs") (v "0.1.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.12") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jf5nb6lsdgn817mqb8g3skqv5y7rdz37i7gw79hkdp44pdplwd6") (f (quote (("utf8" "simdutf8") ("default"))))))

(define-public crate-sonic-rs-0.2.0 (c (n "sonic-rs") (v "0.2.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01ns31gnx7alq97vnaj9yhwafzq256ib8h5618v8319v0fyrvayq") (f (quote (("default")))) (y #t)))

(define-public crate-sonic-rs-0.2.1 (c (n "sonic-rs") (v "0.2.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1f24csj45rmi1mzyb7xin3wkfmwa5m1211d8ji8jm3sy1asskfga") (f (quote (("default")))) (y #t)))

(define-public crate-sonic-rs-0.2.2 (c (n "sonic-rs") (v "0.2.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a6ghf1ppj51kbcs1y9m15a8qymhxbc70gwd9v5lhkx77824fs0l") (f (quote (("default")))) (y #t)))

(define-public crate-sonic-rs-0.2.3 (c (n "sonic-rs") (v "0.2.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0f8j0nfacrlq8gqysxihly560ljz6ynr82bj3jmycjjxgkaxc53q") (f (quote (("default")))) (y #t)))

(define-public crate-sonic-rs-0.2.4 (c (n "sonic-rs") (v "0.2.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0myca4xc6wqlw54ld1j9yw2hhjizq8nqb1g9g1jzzm1nla31jw8h") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.2.5 (c (n "sonic-rs") (v "0.2.5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xbwyadafscipda0v6q8snp92yhrm68ad7w67jc5h2zy67m103x4") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.2.6 (c (n "sonic-rs") (v "0.2.6") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m52p5qs4q0jwih6fbj5l4w1kjb6fvisawxymkmmdb9pngi1al5m") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.0 (c (n "sonic-rs") (v "0.3.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3") (d #t) (k 0) (p "packed_simd")) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dv356f72jdvg37ndv8d2shhf78qgyd9zrn1ivnqpijpnhdqhiap") (f (quote (("default")))) (y #t)))

(define-public crate-sonic-rs-0.3.1 (c (n "sonic-rs") (v "0.3.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "165s09lln2q2g5rbr7a8xg25k9p2bpdwwndh7pwsmsl3ka3yd7li") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.2 (c (n "sonic-rs") (v "0.3.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gamkpch1kj1fdnqikn34s24nswysxfmpbr5wz35n9cxvmgqa34j") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.3 (c (n "sonic-rs") (v "0.3.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1fxl1zgbn16ym6paryq7myccz5ymkj6x7xmzyjmg2m4b70n9rb5m") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.4 (c (n "sonic-rs") (v "0.3.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10fr2qfzbraar85cg4b0ssh84y1jkg0b1bz75rdy7fsip3a6vcac") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.5 (c (n "sonic-rs") (v "0.3.5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07ld1imsidrl11d256mxx3bzds44dxzlp9srgqc8lqlj7c3f6h4q") (f (quote (("default"))))))

(define-public crate-sonic-rs-0.3.6 (c (n "sonic-rs") (v "0.3.6") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bumpalo") (r "^3.13") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "faststr") (r "^0.2") (d #t) (k 0)) (d (n "faststr") (r "^0.2") (d #t) (k 2)) (d (n "gjson") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "page_size") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "raw_value"))) (d #t) (k 2)) (d (n "simd-json") (r "^0.13") (d #t) (k 2)) (d (n "simdutf8") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01wl2j67x6gfh68q6jjy9lh5k2bnrm7fv9li773abqnlkpgkqk94") (f (quote (("sort_keys") ("default") ("arbitrary_precision"))))))

