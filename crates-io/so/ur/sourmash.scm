(define-module (crates-io so ur sourmash) #:use-module (crates-io))

(define-public crate-sourmash-0.1.1 (c (n "sourmash") (v "0.1.1") (d (list (d (n "backtrace") (r "^0.3.4") (d #t) (k 0)) (d (n "cbindgen") (r "^0.3.3") (d #t) (k 1)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "murmurhash3") (r "~0.0.5") (d #t) (k 0)) (d (n "ordslice") (r "^0.2.0") (d #t) (k 0)))) (h "1sn4pks1xkw2rwh256d7yq9bb8rkkjwgkz9nhr40axns0zaancgw")))

(define-public crate-sourmash-0.3.0 (c (n "sourmash") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^0.12.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^1.0") (t "cfg(not(all(target_arch = \"wasm32\", target_vendor = \"unknown\")))") (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.2") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "1xvc92yk8jfyfamplahswv56g8avbdhxyaz10v6g7g766lsj7qqd") (f (quote (("from-finch" "finch"))))))

(define-public crate-sourmash-0.4.0 (c (n "sourmash") (v "0.4.0") (d (list (d (n "assert_cmd") (r "^0.12.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^1.0") (t "cfg(not(all(target_arch = \"wasm32\", target_vendor = \"unknown\")))") (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.2") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "0gnxwlp9vbmf1gz8m693xdjj82248c60y2sdxlgy5hcjs807955m") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.5.0 (c (n "sourmash") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^0.12.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^1.0") (t "cfg(not(all(target_arch = \"wasm32\", target_vendor = \"unknown\")))") (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.2") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "0sb6gxzlljsc6fx8c55b4cwvgbl6jmrksjl1inywxk9wx81f9wn8") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.6.0 (c (n "sourmash") (v "0.6.0") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^2.0") (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.2") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "0523pwl7vifr0f53j6f3qyk846wycnwkdr35hw3wqpr1d84fbhlb") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.7.0 (c (n "sourmash") (v "0.7.0") (d (list (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^2.0.0") (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "0lyifccj5qpxn3d4qiyj9pdlmhnv0hsi3yvdkrwgcbw9sjxl8av2") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.8.0 (c (n "sourmash") (v "0.8.0") (d (list (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.3.2") (k 2)) (d (n "niffler") (r "^2.0.0") (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "typed-builder") (r "^0.4.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "1wgh3kz3i65zzb76aw57f95y3zj3c6px4hh167mrazb3xbch318v") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.9.0 (c (n "sourmash") (v "0.9.0") (d (list (d (n "assert_cmd") (r "^1.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4.0") (k 2)) (d (n "niffler") (r "^2.2.0") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 2)))) (h "16g1q486cwhijigglc187nkazpbr18s850wxznhx18vrpvf5avw0") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.10.0 (c (n "sourmash") (v "0.10.0") (d (list (d (n "assert_cmd") (r "^1.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "finch") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4.0") (k 2)) (d (n "niffler") (r "^2.2.0") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 2)) (d (n "primal-check") (r "^0.2.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.7.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 2)))) (h "1y2m3dj9dmwb0c35vdic7rp5z43m6xqwh64cf3xmq931awfra5w3") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.11.0 (c (n "sourmash") (v "0.11.0") (d (list (d (n "assert_cmd") (r "^1.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "az") (r "^1.0.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.56") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "finch") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.4.1") (k 2)) (d (n "niffler") (r "^2.3.1") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.41") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 2)) (d (n "primal-check") (r "^0.3.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "rayon") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3.51") (f (quote ("console" "File"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\"))") (k 0)))) (h "1d5wz9gg1hdxblnlzklbvpg32fawy00vdfn43ax5a5jfdbj05cd7") (f (quote (("parallel" "rayon") ("from-finch" "finch"))))))

(define-public crate-sourmash-0.12.0 (c (n "sourmash") (v "0.12.0") (d (list (d (n "az") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("wasmbind"))) (d #t) (t "cfg(all(target_arch = \"wasm32\"))") (k 0)) (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "finch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "histogram") (r "^0.6.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (k 2)) (d (n "niffler") (r "^2.3.1") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18.0") (d #t) (k 0)) (d (n "piz") (r "^0.5.0") (d #t) (k 0)) (d (n "primal-check") (r "^0.3.1") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "roaring") (r "^0.10.0") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.168") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "vec-collections") (r "^0.4.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console" "File"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)))) (h "0jpxm4kj164ap4wxgwh4isdfgl1fjb8fdi245h9980n7kh27n33n") (f (quote (("parallel" "rayon") ("maturin") ("from-finch" "finch") ("default") ("branchwater" "rocksdb" "rkyv" "parallel")))) (r "1.64.0")))

(define-public crate-sourmash-0.12.1 (c (n "sourmash") (v "0.12.1") (d (list (d (n "az") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (f (quote ("wasmbind"))) (d #t) (t "cfg(all(target_arch = \"wasm32\"))") (k 0)) (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "finch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "histogram") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.4") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (k 2)) (d (n "niffler") (r "^2.3.1") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18.3") (d #t) (k 0)) (d (n "piz") (r "^0.5.0") (d #t) (k 0)) (d (n "primal-check") (r "^0.3.1") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (o #t) (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "vec-collections") (r "^0.4.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.40") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3.67") (f (quote ("console" "File"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)))) (h "0255skh9pfswgyjdfkn0mfzdnl9jh6znwasjvihj4hw70yh8g0da") (f (quote (("parallel" "rayon") ("maturin") ("from-finch" "finch") ("default") ("branchwater" "rocksdb" "rkyv" "parallel")))) (r "1.65.0")))

(define-public crate-sourmash-0.13.0 (c (n "sourmash") (v "0.13.0") (d (list (d (n "az") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.32") (f (quote ("wasmbind"))) (d #t) (t "cfg(all(target_arch = \"wasm32\"))") (k 0)) (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "finch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "histogram") (r "^0.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.4") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (k 2)) (d (n "niffler") (r "^2.3.1") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18.3") (d #t) (k 0)) (d (n "piz") (r "^0.5.0") (d #t) (k 0)) (d (n "primal-check") (r "^0.3.1") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (o #t) (d #t) (k 0)) (d (n "roaring") (r "^0.10.3") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "vec-collections") (r "^0.4.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.41") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3.68") (f (quote ("console" "File"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)))) (h "0jg7cm2h2md430d04vx8qig2apwcbl794q790m2bnyrqnwy437mf") (f (quote (("parallel" "rayon") ("maturin") ("from-finch" "finch") ("default") ("branchwater" "rocksdb" "rkyv" "parallel")))) (r "1.65.0")))

(define-public crate-sourmash-0.13.1 (c (n "sourmash") (v "0.13.1") (d (list (d (n "az") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.32") (f (quote ("wasmbind"))) (d #t) (t "cfg(all(target_arch = \"wasm32\"))") (k 0)) (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "finch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "histogram") (r "^0.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.68") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.4") (d #t) (k 0)) (d (n "murmurhash3") (r "^0.0.5") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (k 0)) (d (n "niffler") (r "^2.3.1") (f (quote ("gz"))) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18.3") (d #t) (k 0)) (d (n "piz") (r "^0.5.0") (d #t) (k 0)) (d (n "primal-check") (r "^0.3.1") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "rayon") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (o #t) (d #t) (k 0)) (d (n "roaring") (r "^0.10.3") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "vec-collections") (r "^0.4.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console" "File" "FileReaderSync"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os=\"unknown\"))") (k 0)))) (h "0ff7xbh52swh54p3155qqkdayggd15n1pshgs9bqfh1jgzhzfk08") (f (quote (("parallel" "rayon") ("maturin") ("from-finch" "finch") ("default") ("branchwater" "rocksdb" "rkyv" "parallel")))) (r "1.65.0")))

