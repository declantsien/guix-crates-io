(define-module (crates-io rt c- rtc-sctp) #:use-module (crates-io))

(define-public crate-rtc-sctp-0.1.0 (c (n "rtc-sctp") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "retty") (r "^0.24") (d #t) (k 0)) (d (n "shared") (r "^0.1") (k 0) (p "rtc-shared")) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1na5c5irqghpgldrqy2sbmnz6kcj74f03vkkzawbzdmnv651w9jv")))

(define-public crate-rtc-sctp-0.1.1 (c (n "rtc-sctp") (v "0.1.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "shared") (r "^0.1.1") (k 0) (p "rtc-shared")) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1d4bs3b9jhz51hfdykqs47x6my92s1p25x8jy5g16n4hqghwsk6s")))

(define-public crate-rtc-sctp-0.2.0 (c (n "rtc-sctp") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "shared") (r "^0.2.0") (k 0) (p "rtc-shared")) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)))) (h "1xrckjqjbdc4p4ywx3h9kam7qlkbzbiifgwqin62s654ihklydk4")))

