(define-module (crates-io rt z- rtz-core) #:use-module (crates-io))

(define-public crate-rtz-core-0.1.0 (c (n "rtz-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "geojson") (r "^0.24.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1x9ds7i8pcfym90cphwmkli2ffn4qik3hmagch1n4sr7yxc7fkn8") (f (quote (("tz-ned") ("self-contained" "bincode") ("full" "tz-ned" "self-contained") ("double-precision") ("default"))))))

(define-public crate-rtz-core-0.1.1 (c (n "rtz-core") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.72") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "geojson") (r "^0.24.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1mnx8p1d5kslm6lbmiwxh82xg0hrm7krsxh72lpj62mszsd79j3n") (f (quote (("unsimplified") ("tz-osm") ("tz-ned") ("self-contained" "bincode") ("full" "tz-ned" "tz-osm" "self-contained") ("double-precision") ("default"))))))

(define-public crate-rtz-core-0.1.2 (c (n "rtz-core") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.72") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "geojson") (r "^0.24.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1yfrxbjp83ajz7id648d4p0pynk0mnh06939ddx2613k97g7v3c7") (f (quote (("unsimplified") ("tz-osm") ("tz-ned") ("self-contained" "bincode") ("full" "tz-ned" "tz-osm" "self-contained") ("double-precision") ("default"))))))

(define-public crate-rtz-core-0.1.4 (c (n "rtz-core") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.72") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("std" "alloc" "serde" "derive"))) (o #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "geojson") (r "^0.24.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "1ljkhlxx7vkjg77lfz8szv9bq21v0d62igj96n89pd5sn1q6rwlz") (f (quote (("unsimplified") ("tz-osm") ("tz-ned") ("self-contained" "bincode") ("full" "tz-ned" "tz-osm" "admin-osm" "self-contained") ("extrasimplified") ("double-precision") ("default") ("admin-osm"))))))

