(define-module (crates-io rt vm rtvm-primitives) #:use-module (crates-io))

(define-public crate-rtvm-primitives-3.1.1 (c (n "rtvm-primitives") (v "3.1.1") (d (list (d (n "alloy-primitives") (r "^0.7") (f (quote ("rlp"))) (k 0)) (d (n "auto_impl") (r "^1.2") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "c-kzg") (r "^1.0.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hex") (r "^0.4") (k 1)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "0m4409gg18x08qmd36203g568njmd4wll54i20pz6fj8bvq445vh") (f (quote (("rand" "alloy-primitives/rand") ("optional_no_base_fee") ("optional_gas_refund") ("optional_eip3607") ("optional_block_gas_limit") ("optional_beneficiary_reward") ("optional_balance_check") ("optimism-default-handler" "optimism") ("optimism") ("negate-optimism-default-handler") ("memory_limit") ("hashbrown") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std" "c-kzg" "portable") ("asm-keccak" "alloy-primitives/asm-keccak") ("arbitrary" "std" "alloy-primitives/arbitrary" "bitflags/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "alloy-primitives/std" "hex/std" "bitvec/std" "bitflags/std") ("serde" "dep:serde" "alloy-primitives/serde" "hex/serde" "hashbrown/serde" "bitvec/serde" "bitflags/serde" "c-kzg?/serde") ("portable" "c-kzg?/portable") ("c-kzg" "dep:c-kzg" "dep:once_cell" "dep:derive_more"))))))

