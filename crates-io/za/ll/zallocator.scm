(define-module (crates-io za ll zallocator) #:use-module (crates-io))

(define-public crate-zallocator-0.1.0 (c (n "zallocator") (v "0.1.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "19c7zkq9si6y83nb1yqy1y009qghvq1rma681z8s0p3h0wpahagn") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.1 (c (n "zallocator") (v "0.1.1") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0cgci4jg958vyvimhsfkg6xacngmxik7lfprw2m2lk7q6daic86h") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.2 (c (n "zallocator") (v "0.1.2") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1bq8rcypzmlni9ajli4p2bq8gr4b0j3pr96m8aqchkwf7gnxybhn") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.3 (c (n "zallocator") (v "0.1.3") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "122bjm2kac1zlnixixm6lmg9qlim8dkdgy3zmy2197nx2wvbbhz9") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.4 (c (n "zallocator") (v "0.1.4") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0a9rzmk3lqlm07i995sb8mgc26kc5q0sycdy1v7sn9gf0hn72c45") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.5 (c (n "zallocator") (v "0.1.5") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1p79d48v1grcjkrjv4i8s7wfhcvfj12cci5zh19h2zrrp7i8ylpf") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown") ("pool" "crossbeam-channel") ("nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.6 (c (n "zallocator") (v "0.1.6") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "09a00xcid5vzdhxafvqxzvf5csrmhq4im7dkc8dy2bpq2naxs9pi") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default") ("pool" "crossbeam-channel") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.1.7 (c (n "zallocator") (v "0.1.7") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.7") (k 0)))) (h "19vm3qc7ncf3d55dh535i4mfhjrkvhvp5dlrcbdg54l9bbdz80l3") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("pool" "crossbeam-channel") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.2.0 (c (n "zallocator") (v "0.2.0") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.7") (k 0)))) (h "0yxqkwavnxyf7iam9ddcsqkbrmrkmq0yycpsnfv53zm3vriaa8mj") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("pool" "std" "crossbeam-channel") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "std" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.2.1 (c (n "zallocator") (v "0.2.1") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.7") (k 0)))) (h "0llkmjpih67jbnpq573wsc5x5wk7przcabaijr1gh2p6awkhk19q") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("pool" "std" "crossbeam-channel") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "std" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.2.3 (c (n "zallocator") (v "0.2.3") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (k 0)))) (h "0lwgj4a8rrpiggcv5lb204gw844dhmh6c0yfmksnyxszs8v41dwx") (f (quote (("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("pool" "std" "crossbeam-channel") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "pool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "std" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.3.0 (c (n "zallocator") (v "0.3.0") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (k 0)))) (h "1gbzrdm7rij6y23ylaxk1y9zsvn8b882aswaa1pkgkz5sbkp59ly") (f (quote (("threadpool" "crossbeam-channel") ("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "threadpool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.3.1 (c (n "zallocator") (v "0.3.1") (d (list (d (n "async-channel") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "async-io") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (k 0)))) (h "186v6w6kff6k00ir75zc865z1mqlwh1pwfkhisr05hd2g0k2gz10") (f (quote (("threadpool" "crossbeam-channel") ("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "hashbrown" "crossbeam-utils/default" "triomphe/default") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js") ("inline-more" "hashbrown/inline-more") ("full" "std" "async-pool" "threadpool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown") ("async-pool" "pollster" "futures/default" "async-channel" "async-io")))) (y #t)))

(define-public crate-zallocator-0.4.0 (c (n "zallocator") (v "0.4.0") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (f (quote ("async-await-macro"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.7") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smol") (r "^2") (o #t) (k 0)) (d (n "smol") (r "^2") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xfrkyn8xvg7zlykzqcrm0rk3s1643i7j0ia8v54yzdrmgyywrx5") (f (quote (("threadpool" "crossbeam-channel") ("std" "rand/std" "rand/std_rng" "lazy_static" "parking_lot" "crossbeam-utils/default" "crossbeam-queue/default" "triomphe/default") ("nightly" "crossbeam-utils/nightly") ("js" "getrandom/js" "futures-timer/wasm-bindgen") ("inline-more" "hashbrown/inline-more") ("future" "futures-util" "futures-timer") ("full" "std" "future" "threadpool") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown")))) (y #t)))

(define-public crate-zallocator-0.5.0 (c (n "zallocator") (v "0.5.0") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "loom") (r "^0.7") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smol") (r "^2") (o #t) (k 0)) (d (n "smol") (r "^2") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (k 0)))) (h "0giiy8gwgbl67v8myqmdfwig6abqjqf3sk0k2z6gv2kx9i3xzy0c") (f (quote (("std" "rand/std" "rand/std_rng" "parking_lot" "crossbeam-utils/default" "crossbeam-queue/default" "triomphe/default") ("js" "getrandom/js" "futures-timer/wasm-bindgen") ("future" "futures-timer") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio" "future") ("smol" "dep:smol" "future") ("async-std" "dep:async-std" "future")))) (r "1.70.0")))

(define-public crate-zallocator-0.5.1 (c (n "zallocator") (v "0.5.1") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (k 0)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(wasm)") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "loom") (r "^0.7") (d #t) (t "cfg(loom)") (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smol") (r "^2") (o #t) (k 0)) (d (n "smol") (r "^2") (d #t) (k 2)) (d (n "spin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "triomphe") (r "^0.1") (k 0)))) (h "126wi8kgqdjqi92n42vgh902w6jhbgkrj9028rdgba96czy95kg4") (f (quote (("std" "rand/std" "rand/std_rng" "parking_lot" "crossbeam-utils/default" "crossbeam-queue/default" "triomphe/default") ("js" "getrandom/js" "futures-timer/wasm-bindgen") ("future" "futures-timer") ("default" "std") ("core" "lazy_static/spin_no_std" "spin" "rand/alloc" "hashbrown")))) (s 2) (e (quote (("tokio" "dep:tokio" "future") ("smol" "dep:smol" "future") ("async-std" "dep:async-std" "future")))) (r "1.70.0")))

