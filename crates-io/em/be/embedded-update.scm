(define-module (crates-io em be embedded-update) #:use-module (crates-io))

(define-public crate-embedded-update-0.1.0 (c (n "embedded-update") (v "0.1.0") (d (list (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0bgzbp74ry5s9ay57pgrxghvkazdxhnbg1z3l4hq0dgnjsmvb0mq") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.2.0 (c (n "embedded-update") (v "0.2.0") (d (list (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1p2jvymf1rhv2qpnkg7n145jgg21809pz1kzcf2dzp38xjqy1q4a") (f (quote (("full" "embedded-hal-async" "futures") ("default" "full")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.3.0 (c (n "embedded-update") (v "0.3.0") (d (list (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "postcard") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "14kj7h340a0ci9lvmjbhp82b2184kk90hbncsq94bn0i2452ig9f") (f (quote (("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.4.0 (c (n "embedded-update") (v "0.4.0") (d (list (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "postcard") (r "^1.0.0-alpha.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0db5pxq7d7kn8w2jfjinbka11cpbijghaxq1yrhck6j5sz0ip5qv") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.5.0 (c (n "embedded-update") (v "0.5.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std"))) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.0-alpha.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "11241yz5v9k5zwcp1wlcrf30zh4rw0jdka0dl4rkn7br16ymmv0y") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.6.0 (c (n "embedded-update") (v "0.6.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std"))) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "067mm2z38p8qmlk3xqsb6pq9r26klggvs15vrfs1ma5nzp3xahzm") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.6.1 (c (n "embedded-update") (v "0.6.1") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std"))) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1w9ln6643wmfk8x9zrkqsxaalhhcgqayr8kvy71br7di6zfvmlna") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.7.0 (c (n "embedded-update") (v "0.7.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "embedded-nal-async") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "embedded-tls") (r "^0.8.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "reqwless") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "16faladdmv0s0pr8nq30cyrq5a55wgwjrdyc5xlc6g6q55kgy5ky") (f (quote (("tls" "embedded-tls") ("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("drogue" "reqwless" "embedded-nal-async" "rand_core" "serde_cbor") ("default" "nightly" "drogue" "tls")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.8.0 (c (n "embedded-update") (v "0.8.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "=0.1.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "embedded-nal-async") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "embedded-tls") (r "^0.8.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "reqwless") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1063x5rgfp9dnf3h45bihwi3m7r53k1n3qfazliq1bnb3w5705va") (f (quote (("tls" "embedded-tls") ("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("drogue" "reqwless" "embedded-nal-async" "rand_core" "serde_cbor") ("default" "nightly" "drogue" "tls")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.9.0 (c (n "embedded-update") (v "0.9.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "=0.1.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "embedded-nal-async") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "embedded-tls") (r "^0.8.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "reqwless") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "15n2drwl0xqpp3a1lvkb2s2d6bfs6b9622x49ly0ag7a0h4pdm1s") (f (quote (("tls" "embedded-tls") ("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("drogue" "reqwless" "embedded-nal-async" "rand_core" "serde_cbor") ("default" "nightly" "drogue" "tls")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.9.1 (c (n "embedded-update") (v "0.9.1") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "=0.1.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3.1") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.3.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "embedded-nal-async") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "embedded-tls") (r "^0.9.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "reqwless") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1yaa8w6znqn882dycq33vgxjnhmyawdif7fwfjrbfjxqx0nq7dpa") (f (quote (("tls" "embedded-tls") ("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("drogue" "reqwless" "embedded-nal-async" "rand_core" "serde_cbor") ("default" "nightly" "drogue" "tls")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.10.0 (c (n "embedded-update") (v "0.10.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "=0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "09qyggajxazg9r5hy9zihcnq0pr43kyfcw122gda91kcbs495ggv") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.11.0 (c (n "embedded-update") (v "0.11.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "=0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (o #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async" "std" "tokio" "log"))) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "106lfr3xsc0faynra66s36il3sr0dydl53paw1s7l1dhrpskwzng") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-embedded-update-0.12.0 (c (n "embedded-update") (v "0.12.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-adapters") (r "^0.6.0") (f (quote ("std" "futures-03" "tokio-1"))) (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("std"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1qph8q3pq125g182y002qvavdk2q1s683g1cw47kr3n8qh3yxanl") (f (quote (("std") ("nightly" "embedded-hal-async" "futures" "postcard" "embedded-io-async") ("default" "nightly")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

