(define-module (crates-io em be embedded-redis) #:use-module (crates-io))

(define-public crate-embedded-redis-0.1.0 (c (n "embedded-redis") (v "0.1.0") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (d #t) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "0mg24325zn9rl74miw94llj7vnrlfq37yz1zjjb5zgy53ncz1sf3") (y #t)))

(define-public crate-embedded-redis-0.1.1 (c (n "embedded-redis") (v "0.1.1") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "1rw66g39lwfs8kg46jh475qi0i5simicjv5qlbb3nk03nl7qzkp1")))

(define-public crate-embedded-redis-0.2.0 (c (n "embedded-redis") (v "0.2.0") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "125bw05mvvfq02z7g39zalv7l4qfgi03v4p559lp43k6naxrggz1") (f (quote (("mock" "mockall") ("default"))))))

(define-public crate-embedded-redis-0.3.0 (c (n "embedded-redis") (v "0.3.0") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "10mk98vnzxnpbcl29rg90sh4a9y3m0p93dwrd6avijyggxicpb72") (f (quote (("mock" "mockall") ("default"))))))

(define-public crate-embedded-redis-0.3.1 (c (n "embedded-redis") (v "0.3.1") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "0nmf03ssn5s8g9mgi8b70sq20qd5ra1x24mil2ridhxf9d7h4igj") (f (quote (("mock" "mockall") ("default"))))))

(define-public crate-embedded-redis-0.3.2 (c (n "embedded-redis") (v "0.3.2") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "1jy2skh6xw9ndb17y1b7mah0sp2yiqlrmvk3ijkc2m7g9ni0dnj6") (f (quote (("strict") ("mock" "mockall") ("default"))))))

(define-public crate-embedded-redis-0.4.0 (c (n "embedded-redis") (v "0.4.0") (d (list (d (n "bytes") (r "^1.1.0") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.1.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.2") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "0ascfw386h31752mwqh0wnq88clrja9mivxfhayxwg05gam5pm98") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.4.1 (c (n "embedded-redis") (v "0.4.1") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.3") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "18b0x5dczfxpacfkmyv4lcmsl725qyjw0xj1l6amnxpajri6mwc4") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.5.0 (c (n "embedded-redis") (v "0.5.0") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.3") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "11cg56fhgw20l6vvikpzh3gmkhsmij009wirbdrqdazq4f2j31ad") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.6.0 (c (n "embedded-redis") (v "0.6.0") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.1.3") (d #t) (k 2)) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "1f1jc8s3i5wkrx9yq5fbjjsqlmyrpfx2q5dpw21y7bw8inr714km") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.7.0 (c (n "embedded-redis") (v "0.7.0") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.8.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.3.0") (d #t) (k 2) (p "mm-std-embedded-nal")) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "0hjqqh7f665d1mg80xp7a9ybi6y0knhcfs1gski4gzl74dr9gzvm") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.7.1 (c (n "embedded-redis") (v "0.7.1") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.8.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.3.0") (d #t) (k 2) (p "mm-std-embedded-nal")) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "1wa7yxy74c5xnvqc94l1ky1k0s8lx8564arr3wr83vzrr7bkqzhh") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.7.2 (c (n "embedded-redis") (v "0.7.2") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.8.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.3.0") (d #t) (k 2) (p "mm-std-embedded-nal")) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "1x9468akafzxyi01nqc8r402b1m9h1fv44snjl89xnljfilzc1xj") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

(define-public crate-embedded-redis-0.7.3 (c (n "embedded-redis") (v "0.7.3") (d (list (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "embedded-nal") (r "^0.8.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "redis-protocol-mm") (r "^4.2.0") (f (quote ("libm" "hashbrown" "alloc"))) (k 0)) (d (n "std-embedded-nal") (r "^0.3.0") (d #t) (k 2) (p "mm-std-embedded-nal")) (d (n "std-embedded-time") (r "^0.1.0") (d #t) (k 2)))) (h "0n3wvsk8k90vw3jjjaxrfn2sd64dv61kla9qgfzd12vh2jxjk5l2") (f (quote (("strict") ("mock" "mockall") ("default") ("benchmarks"))))))

