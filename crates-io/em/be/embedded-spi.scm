(define-module (crates-io em be embedded-spi) #:use-module (crates-io))

(define-public crate-embedded-spi-0.1.0 (c (n "embedded-spi") (v "0.1.0") (d (list (d (n "embedded-hal") (r "^0.2.3-rc.1") (d #t) (k 0)))) (h "13zsi2hbf19ynlf42wixbvf8v43dlq86nixk5lvs95hb7niyia6n")))

(define-public crate-embedded-spi-0.2.0 (c (n "embedded-spi") (v "0.2.0") (d (list (d (n "embedded-hal") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)))) (h "0kicjz86vmk4m9dknihbhj1r47wkmljz84z57xq9f4xj6ripgvmj") (f (quote (("mock") ("default" "mock" "compat") ("compat" "libc"))))))

(define-public crate-embedded-spi-0.4.0 (c (n "embedded-spi") (v "0.4.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)))) (h "1f5zq42gin4a6b58hlnh0f1di4r77dlkcppkpvsaxc076n844r30") (f (quote (("mock") ("ffi" "libc") ("default" "mock" "ffi"))))))

(define-public crate-embedded-spi-0.5.0 (c (n "embedded-spi") (v "0.5.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)))) (h "1sc2fmn0r4fgiqj8kaxjkfjmphfzbw6s5i8d96bz66647z6wix9g") (f (quote (("mock") ("ffi" "libc") ("default" "mock" "ffi"))))))

(define-public crate-embedded-spi-0.5.1 (c (n "embedded-spi") (v "0.5.1") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)))) (h "1nz4160yvvx31bdqaa18k2yjlgmyxa5vdnbfmfz60zd42ah01b63") (f (quote (("mock") ("ffi" "libc") ("default" "mock" "ffi"))))))

(define-public crate-embedded-spi-0.5.2 (c (n "embedded-spi") (v "0.5.2") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1y6lp5ds3svl8dphm8h6bnvb9cirl6iq8bhhd50cc3xglfaq8q7m") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.3 (c (n "embedded-spi") (v "0.5.3") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1sc250isr9rl8v7wrr57lbc62ppk7m04kxibgaf807xahb6w8cpd") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.4 (c (n "embedded-spi") (v "0.5.4") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0j7jk8a7pnhbdfq3c8p8hr2lh3akwq921s9wvxs35shjlcgs3lkg") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.5 (c (n "embedded-spi") (v "0.5.5") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0hj1cgrjkcfm2154sbwhvw4823kf9ppzrkxw71sy9a4gjfch6jx6") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.6 (c (n "embedded-spi") (v "0.5.6") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1j013kj6a1x4xzj34r90p4y6xjz13vnzjw9cgc7p5ig2cqyivjf8") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.7 (c (n "embedded-spi") (v "0.5.7") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "15a36a375mb08c25n2yvgnfi5lb2g0qhi3ng4gv44gwpsgxcnvis") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.5.8 (c (n "embedded-spi") (v "0.5.8") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "01swwfr7fqyzr3vgjq8i546h10gqf52myzm0sqhvm91369phwc4j") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.6.0 (c (n "embedded-spi") (v "0.6.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1mzbzj4drsiapggh2illnq48y0bzl6pp1aigxca5jww1lm4ypc50") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.6.1 (c (n "embedded-spi") (v "0.6.1") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1k58imnsmpiih2lcswfg1l362b2sfmh5gz8xsqzc2wi9k8k8ayqa") (f (quote (("utils" "toml" "structopt" "serde" "simplelog" "linux-embedded-hal") ("mock") ("ffi" "libc") ("default" "mock" "ffi" "utils"))))))

(define-public crate-embedded-spi-0.6.2 (c (n "embedded-spi") (v "0.6.2") (d (list (d (n "driver-cp2130") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0gwkg0p306q01by4i7fsv7x8qdg7jxn77sknf99mhvgkvkb1ymxm") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

