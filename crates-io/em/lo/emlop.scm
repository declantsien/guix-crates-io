(define-module (crates-io em lo emlop) #:use-module (crates-io))

(define-public crate-emlop-0.2.0 (c (n "emlop") (v "0.2.0") (d (list (d (n "ansi_term") (r "~0.11") (d #t) (k 0)) (d (n "assert_cli") (r "~0.5") (d #t) (k 2)) (d (n "atty") (r "~0.2") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "~2.31") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "failure_derive") (r "~0.1") (d #t) (k 0)) (d (n "indoc") (r "~0.2") (d #t) (k 2)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "regex") (r "~0.2") (d #t) (k 0)) (d (n "stderrlog") (r "~0.3") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "~1.0") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "1w04j3kp3rksdmjs3dvrrsmpjn4k1dnv9d0lp4b9rv0swkgqb81c")))

(define-public crate-emlop-0.3.0 (c (n "emlop") (v "0.3.0") (d (list (d (n "ansi_term") (r "~0.11") (d #t) (k 0)) (d (n "assert_cli") (r "~0.6") (d #t) (k 2)) (d (n "atty") (r "~0.2") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "~2.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "failure_derive") (r "~0.1") (d #t) (k 0)) (d (n "indoc") (r "~0.3") (d #t) (k 2)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "regex") (r "~1.1") (d #t) (k 0)) (d (n "stderrlog") (r "~0.4") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "~1.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "1bjkv4awmca2n0m4j1ly9grrgb4wxh0w0b4rl77pmywwvbj7nn8i")))

(define-public crate-emlop-0.3.1 (c (n "emlop") (v "0.3.1") (d (list (d (n "ansi_term") (r "~0.11") (d #t) (k 0)) (d (n "assert_cli") (r "~0.6") (d #t) (k 2)) (d (n "atty") (r "~0.2") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "~2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3") (d #t) (k 0)) (d (n "failure") (r "~0.1") (d #t) (k 0)) (d (n "failure_derive") (r "~0.1") (d #t) (k 0)) (d (n "indoc") (r "~0.3") (d #t) (k 2)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "regex") (r "~1.1") (d #t) (k 0)) (d (n "stderrlog") (r "~0.4") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "~1.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "1wkgv9zpbn382xqazlxyj2m41112319h1n72fdiy22ph0hviijld")))

(define-public crate-emlop-0.4.0 (c (n "emlop") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.0") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "0cw5aqf4nlyima0ls89hpywra03ncxvmbs1n4lkdv67bmskbm6dq")))

(define-public crate-emlop-0.4.1 (c (n "emlop") (v "0.4.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.0") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "1aqxbnzsrxr78i7lvnzapzc562ywa21zsw804jxckfhhi8km5lqm")))

(define-public crate-emlop-0.4.2 (c (n "emlop") (v "0.4.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (d #t) (k 0)) (d (n "chrono-english") (r "~0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.0") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)))) (h "0anjjlypb2wa6glbra3alpdd4j47vj5yv29793rzhwhhcrxy684f")))

(define-public crate-emlop-0.5.0 (c (n "emlop") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (f (quote ("termcolor" "atty"))) (k 0)) (d (n "escargot") (r "^0.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "sysconf") (r "~0.3") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "local-offset" "macros"))) (d #t) (k 0)))) (h "0mfk50w7jacwwm5vzjf8zqdk3k2wn11k2n4wf206ch9jp45pb65q") (r "1.58.1")))

(define-public crate-emlop-0.6.0 (c (n "emlop") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "atoi") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.1.15") (f (quote ("cargo" "color" "suggestions" "derive"))) (k 0)) (d (n "clap_complete") (r "^3.1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "escargot") (r "^0.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.126") (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (f (quote ("std" "perf-inline" "perf-literal" "unicode-case"))) (k 0)) (d (n "rev_lines") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "local-offset" "macros"))) (d #t) (k 0)))) (h "0n26xilpg177fdd1dp425afhkyh5fwycz2f8pfxqhk9afmw4mh4w") (r "1.65.0")))

(define-public crate-emlop-0.6.1 (c (n "emlop") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "atoi") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.1.15") (f (quote ("cargo" "color" "suggestions" "derive"))) (k 0)) (d (n "clap_complete") (r "^3.1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (k 0)) (d (n "libc") (r "^0.2.126") (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (f (quote ("std" "perf-inline" "perf-literal" "unicode-case"))) (k 0)) (d (n "rev_lines") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "local-offset" "macros"))) (d #t) (k 0)))) (h "0gl7i1jgbndsjarhhcb5ipspfjvj7ki1mpw57c3przm5rqbycv1d") (r "1.65.0")))

(define-public crate-emlop-0.7.0 (c (n "emlop") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "assert_cmd") (r "~2.0.0") (d #t) (k 2)) (d (n "atoi") (r "^2.0.0") (d #t) (k 0)) (d (n "clap") (r "~4.4.11") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "~4.4.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.0") (f (quote ("auto-color"))) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.10.0") (f (quote ("std" "perf-inline" "perf-literal" "unicode-case"))) (k 0)) (d (n "rev_lines") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "time") (r "~0.3.18") (f (quote ("parsing" "formatting" "local-offset" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)))) (h "09sjbkzh09iasp0zqrf209a7z7nxkykmd1f96l08cd1jfkk3srjq") (f (quote (("unstable")))) (r "1.71.0")))

