(define-module (crates-io sw ee sweet-cli) #:use-module (crates-io))

(define-public crate-sweet-cli-0.1.0 (c (n "sweet-cli") (v "0.1.0") (d (list (d (n "clap") (r "^4.3.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "zbox") (r "^0.9.2") (f (quote ("libsodium-bundled" "storage-file"))) (d #t) (k 0)))) (h "07qwwda16vp8vj2g5i2glfpym4h7hzz6c33mva2pywxbcr367wqd") (y #t)))

(define-public crate-sweet-cli-0.1.34 (c (n "sweet-cli") (v "0.1.34") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "05k4f8b3fyksi3szmkdvfwa64i8fjqh900kvvy8rb8f1w6bqln54")))

(define-public crate-sweet-cli-0.1.35 (c (n "sweet-cli") (v "0.1.35") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19livjliikpf38zizwszr4yabwxfzacpkyv9m06ja46irh4idvax")))

(define-public crate-sweet-cli-0.1.36 (c (n "sweet-cli") (v "0.1.36") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mpqzplky9gclpggxnrmm79q8i0awrwwb4chm9pb6nchyyqn53a2")))

(define-public crate-sweet-cli-0.1.37 (c (n "sweet-cli") (v "0.1.37") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1wwfj9jgrnsyczmlraznjsmhi2c5y2a5lc9fpa6cb6l99hbqzkcy")))

(define-public crate-sweet-cli-0.1.38 (c (n "sweet-cli") (v "0.1.38") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "159df1a97l279x8f48h53qqa580d06qsh5858d9mjkyi1f0s6q92")))

(define-public crate-sweet-cli-0.1.39 (c (n "sweet-cli") (v "0.1.39") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0yxqb4hr4nl8wc43aprxpxq45dwal9754fxrw5d7dwwqgx3fym58")))

(define-public crate-sweet-cli-0.1.40 (c (n "sweet-cli") (v "0.1.40") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1qjai4b4bq9k55wlsqnzyhp46jgn86bm6ffdryhff9rn6wlvcl7v")))

(define-public crate-sweet-cli-0.1.41 (c (n "sweet-cli") (v "0.1.41") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1lwsy1di5msc3dh8kyhy694k2g7gwpr6nhcmk2k9h4dl5z96hz40")))

(define-public crate-sweet-cli-0.1.42 (c (n "sweet-cli") (v "0.1.42") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "10a5066ija83yhb9h985506lc1nqbv4hwn56qrj6awgyfxm90fdf")))

(define-public crate-sweet-cli-0.1.43 (c (n "sweet-cli") (v "0.1.43") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1vwvwsczyx33m9z0z44nl1xcxj6vk2822nyaqyx522jr77lhvvxx")))

(define-public crate-sweet-cli-0.1.44 (c (n "sweet-cli") (v "0.1.44") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1b7f8w4jhi3camcy3zx6wmz4miwvwp2cl5k97vl5m1d7f7mhjr8y")))

(define-public crate-sweet-cli-0.1.45 (c (n "sweet-cli") (v "0.1.45") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0yna1ydz35p7f6nrcvah7jr6d93xy5p56bd82lcmlcxv9khha47l")))

(define-public crate-sweet-cli-0.1.46 (c (n "sweet-cli") (v "0.1.46") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.5.1") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.2.2") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "colorize") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cssparser") (r "^0.31.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "extend") (r "^1.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fantoccini") (r "^0.19.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_cli") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_core") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "forky_fs") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sweet") (r "0.*") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "cors"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1n27bhpffr9klzrl554dyqczk68cpqff40y71x7mykd00wf7drk8")))

