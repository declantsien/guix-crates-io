(define-module (crates-io sw ag swagger) #:use-module (crates-io))

(define-public crate-swagger-0.1.0 (c (n "swagger") (v "0.1.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1s11x3aak7n95p8xgvimjiwlg7ydgg2v23bv1qa7vjlz7yac8kpp")))

(define-public crate-swagger-0.2.0 (c (n "swagger") (v "0.2.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "15b85nzyrr8hsh8wr3gwpmair8mdgrz1gssra60z52ip8dmvgd1j") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.3.0 (c (n "swagger") (v "0.3.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1q7cmaciifvh6k7069ijl8ygnh4v2qa2ymagcyphb3sxcg6ihnz2") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.4.0 (c (n "swagger") (v "0.4.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0rv1q593f6d73l0d2xxyvyjzjgz9sxy4gqfcwbq0nwyb9qlkv3bd") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson")))) (y #t)))

(define-public crate-swagger-0.5.0 (c (n "swagger") (v "0.5.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "00c2b3hwjwh7a6k8cfs9lsbk44kzji2wp9ywnxfyg3q3s927hdnw") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.6.0 (c (n "swagger") (v "0.6.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "01bbfsb2rfm7q38bbwgvwf7xmvcd9h62gcmwrxfg440bxcmdcvpp") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.7.0 (c (n "swagger") (v "0.7.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "iron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "04jdgdr55hdwddi7y44ykx345k53dwirp5kdnyzd0nbp6b3g03hr") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.8.0 (c (n "swagger") (v "0.8.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "05x3988gx4nr9kg4q1wihb11lj2hgb49l446m0690y06bflanscq") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.8.1 (c (n "swagger") (v "0.8.1") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "02mzw64a8jbxwyaal7il8dy5kvapvk08wcpp1i67w0ww8qjy7fl3") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.9.0 (c (n "swagger") (v "0.9.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)))) (h "1440qjd98pnv2y06z61hnpawi302kqj80sxj8jdxznib2h5jm7yr") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.10.0 (c (n "swagger") (v "0.10.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)))) (h "0qfwy5f6nbalgy602556hlaqp1wi313pfvgwr3rl2cvx0rgw5nwp") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.11.0 (c (n "swagger") (v "0.11.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "176dy6a0ni6bdhvws18sr617j51mxjw3d1lik02wbmwibwqxkswj") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.12.0 (c (n "swagger") (v "0.12.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1y9ap4nra6fz21z46fpbjar9gc48rc8zcfz2jmw95ad1h59g8wpx") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-0.12.1 (c (n "swagger") (v "0.12.1") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1dz3vk3d9nabipwmkcy3sn5gc3h0llx6p2clg0n7ajhbjg9iwd3p") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-1.0.0 (c (n "swagger") (v "1.0.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1pc1rmg7242kniva04lhi0lk12xqi6991kgzchk2wbqnmnvjg4cv") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-1.0.1 (c (n "swagger") (v "1.0.1") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1xj65vl9aiqj0fggab2jsjvapsiprcwb1r96f76a2103m8ariaf1") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-1.0.2 (c (n "swagger") (v "1.0.2") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0n8qx33a7i9flf65szj5g4plngsnq0za8wzlwgwddp4baz80a9pq") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-2.0.0 (c (n "swagger") (v "2.0.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1xvcwq71wgj2cl31jyr99jlm1qcsf8gjnl4a2v1q6j64r1wy7rcs") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-2.0.1 (c (n "swagger") (v "2.0.1") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1ab4rhailgdzpwg3xjaw56qih68yiy9lvsc41ql189ap6ypzhgzz") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-2.0.2 (c (n "swagger") (v "2.0.2") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0xy71y2xrbpksw43f0x8f28d1lgwlfgfyjrlp9c31wvrbcvyalv5") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-1.0.3 (c (n "swagger") (v "1.0.3") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1b3d0a2r2vd16agnfq630wzb5zymdyiggr4pikx47m6xna7pi5dg") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-3.0.0 (c (n "swagger") (v "3.0.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1vsq863am4w2zip7hsd6yh8c4sf4zd1c142zlra9a8b1hfynn1h2") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-3.1.0 (c (n "swagger") (v "3.1.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0abxavlm2nj1g86f0smkkyimpacnqi0i1qlsbznip3p4sf82zw75") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-2.1.0 (c (n "swagger") (v "2.1.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "128mnfnxwvz1l1nb6q4h9w620ad9wvlml6qngwn3wx4w8315wxb1") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-2.2.0 (c (n "swagger") (v "2.2.0") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "03na5ab6y4cp9xzksqadmwyk2gjqs4l9p5dh3aqzms3nz76qbi2i") (f (quote (("serdejson" "serde" "serde_json" "serde_derive") ("default" "serdejson"))))))

(define-public crate-swagger-3.2.0 (c (n "swagger") (v "3.2.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0f4m3ixv7scika278pg85jchmsaaizhjx7vcn6fzz60di8plvldw") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-4.0.0 (c (n "swagger") (v "4.0.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.7.1") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "04nm18cw4dk9si7xlh6vhir4m7zg63m5ik2hjj228vkkzkdn55jk") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-4.0.1 (c (n "swagger") (v "4.0.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.7.1") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "18n2dv6460j91h37c3kg6x26vn925zsmkqqmaryyrap4k0darqwx") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-4.0.2 (c (n "swagger") (v "4.0.2") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.7.1") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "056d2ml28pka60w6nradncilx13jnl7nzc7rv884cg3qsxs5ynnq") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-3.2.1 (c (n "swagger") (v "3.2.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1rh0whpvaif38h4n11ss9djmsrg7jgjnhwqcqzfmlq1zswsxs6q7") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-3.3.0 (c (n "swagger") (v "3.3.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0ag5iwnm8l4g9yvyacpkdck22sl07rzq8vl0wf4cyhgkmmglbgrk") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-3.4.0 (c (n "swagger") (v "3.4.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0l2yvqb9vj7mlj3pihrk7zkgv1vjz2i3i4qlx3qf1mabmswl3rii") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson") ("conversion" "frunk" "frunk_core" "frunk-enum-core" "frunk-enum-derive")))) (y #t)))

(define-public crate-swagger-5.0.0-alpha-1 (c (n "swagger") (v "5.0.0-alpha-1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "19iya1wmwf333c9sj0nfs59jnpvkvcwwf5i3w9s1fnxr9wm7701k") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-5.0.0-alpha-2 (c (n "swagger") (v "5.0.0-alpha-2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0nmhccrkz3j4l56jyn2n3crd8jgp74kv560zkyjlzm0f78519ms0") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-5.0.0-beta.1 (c (n "swagger") (v "5.0.0-beta.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "16l20w268nblc5h82a6y3k1aarrgbllwrsfdzh9a7cd09dkl72xy") (f (quote (("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-5.0.0 (c (n "swagger") (v "5.0.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "08b8bkjjbi6yhw4ric4chsz3d2kf088hrm2klfmqddzkhcxv1iw7") (f (quote (("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-5.0.1 (c (n "swagger") (v "5.0.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0cj179jwmzhb5xkimmz2x69w8qbfx2z60y4qg89mp64k2pj4b7d6") (f (quote (("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-5.0.2 (c (n "swagger") (v "5.0.2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0vahs9qhj86llrmww23mmbh3nn4fbqggfcn6vf0bq8x6l6ipij20") (f (quote (("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-3.4.1 (c (n "swagger") (v "3.4.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12.25") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.2.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.9.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1b18n44hwxyc3g5w94fd6p5lpqanr75yg9lqvgxvmnp6y92fw2ds") (f (quote (("serdejson" "serde" "serde_json") ("multipart" "mime") ("default" "serdejson"))))))

(define-public crate-swagger-6.0.0-alpha.1 (c (n "swagger") (v "6.0.0-alpha.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "11qkjq1spds4r68crckw5d8s2av7ijzpabmwfy7y82z8rcjcpfva") (f (quote (("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("client" "hyper/client"))))))

(define-public crate-swagger-5.1.0 (c (n "swagger") (v "5.1.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1qcjjga76cadgr25kss81vp423hc1fy5f8a4z2w666iii301k0qs") (f (quote (("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive"))))))

(define-public crate-swagger-6.0.0 (c (n "swagger") (v "6.0.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0p6zc1an38bj1xfp93kf2rbzqagpmsaqv3rrdipvqhs0ikk9kr11") (f (quote (("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.1.0 (c (n "swagger") (v "6.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "050b872708g5qqj0c0j5nm419wm2mn9pyzgfyci7pb52r2yrbf2l") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.1.1 (c (n "swagger") (v "6.1.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0lqmzh2kqqy4nyp80z830xcx87bxyziaqrnsssa77032w5b4xwvh") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.2.0 (c (n "swagger") (v "6.2.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0rmria0b2lmn5zr2bdlvjw57vgnq0imhyvxhzip7z1kn2rmvk7sq") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.2.1 (c (n "swagger") (v "6.2.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0vfdvg5cibsi1c3lcfcbjabb46l6y12scp7yxaan7vvrlrj2va7j") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.3.0 (c (n "swagger") (v "6.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_valid") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "06a0dapyjscq0766hry5j04kvpw45ja89676l3bmf8wmqkbhbg3g") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdevalid" "serdejson" "serde_valid" "regex" "paste") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.4.0 (c (n "swagger") (v "6.4.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_valid") (r ">=0.15, <0.17") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "098rrxxr6shj3cw1m5w9j9s86xqz51igp4qv4bji9pwll5m9vnn7") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdevalid" "serdejson" "serde_valid" "regex" "paste") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.4.1 (c (n "swagger") (v "6.4.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_valid") (r ">=0.15, <0.17") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0hzbx6l1i5sa49956xvl9fiaczkfzqcjv8djiylc3qghgh2j8p3g") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdevalid" "serdejson" "serde_valid" "regex" "paste") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

(define-public crate-swagger-6.5.0 (c (n "swagger") (v "6.5.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "frunk") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk-enum-core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk-enum-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "frunk_derives") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1" "tcp"))) (d #t) (k 2)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hyper-openssl") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "hyper_0_10") (r "^0.10") (o #t) (k 0) (p "hyper")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "mime_0_2") (r "^0.2.6") (o #t) (d #t) (k 0) (p "mime")) (d (n "mime_multipart") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\"))") (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (t "cfg(not(any(target_os = \"macos\", target_os = \"windows\", target_os = \"ios\")))") (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_valid") (r ">=0.15, <0.17") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0pmvfwgzsqphy2c3gs4i56ly5r747kyaa9cx659nws2vr02ylf1q") (f (quote (("uds" "tokio" "tokio/net") ("tls" "native-tls" "openssl" "hyper-openssl" "hyper-tls") ("tcp" "hyper/tcp") ("server" "hyper/server") ("serdevalid" "serdejson" "serde_valid" "regex" "paste") ("serdejson" "serde" "serde_json") ("multipart_related" "mime_multipart" "hyper_0_10" "mime_0_2") ("multipart_form" "mime") ("http2" "hyper/http2") ("http1" "hyper/http1") ("default" "serdejson") ("conversion" "frunk" "frunk_derives" "frunk_core" "frunk-enum-core" "frunk-enum-derive") ("client" "hyper/client"))))))

