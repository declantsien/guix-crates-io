(define-module (crates-io sw c_ swc_jni) #:use-module (crates-io))

(define-public crate-swc_jni-0.1.0 (c (n "swc_jni") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "jni") (r "^0.21.1") (d #t) (k 0)) (d (n "jni_fn") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("unbounded_depth"))) (d #t) (k 0)) (d (n "swc") (r "^0.270.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_core") (r "^0.87.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.39") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "07z4w6lgvkflyqqw784x10lrz1qa553vh7707f35rwl1pq2v3ph3")))

